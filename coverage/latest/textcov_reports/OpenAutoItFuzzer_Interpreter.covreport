_ZN3fmt2v96detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  393|  1.81k|    typename std::make_unsigned<Int>::type {
  394|  1.81k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  352|  3.63k|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (352:37): [Folded - Ignored]
  |  |  |  Branch (352:37): [True: 1.81k, False: 0]
  |  |  ------------------
  ------------------
  395|  1.81k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  396|  1.81k|}
_ZN3fmt2v96detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  328|  23.7k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v917basic_string_viewIcE4sizeEv:
  460|  25.2k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  328|  1.81k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE4sizeEv:
  914|  4.48k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail6bufferIcEC2EPcmm:
  886|  4.24k|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt2v96detail6bufferIcE3setEPcm:
  892|  4.48k|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  893|  4.48k|    ptr_ = buf_data;
  894|  4.48k|    capacity_ = buf_capacity;
  895|  4.48k|  }
_ZN3fmt2v96detail13ignore_unusedIJbEEEvDpRKT_:
  328|    241|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE8capacityEv:
  917|    377|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt2v96detail6bufferIcE4dataEv:
  920|  4.48k|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt2v917basic_string_viewIcE5beginEv:
  462|  10.8k|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt2v917basic_string_viewIcE3endEv:
  463|  10.8k|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKc:
  443|    200|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt2v96detail10locale_refC2Ev:
 1714|  4.44k|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZNK3fmt2v919basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2855|     13|  FMT_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt2v916make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJEEENS0_16format_arg_storeIT_JDpNSt3__19remove_cvINS7_16remove_referenceIT0_E4typeEE4typeEEEEDpOSA_:
 1908|     13|    -> format_arg_store<Context, remove_cvref_t<T>...> {
 1909|     13|  return {FMT_FORWARD(args)...};
 1910|     13|}
_ZN3fmt2v916format_arg_storeINS0_20basic_format_contextINS0_8appenderEcEEJEEC2IJEEEDpOT_:
 1893|     13|            FMT_FORWARD(args))...} {
 1894|     13|    detail::init_named_args(data_.named_args(), 0, 0, args...);
 1895|     13|  }
_ZN3fmt2v96detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EEC2IJEEEDpRKT_:
 1187|     13|  FMT_CONSTEXPR FMT_INLINE arg_data(const U&... init) : args_{init...} {}
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1281|  4.24k|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt2v99monostateC2Ev:
  311|  4.24k|  constexpr monostate() {}
_ZN3fmt2v96detail15init_named_argsIJEEEvDniiDpRKT_:
 1220|     13|                                              const Args&...) {}
_ZN3fmt2v96detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE10named_argsEv:
 1189|     13|  FMT_CONSTEXPR FMT_INLINE auto named_args() -> std::nullptr_t {
 1190|     13|    return nullptr;
 1191|     13|  }
_ZN3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2IJEEERKNS0_16format_arg_storeIS4_JDpT_EEE:
 1991|     13|                          store.data_.args()) {}
_ZNK3fmt2v96detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE4argsEv:
 1188|     13|  FMT_CONSTEXPR FMT_INLINE auto args() const -> const T* { return args_; }
_ZN3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1975|  4.24k|      : desc_(desc), values_(values) {}
_ZNK3fmt2v917basic_string_viewIcE4dataEv:
  457|  10.0k|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKcm:
  428|  12.4k|      : data_(s), size_(count) {}
_ZN3fmt2v96detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  393|  21.9k|    typename std::make_unsigned<Int>::type {
  394|  21.9k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  352|  43.9k|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (352:37): [Folded - Ignored]
  |  |  |  Branch (352:37): [True: 21.9k, False: 0]
  |  |  ------------------
  ------------------
  395|  21.9k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  396|  21.9k|}
_ZN3fmt2v96detail6bufferIcE11try_reserveEm:
  939|  12.6k|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  940|  12.6k|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (940:9): [True: 241, False: 12.4k]
  ------------------
  941|  12.6k|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 2013|  4.22k|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 2014|  4.22k|    format_arg arg;
 2015|  4.22k|    if (!is_packed()) {
  ------------------
  |  Branch (2015:9): [True: 0, False: 4.22k]
  ------------------
 2016|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (2016:11): [True: 0, False: 0]
  ------------------
 2017|      0|      return arg;
 2018|      0|    }
 2019|  4.22k|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (2019:9): [True: 0, False: 4.22k]
  ------------------
 2020|  4.22k|    arg.type_ = type(id);
 2021|  4.22k|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (2021:9): [True: 0, False: 4.22k]
  ------------------
 2022|  4.22k|    arg.value_ = values_[id];
 2023|  4.22k|    return arg;
 2024|  4.22k|  }
_ZN3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1602|  4.22k|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1960|  4.22k|  constexpr auto is_packed() const -> bool {
 1961|  4.22k|    return (desc_ & detail::is_unpacked_bit) == 0;
 1962|  4.22k|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1967|  4.22k|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1968|  4.22k|    int shift = index * detail::packed_arg_bits;
 1969|  4.22k|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1970|  4.22k|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1971|  4.22k|  }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1604|  4.22k|  constexpr explicit operator bool() const noexcept {
 1605|  4.22k|    return type_ != detail::type::none_type;
 1606|  4.22k|  }
_ZN3fmt2v916visit_format_argINS0_6detail21default_arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1625|  2.41k|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1626|  2.41k|  switch (arg.type_) {
  ------------------
  |  Branch (1626:11): [True: 0, False: 2.41k]
  ------------------
 1627|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1627:3): [True: 0, False: 2.41k]
  ------------------
 1628|      0|    break;
 1629|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1629:3): [True: 0, False: 2.41k]
  ------------------
 1630|      0|    return vis(arg.value_.int_value);
 1631|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1631:3): [True: 0, False: 2.41k]
  ------------------
 1632|      0|    return vis(arg.value_.uint_value);
 1633|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1633:3): [True: 0, False: 2.41k]
  ------------------
 1634|      0|    return vis(arg.value_.long_long_value);
 1635|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1635:3): [True: 0, False: 2.41k]
  ------------------
 1636|      0|    return vis(arg.value_.ulong_long_value);
 1637|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1637:3): [True: 0, False: 2.41k]
  ------------------
 1638|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1639|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1639:3): [True: 0, False: 2.41k]
  ------------------
 1640|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1641|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1641:3): [True: 0, False: 2.41k]
  ------------------
 1642|      0|    return vis(arg.value_.bool_value);
 1643|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1643:3): [True: 0, False: 2.41k]
  ------------------
 1644|      0|    return vis(arg.value_.char_value);
 1645|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1645:3): [True: 0, False: 2.41k]
  ------------------
 1646|      0|    return vis(arg.value_.float_value);
 1647|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1647:3): [True: 0, False: 2.41k]
  ------------------
 1648|      0|    return vis(arg.value_.double_value);
 1649|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1649:3): [True: 0, False: 2.41k]
  ------------------
 1650|      0|    return vis(arg.value_.long_double_value);
 1651|      0|  case detail::type::cstring_type:
  ------------------
  |  Branch (1651:3): [True: 0, False: 2.41k]
  ------------------
 1652|      0|    return vis(arg.value_.string.data);
 1653|  2.41k|  case detail::type::string_type:
  ------------------
  |  Branch (1653:3): [True: 2.41k, False: 0]
  ------------------
 1654|  2.41k|    using sv = basic_string_view<typename Context::char_type>;
 1655|  2.41k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1656|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1656:3): [True: 0, False: 2.41k]
  ------------------
 1657|      0|    return vis(arg.value_.pointer);
 1658|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1658:3): [True: 0, False: 2.41k]
  ------------------
 1659|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1660|  2.41k|  }
 1661|      0|  return vis(monostate());
 1662|  2.41k|}
_ZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  842|  12.6k|    -> Container& {
  843|  12.6k|  using base = std::back_insert_iterator<Container>;
  844|  12.6k|  struct accessor : base {
  845|  12.6k|    accessor(base b) : base(b) {}
  846|  12.6k|    using base::container;
  847|  12.6k|  };
  848|  12.6k|  return *accessor(it).container;
  849|  12.6k|}
_ZZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  845|  12.6k|    accessor(base b) : base(b) {}
_ZNK3fmt2v96detail6fill_tIcE4sizeEv:
 2091|  1.81k|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt2v96detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1667|  12.6k|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1668|  12.6k|  get_container(out).append(begin, end);
 1669|  12.6k|  return out;
 1670|  12.6k|}
_ZN3fmt2v912format_specsIcEC2Ev:
 2142|  1.81k|        localized(false) {}
_ZN3fmt2v926basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  681|  4.24k|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1811|  4.24k|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE3outEv:
 1826|  12.6k|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2570|  4.24k|    basic_string_view<Char> format_str, Handler&& handler) {
 2571|       |  // Workaround a name-lookup bug in MSVC's modules implementation.
 2572|  4.24k|  using detail::find;
 2573|       |
 2574|  4.24k|  auto begin = format_str.data();
 2575|  4.24k|  auto end = begin + format_str.size();
 2576|  4.24k|  if (end - begin < 32) {
  ------------------
  |  Branch (2576:7): [True: 4.04k, False: 200]
  ------------------
 2577|       |    // Use a simple loop instead of memchr for small strings.
 2578|  4.04k|    const Char* p = begin;
 2579|  92.0k|    while (p != end) {
  ------------------
  |  Branch (2579:12): [True: 88.0k, False: 4.04k]
  ------------------
 2580|  88.0k|      auto c = *p++;
 2581|  88.0k|      if (c == '{') {
  ------------------
  |  Branch (2581:11): [True: 4.02k, False: 83.9k]
  ------------------
 2582|  4.02k|        handler.on_text(begin, p - 1);
 2583|  4.02k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2584|  83.9k|      } else if (c == '}') {
  ------------------
  |  Branch (2584:18): [True: 0, False: 83.9k]
  ------------------
 2585|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2585:13): [True: 0, False: 0]
  |  Branch (2585:25): [True: 0, False: 0]
  ------------------
 2586|      0|          return handler.on_error("unmatched '}' in format string");
 2587|      0|        handler.on_text(begin, p);
 2588|      0|        begin = ++p;
 2589|      0|      }
 2590|  88.0k|    }
 2591|  4.04k|    handler.on_text(begin, end);
 2592|  4.04k|    return;
 2593|  4.04k|  }
 2594|    200|  struct writer {
 2595|    200|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2596|    200|      if (from == to) return;
 2597|    200|      for (;;) {
 2598|    200|        const Char* p = nullptr;
 2599|    200|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2600|    200|          return handler_.on_text(from, to);
 2601|    200|        ++p;
 2602|    200|        if (p == to || *p != '}')
 2603|    200|          return handler_.on_error("unmatched '}' in format string");
 2604|    200|        handler_.on_text(from, p);
 2605|    200|        from = p + 1;
 2606|    200|      }
 2607|    200|    }
 2608|    200|    Handler& handler_;
 2609|    200|  } write = {handler};
 2610|    400|  while (begin != end) {
  ------------------
  |  Branch (2610:10): [True: 400, False: 0]
  ------------------
 2611|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2612|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2613|    400|    const Char* p = begin;
 2614|    400|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2614:9): [True: 400, False: 0]
  |  Branch (2614:26): [True: 200, False: 200]
  ------------------
 2615|    200|      return write(begin, end);
 2616|    200|    write(begin, p);
 2617|    200|    begin = parse_replacement_field(p, end, handler);
 2618|    200|  }
 2619|    200|}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1829|  12.6k|  void advance_to(iterator it) {
 1830|  12.6k|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1830:9): [Folded - Ignored]
  ------------------
 1831|  12.6k|  }
_ZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2533|  4.22k|                                           Handler&& handler) -> const Char* {
 2534|  4.22k|  struct id_adapter {
 2535|  4.22k|    Handler& handler;
 2536|  4.22k|    int arg_id;
 2537|       |
 2538|  4.22k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2539|  4.22k|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2540|  4.22k|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2541|  4.22k|      arg_id = handler.on_arg_id(id);
 2542|  4.22k|    }
 2543|  4.22k|  };
 2544|       |
 2545|  4.22k|  ++begin;
 2546|  4.22k|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2546:7): [True: 0, False: 4.22k]
  ------------------
 2547|  4.22k|  if (*begin == '}') {
  ------------------
  |  Branch (2547:7): [True: 2.41k, False: 1.81k]
  ------------------
 2548|  2.41k|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2549|  2.41k|  } else if (*begin == '{') {
  ------------------
  |  Branch (2549:14): [True: 0, False: 1.81k]
  ------------------
 2550|      0|    handler.on_text(begin, begin + 1);
 2551|  1.81k|  } else {
 2552|  1.81k|    auto adapter = id_adapter{handler, 0};
 2553|  1.81k|    begin = parse_arg_id(begin, end, adapter);
 2554|  1.81k|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2554:14): [True: 1.81k, False: 0]
  ------------------
 2555|  1.81k|    if (c == '}') {
  ------------------
  |  Branch (2555:9): [True: 0, False: 1.81k]
  ------------------
 2556|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2557|  1.81k|    } else if (c == ':') {
  ------------------
  |  Branch (2557:16): [True: 1.81k, False: 0]
  ------------------
 2558|  1.81k|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2559|  1.81k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2559:11): [True: 0, False: 1.81k]
  |  Branch (2559:27): [True: 0, False: 1.81k]
  ------------------
 2560|      0|        return handler.on_error("unknown format specifier"), end;
 2561|  1.81k|    } else {
 2562|      0|      return handler.on_error("missing '}' in format string"), end;
 2563|      0|    }
 2564|  1.81k|  }
 2565|  4.22k|  return begin + 1;
 2566|  4.22k|}
_ZNK3fmt2v920basic_format_contextINS0_8appenderEcE3argEi:
 1813|  4.22k|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZNK3fmt2v920basic_format_contextINS0_8appenderEcE4argsEv:
 1820|  2.41k|  auto args() const -> const format_args& { return args_; }
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE6localeEv:
 1833|  4.22k|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt2v926basic_format_parse_contextIcE11next_arg_idEv:
  705|  4.22k|  FMT_CONSTEXPR auto next_arg_id() -> int {
  706|  4.22k|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (706:9): [True: 0, False: 4.22k]
  ------------------
  707|      0|      detail::throw_format_error(
  708|      0|          "cannot switch from manual to automatic argument indexing");
  709|      0|      return 0;
  710|      0|    }
  711|  4.22k|    int id = next_arg_id_++;
  712|  4.22k|    do_check_arg_id(id);
  713|  4.22k|    return id;
  714|  4.22k|  }
_ZN3fmt2v926basic_format_parse_contextIcE15do_check_arg_idEi:
  776|  4.22k|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
  777|       |  // Argument id is only checked at compile-time during parsing because
  778|       |  // formatting has its own validation.
  779|  4.22k|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (779:7): [Folded - Ignored]
  ------------------
  780|  4.22k|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (780:8): [Folded - Ignored]
  |  Branch (780:28): [Folded - Ignored]
  ------------------
  781|      0|    using context = detail::compile_parse_context<Char>;
  782|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (782:9): [True: 0, False: 0]
  ------------------
  783|      0|      detail::throw_format_error("argument not found");
  784|      0|  }
  785|  4.22k|}
_ZN3fmt2v96detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2298|  1.81k|                                           Handler&& handler) -> const Char* {
 2299|  1.81k|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  352|  1.81k|      ::fmt::detail::ignore_unused((condition), (message))
  ------------------
 2300|  1.81k|  Char c = *begin;
 2301|  1.81k|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2301:7): [True: 1.81k, False: 0]
  |  Branch (2301:19): [True: 0, False: 1.81k]
  ------------------
 2302|  1.81k|  handler.on_auto();
 2303|  1.81k|  return begin;
 2304|  1.81k|}
_ZZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2538|  1.81k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1608|  3.63k|  auto type() const -> detail::type { return type_; }
_ZN3fmt2v96detail7arg_refIcEC2Ev:
 2151|  3.63k|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt2v96detail7arg_refIcE5valueC2Ei:
 2166|  3.63k|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2368|  1.81k|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2369|  1.81k|  auto c = '\0';
 2370|  1.81k|  if (end - begin > 1) {
  ------------------
  |  Branch (2370:7): [True: 1.81k, False: 0]
  ------------------
 2371|  1.81k|    auto next = to_ascii(begin[1]);
 2372|  1.81k|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2372:9): [True: 1.81k, False: 0]
  ------------------
 2373|  1.81k|  } else {
 2374|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2374:9): [True: 0, False: 0]
  ------------------
 2375|      0|    c = to_ascii(*begin);
 2376|      0|  }
 2377|       |
 2378|  1.81k|  struct {
 2379|  1.81k|    state current_state = state::start;
 2380|  1.81k|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2381|  1.81k|      if (current_state >= s || !valid)
 2382|  1.81k|        throw_format_error("invalid format specifier");
 2383|  1.81k|      current_state = s;
 2384|  1.81k|    }
 2385|  1.81k|  } enter_state;
 2386|       |
 2387|  1.81k|  using pres = presentation_type;
 2388|  1.81k|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2389|  1.81k|  struct {
 2390|  1.81k|    const Char*& begin;
 2391|  1.81k|    dynamic_format_specs<Char>& specs;
 2392|  1.81k|    type arg_type;
 2393|       |
 2394|  1.81k|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2395|  1.81k|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
 2396|  1.81k|      specs.type = type;
 2397|  1.81k|      return begin + 1;
 2398|  1.81k|    }
 2399|  1.81k|  } parse_presentation_type{begin, specs, arg_type};
 2400|       |
 2401|  1.81k|  for (;;) {
 2402|  1.81k|    switch (c) {
 2403|      0|    case '<':
  ------------------
  |  Branch (2403:5): [True: 0, False: 1.81k]
  ------------------
 2404|      0|    case '>':
  ------------------
  |  Branch (2404:5): [True: 0, False: 1.81k]
  ------------------
 2405|      0|    case '^':
  ------------------
  |  Branch (2405:5): [True: 0, False: 1.81k]
  ------------------
 2406|      0|      enter_state(state::align);
 2407|      0|      specs.align = parse_align(c);
 2408|      0|      ++begin;
 2409|      0|      break;
 2410|      0|    case '+':
  ------------------
  |  Branch (2410:5): [True: 0, False: 1.81k]
  ------------------
 2411|      0|    case '-':
  ------------------
  |  Branch (2411:5): [True: 0, False: 1.81k]
  ------------------
 2412|      0|    case ' ':
  ------------------
  |  Branch (2412:5): [True: 0, False: 1.81k]
  ------------------
 2413|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2414|      0|      switch (c) {
  ------------------
  |  Branch (2414:15): [True: 0, False: 0]
  ------------------
 2415|      0|      case '+':
  ------------------
  |  Branch (2415:7): [True: 0, False: 0]
  ------------------
 2416|      0|        specs.sign = sign::plus;
 2417|      0|        break;
 2418|      0|      case '-':
  ------------------
  |  Branch (2418:7): [True: 0, False: 0]
  ------------------
 2419|      0|        specs.sign = sign::minus;
 2420|      0|        break;
 2421|      0|      case ' ':
  ------------------
  |  Branch (2421:7): [True: 0, False: 0]
  ------------------
 2422|      0|        specs.sign = sign::space;
 2423|      0|        break;
 2424|      0|      }
 2425|      0|      ++begin;
 2426|      0|      break;
 2427|      0|    case '#':
  ------------------
  |  Branch (2427:5): [True: 0, False: 1.81k]
  ------------------
 2428|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2429|      0|      specs.alt = true;
 2430|      0|      ++begin;
 2431|      0|      break;
 2432|      0|    case '0':
  ------------------
  |  Branch (2432:5): [True: 0, False: 1.81k]
  ------------------
 2433|      0|      enter_state(state::zero);
 2434|      0|      if (!is_arithmetic_type(arg_type))
  ------------------
  |  Branch (2434:11): [True: 0, False: 0]
  ------------------
 2435|      0|        throw_format_error("format specifier requires numeric argument");
 2436|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2436:11): [True: 0, False: 0]
  ------------------
 2437|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2438|      0|        specs.align = align::numeric;
 2439|      0|        specs.fill[0] = Char('0');
 2440|      0|      }
 2441|      0|      ++begin;
 2442|      0|      break;
 2443|      0|    case '1':
  ------------------
  |  Branch (2443:5): [True: 0, False: 1.81k]
  ------------------
 2444|      0|    case '2':
  ------------------
  |  Branch (2444:5): [True: 0, False: 1.81k]
  ------------------
 2445|      0|    case '3':
  ------------------
  |  Branch (2445:5): [True: 0, False: 1.81k]
  ------------------
 2446|      0|    case '4':
  ------------------
  |  Branch (2446:5): [True: 0, False: 1.81k]
  ------------------
 2447|      0|    case '5':
  ------------------
  |  Branch (2447:5): [True: 0, False: 1.81k]
  ------------------
 2448|      0|    case '6':
  ------------------
  |  Branch (2448:5): [True: 0, False: 1.81k]
  ------------------
 2449|      0|    case '7':
  ------------------
  |  Branch (2449:5): [True: 0, False: 1.81k]
  ------------------
 2450|      0|    case '8':
  ------------------
  |  Branch (2450:5): [True: 0, False: 1.81k]
  ------------------
 2451|      0|    case '9':
  ------------------
  |  Branch (2451:5): [True: 0, False: 1.81k]
  ------------------
 2452|      0|    case '{':
  ------------------
  |  Branch (2452:5): [True: 0, False: 1.81k]
  ------------------
 2453|      0|      enter_state(state::width);
 2454|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2455|      0|      break;
 2456|      0|    case '.':
  ------------------
  |  Branch (2456:5): [True: 0, False: 1.81k]
  ------------------
 2457|      0|      enter_state(state::precision,
 2458|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2459|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2460|      0|                              ctx);
 2461|      0|      break;
 2462|      0|    case 'L':
  ------------------
  |  Branch (2462:5): [True: 0, False: 1.81k]
  ------------------
 2463|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2464|      0|      specs.localized = true;
 2465|      0|      ++begin;
 2466|      0|      break;
 2467|      0|    case 'd':
  ------------------
  |  Branch (2467:5): [True: 0, False: 1.81k]
  ------------------
 2468|      0|      return parse_presentation_type(pres::dec, integral_set);
 2469|      0|    case 'o':
  ------------------
  |  Branch (2469:5): [True: 0, False: 1.81k]
  ------------------
 2470|      0|      return parse_presentation_type(pres::oct, integral_set);
 2471|      0|    case 'x':
  ------------------
  |  Branch (2471:5): [True: 0, False: 1.81k]
  ------------------
 2472|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2473|      0|    case 'X':
  ------------------
  |  Branch (2473:5): [True: 0, False: 1.81k]
  ------------------
 2474|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2475|      0|    case 'b':
  ------------------
  |  Branch (2475:5): [True: 0, False: 1.81k]
  ------------------
 2476|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2477|      0|    case 'B':
  ------------------
  |  Branch (2477:5): [True: 0, False: 1.81k]
  ------------------
 2478|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2479|      0|    case 'a':
  ------------------
  |  Branch (2479:5): [True: 0, False: 1.81k]
  ------------------
 2480|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2481|      0|    case 'A':
  ------------------
  |  Branch (2481:5): [True: 0, False: 1.81k]
  ------------------
 2482|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2483|      0|    case 'e':
  ------------------
  |  Branch (2483:5): [True: 0, False: 1.81k]
  ------------------
 2484|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2485|      0|    case 'E':
  ------------------
  |  Branch (2485:5): [True: 0, False: 1.81k]
  ------------------
 2486|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2487|      0|    case 'f':
  ------------------
  |  Branch (2487:5): [True: 0, False: 1.81k]
  ------------------
 2488|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2489|      0|    case 'F':
  ------------------
  |  Branch (2489:5): [True: 0, False: 1.81k]
  ------------------
 2490|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2491|      0|    case 'g':
  ------------------
  |  Branch (2491:5): [True: 0, False: 1.81k]
  ------------------
 2492|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2493|      0|    case 'G':
  ------------------
  |  Branch (2493:5): [True: 0, False: 1.81k]
  ------------------
 2494|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2495|      0|    case 'c':
  ------------------
  |  Branch (2495:5): [True: 0, False: 1.81k]
  ------------------
 2496|      0|      return parse_presentation_type(pres::chr, integral_set);
 2497|  1.81k|    case 's':
  ------------------
  |  Branch (2497:5): [True: 1.81k, False: 0]
  ------------------
 2498|  1.81k|      return parse_presentation_type(pres::string,
 2499|  1.81k|                                     bool_set | string_set | cstring_set);
 2500|      0|    case 'p':
  ------------------
  |  Branch (2500:5): [True: 0, False: 1.81k]
  ------------------
 2501|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2502|      0|    case '?':
  ------------------
  |  Branch (2502:5): [True: 0, False: 1.81k]
  ------------------
 2503|      0|      return parse_presentation_type(pres::debug,
 2504|      0|                                     char_set | string_set | cstring_set);
 2505|      0|    case '}':
  ------------------
  |  Branch (2505:5): [True: 0, False: 1.81k]
  ------------------
 2506|      0|      return begin;
 2507|      0|    default: {
  ------------------
  |  Branch (2507:5): [True: 0, False: 1.81k]
  ------------------
 2508|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2508:11): [True: 0, False: 0]
  ------------------
 2509|       |      // Parse fill and alignment.
 2510|      0|      auto fill_end = begin + code_point_length(begin);
 2511|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2511:11): [True: 0, False: 0]
  ------------------
 2512|      0|        throw_format_error("invalid format specifier");
 2513|      0|        return begin;
 2514|      0|      }
 2515|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2515:11): [True: 0, False: 0]
  ------------------
 2516|      0|        throw_format_error("invalid fill character '{'");
 2517|      0|        return begin;
 2518|      0|      }
 2519|      0|      auto align = parse_align(to_ascii(*fill_end));
 2520|      0|      enter_state(state::align, align != align::none);
 2521|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2522|      0|      specs.align = align;
 2523|      0|      begin = fill_end + 1;
 2524|      0|    }
 2525|  1.81k|    }
 2526|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2526:9): [True: 0, False: 0]
  ------------------
 2527|      0|    c = to_ascii(*begin);
 2528|      0|  }
 2529|  1.81k|}
_ZN3fmt2v96detail8to_asciiIcLi0EEEcT_:
 2185|  3.63k|constexpr auto to_ascii(Char c) -> char {
 2186|  3.63k|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2186:10): [True: 3.63k, False: 0]
  ------------------
 2187|  3.63k|}
_ZN3fmt2v96detail11parse_alignEc:
 2251|  1.81k|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2252|  1.81k|  switch (c) {
  ------------------
  |  Branch (2252:11): [True: 1.81k, False: 0]
  ------------------
 2253|      0|  case '<':
  ------------------
  |  Branch (2253:3): [True: 0, False: 1.81k]
  ------------------
 2254|      0|    return align::left;
 2255|      0|  case '>':
  ------------------
  |  Branch (2255:3): [True: 0, False: 1.81k]
  ------------------
 2256|      0|    return align::right;
 2257|      0|  case '^':
  ------------------
  |  Branch (2257:3): [True: 0, False: 1.81k]
  ------------------
 2258|      0|    return align::center;
 2259|  1.81k|  }
 2260|  1.81k|  return align::none;
 2261|  1.81k|}
_ZN3fmt2v96detail2inENS1_4typeEi:
  627|  1.81k|constexpr auto in(type t, int set) -> bool {
  628|  1.81k|  return ((set >> static_cast<int>(t)) & 1) != 0;
  629|  1.81k|}
_ZZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2394|  1.81k|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2395|  1.81k|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
  ------------------
  |  Branch (2395:11): [True: 0, False: 1.81k]
  ------------------
 2396|  1.81k|      specs.type = type;
 2397|  1.81k|      return begin + 1;
 2398|  1.81k|    }
_ZN3fmt2v916visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1625|  1.81k|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1626|  1.81k|  switch (arg.type_) {
  ------------------
  |  Branch (1626:11): [True: 0, False: 1.81k]
  ------------------
 1627|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1627:3): [True: 0, False: 1.81k]
  ------------------
 1628|      0|    break;
 1629|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1629:3): [True: 0, False: 1.81k]
  ------------------
 1630|      0|    return vis(arg.value_.int_value);
 1631|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1631:3): [True: 0, False: 1.81k]
  ------------------
 1632|      0|    return vis(arg.value_.uint_value);
 1633|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1633:3): [True: 0, False: 1.81k]
  ------------------
 1634|      0|    return vis(arg.value_.long_long_value);
 1635|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1635:3): [True: 0, False: 1.81k]
  ------------------
 1636|      0|    return vis(arg.value_.ulong_long_value);
 1637|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1637:3): [True: 0, False: 1.81k]
  ------------------
 1638|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1639|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1639:3): [True: 0, False: 1.81k]
  ------------------
 1640|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1641|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1641:3): [True: 0, False: 1.81k]
  ------------------
 1642|      0|    return vis(arg.value_.bool_value);
 1643|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1643:3): [True: 0, False: 1.81k]
  ------------------
 1644|      0|    return vis(arg.value_.char_value);
 1645|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1645:3): [True: 0, False: 1.81k]
  ------------------
 1646|      0|    return vis(arg.value_.float_value);
 1647|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1647:3): [True: 0, False: 1.81k]
  ------------------
 1648|      0|    return vis(arg.value_.double_value);
 1649|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1649:3): [True: 0, False: 1.81k]
  ------------------
 1650|      0|    return vis(arg.value_.long_double_value);
 1651|    200|  case detail::type::cstring_type:
  ------------------
  |  Branch (1651:3): [True: 200, False: 1.61k]
  ------------------
 1652|    200|    return vis(arg.value_.string.data);
 1653|  1.61k|  case detail::type::string_type:
  ------------------
  |  Branch (1653:3): [True: 1.61k, False: 200]
  ------------------
 1654|  1.61k|    using sv = basic_string_view<typename Context::char_type>;
 1655|  1.61k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1656|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1656:3): [True: 0, False: 1.81k]
  ------------------
 1657|      0|    return vis(arg.value_.pointer);
 1658|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1658:3): [True: 0, False: 1.81k]
  ------------------
 1659|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1660|  1.81k|  }
 1661|      0|  return vis(monostate());
 1662|  1.81k|}
_ZN3fmt2v96detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2220|    800|                              const char*& out) -> bool {
 2221|    800|  out = static_cast<const char*>(
 2222|    800|      std::memchr(first, value, to_unsigned(last - first)));
 2223|    800|  return out != nullptr;
 2224|    800|}
_ZZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2595|    400|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2596|    400|      if (from == to) return;
  ------------------
  |  Branch (2596:11): [True: 0, False: 400]
  ------------------
 2597|    400|      for (;;) {
 2598|    400|        const Char* p = nullptr;
 2599|    400|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2599:13): [True: 400, False: 0]
  ------------------
 2600|    400|          return handler_.on_text(from, to);
 2601|      0|        ++p;
 2602|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2602:13): [True: 0, False: 0]
  |  Branch (2602:24): [True: 0, False: 0]
  ------------------
 2603|      0|          return handler_.on_error("unmatched '}' in format string");
 2604|      0|        handler_.on_text(from, p);
 2605|      0|        from = p + 1;
 2606|      0|      }
 2607|    400|    }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1297|  4.02k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1298|  4.02k|    string.data = val.data();
 1299|  4.02k|    string.size = val.size();
 1300|  4.02k|  }
_ZN3fmt2v96detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1425|    200|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1426|    200|    return val;
 1427|    200|  }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1293|    200|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1294|    200|    string.data = val;
 1295|    200|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1295:9): [Folded - Ignored]
  ------------------
 1296|    200|  }
_ZNK3fmt2v96detail6bufferIcE4dataEv:
  923|  4.24k|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt2v97vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1448|  4.24k|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1449|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1450|       |  // can be better optimized in fmt::format anyway.
 1451|  4.24k|  auto buffer = memory_buffer();
 1452|  4.24k|  detail::vformat_to(buffer, fmt, args);
 1453|  4.24k|  return to_string(buffer);
 1454|  4.24k|}

_ZN3fmt2v96detail6bufferIcE6appendIcEEvPKT_S7_:
  830|  12.6k|void buffer<T>::append(const U* begin, const U* end) {
  831|  25.3k|  while (begin != end) {
  ------------------
  |  Branch (831:10): [True: 12.6k, False: 12.6k]
  ------------------
  832|  12.6k|    auto count = to_unsigned(end - begin);
  833|  12.6k|    try_reserve(size_ + count);
  834|  12.6k|    auto free_cap = capacity_ - size_;
  835|  12.6k|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (835:9): [True: 0, False: 12.6k]
  ------------------
  836|  12.6k|    std::uninitialized_copy_n(begin, count, make_checked(ptr_ + size_, count));
  837|  12.6k|    size_ += count;
  838|  12.6k|    begin += count;
  839|  12.6k|  }
  840|  12.6k|}
_ZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4479|  4.24k|                typename vformat_args<Char>::type args, locale_ref loc) {
 4480|       |  // workaround for msvc bug regarding name-lookup in module
 4481|       |  // link names into function scope
 4482|  4.24k|  using detail::arg_formatter;
 4483|  4.24k|  using detail::buffer_appender;
 4484|  4.24k|  using detail::custom_formatter;
 4485|  4.24k|  using detail::default_arg_formatter;
 4486|  4.24k|  using detail::get_arg;
 4487|  4.24k|  using detail::locale_ref;
 4488|  4.24k|  using detail::parse_format_specs;
 4489|  4.24k|  using detail::to_unsigned;
 4490|  4.24k|  using detail::type;
 4491|  4.24k|  using detail::write;
 4492|  4.24k|  auto out = buffer_appender<Char>(buf);
 4493|  4.24k|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4493:7): [True: 0, False: 4.24k]
  |  Branch (4493:26): [True: 0, False: 0]
  ------------------
 4494|      0|    auto arg = args.get(0);
 4495|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4495:9): [True: 0, False: 0]
  ------------------
 4496|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4497|      0|    return;
 4498|      0|  }
 4499|       |
 4500|  4.24k|  struct format_handler : error_handler {
 4501|  4.24k|    basic_format_parse_context<Char> parse_context;
 4502|  4.24k|    buffer_context<Char> context;
 4503|       |
 4504|  4.24k|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4505|  4.24k|                   basic_format_args<buffer_context<Char>> p_args,
 4506|  4.24k|                   locale_ref p_loc)
 4507|  4.24k|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4508|       |
 4509|  4.24k|    void on_text(const Char* begin, const Char* end) {
 4510|  4.24k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4511|  4.24k|      context.advance_to(write<Char>(context.out(), text));
 4512|  4.24k|    }
 4513|       |
 4514|  4.24k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4515|  4.24k|      return parse_context.next_arg_id();
 4516|  4.24k|    }
 4517|  4.24k|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4518|  4.24k|      return parse_context.check_arg_id(id), id;
 4519|  4.24k|    }
 4520|  4.24k|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4521|  4.24k|      int arg_id = context.arg_id(id);
 4522|  4.24k|      if (arg_id < 0) on_error("argument not found");
 4523|  4.24k|      return arg_id;
 4524|  4.24k|    }
 4525|       |
 4526|  4.24k|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4527|  4.24k|      auto arg = get_arg(context, id);
 4528|  4.24k|      context.advance_to(visit_format_arg(
 4529|  4.24k|          default_arg_formatter<Char>{context.out(), context.args(),
 4530|  4.24k|                                      context.locale()},
 4531|  4.24k|          arg));
 4532|  4.24k|    }
 4533|       |
 4534|  4.24k|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4535|  4.24k|        -> const Char* {
 4536|  4.24k|      auto arg = get_arg(context, id);
 4537|  4.24k|      if (arg.type() == type::custom_type) {
 4538|  4.24k|        parse_context.advance_to(begin);
 4539|  4.24k|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4540|  4.24k|        return parse_context.begin();
 4541|  4.24k|      }
 4542|  4.24k|      auto specs = detail::dynamic_format_specs<Char>();
 4543|  4.24k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4544|  4.24k|      detail::handle_dynamic_spec<detail::width_checker>(
 4545|  4.24k|          specs.width, specs.width_ref, context);
 4546|  4.24k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4547|  4.24k|          specs.precision, specs.precision_ref, context);
 4548|  4.24k|      if (begin == end || *begin != '}')
 4549|  4.24k|        on_error("missing '}' in format string");
 4550|  4.24k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4551|  4.24k|      context.advance_to(visit_format_arg(f, arg));
 4552|  4.24k|      return begin;
 4553|  4.24k|    }
 4554|  4.24k|  };
 4555|  4.24k|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4556|  4.24k|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  899|  4.24k|      : alloc_(alloc) {
  900|  4.24k|    this->set(store_, SIZE);
  901|  4.24k|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (901:9): [Folded - Ignored]
  ------------------
  902|  4.24k|  }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  970|    241|    size_t size) {
  971|    241|  detail::abort_fuzzing_if(size > 5000);
  972|    241|  const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  973|    241|  size_t old_capacity = this->capacity();
  974|    241|  size_t new_capacity = old_capacity + old_capacity / 2;
  975|    241|  if (size > new_capacity)
  ------------------
  |  Branch (975:7): [True: 104, False: 137]
  ------------------
  976|    104|    new_capacity = size;
  977|    137|  else if (new_capacity > max_size)
  ------------------
  |  Branch (977:12): [True: 0, False: 137]
  ------------------
  978|      0|    new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (978:20): [True: 0, False: 0]
  ------------------
  979|    241|  T* old_data = this->data();
  980|    241|  T* new_data =
  981|    241|      std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  982|       |  // The following code doesn't throw, so the raw pointer above doesn't leak.
  983|    241|  std::uninitialized_copy(old_data, old_data + this->size(),
  984|    241|                          detail::make_checked(new_data, new_capacity));
  985|    241|  this->set(new_data, new_capacity);
  986|       |  // deallocate must not throw according to the standard, but even if it does,
  987|       |  // the buffer already uses the new storage and will deallocate it in
  988|       |  // destructor.
  989|    241|  if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (989:7): [True: 105, False: 136]
  ------------------
  990|    241|}
_ZN3fmt2v96detail16abort_fuzzing_ifEb:
  259|    241|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  260|    241|  ignore_unused(condition);
  261|       |#ifdef FMT_FUZZ
  262|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  263|       |#endif
  264|    241|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  903|  4.24k|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  885|  4.24k|  FMT_CONSTEXPR20 void deallocate() {
  886|  4.24k|    T* data = this->data();
  887|  4.24k|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (887:9): [True: 136, False: 4.10k]
  ------------------
  888|  4.24k|  }
_ZN3fmt2v96detail12make_checkedIcEEPT_S4_m:
  539|  12.9k|template <typename T> constexpr auto make_checked(T* p, size_t) -> T* {
  540|  12.9k|  return p;
  541|  12.9k|}
_ZN3fmt2v96detail7reserveINS0_8appenderEEERT_S5_m:
  567|  12.6k|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  568|  12.6k|  return it;
  569|  12.6k|}
_ZN3fmt2v96detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  595|  12.6k|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  596|  12.6k|  return it;
  597|  12.6k|}
_ZN3fmt2v96detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  624|  10.8k|                                                  OutputIt out) -> OutputIt {
  625|  10.8k|  return copy_str<OutChar>(begin, end, out);
  626|  10.8k|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3807|  10.8k|    -> OutputIt {
 3808|  10.8k|  auto it = reserve(out, value.size());
 3809|  10.8k|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3810|  10.8k|  return base_iterator(out, it);
 3811|  10.8k|}
_ZN3fmt2v96detail21default_arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3899|  2.41k|  template <typename T> auto operator()(T value) -> iterator {
 3900|  2.41k|    return write<Char>(out, value);
 3901|  2.41k|  }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4509|  8.46k|    void on_text(const Char* begin, const Char* end) {
 4510|  8.46k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4511|  8.46k|      context.advance_to(write<Char>(context.out(), text));
 4512|  8.46k|    }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler20on_replacement_fieldEiPKc:
 4526|  2.41k|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4527|  2.41k|      auto arg = get_arg(context, id);
 4528|  2.41k|      context.advance_to(visit_format_arg(
 4529|  2.41k|          default_arg_formatter<Char>{context.out(), context.args(),
 4530|  2.41k|                                      context.locale()},
 4531|  2.41k|          arg));
 4532|  2.41k|    }
_ZN3fmt2v96detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEENT_10format_argERS6_T0_:
 3990|  4.22k|    typename Context::format_arg {
 3991|  4.22k|  auto arg = ctx.arg(id);
 3992|  4.22k|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3992:7): [True: 0, False: 4.22k]
  ------------------
 3993|  4.22k|  return arg;
 3994|  4.22k|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4514|  4.22k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4515|  4.22k|      return parse_context.next_arg_id();
 4516|  4.22k|    }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4535|  1.81k|        -> const Char* {
 4536|  1.81k|      auto arg = get_arg(context, id);
 4537|  1.81k|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4537:11): [True: 0, False: 1.81k]
  ------------------
 4538|      0|        parse_context.advance_to(begin);
 4539|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4540|      0|        return parse_context.begin();
 4541|      0|      }
 4542|  1.81k|      auto specs = detail::dynamic_format_specs<Char>();
 4543|  1.81k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4544|  1.81k|      detail::handle_dynamic_spec<detail::width_checker>(
 4545|  1.81k|          specs.width, specs.width_ref, context);
 4546|  1.81k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4547|  1.81k|          specs.precision, specs.precision_ref, context);
 4548|  1.81k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4548:11): [True: 0, False: 1.81k]
  |  Branch (4548:27): [True: 0, False: 1.81k]
  ------------------
 4549|      0|        on_error("missing '}' in format string");
 4550|  1.81k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4551|  1.81k|      context.advance_to(visit_format_arg(f, arg));
 4552|  1.81k|      return begin;
 4553|  1.81k|    }
_ZN3fmt2v96detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3999|  1.81k|                                       Context& ctx) {
 4000|  1.81k|  switch (ref.kind) {
  ------------------
  |  Branch (4000:11): [True: 0, False: 1.81k]
  ------------------
 4001|  1.81k|  case arg_id_kind::none:
  ------------------
  |  Branch (4001:3): [True: 1.81k, False: 0]
  ------------------
 4002|  1.81k|    break;
 4003|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4003:3): [True: 0, False: 1.81k]
  ------------------
 4004|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4005|      0|                                              ctx.error_handler());
 4006|      0|    break;
 4007|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4007:3): [True: 0, False: 1.81k]
  ------------------
 4008|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4009|      0|                                              ctx.error_handler());
 4010|      0|    break;
 4011|  1.81k|  }
 4012|  1.81k|}
_ZN3fmt2v96detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3999|  1.81k|                                       Context& ctx) {
 4000|  1.81k|  switch (ref.kind) {
  ------------------
  |  Branch (4000:11): [True: 0, False: 1.81k]
  ------------------
 4001|  1.81k|  case arg_id_kind::none:
  ------------------
  |  Branch (4001:3): [True: 1.81k, False: 0]
  ------------------
 4002|  1.81k|    break;
 4003|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4003:3): [True: 0, False: 1.81k]
  ------------------
 4004|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4005|      0|                                              ctx.error_handler());
 4006|      0|    break;
 4007|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4007:3): [True: 0, False: 1.81k]
  ------------------
 4008|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4009|      0|                                              ctx.error_handler());
 4010|      0|    break;
 4011|  1.81k|  }
 4012|  1.81k|}
_ZN3fmt2v96detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3919|    200|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3920|    200|    return detail::write(out, value, specs, locale);
 3921|    200|  }
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2347|    200|    -> OutputIt {
 2348|    200|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2348:10): [True: 200, False: 0]
  ------------------
 2349|    200|             ? write(out, basic_string_view<Char>(s), specs, {})
 2350|    200|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2351|    200|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2341|  1.81k|    -> OutputIt {
 2342|  1.81k|  return write(out, s, specs);
 2343|  1.81k|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2318|  1.81k|                         const format_specs<Char>& specs) -> OutputIt {
 2319|  1.81k|  auto data = s.data();
 2320|  1.81k|  auto size = s.size();
 2321|  1.81k|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2321:7): [True: 0, False: 1.81k]
  |  Branch (2321:31): [True: 0, False: 0]
  ------------------
 2322|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2323|  1.81k|  bool is_debug = specs.type == presentation_type::debug;
 2324|  1.81k|  size_t width = 0;
 2325|  1.81k|  if (specs.width != 0) {
  ------------------
  |  Branch (2325:7): [True: 0, False: 1.81k]
  ------------------
 2326|      0|    if (is_debug)
  ------------------
  |  Branch (2326:9): [True: 0, False: 0]
  ------------------
 2327|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2328|      0|    else
 2329|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2330|      0|  }
 2331|  1.81k|  return write_padded(out, specs, size, width,
 2332|  1.81k|                      [=](reserve_iterator<OutputIt> it) {
 2333|  1.81k|                        if (is_debug) return write_escaped_string(it, s);
 2334|  1.81k|                        return copy_str<Char>(data, data + size, it);
 2335|  1.81k|                      });
 2336|  1.81k|}
_ZN3fmt2v96detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1771|  1.81k|                                size_t size, size_t width, F&& f) -> OutputIt {
 1772|  1.81k|  static_assert(align == align::left || align == align::right, "");
 1773|  1.81k|  unsigned spec_width = to_unsigned(specs.width);
 1774|  1.81k|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1774:20): [True: 0, False: 1.81k]
  ------------------
 1775|       |  // Shifts are encoded as string literals because static constexpr is not
 1776|       |  // supported in constexpr functions.
 1777|  1.81k|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1777:18): [Folded - Ignored]
  ------------------
 1778|  1.81k|  size_t left_padding = padding >> shifts[specs.align];
 1779|  1.81k|  size_t right_padding = padding - left_padding;
 1780|  1.81k|  auto it = reserve(out, size + padding * specs.fill.size());
 1781|  1.81k|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1781:7): [True: 0, False: 1.81k]
  ------------------
 1782|  1.81k|  it = f(it);
 1783|  1.81k|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1783:7): [True: 0, False: 1.81k]
  ------------------
 1784|  1.81k|  return base_iterator(out, it);
 1785|  1.81k|}
_ZZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2332|  1.81k|                      [=](reserve_iterator<OutputIt> it) {
 2333|  1.81k|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2333:29): [True: 0, False: 1.81k]
  ------------------
 2334|  1.81k|                        return copy_str<Char>(data, data + size, it);
 2335|  1.81k|                      });
_ZN3fmt2v96detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3919|  1.61k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3920|  1.61k|    return detail::write(out, value, specs, locale);
 3921|  1.61k|  }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4507|  4.24k|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt2v99to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4469|  4.24k|    -> std::basic_string<Char> {
 4470|  4.24k|  auto size = buf.size();
 4471|  4.24k|  detail::assume(size < std::basic_string<Char>().max_size());
 4472|  4.24k|  return std::basic_string<Char>(buf.data(), size);
 4473|  4.24k|}
_ZN3fmt2v96detail6assumeEb:
  508|  4.24k|FMT_INLINE void assume(bool condition) {
  509|  4.24k|  (void)condition;
  510|  4.24k|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  511|  4.24k|  __builtin_assume(condition);
  512|  4.24k|#endif
  513|  4.24k|}

LLVMFuzzerTestOneInput:
   19|  4.65k|{
   20|  4.65k|    phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   21|       |
   22|  4.65k|    OpenAutoIt::ParseResult parse_result;
   23|       |
   24|       |    // Lexing
   25|  4.65k|    OpenAutoIt::Lexer lexer{parse_result, source};
   26|  4.65k|    lexer.ProcessAll();
   27|       |
   28|       |    // Parsing
   29|  4.65k|    OpenAutoIt::Parser parser{};
   30|  4.65k|    parser.ParseDocument(parse_result);
   31|       |
   32|       |    // Ignore if document was null
   33|  4.65k|    if (!parse_result.m_Document)
  ------------------
  |  Branch (33:9): [True: 0, False: 4.65k]
  ------------------
   34|      0|    {
   35|      0|        return 0;
   36|      0|    }
   37|       |
   38|       |    // Interpreting
   39|  4.65k|    OpenAutoIt::Interpreter interpreter{parse_result.m_Document.not_null_observer()};
   40|       |
   41|       |    // Prevent output
   42|  4.65k|    interpreter.vm().OverwriteIOSreams(nullptr, nullptr);
   43|       |
   44|       |    // Limit number of executions because of the halting problem
   45|  4.65k|    phi::u64 statements_ran = 0u;
   46|   105k|    while (interpreter.vm().CanRun() && statements_ran < MaxNumberOfStatements)
  ------------------
  |  Branch (46:12): [True: 101k, False: 4.59k]
  |  Branch (46:12): [True: 101k, False: 4.65k]
  |  Branch (46:41): [True: 101k, False: 61]
  ------------------
   47|   101k|    {
   48|   101k|        interpreter.Step();
   49|   101k|        ++statements_ran;
   50|   101k|    }
   51|       |
   52|  4.65k|    return 0;
   53|  4.65k|}

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  10.8k|        {
   20|  10.8k|            m_NodeType = ASTNodeType::BinaryExpression;
   21|  10.8k|        }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  1.53k|        {
   18|  1.53k|            m_NodeType = ASTNodeType::BooleanLiteral;
   19|  1.53k|        }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   18|  41.7k|        {
   19|  41.7k|            m_Statements.emplace_back(phi::move(child));
   20|  41.7k|        }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   23|    483|        {
   24|    483|            m_Functions.emplace_back(phi::move(child));
   25|    483|        }
_ZN10OpenAutoIt11ASTDocument30LookupFunctionDefinitionByNameEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
   29|  2.07k|        {
   30|  2.07k|            for (phi::not_null_observer_ptr<ASTFunctionDefinition> func_definition : m_Functions)
  ------------------
  |  Branch (30:84): [True: 1.14k, False: 1.61k]
  ------------------
   31|  1.14k|            {
   32|       |                // TODO: Should ignore case
   33|  1.14k|                if (phi::string_equals(func_definition->m_FunctionName, function_name))
  ------------------
  |  Branch (33:21): [True: 456, False: 686]
  ------------------
   34|    456|                {
   35|    456|                    return phi::move(func_definition);
   36|    456|                }
   37|  1.14k|            }
   38|       |
   39|  1.61k|            return nullptr;
   40|  2.07k|        }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|  38.5k|        {
   17|  38.5k|            m_NodeType = ASTNodeType::ExpressionStatement;
   18|  38.5k|        }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  1.13k|        {
   17|  1.13k|            m_NodeType = ASTNodeType::FloatLiteral;
   18|  1.13k|        }

_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|  48.8k|        {
   21|  48.8k|            m_NodeType = ASTNodeType::FunctionCallExpression;
   22|  48.8k|        }
_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|  44.2k|        {
   26|  44.2k|            if (m_IsBuiltIn)
  ------------------
  |  Branch (26:17): [True: 2.05k, False: 42.1k]
  ------------------
   27|  2.05k|            {
   28|  2.05k|                return enum_name(m_BuiltInFunction);
   29|  2.05k|            }
   30|       |
   31|  42.1k|            return m_FunctionName;
   32|  44.2k|        }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|  37.0k|        {
   17|  37.0k|            m_NodeType = ASTNodeType::IntegerLiteral;
   18|  37.0k|        }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|    772|        {
   19|    772|            m_NodeType = ASTNodeType::KeywordLiteral;
   20|    772|            PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|    772|        }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   64|   181k|        virtual ~ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode8NodeTypeEv:
   77|   241k|        {
   78|   241k|            return m_NodeType;
   79|   241k|        }
_ZN10OpenAutoIt7ASTNode2asINS_22ASTExpressionStatementEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  28.5k|        {
   84|  28.5k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  28.5k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  28.5k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  28.5k|            PHI_ASSERT(ret);
   89|       |
   90|  28.5k|            return ret;
   91|  28.5k|        }
_ZN10OpenAutoIt7ASTNode2asINS_21ASTVariableAssignmentEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  7.61k|        {
   84|  7.61k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  7.61k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  7.61k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  7.61k|            PHI_ASSERT(ret);
   89|       |
   90|  7.61k|            return ret;
   91|  7.61k|        }
_ZN10OpenAutoIt7ASTNode2asINS_17ASTWhileStatementEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  60.7k|        {
   84|  60.7k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  60.7k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  60.7k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  60.7k|            PHI_ASSERT(ret);
   89|       |
   90|  60.7k|            return ret;
   91|  60.7k|        }
_ZN10OpenAutoIt7ASTNode2asINS_19ASTBinaryExpressionEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  24.7k|        {
   84|  24.7k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  24.7k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  24.7k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  24.7k|            PHI_ASSERT(ret);
   89|       |
   90|  24.7k|            return ret;
   91|  24.7k|        }
_ZN10OpenAutoIt7ASTNode2asINS_17ASTBooleanLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|    812|        {
   84|    812|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|    812|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|    812|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|    812|            PHI_ASSERT(ret);
   89|       |
   90|    812|            return ret;
   91|    812|        }
_ZN10OpenAutoIt7ASTNode2asINS_25ASTFunctionCallExpressionEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  3.28k|        {
   84|  3.28k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  3.28k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  3.28k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  3.28k|            PHI_ASSERT(ret);
   89|       |
   90|  3.28k|            return ret;
   91|  3.28k|        }
_ZN10OpenAutoIt7ASTNode2asINS_17ASTIntegerLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  81.3k|        {
   84|  81.3k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  81.3k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  81.3k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  81.3k|            PHI_ASSERT(ret);
   89|       |
   90|  81.3k|            return ret;
   91|  81.3k|        }
_ZN10OpenAutoIt7ASTNode2asINS_17ASTKeywordLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|    720|        {
   84|    720|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|    720|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|    720|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|    720|            PHI_ASSERT(ret);
   89|       |
   90|    720|            return ret;
   91|    720|        }
_ZN10OpenAutoIt7ASTNode2asINS_15ASTFloatLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  19.8k|        {
   84|  19.8k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  19.8k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  19.8k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  19.8k|            PHI_ASSERT(ret);
   89|       |
   90|  19.8k|            return ret;
   91|  19.8k|        }
_ZN10OpenAutoIt7ASTNode2asINS_16ASTStringLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  11.4k|        {
   84|  11.4k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  11.4k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  11.4k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  11.4k|            PHI_ASSERT(ret);
   89|       |
   90|  11.4k|            return ret;
   91|  11.4k|        }
_ZN10OpenAutoIt7ASTNode2asINS_21ASTVariableExpressionEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  2.71k|        {
   84|  2.71k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  2.71k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  2.71k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  2.71k|            PHI_ASSERT(ret);
   89|       |
   90|  2.71k|            return ret;
   91|  2.71k|        }
_ZN10OpenAutoIt7ASTNodeC2Ev:
   62|   181k|        ASTNode() = default;

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  19.6k|        {
   15|  19.6k|            m_NodeType = ASTNodeType::StringLiteral;
   16|  19.6k|        }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|  9.86k|        {
   20|  9.86k|            m_NodeType = ASTNodeType::VariableAssignment;
   21|  9.86k|        }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|  3.00k|        {
   15|  3.00k|            m_NodeType = ASTNodeType::VariableExpression;
   16|  3.00k|        }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  1.04k|        {
   18|  1.04k|            m_NodeType = ASTNodeType::WhileStatement;
   19|  1.04k|        }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|   227k|        {
   46|   227k|            Token token{kind,
   47|   227k|                        m_Source.substring_view(
   48|   227k|                                static_cast<typename phi::string_view::size_type::value_type>(
   49|   227k|                                        m_Iterator - m_Source.begin()),
   50|   227k|                                1u),
   51|   227k|                        m_LineNumber, m_Column};
   52|       |
   53|       |            // 1 character sized token
   54|   227k|            ++m_Column;
   55|       |
   56|   227k|            return token;
   57|   227k|        }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|   340k|        {
   61|   340k|            Token token{kind, TokenText(token_begin), m_LineNumber, m_Column};
   62|       |
   63|       |            // Consume the amount of characters that make up our new token
   64|   340k|            m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|   340k|            return token;
   67|   340k|        }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|   569k|        {
   71|   569k|            return m_Source.substring_view(token_begin, m_Iterator);
   72|   569k|        }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   61|   358k|        {
   62|   358k|            switch (token_kind)
   63|   358k|            {
   64|  1.65k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (64:17): [True: 1.65k, False: 356k]
  ------------------
   65|  2.95k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (65:17): [True: 1.29k, False: 356k]
  ------------------
   66|  3.30k|                case TokenKind::KW_Not:
  ------------------
  |  Branch (66:17): [True: 354, False: 357k]
  ------------------
   67|  3.30k|                    return true;
   68|       |
   69|   354k|                default:
  ------------------
  |  Branch (69:17): [True: 354k, False: 3.30k]
  ------------------
   70|   354k|                    return false;
   71|   358k|            }
   72|   358k|        }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   76|  69.8k|        {
   77|  69.8k|            switch (token_kind)
   78|  69.8k|            {
   79|    144|                case TokenKind::KW_And:
  ------------------
  |  Branch (79:17): [True: 144, False: 69.7k]
  ------------------
   80|    222|                case TokenKind::KW_Or:
  ------------------
  |  Branch (80:17): [True: 78, False: 69.8k]
  ------------------
   81|  5.58k|                case TokenKind::OP_Equals:
  ------------------
  |  Branch (81:17): [True: 5.36k, False: 64.5k]
  ------------------
   82|  6.00k|                case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (82:17): [True: 422, False: 69.4k]
  ------------------
   83|  6.29k|                case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (83:17): [True: 286, False: 69.5k]
  ------------------
   84|  6.65k|                case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (84:17): [True: 358, False: 69.5k]
  ------------------
   85|  6.87k|                case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (85:17): [True: 220, False: 69.6k]
  ------------------
   86|  10.7k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (86:17): [True: 3.92k, False: 65.9k]
  ------------------
   87|  11.9k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (87:17): [True: 1.13k, False: 68.7k]
  ------------------
   88|  12.6k|                case TokenKind::OP_Multiply:
  ------------------
  |  Branch (88:17): [True: 774, False: 69.1k]
  ------------------
   89|  13.0k|                case TokenKind::OP_Divide:
  ------------------
  |  Branch (89:17): [True: 383, False: 69.5k]
  ------------------
   90|  13.3k|                case TokenKind::OP_Raise:
  ------------------
  |  Branch (90:17): [True: 281, False: 69.6k]
  ------------------
   91|  13.9k|                case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (91:17): [True: 607, False: 69.2k]
  ------------------
   92|  14.7k|                case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (92:17): [True: 742, False: 69.1k]
  ------------------
   93|  15.3k|                case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (93:17): [True: 646, False: 69.2k]
  ------------------
   94|  15.4k|                case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (94:17): [True: 140, False: 69.7k]
  ------------------
   95|  16.3k|                case TokenKind::OP_LessThan:
  ------------------
  |  Branch (95:17): [True: 862, False: 69.0k]
  ------------------
   96|  16.5k|                case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (96:17): [True: 233, False: 69.6k]
  ------------------
   97|  16.5k|                    return true;
   98|       |
   99|  53.2k|                default:
  ------------------
  |  Branch (99:17): [True: 53.2k, False: 16.5k]
  ------------------
  100|  53.2k|                    return false;
  101|  69.8k|            }
  102|  69.8k|        }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  121|    483|        {
  122|    483|            m_ParseResult->m_Document->AppendFunction(phi::move(function));
  123|    483|        }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  114|  41.7k|        {
  115|  41.7k|            m_ParseResult->m_Document->AppendStatement(phi::move(statement));
  116|  41.7k|        }

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS2_7integerImEES9_:
   23|   568k|        {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   36|  4.12M|        {
   37|  4.12M|            return m_Kind;
   38|  4.12M|        }
_ZNK10OpenAutoIt5Token7GetTextEv:
   41|   440k|        {
   42|   440k|            return m_Text;
   43|   440k|        }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   68|   187k|        {
   69|   187k|            const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   70|       |
   71|   187k|            if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (71:17): [True: 9.87k, False: 177k]
  ------------------
   72|   187k|                underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (72:17): [True: 9.87k, False: 0]
  ------------------
   73|  9.87k|            {
   74|  9.87k|                return true;
   75|  9.87k|            }
   76|       |
   77|   177k|            return false;
   78|   187k|        }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
   81|   129k|        {
   82|   129k|            switch (m_Kind)
   83|   129k|            {
   84|    766|                case TokenKind::KW_Default:
  ------------------
  |  Branch (84:17): [True: 766, False: 128k]
  ------------------
   85|  1.54k|                case TokenKind::KW_Null:
  ------------------
  |  Branch (85:17): [True: 778, False: 128k]
  ------------------
   86|  1.54k|                    return true;
   87|       |
   88|   128k|                default:
  ------------------
  |  Branch (88:17): [True: 128k, False: 1.54k]
  ------------------
   89|   128k|                    return false;
   90|   129k|            }
   91|   129k|        }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  679|   298k|    {
  680|   298k|        switch (token_kind)
  681|   298k|        {
  682|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  683|      0|    case TokenKind::name:                                                                          \
  684|      0|        return #name;
  685|       |
  686|      0|            OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  1.27k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  683|  1.27k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.27k, False: 296k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.27k|        return #name;
  |  |  ------------------
  |  |   13|  53.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  683|  53.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 53.2k, False: 244k]
  |  |  |  |  ------------------
  |  |  |  |  684|  53.2k|        return #name;
  |  |  ------------------
  |  |   14|  53.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   15|    165|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  683|    165|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 165, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    165|        return #name;
  |  |  ------------------
  |  |   16|    165|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |   17|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   18|  33.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|  33.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 33.3k, False: 264k]
  |  |  |  |  ------------------
  |  |  |  |  684|  33.3k|        return #name;
  |  |  ------------------
  |  |   19|  33.3k|    /* Literals */                                                                                 \
  |  |   20|  33.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  683|  4.09k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.09k, False: 294k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.09k|        return #name;
  |  |  ------------------
  |  |   21|  4.09k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |   22|    444|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  683|    444|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 444, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    444|        return #name;
  |  |  ------------------
  |  |   23|    444|    /* Punctuation */                                                                              \
  |  |   24|  2.58k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  683|  2.58k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.58k, False: 295k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.58k|        return #name;
  |  |  ------------------
  |  |   25|  3.09k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  3.09k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.09k, False: 295k]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.09k|        return #name;
  |  |  ------------------
  |  |   26|  50.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  50.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 50.8k, False: 247k]
  |  |  |  |  ------------------
  |  |  |  |  684|  50.8k|        return #name;
  |  |  ------------------
  |  |   27|  50.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   28|  8.46k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  8.46k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.46k, False: 289k]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.46k|        return #name;
  |  |  ------------------
  |  |   29|  12.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  12.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12.2k, False: 285k]
  |  |  |  |  ------------------
  |  |  |  |  684|  12.2k|        return #name;
  |  |  ------------------
  |  |   30|  12.2k|    /* Macros */                                                                                   \
  |  |   31|  12.2k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  12.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |   33|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 20, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     20|        return #name;
  |  |  ------------------
  |  |   34|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   35|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   36|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   37|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  683|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     24|        return #name;
  |  |  ------------------
  |  |   38|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   40|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |   41|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   42|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   43|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |   44|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   45|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   46|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   47|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   49|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   51|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   52|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   53|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   54|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   55|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   56|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   57|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   59|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   60|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   64|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   65|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |   66|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   67|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   69|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  683|     48|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 48, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     48|        return #name;
  |  |  ------------------
  |  |   70|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   71|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   73|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   74|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |   75|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   76|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   77|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   81|    103|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  683|    103|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 103, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|    103|        return #name;
  |  |  ------------------
  |  |   82|    103|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   83|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   84|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   85|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |   86|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   87|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   88|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   89|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   91|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   92|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   93|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   96|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   97|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   98|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   99|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  100|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  101|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  103|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  104|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  105|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  106|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  107|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  108|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  109|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  111|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  112|    206|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  683|    206|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 206, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    206|        return #name;
  |  |  ------------------
  |  |  113|    206|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  122|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  123|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  124|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  125|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  127|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  128|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  129|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  130|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  131|    146|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|    146|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 146, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    146|        return #name;
  |  |  ------------------
  |  |  132|    146|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  133|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|    206|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  683|    206|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 206, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    206|        return #name;
  |  |  ------------------
  |  |  138|    657|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  683|    657|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 657, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    657|        return #name;
  |  |  ------------------
  |  |  139|    657|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|    657|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  683|    150|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 150, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    150|        return #name;
  |  |  ------------------
  |  |  141|    150|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|    150|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  683|    112|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 112, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|    112|        return #name;
  |  |  ------------------
  |  |  143|    112|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    218|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|    218|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 218, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    218|        return #name;
  |  |  ------------------
  |  |  145|    218|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|    218|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  683|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 42, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     42|        return #name;
  |  |  ------------------
  |  |  147|     42|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|     88|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  683|     88|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 88, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     88|        return #name;
  |  |  ------------------
  |  |  149|     88|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    306|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  683|    306|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 306, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    306|        return #name;
  |  |  ------------------
  |  |  151|    306|    /* Keywords */                                                                                 \
  |  |  152|    306|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    306|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    306|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|    306|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  156|     79|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  683|     79|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 79, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     79|        return #name;
  |  |  ------------------
  |  |  157|     79|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|     79|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  683|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 46, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     46|        return #name;
  |  |  ------------------
  |  |  159|     46|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  163|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  165|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  166|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  167|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  168|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  683|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 31, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     31|        return #name;
  |  |  ------------------
  |  |  170|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  171|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  173|      6|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  175|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  179|    579|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  683|    579|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 579, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    579|        return #name;
  |  |  ------------------
  |  |  180|    579|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  181|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  182|     34|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  683|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 46, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     46|        return #name;
  |  |  ------------------
  |  |  184|     46|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|    605|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  683|    605|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 605, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    605|        return #name;
  |  |  ------------------
  |  |  186|    605|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  683|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     28|        return #name;
  |  |  ------------------
  |  |  187|    130|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  683|    130|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 130, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    130|        return #name;
  |  |  ------------------
  |  |  188|    173|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  683|    173|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 173, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    173|        return #name;
  |  |  ------------------
  |  |  189|    173|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|    173|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  191|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  192|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  193|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  195|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  196|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  198|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  200|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  202|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  203|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  206|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  683|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     24|        return #name;
  |  |  ------------------
  |  |  208|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  209|      6|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  213|    334|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|    334|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 334, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    334|        return #name;
  |  |  ------------------
  |  |  214|    334|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|    334|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  683|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 32, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     32|        return #name;
  |  |  ------------------
  |  |  216|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  217|      4|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  219|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  683|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 20, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     20|        return #name;
  |  |  ------------------
  |  |  220|    708|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  683|    708|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 708, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    708|        return #name;
  |  |  ------------------
  |  |  221|    708|    /* Operator */                                                                                 \
  |  |  222|    708|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  7.87k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)                                                     \
  |  |  ------------------
  |  |  |  |  683|  7.87k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7.87k, False: 290k]
  |  |  |  |  ------------------
  |  |  |  |  684|  7.87k|        return #name;
  |  |  ------------------
  |  |  224|  7.87k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)                                                 \
  |  |  ------------------
  |  |  |  |  683|    162|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 162, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    162|        return #name;
  |  |  ------------------
  |  |  225|    162|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)                                                \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  226|    410|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)                                             \
  |  |  ------------------
  |  |  |  |  683|    410|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 410, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    410|        return #name;
  |  |  ------------------
  |  |  227|    410|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 46, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     46|        return #name;
  |  |  ------------------
  |  |  228|  12.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)                                                \
  |  |  ------------------
  |  |  |  |  683|  12.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12.3k, False: 285k]
  |  |  |  |  ------------------
  |  |  |  |  684|  12.3k|        return #name;
  |  |  ------------------
  |  |  229|  12.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals)                                          \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  230|  3.24k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)                                                       \
  |  |  ------------------
  |  |  |  |  683|  3.24k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.24k, False: 294k]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.24k|        return #name;
  |  |  ------------------
  |  |  231|  3.24k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)                                                      \
  |  |  ------------------
  |  |  |  |  683|  2.50k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.50k, False: 295k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.50k|        return #name;
  |  |  ------------------
  |  |  232|  7.77k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)                                                   \
  |  |  ------------------
  |  |  |  |  683|  7.77k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7.77k, False: 290k]
  |  |  |  |  ------------------
  |  |  |  |  684|  7.77k|        return #name;
  |  |  ------------------
  |  |  233|  7.77k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)                                                     \
  |  |  ------------------
  |  |  |  |  683|  1.99k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.99k, False: 296k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.99k|        return #name;
  |  |  ------------------
  |  |  234|  16.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)                                                      \
  |  |  ------------------
  |  |  |  |  683|  16.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16.6k, False: 281k]
  |  |  |  |  ------------------
  |  |  |  |  684|  16.6k|        return #name;
  |  |  ------------------
  |  |  235|  16.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|  8.14k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.14k, False: 289k]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.14k|        return #name;
  |  |  ------------------
  |  |  236|  8.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)                                                   \
  |  |  ------------------
  |  |  |  |  683|    116|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 116, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|    116|        return #name;
  |  |  ------------------
  |  |  237|  11.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)                                                \
  |  |  ------------------
  |  |  |  |  683|  11.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11.7k, False: 286k]
  |  |  |  |  ------------------
  |  |  |  |  684|  11.7k|        return #name;
  |  |  ------------------
  |  |  238|  11.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)                                           \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  239|  37.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)                                                   \
  |  |  ------------------
  |  |  |  |  683|  37.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 37.5k, False: 260k]
  |  |  |  |  ------------------
  |  |  |  |  684|  37.5k|        return #name;
  |  |  ------------------
  |  |  240|  37.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)                                              \
  |  |  ------------------
  |  |  |  |  683|  1.19k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.19k, False: 296k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.19k|        return #name;
  |  |  ------------------
  |  |  241|  4.16k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)                                                  \
  |  |  ------------------
  |  |  |  |  683|  4.16k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.16k, False: 293k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.16k|        return #name;
  |  |  ------------------
  |  |  242|  4.16k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)                                                \
  |  |  ------------------
  |  |  |  |  683|  3.34k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.34k, False: 294k]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.34k|        return #name;
  |  |  ------------------
  |  |  243|  3.34k|    /* Built-in Functions */                                                                       \
  |  |  244|  3.34k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  3.34k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  3.34k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  683|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 31, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     31|        return #name;
  |  |  ------------------
  |  |  247|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  248|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  249|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  250|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  251|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  252|    138|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  683|    138|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 138, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    138|        return #name;
  |  |  ------------------
  |  |  253|    138|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  254|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  255|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  256|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  257|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  262|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  263|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  264|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  265|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  266|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  683|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     28|        return #name;
  |  |  ------------------
  |  |  267|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  268|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  269|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  270|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  271|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  272|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  273|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  274|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  275|     47|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  683|     47|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 47, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     47|        return #name;
  |  |  ------------------
  |  |  276|     47|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  278|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  279|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  280|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  683|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 32, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     32|        return #name;
  |  |  ------------------
  |  |  281|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  288|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  289|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  297|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  298|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  299|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  300|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  301|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  302|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  303|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  304|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  305|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  306|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  307|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  308|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  309|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  310|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  312|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  313|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  314|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  315|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  316|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  319|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  320|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  321|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  323|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  327|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  683|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     28|        return #name;
  |  |  ------------------
  |  |  328|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  330|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  331|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  332|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  333|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  334|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  335|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  336|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  337|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  338|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  340|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  341|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  343|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  344|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  345|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  347|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  348|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  350|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  351|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  352|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  353|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  354|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  355|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  357|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  358|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  359|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  360|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  361|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  362|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  363|    386|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  683|    386|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 386, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    386|        return #name;
  |  |  ------------------
  |  |  364|    386|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  365|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  366|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  367|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  368|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  369|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  370|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  371|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  373|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  374|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  378|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  379|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  383|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  384|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  385|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  386|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  683|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 31, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     31|        return #name;
  |  |  ------------------
  |  |  387|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  388|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  389|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  390|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  397|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  398|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  399|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  400|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  402|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  403|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  404|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  416|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  417|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  418|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  419|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  420|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  421|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  422|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  424|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  425|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  428|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  683|     48|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 48, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     48|        return #name;
  |  |  ------------------
  |  |  429|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  430|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  435|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  436|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  437|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  438|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  439|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  440|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  444|    706|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  683|    706|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 706, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    706|        return #name;
  |  |  ------------------
  |  |  445|    706|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  446|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  447|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  448|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  449|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  450|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  451|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  452|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  453|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  454|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  455|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  462|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  683|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     13|        return #name;
  |  |  ------------------
  |  |  463|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  466|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  467|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  468|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  470|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  471|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  472|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  473|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  474|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  477|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  479|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  480|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  482|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  683|     21|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 21, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     21|        return #name;
  |  |  ------------------
  |  |  483|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  485|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |  486|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  487|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  488|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  489|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  490|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  491|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  492|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  494|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  495|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  496|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  497|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  498|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  499|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  500|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  501|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  502|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  503|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  504|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  505|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  507|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  508|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  509|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  510|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  511|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  512|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  515|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  516|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  517|     70|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  683|     70|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 70, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     70|        return #name;
  |  |  ------------------
  |  |  518|     70|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  683|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 27, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     27|        return #name;
  |  |  ------------------
  |  |  519|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  520|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  521|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |  522|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  523|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  525|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  526|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  529|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  530|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  531|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  533|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  535|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  536|    171|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  683|    171|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 171, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    171|        return #name;
  |  |  ------------------
  |  |  537|    171|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  683|     73|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 73, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     73|        return #name;
  |  |  ------------------
  |  |  538|     73|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  539|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  540|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  541|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  542|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  543|    301|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  683|    301|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 301, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    301|        return #name;
  |  |  ------------------
  |  |  544|    301|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  548|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  549|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  550|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  551|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  553|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  554|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  555|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  556|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  558|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  559|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  560|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |  561|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  562|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  563|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  566|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  567|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  568|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  569|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 32, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     32|        return #name;
  |  |  ------------------
  |  |  570|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  573|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  574|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  576|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  577|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  579|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  580|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  581|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  583|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  584|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  683|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 31, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     31|        return #name;
  |  |  ------------------
  |  |  585|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  587|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  588|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  589|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  590|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  593|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  594|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  595|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  596|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  597|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  599|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  600|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  601|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  603|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  604|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  607|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  608|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  610|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  611|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  612|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  613|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  615|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  616|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  617|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  618|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  619|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  620|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  621|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  683|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     28|        return #name;
  |  |  ------------------
  |  |  622|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  625|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  626|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  627|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  628|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  629|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  631|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  683|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 30, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     30|        return #name;
  |  |  ------------------
  |  |  632|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  635|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  636|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  638|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  639|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  641|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  642|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  643|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  644|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  645|     52|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  683|     52|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 52, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     52|        return #name;
  |  |  ------------------
  |  |  646|    217|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|    217|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 217, False: 297k]
  |  |  |  |  ------------------
  |  |  |  |  684|    217|        return #name;
  |  |  ------------------
  |  |  647|    217|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  648|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  649|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 298k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  ------------------
  687|       |
  688|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  689|       |
  690|      0|            default:
  ------------------
  |  Branch (690:13): [True: 0, False: 298k]
  ------------------
  691|      0|                PHI_ASSERT_NOT_REACHED();
  692|   298k|        }
  693|   298k|    }

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|   568k|        {
   21|       |#if defined(PHI_DEBUG)
   22|       |            PHI_ASSERT(!m_Finialized);
   23|       |#endif
   24|       |
   25|   568k|            m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|   568k|        }

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  157|  19.7k|{
  158|  19.7k|    static constexpr auto map =
  159|  19.7k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  160|  19.7k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  161|       |
  162|  19.7k|    std::string str{token.begin(), token.end()};
  163|  19.7k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  164|       |
  165|  19.7k|    return map.at(phi::string_view(str.c_str(), str.size()));
  166|  19.7k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  183|  33.4k|{
  184|  33.4k|    static constexpr auto map =
  185|  33.4k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  186|  33.4k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  187|       |
  188|  33.4k|    std::string str{token.begin(), token.end()};
  189|  33.4k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  190|       |
  191|  33.4k|    return map.at(phi::string_view(str.c_str(), str.size()));
  192|  33.4k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  660|  91.5k|{
  661|  91.5k|    static constexpr auto keyword_map =
  662|  91.5k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  663|  91.5k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  664|  91.5k|    static constexpr auto builtin_map =
  665|  91.5k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  666|  91.5k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  667|       |
  668|  91.5k|    std::string str{token.begin(), token.end()};
  669|  91.5k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  670|       |
  671|  91.5k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  672|       |
  673|  91.5k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  674|  91.5k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (674:9): [True: 75.3k, False: 16.1k]
  ------------------
  675|  75.3k|    {
  676|  75.3k|        return builtin_map.at(string);
  677|  75.3k|    }
  678|       |
  679|  16.1k|    return keyword;
  680|  91.5k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  706|  99.4k|{
  707|  99.4k|    static constexpr auto map =
  708|  99.4k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  709|  99.4k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  710|       |
  711|  99.4k|    return map.at(token);
  712|  99.4k|}
_ZN10OpenAutoIt5LexerC2ERNS_11ParseResultEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  783|  4.65k|    {}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  803|  3.92M|    {
  804|  3.92M|        return m_Iterator == m_Source.end();
  805|  3.92M|    }
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  813|   570k|    {
  814|  1.53M|        while (!IsFinished())
  ------------------
  |  Branch (814:16): [True: 1.53M, False: 2.10k]
  ------------------
  815|  1.53M|        {
  816|  1.53M|            char current_character = *m_Iterator;
  817|       |
  818|       |            /* Embedded null character */
  819|       |
  820|  1.53M|            if (current_character == '\0')
  ------------------
  |  Branch (820:17): [True: 287k, False: 1.24M]
  ------------------
  821|   287k|            {
  822|   287k|                m_ParseResult.m_Warnings.emplace_back(
  823|   287k|                        ParseWarning::EmbeddedNullCharacter(m_LineNumber, m_Column));
  824|       |
  825|   287k|                SkipCurrentCharacter();
  826|   287k|            }
  827|       |
  828|       |            /* Multiline comments */
  829|       |
  830|  1.24M|            else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (830:22): [True: 160, False: 1.24M]
  ------------------
  831|    160|            {
  832|    160|                iterator       begin_of_multiline_comment            = m_Iterator;
  833|    160|                const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  834|    160|                const phi::u64 beginning_column_of_multiline_comment = m_Column;
  835|       |
  836|  33.8k|                while (!IsFinished())
  ------------------
  |  Branch (836:24): [True: 33.7k, False: 100]
  ------------------
  837|  33.7k|                {
  838|  33.7k|                    current_character = *m_Iterator;
  839|       |
  840|       |                    // Check for end comment multiline
  841|  33.7k|                    if (current_character == '#')
  ------------------
  |  Branch (841:25): [True: 955, False: 32.8k]
  ------------------
  842|    955|                    {
  843|    955|                        iterator begin_of_token = m_Iterator;
  844|    955|                        ConsumeCurrentCharacter();
  845|       |
  846|  5.41k|                        while (!IsFinished())
  ------------------
  |  Branch (846:32): [True: 5.40k, False: 10]
  ------------------
  847|  5.40k|                        {
  848|  5.40k|                            current_character = *m_Iterator;
  849|       |
  850|  5.40k|                            if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (850:33): [True: 4.45k, False: 945]
  ------------------
  851|  4.45k|                            {
  852|  4.45k|                                ConsumeCurrentCharacter();
  853|  4.45k|                                continue;
  854|  4.45k|                            }
  855|       |
  856|    945|                            break;
  857|  5.40k|                        }
  858|       |
  859|    955|                        const TokenKind pre_processor_token_kind =
  860|    955|                                lookup_pre_processor(TokenText(begin_of_token));
  861|       |
  862|    955|                        if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (862:29): [True: 60, False: 895]
  ------------------
  863|     60|                        {
  864|     60|                            m_InsideMultiLineComment = false;
  865|       |
  866|       |                            // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  867|     60|                            m_Iterator -= TokenText(begin_of_token).length().unsafe();
  868|       |
  869|     60|                            Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  870|     60|                                        beginning_line_of_multiline_comment,
  871|     60|                                        beginning_column_of_multiline_comment};
  872|       |
  873|     60|                            return token;
  874|     60|                        }
  875|    955|                    }
  876|  32.8k|                    else if (current_character == '\n')
  ------------------
  |  Branch (876:30): [True: 1.23k, False: 31.6k]
  ------------------
  877|  1.23k|                    {
  878|  1.23k|                        ConsumeCurrentCharacter();
  879|  1.23k|                        AdvanceToNextLine();
  880|  1.23k|                    }
  881|  31.6k|                    else
  882|  31.6k|                    {
  883|       |                        // Otherwise simply consume the character
  884|  31.6k|                        ConsumeCurrentCharacter();
  885|  31.6k|                        m_Column += 1u;
  886|  31.6k|                    }
  887|  33.7k|                }
  888|    160|            }
  889|       |
  890|       |            /* Skip characters */
  891|       |
  892|  1.24M|            else if (is_skip_character(current_character))
  ------------------
  |  Branch (892:22): [True: 32.8k, False: 1.21M]
  ------------------
  893|  32.8k|            {
  894|  32.8k|                SkipCurrentCharacter();
  895|  32.8k|            }
  896|       |
  897|       |            /* New Lines */
  898|       |
  899|  1.21M|            else if (current_character == '\n')
  ------------------
  |  Branch (899:22): [True: 23.9k, False: 1.18M]
  ------------------
  900|  23.9k|            {
  901|  23.9k|                Token new_line_token = ConstructToken(TokenKind::NewLine);
  902|       |
  903|  23.9k|                ConsumeCurrentCharacter();
  904|  23.9k|                AdvanceToNextLine();
  905|       |
  906|  23.9k|                return new_line_token;
  907|  23.9k|            }
  908|       |
  909|       |            /* Comment */
  910|       |
  911|  1.18M|            else if (current_character == ';')
  ------------------
  |  Branch (911:22): [True: 2.33k, False: 1.18M]
  ------------------
  912|  2.33k|            {
  913|  2.33k|                iterator begin_of_token = m_Iterator;
  914|  2.33k|                ConsumeCurrentCharacter();
  915|       |
  916|  25.0k|                while (!IsFinished())
  ------------------
  |  Branch (916:24): [True: 25.0k, False: 56]
  ------------------
  917|  25.0k|                {
  918|  25.0k|                    current_character = *m_Iterator;
  919|       |
  920|  25.0k|                    if (current_character != '\n')
  ------------------
  |  Branch (920:25): [True: 22.7k, False: 2.27k]
  ------------------
  921|  22.7k|                    {
  922|  22.7k|                        ConsumeCurrentCharacter();
  923|  22.7k|                        continue;
  924|  22.7k|                    }
  925|       |
  926|  2.27k|                    break;
  927|  25.0k|                }
  928|       |
  929|  2.33k|                return ConstructToken(TokenKind::Comment, begin_of_token);
  930|  2.33k|            }
  931|       |
  932|       |            /* Macros */
  933|       |
  934|  1.18M|            else if (current_character == '@')
  ------------------
  |  Branch (934:22): [True: 19.7k, False: 1.16M]
  ------------------
  935|  19.7k|            {
  936|  19.7k|                iterator begin_of_token = m_Iterator;
  937|  19.7k|                ConsumeCurrentCharacter();
  938|       |
  939|   162k|                while (!IsFinished())
  ------------------
  |  Branch (939:24): [True: 161k, False: 93]
  ------------------
  940|   161k|                {
  941|   161k|                    current_character = *m_Iterator;
  942|       |
  943|   161k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (943:25): [True: 142k, False: 19.7k]
  ------------------
  944|   142k|                    {
  945|   142k|                        ConsumeCurrentCharacter();
  946|   142k|                        continue;
  947|   142k|                    }
  948|       |
  949|  19.7k|                    break;
  950|   161k|                }
  951|       |
  952|       |                // Emit token
  953|  19.7k|                return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  954|  19.7k|            }
  955|       |
  956|       |            /* Variable identifier */
  957|       |
  958|  1.16M|            else if (current_character == '$')
  ------------------
  |  Branch (958:22): [True: 31.1k, False: 1.13M]
  ------------------
  959|  31.1k|            {
  960|  31.1k|                iterator     begin_of_token = m_Iterator;
  961|  31.1k|                phi::boolean parsed_something{false};
  962|  31.1k|                ConsumeCurrentCharacter();
  963|       |
  964|   361k|                while (!IsFinished())
  ------------------
  |  Branch (964:24): [True: 361k, False: 175]
  ------------------
  965|   361k|                {
  966|   361k|                    current_character = *m_Iterator;
  967|       |
  968|   361k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (968:25): [True: 330k, False: 30.9k]
  ------------------
  969|   330k|                    {
  970|   330k|                        ConsumeCurrentCharacter();
  971|   330k|                        parsed_something = true;
  972|   330k|                        continue;
  973|   330k|                    }
  974|       |
  975|  30.9k|                    break;
  976|   361k|                }
  977|       |
  978|       |                // Ensure that '$' is not a valid variable identifier
  979|  31.1k|                if (!parsed_something)
  ------------------
  |  Branch (979:21): [True: 18.8k, False: 12.2k]
  ------------------
  980|  18.8k|                {
  981|  18.8k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
  982|  18.8k|                }
  983|       |
  984|       |                // Emit Token
  985|  12.2k|                return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  986|  31.1k|            }
  987|       |
  988|       |            /* PreProcessor directive */
  989|       |
  990|  1.13M|            else if (current_character == '#')
  ------------------
  |  Branch (990:22): [True: 32.4k, False: 1.10M]
  ------------------
  991|  32.4k|            {
  992|  32.4k|                iterator begin_of_token = m_Iterator;
  993|  32.4k|                ConsumeCurrentCharacter();
  994|       |
  995|   150k|                while (!IsFinished())
  ------------------
  |  Branch (995:24): [True: 150k, False: 86]
  ------------------
  996|   150k|                {
  997|   150k|                    current_character = *m_Iterator;
  998|       |
  999|   150k|                    if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (999:25): [True: 118k, False: 32.3k]
  ------------------
 1000|   118k|                    {
 1001|   118k|                        ConsumeCurrentCharacter();
 1002|   118k|                        continue;
 1003|   118k|                    }
 1004|       |
 1005|  32.3k|                    break;
 1006|   150k|                }
 1007|       |
 1008|       |                // Check for start of multiline comment
 1009|  32.4k|                const TokenKind pre_processor_token_kind =
 1010|  32.4k|                        lookup_pre_processor(TokenText(begin_of_token));
 1011|       |
 1012|  32.4k|                if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (1012:21): [True: 160, False: 32.3k]
  ------------------
 1013|    160|                {
 1014|    160|                    m_InsideMultiLineComment = true;
 1015|    160|                }
 1016|       |
 1017|  32.4k|                return ConstructToken(pre_processor_token_kind, begin_of_token);
 1018|  32.4k|            }
 1019|       |
 1020|       |            /* SingleQuoteStringLiteral */
 1021|       |
 1022|  1.10M|            else if (current_character == '\'')
  ------------------
  |  Branch (1022:22): [True: 9.06k, False: 1.09M]
  ------------------
 1023|  9.06k|            {
 1024|  9.06k|                iterator     begin_of_token = m_Iterator;
 1025|  9.06k|                phi::boolean did_terminate  = false;
 1026|  9.06k|                ConsumeCurrentCharacter();
 1027|       |
 1028|  24.4k|                while (!IsFinished())
  ------------------
  |  Branch (1028:24): [True: 24.2k, False: 133]
  ------------------
 1029|  24.2k|                {
 1030|  24.2k|                    current_character = *m_Iterator;
 1031|  24.2k|                    ConsumeCurrentCharacter();
 1032|       |
 1033|  24.2k|                    if (current_character == '\'')
  ------------------
  |  Branch (1033:25): [True: 8.93k, False: 15.3k]
  ------------------
 1034|  8.93k|                    {
 1035|  8.93k|                        did_terminate = true;
 1036|  8.93k|                        break;
 1037|  8.93k|                    }
 1038|  24.2k|                }
 1039|       |
 1040|  9.06k|                if (did_terminate)
  ------------------
  |  Branch (1040:21): [True: 8.93k, False: 133]
  ------------------
 1041|  8.93k|                {
 1042|  8.93k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1043|  8.93k|                }
 1044|       |
 1045|       |                // TODO: Warn unterminated string literal
 1046|  9.06k|            }
 1047|       |
 1048|       |            /* DoubleQuoteStringLiteral */
 1049|       |
 1050|  1.09M|            else if (current_character == '\"')
  ------------------
  |  Branch (1050:22): [True: 12.0k, False: 1.08M]
  ------------------
 1051|  12.0k|            {
 1052|  12.0k|                iterator     begin_of_token = m_Iterator;
 1053|  12.0k|                phi::boolean did_terminate  = false;
 1054|  12.0k|                ConsumeCurrentCharacter();
 1055|       |
 1056|  34.1k|                while (!IsFinished())
  ------------------
  |  Branch (1056:24): [True: 34.1k, False: 86]
  ------------------
 1057|  34.1k|                {
 1058|  34.1k|                    current_character = *m_Iterator;
 1059|  34.1k|                    ConsumeCurrentCharacter();
 1060|       |
 1061|  34.1k|                    if (current_character == '\"')
  ------------------
  |  Branch (1061:25): [True: 11.9k, False: 22.1k]
  ------------------
 1062|  11.9k|                    {
 1063|  11.9k|                        did_terminate = true;
 1064|  11.9k|                        break;
 1065|  11.9k|                    }
 1066|  34.1k|                }
 1067|       |
 1068|  12.0k|                if (did_terminate)
  ------------------
  |  Branch (1068:21): [True: 11.9k, False: 86]
  ------------------
 1069|  11.9k|                {
 1070|  11.9k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1071|  11.9k|                }
 1072|  12.0k|            }
 1073|       |
 1074|       |            /* Number Literals - IntegerLiteral/FloatLiteral */
 1075|       |
 1076|  1.08M|            else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1076:22): [True: 46.1k, False: 1.03M]
  |  Branch (1076:22): [True: 58.6k, False: 1.02M]
  |  Branch (1076:58): [True: 12.4k, False: 1.02M]
  ------------------
 1077|  58.6k|            {
 1078|  58.6k|                const phi::boolean start_with_zero{current_character == '0'};
 1079|  58.6k|                phi::boolean       parsing_hex{false};
 1080|  58.6k|                phi::boolean       parsing_float{current_character == '.'};
 1081|       |
 1082|  58.6k|                iterator begin_of_token = m_Iterator;
 1083|  58.6k|                ConsumeCurrentCharacter();
 1084|       |
 1085|   215k|                while (!IsFinished())
  ------------------
  |  Branch (1085:24): [True: 215k, False: 222]
  ------------------
 1086|   215k|                {
 1087|   215k|                    current_character = *m_Iterator;
 1088|       |
 1089|       |                    // Is the second character
 1090|   215k|                    if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1090:25): [True: 58.5k, False: 156k]
  |  Branch (1090:62): [True: 9.03k, False: 49.5k]
  ------------------
 1091|  9.03k|                    {
 1092|       |                        // Hex character
 1093|  9.03k|                        if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1093:29): [True: 1.86k, False: 7.17k]
  |  Branch (1093:57): [True: 186, False: 6.99k]
  ------------------
 1094|  2.04k|                        {
 1095|  2.04k|                            parsing_hex = true;
 1096|  2.04k|                            ConsumeCurrentCharacter();
 1097|  2.04k|                            continue;
 1098|  2.04k|                        }
 1099|  9.03k|                    }
 1100|       |
 1101|       |                    // Actually parsing
 1102|   213k|                    if (parsing_hex)
  ------------------
  |  Branch (1102:25): [True: 10.4k, False: 202k]
  ------------------
 1103|  10.4k|                    {
 1104|  10.4k|                        if (parsing_float)
  ------------------
  |  Branch (1104:29): [True: 0, False: 10.4k]
  ------------------
 1105|      0|                        {
 1106|       |                            // TODO: Error hexliteral not allowed for floats
 1107|      0|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1108|      0|                        }
 1109|       |
 1110|  10.4k|                        if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1110:29): [True: 8.40k, False: 2.03k]
  ------------------
 1111|  8.40k|                        {
 1112|  8.40k|                            ConsumeCurrentCharacter();
 1113|  8.40k|                            continue;
 1114|  8.40k|                        }
 1115|  10.4k|                    }
 1116|   202k|                    else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1116:30): [True: 145k, False: 57.6k]
  ------------------
 1117|   145k|                    {
 1118|   145k|                        ConsumeCurrentCharacter();
 1119|   145k|                        continue;
 1120|   145k|                    }
 1121|       |                    // Literal dot
 1122|  57.6k|                    else if (current_character == '.')
  ------------------
  |  Branch (1122:30): [True: 10.0k, False: 47.5k]
  ------------------
 1123|  10.0k|                    {
 1124|  10.0k|                        if (parsing_float)
  ------------------
  |  Branch (1124:29): [True: 8.87k, False: 1.21k]
  ------------------
 1125|  8.87k|                        {
 1126|       |                            // TODO: Error more than one dot in float literal
 1127|  8.87k|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1128|  8.87k|                        }
 1129|       |
 1130|  1.21k|                        parsing_float = true;
 1131|  1.21k|                        ConsumeCurrentCharacter();
 1132|  1.21k|                        continue;
 1133|  10.0k|                    }
 1134|       |
 1135|  49.5k|                    break;
 1136|   213k|                }
 1137|       |
 1138|  49.7k|                if (parsing_float)
  ------------------
  |  Branch (1138:21): [True: 4.81k, False: 44.9k]
  ------------------
 1139|  4.81k|                {
 1140|       |                    // Were not allowed to end with a dot
 1141|       |                    // TODO: This is very hacky and looks nasty
 1142|  4.81k|                    if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1142:25): [True: 3.40k, False: 1.41k]
  ------------------
 1143|  3.40k|                    {
 1144|       |                        // TODO: Prober error
 1145|  3.40k|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1146|  3.40k|                    }
 1147|       |
 1148|  1.41k|                    return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1149|  4.81k|                }
 1150|       |
 1151|  44.9k|                return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1152|  49.7k|            }
 1153|       |
 1154|       |            /* Operators */
 1155|       |
 1156|  1.02M|            else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1156:22): [True: 84.0k, False: 937k]
  ------------------
 1157|  84.0k|            {
 1158|  84.0k|                iterator begin_of_token = m_Iterator;
 1159|  84.0k|                ConsumeCurrentCharacter();
 1160|       |
 1161|  84.0k|                if (!IsFinished())
  ------------------
  |  Branch (1161:21): [True: 83.8k, False: 202]
  ------------------
 1162|  83.8k|                {
 1163|  83.8k|                    if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1163:25): [True: 9.16k, False: 74.6k]
  |  Branch (1163:48): [True: 23.3k, False: 51.3k]
  |  Branch (1163:74): [True: 815, False: 22.5k]
  ------------------
 1164|  9.98k|                    {
 1165|       |                        // We have an actual two part operator
 1166|  9.98k|                        ConsumeCurrentCharacter();
 1167|  9.98k|                    }
 1168|  83.8k|                }
 1169|       |
 1170|  84.0k|                return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1171|  84.0k|            }
 1172|       |
 1173|   937k|            else if (is_single_operator(current_character))
  ------------------
  |  Branch (1173:22): [True: 15.3k, False: 922k]
  ------------------
 1174|  15.3k|            {
 1175|  15.3k|                Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1176|       |
 1177|  15.3k|                ConsumeCurrentCharacter();
 1178|       |
 1179|  15.3k|                return token;
 1180|  15.3k|            }
 1181|       |
 1182|       |            /* Punctioation */
 1183|       |
 1184|   922k|            else if (current_character == ',')
  ------------------
  |  Branch (1184:22): [True: 4.39k, False: 917k]
  ------------------
 1185|  4.39k|            {
 1186|  4.39k|                Token token = ConstructToken(TokenKind::Comma);
 1187|       |
 1188|  4.39k|                ConsumeCurrentCharacter();
 1189|       |
 1190|  4.39k|                return token;
 1191|  4.39k|            }
 1192|       |
 1193|   917k|            else if (current_character == '(')
  ------------------
  |  Branch (1193:22): [True: 135k, False: 782k]
  ------------------
 1194|   135k|            {
 1195|   135k|                Token token = ConstructToken(TokenKind::LParen);
 1196|       |
 1197|   135k|                ConsumeCurrentCharacter();
 1198|       |
 1199|   135k|                return token;
 1200|   135k|            }
 1201|       |
 1202|   782k|            else if (current_character == ')')
  ------------------
  |  Branch (1202:22): [True: 36.3k, False: 745k]
  ------------------
 1203|  36.3k|            {
 1204|  36.3k|                Token token = ConstructToken(TokenKind::RParen);
 1205|       |
 1206|  36.3k|                ConsumeCurrentCharacter();
 1207|       |
 1208|  36.3k|                return token;
 1209|  36.3k|            }
 1210|       |
 1211|   745k|            else if (current_character == '.')
  ------------------
  |  Branch (1211:22): [True: 0, False: 745k]
  ------------------
 1212|      0|            {
 1213|      0|                Token token = ConstructToken(TokenKind::Dot);
 1214|       |
 1215|      0|                ConsumeCurrentCharacter();
 1216|       |
 1217|      0|                return token;
 1218|      0|            }
 1219|       |
 1220|   745k|            else if (current_character == '[')
  ------------------
  |  Branch (1220:22): [True: 5.10k, False: 740k]
  ------------------
 1221|  5.10k|            {
 1222|  5.10k|                Token token = ConstructToken(TokenKind::LSquare);
 1223|       |
 1224|  5.10k|                ConsumeCurrentCharacter();
 1225|       |
 1226|  5.10k|                return token;
 1227|  5.10k|            }
 1228|       |
 1229|   740k|            else if (current_character == ']')
  ------------------
  |  Branch (1229:22): [True: 7.24k, False: 733k]
  ------------------
 1230|  7.24k|            {
 1231|  7.24k|                Token token = ConstructToken(TokenKind::RSquare);
 1232|       |
 1233|  7.24k|                ConsumeCurrentCharacter();
 1234|       |
 1235|  7.24k|                return token;
 1236|  7.24k|            }
 1237|       |
 1238|       |            /* Identifier */
 1239|       |
 1240|   733k|            else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1240:22): [True: 91.5k, False: 642k]
  ------------------
 1241|  91.5k|            {
 1242|  91.5k|                iterator begin_of_token = m_Iterator;
 1243|  91.5k|                ConsumeCurrentCharacter();
 1244|       |
 1245|   716k|                while (!IsFinished())
  ------------------
  |  Branch (1245:24): [True: 715k, False: 875]
  ------------------
 1246|   715k|                {
 1247|   715k|                    current_character = *m_Iterator;
 1248|       |
 1249|   715k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1249:25): [True: 625k, False: 90.6k]
  ------------------
 1250|   625k|                    {
 1251|   625k|                        ConsumeCurrentCharacter();
 1252|   625k|                        continue;
 1253|   625k|                    }
 1254|       |
 1255|  90.6k|                    break;
 1256|   715k|                }
 1257|       |
 1258|  91.5k|                return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1259|  91.5k|            }
 1260|       |
 1261|       |            /* Unknown/Unexpected character */
 1262|       |
 1263|   642k|            else
 1264|   642k|            {
 1265|       |                // TODO: Warn unexpected character encountered
 1266|   642k|                SkipCurrentCharacter();
 1267|   642k|            }
 1268|  1.53M|        }
 1269|       |
 1270|  2.10k|        return {};
 1271|   570k|    }
_ZN10OpenAutoIt5Lexer10ProcessAllEv:
 1274|  4.65k|    {
 1275|  4.65k|        TokenStream& stream = m_ParseResult.m_TokenStream;
 1276|       |
 1277|   575k|        while (!IsFinished())
  ------------------
  |  Branch (1277:16): [True: 570k, False: 4.65k]
  ------------------
 1278|   570k|        {
 1279|   570k|            phi::optional<Token> maybe_token = GetNextToken();
 1280|       |
 1281|   570k|            if (maybe_token.has_value())
  ------------------
  |  Branch (1281:17): [True: 568k, False: 2.10k]
  ------------------
 1282|   568k|            {
 1283|   568k|                stream.emplace_back(maybe_token.value());
 1284|   568k|            }
 1285|   570k|        }
 1286|       |
 1287|  4.65k|        stream.finalize();
 1288|  4.65k|    }
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1298|  3.03M|    {
 1299|  3.03M|        ++m_Iterator;
 1300|  3.03M|    }
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1303|  25.2k|    {
 1304|  25.2k|        ++m_LineNumber;
 1305|  25.2k|        m_Column = 1u;
 1306|  25.2k|    }
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1309|   961k|    {
 1310|   961k|        ConsumeCurrentCharacter();
 1311|   961k|        ++m_Column;
 1312|   961k|    }
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   34|  19.7k|    {
   35|  19.7k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  19.7k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  19.7k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 735, False: 19.0k]
  ------------------
   39|    735|        {
   40|    735|            return itr->second;
   41|    735|        }
   42|       |
   43|  19.0k|        return m_Default;
   44|  19.7k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  1.99M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   34|  33.4k|    {
   35|  33.4k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  33.4k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  33.4k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 2.33k, False: 31.0k]
  ------------------
   39|  2.33k|        {
   40|  2.33k|            return itr->second;
   41|  2.33k|        }
   42|       |
   43|  31.0k|        return m_Default;
   44|  33.4k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   323k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   34|  75.3k|    {
   35|  75.3k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  75.3k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  75.3k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 3.76k, False: 71.6k]
  ------------------
   39|  3.76k|        {
   40|  3.76k|            return itr->second;
   41|  3.76k|        }
   42|       |
   43|  71.6k|        return m_Default;
   44|  75.3k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  29.5M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   34|  91.5k|    {
   35|  91.5k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  91.5k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  91.5k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 16.1k, False: 75.3k]
  ------------------
   39|  16.1k|        {
   40|  16.1k|            return itr->second;
   41|  16.1k|        }
   42|       |
   43|  75.3k|        return m_Default;
   44|  91.5k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  3.64M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   34|  99.4k|    {
   35|  99.4k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  99.4k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  99.4k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 99.4k, False: 0]
  ------------------
   39|  99.4k|        {
   40|  99.4k|            return itr->second;
   41|  99.4k|        }
   42|       |
   43|      0|        return m_Default;
   44|  99.4k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  1.08M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  735|   156k|{
  736|   156k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (736:12): [True: 122k, False: 33.9k]
  |  Branch (736:40): [True: 626, False: 33.3k]
  ------------------
  737|   156k|}
_Z17is_skip_characterc:
  715|  1.24M|{
  716|  1.24M|    switch (c)
  717|  1.24M|    {
  718|  5.57k|        case ' ':
  ------------------
  |  Branch (718:9): [True: 5.57k, False: 1.23M]
  ------------------
  719|  14.0k|        case '\v':
  ------------------
  |  Branch (719:9): [True: 8.45k, False: 1.23M]
  ------------------
  720|  15.8k|        case '\t':
  ------------------
  |  Branch (720:9): [True: 1.79k, False: 1.24M]
  ------------------
  721|  28.7k|        case '\b':
  ------------------
  |  Branch (721:9): [True: 12.9k, False: 1.23M]
  ------------------
  722|  32.8k|        case '\f':
  ------------------
  |  Branch (722:9): [True: 4.09k, False: 1.23M]
  ------------------
  723|  32.8k|            return true;
  724|  1.21M|        default:
  ------------------
  |  Branch (724:9): [True: 1.21M, False: 32.8k]
  ------------------
  725|  1.21M|            return false;
  726|  1.24M|    }
  727|  1.24M|}
_Z24is_valid_identifier_charc:
  730|  1.97M|{
  731|  1.97M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (731:12): [True: 1.18M, False: 786k]
  |  Branch (731:40): [True: 2.82k, False: 783k]
  ------------------
  732|  1.97M|}
_Z20is_two_part_operatorc:
  740|  1.02M|{
  741|  1.02M|    switch (c)
  742|  1.02M|    {
  743|  22.8k|        case '=':
  ------------------
  |  Branch (743:9): [True: 22.8k, False: 998k]
  ------------------
  744|  30.7k|        case '+':
  ------------------
  |  Branch (744:9): [True: 7.95k, False: 1.01M]
  ------------------
  745|  35.5k|        case '-':
  ------------------
  |  Branch (745:9): [True: 4.73k, False: 1.01M]
  ------------------
  746|  42.0k|        case '*':
  ------------------
  |  Branch (746:9): [True: 6.51k, False: 1.01M]
  ------------------
  747|  44.0k|        case '/':
  ------------------
  |  Branch (747:9): [True: 2.01k, False: 1.01M]
  ------------------
  748|  51.9k|        case '&':
  ------------------
  |  Branch (748:9): [True: 7.93k, False: 1.01M]
  ------------------
  749|  76.4k|        case '<':
  ------------------
  |  Branch (749:9): [True: 24.5k, False: 997k]
  ------------------
  750|  84.0k|        case '>':
  ------------------
  |  Branch (750:9): [True: 7.58k, False: 1.01M]
  ------------------
  751|  84.0k|            return true;
  752|       |
  753|   937k|        default:
  ------------------
  |  Branch (753:9): [True: 937k, False: 84.0k]
  ------------------
  754|   937k|            return false;
  755|  1.02M|    }
  756|  1.02M|}
_Z18is_single_operatorc:
  759|   937k|{
  760|   937k|    switch (c)
  761|   937k|    {
  762|  9.96k|        case '^':
  ------------------
  |  Branch (762:9): [True: 9.96k, False: 927k]
  ------------------
  763|  13.1k|        case '?':
  ------------------
  |  Branch (763:9): [True: 3.22k, False: 934k]
  ------------------
  764|  15.3k|        case ':':
  ------------------
  |  Branch (764:9): [True: 2.20k, False: 935k]
  ------------------
  765|  15.3k|            return true;
  766|       |
  767|   922k|        default:
  ------------------
  |  Branch (767:9): [True: 922k, False: 15.3k]
  ------------------
  768|   922k|            return false;
  769|   937k|    }
  770|   937k|}

_ZN10OpenAutoIt12ParseWarning21EmbeddedNullCharacterEN3phi7integerImEES3_:
   12|   287k|    {
   13|   287k|        ParseWarning warn;
   14|       |
   15|   287k|        warn.m_Type = ParseWarningType::EmbeddedNullCharacter;
   16|       |
   17|   287k|        warn.m_LocationBegin.line_number = line;
   18|   287k|        warn.m_LocationBegin.column      = column;
   19|       |
   20|   287k|        warn.m_LocationEnd.line_number = line;
   21|   287k|        warn.m_LocationEnd.column      = column;
   22|       |
   23|   287k|        return warn;
   24|   287k|    }

_ZN10OpenAutoIt6ParserC2Ev:
  120|  4.65k|    Parser::Parser() noexcept = default;
_ZN10OpenAutoIt6Parser13ParseDocumentERNS_11ParseResultE:
  123|  4.65k|    {
  124|  4.65k|        m_ParseResult = &parse_result;
  125|  4.65k|        m_TokenStream = &parse_result.m_TokenStream;
  126|       |
  127|  4.65k|        m_ParseResult->m_Document = phi::make_not_null_scope<ASTDocument>();
  128|       |
  129|   276k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (129:16): [True: 271k, False: 4.65k]
  ------------------
  130|   271k|        {
  131|   271k|            const Token& token = CurrentToken();
  132|       |
  133|       |            // Parse global function definition
  134|   271k|            if (token.GetTokenKind() == TokenKind::KW_Func)
  ------------------
  |  Branch (134:17): [True: 4.60k, False: 266k]
  ------------------
  135|  4.60k|            {
  136|  4.60k|                auto function_definition = ParseFunctionDefinition();
  137|  4.60k|                if (!function_definition)
  ------------------
  |  Branch (137:21): [True: 4.12k, False: 483]
  ------------------
  138|  4.12k|                {
  139|  4.12k|                    std::cout << "ERR: Failed to parse function definition!\n";
  140|  4.12k|                    continue;
  141|  4.12k|                }
  142|       |
  143|    483|                AppendFunctionToDocument(function_definition.release_not_null());
  144|    483|            }
  145|   266k|            else if (token.GetTokenKind() == TokenKind::NewLine ||
  ------------------
  |  Branch (145:22): [True: 15.1k, False: 251k]
  ------------------
  146|   266k|                     token.GetTokenKind() == TokenKind::Comment)
  ------------------
  |  Branch (146:22): [True: 2.04k, False: 249k]
  ------------------
  147|  17.1k|            {
  148|       |                // Simply ignore and consume newlines and comments
  149|  17.1k|                ConsumeCurrent();
  150|  17.1k|            }
  151|   249k|            else if (token.GetTokenKind() == TokenKind::NotAToken)
  ------------------
  |  Branch (151:22): [True: 39.4k, False: 210k]
  ------------------
  152|  39.4k|            {
  153|  39.4k|                std::cout << "ERR: Unexpected NotAToken!\n";
  154|  39.4k|                ConsumeCurrent();
  155|  39.4k|                continue;
  156|  39.4k|            }
  157|   210k|            else
  158|   210k|            {
  159|   210k|                auto statement = ParseStatement();
  160|   210k|                if (!statement)
  ------------------
  |  Branch (160:21): [True: 168k, False: 41.7k]
  ------------------
  161|   168k|                {
  162|       |                    // TODO: Proper error reporting
  163|   168k|                    std::cout << "ERR: Failed to parse statement!\n";
  164|       |
  165|   168k|                    if (m_TokenStream->has_more())
  ------------------
  |  Branch (165:25): [True: 166k, False: 2.15k]
  ------------------
  166|   166k|                    {
  167|       |                        // Swallow the bad token
  168|   166k|                        ConsumeCurrent();
  169|   166k|                    }
  170|   168k|                    continue;
  171|   168k|                }
  172|       |
  173|  41.7k|                AppendStatementToDocument(statement.release_not_null());
  174|  41.7k|            }
  175|   271k|        }
  176|  4.65k|    }
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  179|  1.41M|    {
  180|  1.41M|        PHI_ASSERT(m_TokenStream->has_more());
  181|       |
  182|  1.41M|        return m_TokenStream->look_ahead();
  183|  1.41M|    }
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  186|   453k|    {
  187|   453k|        m_TokenStream->consume();
  188|   453k|    }
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  191|   218k|    {
  192|   218k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (192:16): [True: 218k, False: 13]
  ------------------
  193|   218k|        {
  194|   218k|            switch (CurrentToken().GetTokenKind())
  195|   218k|            {
  196|    251|                case TokenKind::NewLine:
  ------------------
  |  Branch (196:17): [True: 251, False: 218k]
  ------------------
  197|    251|                case TokenKind::Comment:
  ------------------
  |  Branch (197:17): [True: 0, False: 218k]
  ------------------
  198|    251|                    ConsumeCurrent();
  199|    251|                    break;
  200|       |
  201|   218k|                default:
  ------------------
  |  Branch (201:17): [True: 218k, False: 251]
  ------------------
  202|   218k|                    return;
  203|   218k|            }
  204|   218k|        }
  205|   218k|    }
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  208|  18.4k|    {
  209|       |        // Do we even have more tokens?
  210|  18.4k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (210:13): [True: 56, False: 18.3k]
  ------------------
  211|     56|        {
  212|     56|            return false;
  213|     56|        }
  214|       |
  215|       |        // Is is the correct token kind
  216|  18.3k|        if (CurrentToken().GetTokenKind() != kind)
  ------------------
  |  Branch (216:13): [True: 2.98k, False: 15.3k]
  ------------------
  217|  2.98k|        {
  218|  2.98k|            return false;
  219|  2.98k|        }
  220|       |
  221|  15.3k|        ConsumeCurrent();
  222|  15.3k|        return true;
  223|  18.3k|    }
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  226|  4.60k|    {
  227|  4.60k|        if (!MustParse(TokenKind::KW_Func))
  ------------------
  |  Branch (227:13): [True: 0, False: 4.60k]
  ------------------
  228|      0|        {
  229|       |            // TODO: Proper Error
  230|      0|            return {};
  231|      0|        }
  232|       |
  233|       |        // Next we MUST parse the function name
  234|  4.60k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (234:13): [True: 6, False: 4.60k]
  ------------------
  235|      6|        {
  236|      6|            return {};
  237|      6|        }
  238|  4.60k|        const Token& function_name_token = CurrentToken();
  239|  4.60k|        if (function_name_token.GetTokenKind() != TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (239:13): [True: 560, False: 4.04k]
  ------------------
  240|    560|        {
  241|       |            // TODO: Proper error
  242|    560|            return {};
  243|    560|        }
  244|  4.04k|        ConsumeCurrent();
  245|       |
  246|  4.04k|        auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  247|  4.04k|        function_definition->m_FunctionName = function_name_token.GetText();
  248|       |
  249|       |        // Next we MUST parse an opening parenthesis (LParen)
  250|  4.04k|        if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (250:13): [True: 499, False: 3.54k]
  ------------------
  251|    499|        {
  252|       |            // TODO: Proper error
  253|    499|            return {};
  254|    499|        }
  255|       |
  256|       |        // Next me parse the function parameter declarations until right parenthesis (RParen)
  257|  6.10k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (257:16): [True: 6.09k, False: 13]
  |  Branch (257:16): [True: 3.62k, False: 2.48k]
  |  Branch (257:45): [True: 3.62k, False: 2.47k]
  ------------------
  258|  3.62k|        {
  259|  3.62k|            phi::optional<FunctionParameter> function_paremeter_optional =
  260|  3.62k|                    ParseFunctionParameterDefinition();
  261|  3.62k|            if (!function_paremeter_optional)
  ------------------
  |  Branch (261:17): [True: 1.06k, False: 2.56k]
  ------------------
  262|  1.06k|            {
  263|       |                // TODO: Proper error reporting
  264|  1.06k|                return {};
  265|  1.06k|            }
  266|  2.56k|            FunctionParameter& function_paremeter = function_paremeter_optional.value();
  267|       |
  268|  2.56k|            function_definition->m_Parameters.emplace_back(phi::move(function_paremeter));
  269|       |
  270|       |            // Parse comma
  271|  2.56k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (271:17): [True: 2.56k, False: 0]
  |  Branch (271:17): [True: 2.04k, False: 522]
  |  Branch (271:46): [True: 2.04k, False: 522]
  ------------------
  272|  2.04k|            {
  273|  2.04k|                ConsumeCurrent();
  274|  2.04k|            }
  275|  2.56k|        }
  276|       |
  277|       |        // Next we MUST parse a right parenthesis (RParen)
  278|  2.48k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (278:13): [True: 13, False: 2.47k]
  ------------------
  279|     13|        {
  280|       |            // TODO: Proper error
  281|     13|            return {};
  282|     13|        }
  283|       |
  284|       |        // Next we MUST parse a new line
  285|  2.47k|        if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (285:13): [True: 1.25k, False: 1.22k]
  ------------------
  286|  1.25k|        {
  287|       |            // TODO: Proper error
  288|  1.25k|            return {};
  289|  1.25k|        }
  290|       |
  291|       |        // Next parse Statements until EndFunc
  292|  3.41k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (292:16): [True: 3.40k, False: 7]
  |  Branch (292:16): [True: 2.92k, False: 490]
  |  Branch (292:45): [True: 2.92k, False: 483]
  ------------------
  293|  2.92k|        {
  294|  2.92k|            auto statement = ParseStatement();
  295|  2.92k|            if (!statement)
  ------------------
  |  Branch (295:17): [True: 730, False: 2.19k]
  ------------------
  296|    730|            {
  297|    730|                std::cout << "ERR: Failed while parsing statement for function \""
  298|    730|                          << std::string(function_definition->m_FunctionName) << "\"\n";
  299|       |                // TODO: Report proper error
  300|    730|                return {};
  301|    730|            }
  302|       |
  303|  2.19k|            function_definition->m_FunctionBody.emplace_back(
  304|  2.19k|                    phi::move(statement.release_not_null()));
  305|       |
  306|  2.19k|            ConsumeNewLineAndComments();
  307|  2.19k|        }
  308|       |
  309|       |        // Next we MUST parse EndFunc
  310|    490|        if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (310:13): [True: 7, False: 483]
  ------------------
  311|      7|        {
  312|       |            // TODO: Proper error
  313|      7|            return {};
  314|      7|        }
  315|       |
  316|    483|        return phi::move(function_definition);
  317|    490|    }
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  320|  3.62k|    {
  321|       |        // TODO: This entire function requres more error checks
  322|  3.62k|        FunctionParameter parameter;
  323|       |
  324|  4.52k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (324:16): [True: 4.52k, False: 3]
  ------------------
  325|  4.52k|        {
  326|  4.52k|            const Token& token = CurrentToken();
  327|       |
  328|  4.52k|            switch (token.GetTokenKind())
  329|  4.52k|            {
  330|    185|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (330:17): [True: 185, False: 4.33k]
  ------------------
  331|    185|                    parameter.name = token.GetText().substring_view(1u);
  332|    185|                    ConsumeCurrent();
  333|    185|                    break;
  334|      0|                }
  335|    177|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (335:17): [True: 177, False: 4.34k]
  ------------------
  336|    177|                    parameter.as_const = true;
  337|    177|                    ConsumeCurrent();
  338|    177|                    break;
  339|      0|                }
  340|    162|                case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (340:17): [True: 162, False: 4.36k]
  ------------------
  341|    162|                    parameter.by_ref = true;
  342|    162|                    ConsumeCurrent();
  343|    162|                    break;
  344|      0|                }
  345|    676|                case TokenKind::OP_Equals: {
  ------------------
  |  Branch (345:17): [True: 676, False: 3.84k]
  ------------------
  346|       |                    // Consume the '='
  347|    676|                    ConsumeCurrent();
  348|       |
  349|       |                    // Default value is an expression
  350|    676|                    auto default_expression = ParseExpression();
  351|    676|                    if (!default_expression)
  ------------------
  |  Branch (351:25): [True: 297, False: 379]
  ------------------
  352|    297|                    {
  353|       |                        // TODO: Report error
  354|    297|                        return {};
  355|    297|                    }
  356|       |
  357|    379|                    parameter.default_value = phi::move(default_expression);
  358|    379|                    break;
  359|    676|                }
  360|  2.04k|                case TokenKind::Comma:
  ------------------
  |  Branch (360:17): [True: 2.04k, False: 2.48k]
  ------------------
  361|  2.56k|                case TokenKind::RParen: {
  ------------------
  |  Branch (361:17): [True: 522, False: 4.00k]
  ------------------
  362|  2.56k|                    return phi::move(parameter);
  363|  2.04k|                }
  364|    760|                default: {
  ------------------
  |  Branch (364:17): [True: 760, False: 3.76k]
  ------------------
  365|       |                    // TODO: Report error
  366|    760|                    return {};
  367|  2.04k|                }
  368|  4.52k|            }
  369|  4.52k|        }
  370|       |
  371|       |        // TODO: Report error unexpected EOF
  372|      3|        return {};
  373|  3.62k|    }
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  376|   216k|    {
  377|   216k|        ConsumeNewLineAndComments();
  378|       |
  379|   216k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (379:13): [True: 6, False: 216k]
  ------------------
  380|      6|        {
  381|       |            // TODO: Report proper error
  382|      6|            return {};
  383|      6|        }
  384|       |
  385|       |        // Loop until we parse something or there is nothing left to parse
  386|   216k|        const Token& token = CurrentToken();
  387|   216k|        switch (token.GetTokenKind())
  388|   216k|        {
  389|       |            // Variable assignment
  390|    248|            case TokenKind::KW_Const:
  ------------------
  |  Branch (390:13): [True: 248, False: 216k]
  ------------------
  391|    798|            case TokenKind::KW_Local:
  ------------------
  |  Branch (391:13): [True: 550, False: 215k]
  ------------------
  392|  1.25k|            case TokenKind::KW_Global:
  ------------------
  |  Branch (392:13): [True: 458, False: 215k]
  ------------------
  393|  1.70k|            case TokenKind::KW_Static:
  ------------------
  |  Branch (393:13): [True: 445, False: 215k]
  ------------------
  394|  9.86k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (394:13): [True: 8.16k, False: 208k]
  ------------------
  395|  9.86k|                auto variable_declaration = ParseVariableAssignment();
  396|  9.86k|                if (!variable_declaration)
  ------------------
  |  Branch (396:21): [True: 2.21k, False: 7.65k]
  ------------------
  397|  2.21k|                {
  398|  2.21k|                    std::cout << "ERR: Failed to parse variable assignment!\n";
  399|  2.21k|                    break;
  400|  2.21k|                }
  401|       |
  402|  7.65k|                return phi::move(variable_declaration);
  403|  9.86k|            }
  404|       |
  405|       |            // If Statement
  406|    963|            case TokenKind::KW_If: {
  ------------------
  |  Branch (406:13): [True: 963, False: 215k]
  ------------------
  407|    963|                auto if_statement = ParseIfStatement();
  408|    963|                if (!if_statement)
  ------------------
  |  Branch (408:21): [True: 963, False: 0]
  ------------------
  409|    963|                {
  410|    963|                    std::cout << "ERR: Failed to parse if statement!\n";
  411|    963|                    break;
  412|    963|                }
  413|       |
  414|      0|                return phi::move(if_statement);
  415|    963|            }
  416|       |
  417|       |            // While statement
  418|  1.42k|            case TokenKind::KW_While: {
  ------------------
  |  Branch (418:13): [True: 1.42k, False: 214k]
  ------------------
  419|  1.42k|                auto while_statement = ParseWhileStatement();
  420|  1.42k|                if (!while_statement)
  ------------------
  |  Branch (420:21): [True: 957, False: 471]
  ------------------
  421|    957|                {
  422|    957|                    std::cout << "ERR: Failed to parse while statement!\n";
  423|    957|                    break;
  424|    957|                }
  425|       |
  426|    471|                return phi::move(while_statement);
  427|  1.42k|            }
  428|       |
  429|   204k|            default: {
  ------------------
  |  Branch (429:13): [True: 204k, False: 12.2k]
  ------------------
  430|       |                // Try to parse ExpressionStatement
  431|   204k|                auto expression_statement = ParseExpressionStatement();
  432|   204k|                if (!expression_statement)
  ------------------
  |  Branch (432:21): [True: 165k, False: 38.5k]
  ------------------
  433|   165k|                {
  434|   165k|                    std::cout << "ERR: Unexpected token: " << enum_name(token.GetTokenKind())
  435|   165k|                              << '\n';
  436|   165k|                    return {};
  437|   165k|                }
  438|       |
  439|  38.5k|                return phi::move(expression_statement);
  440|   204k|            }
  441|   216k|        }
  442|       |
  443|       |        // TODO: Proper error reporting
  444|  4.13k|        return {};
  445|   216k|    }
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  448|  1.42k|    {
  449|  1.42k|        const Token& token = CurrentToken();
  450|  1.42k|        if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (450:13): [True: 0, False: 1.42k]
  ------------------
  451|      0|        {
  452|       |            // TODO: Proper error
  453|      0|            return {};
  454|      0|        }
  455|  1.42k|        ConsumeCurrent();
  456|       |
  457|       |        // Next we MUST parse an Expression
  458|  1.42k|        auto while_condition_expression = ParseExpression();
  459|  1.42k|        if (!while_condition_expression)
  ------------------
  |  Branch (459:13): [True: 381, False: 1.04k]
  ------------------
  460|    381|        {
  461|       |            // TODO: Proper error
  462|    381|            return {};
  463|    381|        }
  464|       |
  465|  1.04k|        auto while_statement =
  466|  1.04k|                phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  467|       |
  468|       |        // Parse statements until KW_WEnd
  469|  5.70k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (469:16): [True: 5.62k, False: 78]
  |  Branch (469:16): [True: 5.15k, False: 549]
  |  Branch (469:45): [True: 5.15k, False: 471]
  ------------------
  470|  5.15k|        {
  471|       |            // Skip NewLines and comments
  472|  5.15k|            if (CurrentToken().GetTokenKind() == TokenKind::NewLine ||
  ------------------
  |  Branch (472:17): [True: 1.85k, False: 3.29k]
  ------------------
  473|  5.15k|                CurrentToken().GetTokenKind() == TokenKind::Comment)
  ------------------
  |  Branch (473:17): [True: 119, False: 3.17k]
  ------------------
  474|  1.97k|            {
  475|  1.97k|                ConsumeCurrent();
  476|  1.97k|                continue;
  477|  1.97k|            }
  478|       |
  479|       |            // Parse statements
  480|  3.17k|            auto statement = ParseStatement();
  481|  3.17k|            if (!statement)
  ------------------
  |  Branch (481:17): [True: 498, False: 2.68k]
  ------------------
  482|    498|            {
  483|       |                // TODO: Propeer error
  484|    498|                return {};
  485|    498|            }
  486|       |
  487|  2.68k|            while_statement->m_Statements.emplace_back(statement.release_not_null());
  488|  2.68k|        }
  489|       |
  490|    549|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (490:13): [True: 78, False: 471]
  ------------------
  491|     78|        {
  492|       |            // TODO: Proper error
  493|     78|            return {};
  494|     78|        }
  495|       |
  496|       |        // Next token MUST be KW_Wend
  497|    471|        const Token& wend_token = CurrentToken();
  498|    471|        if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (498:13): [True: 0, False: 471]
  ------------------
  499|      0|        {
  500|       |            // TODO: Proper error
  501|      0|            return {};
  502|      0|        }
  503|    471|        ConsumeCurrent();
  504|       |
  505|    471|        return phi::move(while_statement);
  506|    471|    }
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  509|  9.86k|    {
  510|  9.86k|        auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  511|       |
  512|  9.86k|        phi::boolean parsed_identifier = false;
  513|       |        // Parse all specifiers until we hit a VariableIdentifier
  514|  19.7k|        while (m_TokenStream->has_more() && !parsed_identifier)
  ------------------
  |  Branch (514:16): [True: 19.5k, False: 139]
  |  Branch (514:16): [True: 11.5k, False: 8.16k]
  |  Branch (514:45): [True: 11.5k, False: 8.02k]
  ------------------
  515|  11.5k|        {
  516|  11.5k|            const Token& current_token = CurrentToken();
  517|  11.5k|            ConsumeCurrent();
  518|       |
  519|  11.5k|            switch (current_token.GetTokenKind())
  520|  11.5k|            {
  521|    328|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (521:17): [True: 328, False: 11.2k]
  ------------------
  522|    328|                    if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (522:25): [True: 80, False: 248]
  ------------------
  523|     80|                    {
  524|       |                        // TODO: Error more than a const specifier
  525|     80|                        std::cout << "ERR: More than one const specifier given\n";
  526|     80|                        return {};
  527|     80|                    }
  528|    248|                    variable_declaration->m_IsConst = true;
  529|    248|                    break;
  530|    328|                }
  531|       |
  532|    630|                case TokenKind::KW_Static: {
  ------------------
  |  Branch (532:17): [True: 630, False: 10.9k]
  ------------------
  533|    630|                    if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (533:25): [True: 185, False: 445]
  ------------------
  534|    185|                    {
  535|       |                        // TODO: Error more than one static specifier
  536|    185|                        std::cout << "ERR: More than one static specifier given\n";
  537|    185|                        return {};
  538|    185|                    }
  539|    445|                    variable_declaration->m_IsStatic = true;
  540|    445|                    break;
  541|    630|                }
  542|       |
  543|    712|                case TokenKind::KW_Global: {
  ------------------
  |  Branch (543:17): [True: 712, False: 10.8k]
  ------------------
  544|    712|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (544:25): [True: 254, False: 458]
  ------------------
  545|    254|                    {
  546|       |                        // TODO: Error more than one scope specifier
  547|    254|                        std::cout << "ERR: More than one scope specifier given\n";
  548|    254|                        return {};
  549|    254|                    }
  550|    458|                    variable_declaration->m_Scope = VariableScope::Global;
  551|    458|                    break;
  552|    712|                }
  553|       |
  554|    707|                case TokenKind::KW_Local: {
  ------------------
  |  Branch (554:17): [True: 707, False: 10.8k]
  ------------------
  555|    707|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (555:25): [True: 157, False: 550]
  ------------------
  556|    157|                    {
  557|       |                        // TODO: Error more than one scope specifier
  558|    157|                        std::cout << "ERR: More than one scope specifier given\n";
  559|    157|                        return {};
  560|    157|                    }
  561|    550|                    variable_declaration->m_Scope = VariableScope::Local;
  562|    550|                    break;
  563|    707|                }
  564|       |
  565|  8.16k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (565:17): [True: 8.16k, False: 3.39k]
  ------------------
  566|       |                    // VariableIdentifiers begin with a '$'
  567|       |                    // Like: $MyVariable
  568|       |                    // So for the name we ignore the very first character
  569|  8.16k|                    PHI_ASSERT(current_token.GetText().length() > 1u);
  570|  8.16k|                    variable_declaration->m_VariableName =
  571|  8.16k|                            current_token.GetText().substring_view(1u);
  572|       |
  573|  8.16k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  574|  8.16k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  575|       |
  576|  8.16k|                    parsed_identifier = true;
  577|  8.16k|                    break;
  578|    707|                }
  579|       |
  580|  1.02k|                default: {
  ------------------
  |  Branch (580:17): [True: 1.02k, False: 10.5k]
  ------------------
  581|       |                    // TODO: Error unexpected token
  582|  1.02k|                    return {};
  583|    707|                }
  584|  11.5k|            }
  585|  11.5k|        }
  586|       |
  587|  8.16k|        if (!parsed_identifier)
  ------------------
  |  Branch (587:13): [True: 4, False: 8.16k]
  ------------------
  588|      4|        {
  589|       |            // TODO: Error variable declaration ends before the VariableIdentifier
  590|      4|            std::cout << "ERR: Missing variable identifier!\n";
  591|      4|            return {};
  592|      4|        }
  593|       |
  594|       |        // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  595|  8.16k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (595:13): [True: 135, False: 8.02k]
  ------------------
  596|    135|        {
  597|    135|            return variable_declaration;
  598|    135|        }
  599|       |
  600|       |        // Check for equals
  601|  8.02k|        const Token& next_token = CurrentToken();
  602|       |
  603|  8.02k|        if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (603:13): [True: 2.84k, False: 5.18k]
  ------------------
  604|  2.84k|        {
  605|  2.84k|            ConsumeCurrent();
  606|       |
  607|       |            // Now me MUST parse an expression
  608|  2.84k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
  609|  2.84k|            if (!expression)
  ------------------
  |  Branch (609:17): [True: 509, False: 2.33k]
  ------------------
  610|    509|            {
  611|       |                // TODO: Error failed to parse a valid expression
  612|    509|                std::cout
  613|    509|                        << "ERR: Failed to parse a valid expression inside variable assignment!\n";
  614|    509|                return {};
  615|    509|            }
  616|       |
  617|  2.33k|            variable_declaration->m_InitialValueExpression = phi::move(expression);
  618|  2.33k|        }
  619|       |
  620|  7.51k|        return variable_declaration;
  621|  8.02k|    }
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  624|   204k|    {
  625|   204k|        auto expression = ParseExpression();
  626|   204k|        if (!expression)
  ------------------
  |  Branch (626:13): [True: 165k, False: 38.5k]
  ------------------
  627|   165k|        {
  628|   165k|            return {};
  629|   165k|        }
  630|       |
  631|  38.5k|        auto expression_statement =
  632|  38.5k|                phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  633|       |
  634|       |        // TODO: Afterwards we surely should parse a NewLine or EOF
  635|       |
  636|       |        // TODO: Make sure the expression is valid for an expression statement!
  637|       |
  638|  38.5k|        return phi::move(expression_statement);
  639|   204k|    }
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  642|    963|    {
  643|    963|        if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (643:13): [True: 0, False: 963]
  ------------------
  644|      0|        {
  645|      0|            return {};
  646|      0|        }
  647|       |
  648|       |        // Next me MUST parse an expression
  649|    963|        auto if_condition = ParseExpression();
  650|    963|        if (!if_condition)
  ------------------
  |  Branch (650:13): [True: 530, False: 433]
  ------------------
  651|    530|        {
  652|    530|            std::cout << "ERR: failed to parse expression!\n";
  653|       |
  654|    530|            return {};
  655|    530|        }
  656|       |
  657|       |        // Next we MUST parse Then
  658|    433|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (658:13): [True: 433, False: 0]
  ------------------
  659|    433|        {
  660|    433|            std::cout << "ERR: Missing then!\n";
  661|       |
  662|    433|            return {};
  663|    433|        }
  664|       |
  665|      0|        ConsumeNewLineAndComments();
  666|       |
  667|      0|        IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  668|       |
  669|       |        // Next parse statements until we hit and EndIf, ElseIf or Else
  670|      0|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (670:16): [True: 0, False: 0]
  |  Branch (670:16): [True: 0, False: 0]
  |  Branch (670:45): [True: 0, False: 0]
  ------------------
  671|      0|               CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (671:16): [True: 0, False: 0]
  ------------------
  672|      0|               CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (672:16): [True: 0, False: 0]
  ------------------
  673|      0|        {
  674|      0|            auto statement = ParseStatement();
  675|      0|            if (!statement)
  ------------------
  |  Branch (675:17): [True: 0, False: 0]
  ------------------
  676|      0|            {
  677|      0|                std::cout << "ERR: Failed to parse statement inside of IF\n";
  678|      0|                return {};
  679|      0|            }
  680|       |
  681|      0|            if_case.body.emplace_back(statement.release_not_null());
  682|       |
  683|      0|            ConsumeNewLineAndComments();
  684|      0|        }
  685|       |
  686|      0|        auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
  687|       |
  688|       |        // TODO: Handle ElseIf, Else
  689|       |
  690|      0|        if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (690:13): [True: 0, False: 0]
  ------------------
  691|      0|        {
  692|      0|            std::cout << "ERR: Missing EndIf!\n";
  693|       |            // TODO: Proper Error
  694|      0|            return {};
  695|      0|        }
  696|       |
  697|      0|        return phi::move(if_statement);
  698|      0|    }
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
  701|  37.7k|    {
  702|  37.7k|        const Token& token = CurrentToken();
  703|  37.7k|        if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (703:13): [True: 0, False: 37.7k]
  ------------------
  704|      0|        {
  705|      0|            return {};
  706|      0|        }
  707|       |
  708|  37.7k|        if (token.GetText().length() > 18u)
  ------------------
  |  Branch (708:13): [True: 705, False: 37.0k]
  ------------------
  709|    705|        {
  710|       |            // TODO: Better check and proper error
  711|    705|            return {};
  712|    705|        }
  713|       |
  714|  37.0k|        phi::int64_t value{0};
  715|  37.0k|        phi::boolean parsing_hex{false};
  716|   164k|        for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (716:36): [True: 127k, False: 37.0k]
  ------------------
  717|   127k|        {
  718|   127k|            char character = token.GetText().at(index);
  719|       |
  720|       |            // Checking the second character
  721|   127k|            if (index == 1u)
  ------------------
  |  Branch (721:17): [True: 23.2k, False: 104k]
  ------------------
  722|  23.2k|            {
  723|  23.2k|                if (character == 'x' || character == 'X')
  ------------------
  |  Branch (723:21): [True: 1.63k, False: 21.6k]
  |  Branch (723:41): [True: 177, False: 21.4k]
  ------------------
  724|  1.81k|                {
  725|  1.81k|                    parsing_hex = true;
  726|  1.81k|                    continue;
  727|  1.81k|                }
  728|  23.2k|            }
  729|       |
  730|   125k|            if (parsing_hex)
  ------------------
  |  Branch (730:17): [True: 7.16k, False: 118k]
  ------------------
  731|  7.16k|            {
  732|  7.16k|                PHI_ASSERT(phi::is_hex_digit(character));
  733|       |
  734|  7.16k|                value <<= 4;
  735|  7.16k|                value |= phi::hex_digit_value(character).unsafe();
  736|  7.16k|            }
  737|   118k|            else
  738|   118k|            {
  739|   118k|                PHI_ASSERT(character >= '0' && character <= '9');
  740|       |
  741|   118k|                value *= 10;
  742|   118k|                value += (character - '0');
  743|   118k|            }
  744|   125k|        }
  745|       |
  746|  37.0k|        ConsumeCurrent();
  747|  37.0k|        return phi::make_scope<ASTIntegerLiteral>(value);
  748|  37.7k|    }
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
  751|  19.6k|    {
  752|  19.6k|        const Token& token = CurrentToken();
  753|  19.6k|        if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (753:13): [True: 0, False: 19.6k]
  ------------------
  754|      0|        {
  755|      0|            return {};
  756|      0|        }
  757|  19.6k|        ConsumeCurrent();
  758|       |
  759|  19.6k|        auto string_literal = phi::make_scope<ASTStringLiteral>();
  760|       |
  761|  19.6k|        const phi::usize length = token.GetText().length();
  762|       |        // Trim the trailing and leading "
  763|  19.6k|        string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
  764|       |
  765|  19.6k|        return phi::move(string_literal);
  766|  19.6k|    }
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
  769|   342k|    {
  770|   342k|        phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
  771|   342k|        if (!lhs_expression)
  ------------------
  |  Branch (771:13): [True: 283k, False: 58.8k]
  ------------------
  772|   283k|        {
  773|   283k|            return {};
  774|   283k|        }
  775|       |
  776|  58.8k|        return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
  777|   342k|    }
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
  780|   358k|    {
  781|   358k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (781:13): [True: 353, False: 358k]
  ------------------
  782|    353|        {
  783|       |            // TODO: Proper error
  784|    353|            return {};
  785|    353|        }
  786|       |
  787|   358k|        const Token& token = CurrentToken();
  788|   358k|        if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (788:13): [True: 3.30k, False: 354k]
  ------------------
  789|  3.30k|        {
  790|  3.30k|            const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
  791|  3.30k|            PHI_UNUSED_VARIABLE(op_precedence);
  792|  3.30k|            ConsumeCurrent();
  793|       |
  794|       |            // TODO: Implement me
  795|  3.30k|        }
  796|   354k|        else if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (796:18): [True: 114k, False: 239k]
  ------------------
  797|   114k|        {
  798|       |            // Consume the LParen
  799|   114k|            m_TokenStream->consume();
  800|       |
  801|   114k|            phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
  802|   114k|            if (!paren_expression)
  ------------------
  |  Branch (802:17): [True: 112k, False: 2.08k]
  ------------------
  803|   112k|            {
  804|       |                // TODO: Proper error
  805|   112k|                return {};
  806|   112k|            }
  807|       |
  808|  2.08k|            return phi::move(paren_expression);
  809|   114k|        }
  810|   239k|        else if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (810:18): [True: 37.7k, False: 201k]
  ------------------
  811|  37.7k|        {
  812|  37.7k|            phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
  813|  37.7k|            if (!int_literal)
  ------------------
  |  Branch (813:17): [True: 705, False: 37.0k]
  ------------------
  814|    705|            {
  815|       |                // TODO: Error failed to parse integer literal
  816|    705|                return {};
  817|    705|            }
  818|       |
  819|  37.0k|            return phi::move(int_literal);
  820|  37.7k|        }
  821|   201k|        else if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (821:18): [True: 19.6k, False: 182k]
  ------------------
  822|  19.6k|        {
  823|  19.6k|            auto string_literal_expression = ParseStringLiteral();
  824|  19.6k|            if (!string_literal_expression)
  ------------------
  |  Branch (824:17): [True: 0, False: 19.6k]
  ------------------
  825|      0|            {
  826|       |                // TODO: Proper error
  827|      0|                return {};
  828|      0|            }
  829|       |
  830|  19.6k|            return phi::move(string_literal_expression);
  831|  19.6k|        }
  832|       |
  833|       |        // Boolean literal
  834|   182k|        else if (token.GetTokenKind() == TokenKind::KW_True ||
  ------------------
  |  Branch (834:18): [True: 146, False: 182k]
  ------------------
  835|   182k|                 token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (835:18): [True: 1.39k, False: 180k]
  ------------------
  836|  1.53k|        {
  837|  1.53k|            auto boolean_literal = ParseBooleanLiteral();
  838|  1.53k|            if (!boolean_literal)
  ------------------
  |  Branch (838:17): [True: 0, False: 1.53k]
  ------------------
  839|      0|            {
  840|       |                // TODO: Proper error
  841|      0|                return {};
  842|      0|            }
  843|       |
  844|  1.53k|            return phi::move(boolean_literal);
  845|  1.53k|        }
  846|       |
  847|       |        // Function call expression
  848|   180k|        else if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (848:18): [True: 45.5k, False: 135k]
  |  Branch (848:18): [True: 48.8k, False: 131k]
  |  Branch (848:75): [True: 3.29k, False: 131k]
  ------------------
  849|  48.8k|        {
  850|  48.8k|            auto function_call_expression = ParseFunctionCallExpression();
  851|  48.8k|            if (!function_call_expression)
  ------------------
  |  Branch (851:17): [True: 44.2k, False: 4.65k]
  ------------------
  852|  44.2k|            {
  853|       |                // TODO: Proper error
  854|  44.2k|                std::cout << "ERR: Failed to parse function call expression!\n";
  855|  44.2k|                return {};
  856|  44.2k|            }
  857|       |
  858|  4.65k|            return phi::move(function_call_expression);
  859|  48.8k|        }
  860|       |        // Variable expression
  861|   131k|        else if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (861:18): [True: 3.00k, False: 128k]
  ------------------
  862|  3.00k|        {
  863|  3.00k|            auto variable_expression = ParseVariableExpression();
  864|  3.00k|            if (!variable_expression)
  ------------------
  |  Branch (864:17): [True: 0, False: 3.00k]
  ------------------
  865|      0|            {
  866|       |                // TODO: Proper error
  867|      0|                std::cout << "ERR: Failed to parse Variable expression\n";
  868|      0|                return {};
  869|      0|            }
  870|       |
  871|  3.00k|            return phi::move(variable_expression);
  872|  3.00k|        }
  873|       |        // Keyword literal
  874|   128k|        else if (token.IsKeywordLiteral())
  ------------------
  |  Branch (874:18): [True: 772, False: 128k]
  ------------------
  875|    772|        {
  876|    772|            auto keyword_literal = ParseKeywordliteral();
  877|    772|            if (!keyword_literal)
  ------------------
  |  Branch (877:17): [True: 0, False: 772]
  ------------------
  878|      0|            {
  879|       |                // TODO: Proper error
  880|      0|                std::cout << "ERR: Failed to parse keyword literal expression!\n";
  881|      0|                return {};
  882|      0|            }
  883|       |
  884|    772|            return phi::move(keyword_literal);
  885|    772|        }
  886|       |        // Float literal
  887|   128k|        else if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (887:18): [True: 1.13k, False: 126k]
  ------------------
  888|  1.13k|        {
  889|  1.13k|            auto float_literal = ParseFloatLiteral();
  890|  1.13k|            if (!float_literal)
  ------------------
  |  Branch (890:17): [True: 0, False: 1.13k]
  ------------------
  891|      0|            {
  892|       |                // TODO: Proper error
  893|      0|                std::cout << "ERR: Failed to parse float literal expression!\n";
  894|      0|                return {};
  895|      0|            }
  896|       |
  897|  1.13k|            return phi::move(float_literal);
  898|  1.13k|        }
  899|       |
  900|       |        // TODO: Error Unexpected token
  901|   130k|        std::cout << "Unexpected token \"" << enum_name(token.GetTokenKind())
  902|   130k|                  << "\" while parsing expression\n";
  903|   130k|        return {};
  904|   358k|    }
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
  908|  59.5k|    {
  909|  70.3k|        while (true)
  ------------------
  |  Branch (909:16): [Folded - Ignored]
  ------------------
  910|  70.3k|        {
  911|  70.3k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (911:17): [True: 494, False: 69.8k]
  ------------------
  912|    494|            {
  913|    494|                return phi::move(lhs);
  914|    494|            }
  915|       |
  916|  69.8k|            const Token& operator_token = CurrentToken();
  917|  69.8k|            if (!IsBinaryOperator(operator_token.GetTokenKind()))
  ------------------
  |  Branch (917:17): [True: 53.2k, False: 16.5k]
  ------------------
  918|  53.2k|            {
  919|       |                // If its not a binary operator just return the lhs expression
  920|  53.2k|                return phi::move(lhs);
  921|  53.2k|            }
  922|  16.5k|            int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
  923|  16.5k|            ConsumeCurrent();
  924|       |
  925|  16.5k|            if (token_precedence < precedence)
  ------------------
  |  Branch (925:17): [True: 367, False: 16.2k]
  ------------------
  926|    367|            {
  927|    367|                return phi::move(lhs);
  928|    367|            }
  929|       |
  930|       |            // This must be an binary expression
  931|  16.2k|            phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
  932|  16.2k|            if (!rhs_expression)
  ------------------
  |  Branch (932:17): [True: 5.13k, False: 11.0k]
  ------------------
  933|  5.13k|            {
  934|       |                // TODO: Proper error
  935|  5.13k|                return {};
  936|  5.13k|            }
  937|       |
  938|       |            // Nothing left to parse so directly return from here
  939|  11.0k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (939:17): [True: 104, False: 10.9k]
  ------------------
  940|    104|            {
  941|    104|                return phi::make_not_null_scope<ASTBinaryExpression>(
  942|    104|                        phi::move(lhs), operator_token.GetTokenKind(),
  943|    104|                        rhs_expression.release_not_null());
  944|    104|            }
  945|       |
  946|       |            // If BinOp binds less tightly with RHS than the operator after RHS, let
  947|       |            // the pending operator take RHS as its LHS.
  948|  10.9k|            const Token& next_token      = CurrentToken();
  949|  10.9k|            int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
  950|       |
  951|  10.9k|            if (token_precedence < next_precedence)
  ------------------
  |  Branch (951:17): [True: 719, False: 10.2k]
  ------------------
  952|    719|            {
  953|    719|                rhs_expression =
  954|    719|                        ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
  955|    719|                if (!rhs_expression)
  ------------------
  |  Branch (955:21): [True: 199, False: 520]
  ------------------
  956|    199|                {
  957|       |                    // TODO: Proper error
  958|    199|                    return {};
  959|    199|                }
  960|    719|            }
  961|       |
  962|       |            // Merge LHS/RHS.
  963|  10.7k|            lhs = phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
  964|  10.7k|                                                                operator_token.GetTokenKind(),
  965|  10.7k|                                                                rhs_expression.release_not_null());
  966|  10.7k|        }
  967|  59.5k|    }
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
  970|  48.8k|    {
  971|       |        // Parse the function name
  972|  48.8k|        const Token& function_identifier_token = CurrentToken();
  973|  48.8k|        if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (973:13): [True: 3.29k, False: 45.5k]
  |  Branch (973:13): [True: 0, False: 48.8k]
  ------------------
  974|  48.8k|            !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (974:13): [True: 0, False: 3.29k]
  ------------------
  975|      0|        {
  976|      0|            return {};
  977|      0|        }
  978|  48.8k|        ConsumeCurrent();
  979|       |
  980|  48.8k|        phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
  981|  48.8k|                phi::make_scope<ASTFunctionCallExpression>();
  982|  48.8k|        if (!function_call_expression)
  ------------------
  |  Branch (982:13): [True: 0, False: 48.8k]
  ------------------
  983|      0|        {
  984|       |            // TODO: Proper error
  985|      0|            return {};
  986|      0|        }
  987|       |
  988|  48.8k|        if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (988:13): [True: 3.29k, False: 45.5k]
  ------------------
  989|  3.29k|        {
  990|  3.29k|            function_call_expression->m_IsBuiltIn       = true;
  991|  3.29k|            function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
  992|  3.29k|        }
  993|  45.5k|        else
  994|  45.5k|        {
  995|  45.5k|            const phi::string_view function_name = function_identifier_token.GetText();
  996|       |
  997|  45.5k|            function_call_expression->m_IsBuiltIn    = false;
  998|  45.5k|            function_call_expression->m_FunctionName = function_name;
  999|  45.5k|        }
 1000|       |
 1001|       |        // TODO: These 2 checks should be combined
 1002|       |        // Now me MUST parse an LParen
 1003|  48.8k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1003:13): [True: 867, False: 48.0k]
  ------------------
 1004|    867|        {
 1005|    867|            std::cout << "ERR: Expected opening parenthesis for function call \""
 1006|    867|                      << std::string{function_call_expression->FunctionName()} << "\"\n";
 1007|       |            // TODO: Give proper error
 1008|    867|            return {};
 1009|    867|        }
 1010|       |
 1011|  48.0k|        const Token& left_paren_token = CurrentToken();
 1012|  48.0k|        ConsumeCurrent();
 1013|  48.0k|        if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1013:13): [True: 34.9k, False: 13.1k]
  ------------------
 1014|  34.9k|        {
 1015|  34.9k|            std::cout << "ERR: Expected opening parenthesis for function call \""
 1016|  34.9k|                      << std::string{function_call_expression->FunctionName()} << "\"\n";
 1017|       |            // TODO: Give error
 1018|  34.9k|            return {};
 1019|  34.9k|        }
 1020|       |
 1021|       |        // Now parse all the arguments (which are expressions) separated by commas or nothing
 1022|  13.1k|        function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1023|       |
 1024|       |        // Finally we MUST parse an RParen
 1025|  13.1k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1025:13): [True: 4.11k, False: 8.99k]
  ------------------
 1026|  4.11k|        {
 1027|  4.11k|            std::cout << "ERR: Expected closing parenthesis for function call \""
 1028|  4.11k|                      << std::string{function_call_expression->FunctionName()} << "\"\n";
 1029|       |            // TODO: Give proper error
 1030|  4.11k|            return {};
 1031|  4.11k|        }
 1032|       |
 1033|  8.99k|        const Token& right_paren_token = CurrentToken();
 1034|  8.99k|        ConsumeCurrent();
 1035|  8.99k|        if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1035:13): [True: 4.33k, False: 4.65k]
  ------------------
 1036|  4.33k|        {
 1037|  4.33k|            std::cout << "ERR: Expected closing parenthesis for function call \""
 1038|  4.33k|                      << std::string{function_call_expression->FunctionName()} << "\"\n";
 1039|       |            // TODO: Give Error
 1040|  4.33k|            return {};
 1041|  4.33k|        }
 1042|       |
 1043|       |        // Return result
 1044|  4.65k|        return function_call_expression;
 1045|  8.99k|    }
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1049|  13.1k|    {
 1050|  13.1k|        std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1051|       |
 1052|  21.1k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1052:16): [True: 21.1k, False: 53]
  |  Branch (1052:16): [True: 17.2k, False: 3.98k]
  |  Branch (1052:45): [True: 17.2k, False: 3.93k]
  ------------------
 1053|  17.2k|        {
 1054|       |            // Parse the expression
 1055|  17.2k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1056|  17.2k|            if (!expression)
  ------------------
  |  Branch (1056:17): [True: 9.11k, False: 8.09k]
  ------------------
 1057|  9.11k|            {
 1058|  9.11k|                std::cout << "ERR: While parsing expression for function call arguments\n";
 1059|       |                // TODO: Give Prober error
 1060|  9.11k|                arguments.clear();
 1061|  9.11k|                return arguments;
 1062|  9.11k|            }
 1063|       |
 1064|       |            // Add argument to parameters
 1065|  8.09k|            arguments.emplace_back(expression.release_not_null());
 1066|       |
 1067|       |            // Next Token MUST be a comma followed by another expression or RParen
 1068|  8.09k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1068:17): [True: 8.06k, False: 28]
  |  Branch (1068:17): [True: 649, False: 7.44k]
  |  Branch (1068:46): [True: 649, False: 7.41k]
  ------------------
 1069|    649|            {
 1070|    649|                ConsumeCurrent();
 1071|    649|            }
 1072|  8.09k|        }
 1073|       |
 1074|  3.98k|        return arguments;
 1075|  13.1k|    }
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1078|  3.00k|    {
 1079|  3.00k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1079:13): [True: 0, False: 3.00k]
  ------------------
 1080|      0|        {
 1081|       |            // TODO: Proper error
 1082|      0|            return {};
 1083|      0|        }
 1084|       |
 1085|  3.00k|        const Token& token = CurrentToken();
 1086|  3.00k|        if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1086:13): [True: 0, False: 3.00k]
  ------------------
 1087|      0|        {
 1088|       |            // TODO error
 1089|      0|            return {};
 1090|      0|        }
 1091|       |
 1092|  3.00k|        auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1093|  3.00k|        variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1094|       |
 1095|  3.00k|        ConsumeCurrent();
 1096|       |
 1097|  3.00k|        return phi::move(variable_expression);
 1098|  3.00k|    }
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1113|   114k|    {
 1114|       |        // NOTE: Me MUST have consumed the LParen before this
 1115|       |
 1116|   114k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1117|   114k|        if (!expression)
  ------------------
  |  Branch (1117:13): [True: 112k, False: 2.91k]
  ------------------
 1118|   112k|        {
 1119|       |            // TODO: Proper error
 1120|   112k|            return {};
 1121|   112k|        }
 1122|       |
 1123|  2.91k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1123:13): [True: 833, False: 2.08k]
  ------------------
 1124|    833|        {
 1125|       |            // TODO: Proper error expected closing paren
 1126|    833|            return {};
 1127|    833|        }
 1128|       |
 1129|  2.08k|        return phi::move(expression);
 1130|  2.91k|    }
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1133|  1.53k|    {
 1134|  1.53k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1134:13): [True: 0, False: 1.53k]
  ------------------
 1135|      0|        {
 1136|       |            // TODO: Proper error
 1137|      0|            return {};
 1138|      0|        }
 1139|       |
 1140|       |        // BooleanLiteral is either KW_True or KW_False
 1141|  1.53k|        const Token& token = CurrentToken();
 1142|  1.53k|        if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1142:13): [True: 146, False: 1.39k]
  ------------------
 1143|    146|        {
 1144|    146|            ConsumeCurrent();
 1145|    146|            return phi::make_scope<ASTBooleanLiteral>(true);
 1146|    146|        }
 1147|       |
 1148|  1.39k|        if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1148:13): [True: 1.39k, False: 0]
  ------------------
 1149|  1.39k|        {
 1150|  1.39k|            ConsumeCurrent();
 1151|  1.39k|            return phi::make_scope<ASTBooleanLiteral>(false);
 1152|  1.39k|        }
 1153|       |
 1154|       |        // TODO: Proper error
 1155|      0|        return {};
 1156|  1.39k|    }
_ZN10OpenAutoIt6Parser19ParseKeywordliteralEv:
 1159|    772|    {
 1160|    772|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1160:13): [True: 0, False: 772]
  ------------------
 1161|      0|        {
 1162|       |            // TODO: Proper error
 1163|      0|            return {};
 1164|      0|        }
 1165|       |
 1166|    772|        const Token& token = CurrentToken();
 1167|    772|        if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1167:13): [True: 772, False: 0]
  ------------------
 1168|    772|        {
 1169|    772|            ConsumeCurrent();
 1170|    772|            return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1171|    772|        }
 1172|       |
 1173|       |        // TODO: Proper error
 1174|      0|        return {};
 1175|    772|    }
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1178|  1.13k|    {
 1179|  1.13k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1179:13): [True: 0, False: 1.13k]
  ------------------
 1180|      0|        {
 1181|       |            // TODO: Proper error
 1182|      0|            return {};
 1183|      0|        }
 1184|       |
 1185|  1.13k|        const Token& token = CurrentToken();
 1186|  1.13k|        if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1186:13): [True: 1.13k, False: 0]
  ------------------
 1187|  1.13k|        {
 1188|  1.13k|            ConsumeCurrent();
 1189|       |
 1190|  1.13k|            char*    ptr   = nullptr;
 1191|  1.13k|            phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1192|       |
 1193|  1.13k|            return phi::make_scope<ASTFloatLiteral>(value);
 1194|  1.13k|        }
 1195|       |
 1196|       |        // TODO: Proper error
 1197|      0|        return {};
 1198|  1.13k|    }
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   63|  30.8k|        {
   64|  30.8k|            int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   65|       |            //PHI_ASSERT(precedence != 0);
   66|       |
   67|  30.8k|            return precedence;
   68|  30.8k|        }

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  4.65k|    {
   31|       |#if defined(PHI_DEBUG)
   32|       |        PHI_ASSERT(!m_Finialized);
   33|       |#endif
   34|       |
   35|  4.65k|        m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |        m_Finialized = true;
   38|       |#endif
   39|  4.65k|    }
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   69|  2.91M|    {
   70|       |#if defined(PHI_DEBUG)
   71|       |        PHI_ASSERT(m_Finialized);
   72|       |#endif
   73|       |
   74|  2.91M|        return m_Index < m_Tokens.size();
   75|  2.91M|    }
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   78|  1.98M|    {
   79|       |#if defined(PHI_DEBUG)
   80|       |        PHI_ASSERT(m_Finialized);
   81|       |#endif
   82|       |
   83|  1.98M|        return m_Index >= m_Tokens.size();
   84|  1.98M|    }
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   87|  1.41M|    {
   88|  1.41M|        PHI_ASSERT(!reached_end());
   89|       |#if defined(PHI_DEBUG)
   90|       |        PHI_ASSERT(m_Finialized);
   91|       |#endif
   92|       |
   93|  1.41M|        return m_Tokens[m_Index.unsafe()];
   94|  1.41M|    }
_ZN10OpenAutoIt11TokenStream7consumeEv:
   97|   568k|    {
   98|   568k|        PHI_ASSERT(!reached_end());
   99|       |#if defined(PHI_DEBUG)
  100|       |        PHI_ASSERT(m_Finialized);
  101|       |#endif
  102|       |
  103|   568k|        m_Index += 1u;
  104|   568k|    }

_ZN10OpenAutoIt5ScopeC2ENS_9ScopeKindENSt3__117basic_string_viewIcNS2_11char_traitsIcEEEERNS2_6vectorIN3phi18not_null_scope_ptrINS_12ASTStatementEEENS2_9allocatorISB_EEEE:
   29|  65.6k|        {}

_ZN10OpenAutoIt14VirtualMachine12RuntimeErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEEvS6_DpOT_:
   38|  4.02k|        {
   39|  4.02k|            std::cerr << "[OpenAutoIt] "
   40|  4.02k|                      << "\033[31m"
   41|  4.02k|                         "RUNTIME ERROR!"
   42|  4.02k|                      << "\033[0m\n"
   43|  4.02k|                      << " > "
   44|  4.02k|                      << "\033[31m"
   45|  4.02k|                      << fmt::format(fmt::runtime(format_string), phi::forward<ArgsT>(args)...)
   46|  4.02k|                      << "\033[0m\n"
   47|  4.02k|                      << "Stack trace:\n";
   48|       |
   49|       |            // Print stack trace
   50|  4.02k|            StackTrace strack_trace = GetStrackTrace();
   51|  8.07k|            for (phi::u64 index{0u}; index < strack_trace.size(); ++index)
  ------------------
  |  Branch (51:38): [True: 4.04k, False: 4.02k]
  ------------------
   52|  4.04k|            {
   53|  4.04k|                const StackTraceEntry& entry = strack_trace.at(index.unsafe());
   54|       |
   55|  4.04k|                std::cerr << "    #" << index.unsafe() << ' ' << entry.function << ' ' << entry.file
   56|  4.04k|                          << ':' << entry.line.unsafe() << ':' << entry.column.unsafe() << '\n';
   57|  4.04k|            }
   58|       |
   59|  4.02k|            m_Aborting = true;
   60|  4.02k|        }
_ZN10OpenAutoIt14VirtualMachine12RuntimeErrorIJPKcEEEvNSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   38|    200|        {
   39|    200|            std::cerr << "[OpenAutoIt] "
   40|    200|                      << "\033[31m"
   41|    200|                         "RUNTIME ERROR!"
   42|    200|                      << "\033[0m\n"
   43|    200|                      << " > "
   44|    200|                      << "\033[31m"
   45|    200|                      << fmt::format(fmt::runtime(format_string), phi::forward<ArgsT>(args)...)
   46|    200|                      << "\033[0m\n"
   47|    200|                      << "Stack trace:\n";
   48|       |
   49|       |            // Print stack trace
   50|    200|            StackTrace strack_trace = GetStrackTrace();
   51|    403|            for (phi::u64 index{0u}; index < strack_trace.size(); ++index)
  ------------------
  |  Branch (51:38): [True: 203, False: 200]
  ------------------
   52|    203|            {
   53|    203|                const StackTraceEntry& entry = strack_trace.at(index.unsafe());
   54|       |
   55|    203|                std::cerr << "    #" << index.unsafe() << ' ' << entry.function << ' ' << entry.file
   56|    203|                          << ':' << entry.line.unsafe() << ':' << entry.column.unsafe() << '\n';
   57|    203|            }
   58|       |
   59|    200|            m_Aborting = true;
   60|    200|        }
_ZN10OpenAutoIt14VirtualMachine12RuntimeErrorIJEEEvNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEDpOT_:
   38|     13|        {
   39|     13|            std::cerr << "[OpenAutoIt] "
   40|     13|                      << "\033[31m"
   41|     13|                         "RUNTIME ERROR!"
   42|     13|                      << "\033[0m\n"
   43|     13|                      << " > "
   44|     13|                      << "\033[31m"
   45|     13|                      << fmt::format(fmt::runtime(format_string), phi::forward<ArgsT>(args)...)
   46|     13|                      << "\033[0m\n"
   47|     13|                      << "Stack trace:\n";
   48|       |
   49|       |            // Print stack trace
   50|     13|            StackTrace strack_trace = GetStrackTrace();
   51|     40|            for (phi::u64 index{0u}; index < strack_trace.size(); ++index)
  ------------------
  |  Branch (51:38): [True: 27, False: 13]
  ------------------
   52|     27|            {
   53|     27|                const StackTraceEntry& entry = strack_trace.at(index.unsafe());
   54|       |
   55|     27|                std::cerr << "    #" << index.unsafe() << ' ' << entry.function << ' ' << entry.file
   56|     27|                          << ':' << entry.line.unsafe() << ':' << entry.column.unsafe() << '\n';
   57|     27|            }
   58|       |
   59|     13|            m_Aborting = true;
   60|     13|        }

_ZN10OpenAutoIt11BuiltIn_AbsERKNS_14VirtualMachineERKNS_7VariantE:
   12|    328|    {
   13|    328|        switch (input.GetType())
   14|    328|        {
   15|    282|            case Variant::Type::Int64:
  ------------------
  |  Branch (15:13): [True: 282, False: 46]
  ------------------
   16|    282|                return Variant::MakeInt(
   17|    282|                        static_cast<phi::int64_t>(phi::abs(input.AsInt64()).unsafe()));
   18|       |
   19|      0|            case Variant::Type::Double:
  ------------------
  |  Branch (19:13): [True: 0, False: 328]
  ------------------
   20|      0|                return Variant::MakeDouble(phi::abs(input.AsDouble()));
   21|       |
   22|     46|            default:
  ------------------
  |  Branch (22:13): [True: 46, False: 282]
  ------------------
   23|     46|                return Variant::MakeInt(0);
   24|    328|        }
   25|    328|    }
_ZN10OpenAutoIt20BuiltIn_ConsoleWriteERNS_14VirtualMachineERKNS_7VariantE:
   29|     36|    {
   30|     36|        const Variant value = input.CastToString();
   31|     36|        PHI_ASSERT(value.IsString());
   32|       |
   33|     36|        const std::string& output = value.AsString();
   34|       |
   35|       |        // Output to VM
   36|     36|        auto std_out = vm.GetStdout();
   37|     36|        if (std_out != nullptr)
  ------------------
  |  Branch (37:13): [True: 0, False: 36]
  ------------------
   38|      0|        {
   39|      0|            *std_out << output;
   40|      0|        }
   41|       |
   42|     36|        return Variant::MakeInt(static_cast<phi::int64_t>(output.size()));
   43|     36|    }
_ZN10OpenAutoIt25BuiltIn_ConsoleWriteErrorERNS_14VirtualMachineERKNS_7VariantE:
   47|    171|    {
   48|    171|        const Variant value = input.CastToString();
   49|    171|        PHI_ASSERT(value.IsString());
   50|       |
   51|    171|        const std::string& output = value.AsString();
   52|       |
   53|       |        // Output to VM
   54|    171|        auto std_err = vm.GetStderr();
   55|    171|        if (std_err != nullptr)
  ------------------
  |  Branch (55:13): [True: 0, False: 171]
  ------------------
   56|      0|        {
   57|      0|            *std_err << output;
   58|      0|        }
   59|       |
   60|    171|        return Variant::MakeInt(static_cast<phi::int64_t>(output.size()));
   61|    171|    }
_ZN10OpenAutoIt18BuiltIn_VarGetTypeERKNS_14VirtualMachineERKNS_7VariantE:
   65|     86|    {
   66|     86|        return Variant::MakeString(input.GetTypeName());
   67|     86|    }

_ZN10OpenAutoIt11InterpreterC2EN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
   36|  4.65k|    {
   37|  4.65k|        vm().PushGlobalScope(document->m_Statements);
   38|  4.65k|    }
_ZN10OpenAutoIt11Interpreter4StepEv:
   49|   101k|    {
   50|   101k|        Scope& current_scope = vm().GetCurrentScope();
   51|       |
   52|       |        // Check if we reached the end of the current scope
   53|   101k|        if (current_scope.index >= current_scope.statements.size())
  ------------------
  |  Branch (53:13): [True: 4.22k, False: 96.8k]
  ------------------
   54|  4.22k|        {
   55|  4.22k|            vm().PopScope();
   56|  4.22k|            return;
   57|  4.22k|        }
   58|       |
   59|  96.8k|        auto current_statement = GetCurrentStatement();
   60|       |
   61|       |        // Interpret statement
   62|  96.8k|        StatementFinished result = InterpretStatement(current_statement);
   63|       |
   64|       |        // Increment index if the statement is finished
   65|  96.8k|        if (result == StatementFinished::Yes)
  ------------------
  |  Branch (65:13): [True: 36.3k, False: 60.5k]
  ------------------
   66|  36.3k|        {
   67|  36.3k|            ++current_scope.index;
   68|  36.3k|        }
   69|  96.8k|    }
_ZNK10OpenAutoIt11Interpreter19GetCurrentStatementEv:
   72|  96.8k|    {
   73|  96.8k|        const Scope& current_scope = vm().GetCurrentScope();
   74|  96.8k|        PHI_ASSERT(!current_scope.statements.empty());
   75|  96.8k|        PHI_ASSERT(current_scope.index < current_scope.statements.size());
   76|       |
   77|  96.8k|        return current_scope.statements.at(current_scope.index.unsafe());
   78|  96.8k|    }
_ZN10OpenAutoIt11Interpreter2vmEv:
   81|   293k|    {
   82|   293k|        return m_VirtualMachine;
   83|   293k|    }
_ZNK10OpenAutoIt11Interpreter2vmEv:
   86|  96.8k|    {
   87|  96.8k|        return m_VirtualMachine;
   88|  96.8k|    }
_ZN10OpenAutoIt11Interpreter18InterpretStatementEN3phi21not_null_observer_ptrINS_12ASTStatementEEE:
   92|  96.8k|    {
   93|       |        // NOTE: Generally we return Yes for finished statments and the ending of loops
   94|       |        //       While returning No for unfinished loops like While and For
   95|       |
   96|  96.8k|        switch (statement->NodeType())
   97|  96.8k|        {
   98|  28.5k|            case ASTNodeType::ExpressionStatement: {
  ------------------
  |  Branch (98:13): [True: 28.5k, False: 68.3k]
  ------------------
   99|  28.5k|                auto expression_statement = statement->as<ASTExpressionStatement>();
  100|       |
  101|  28.5k|                InterpretExpression(expression_statement->m_Expression);
  102|  28.5k|                return StatementFinished::Yes;
  103|      0|            }
  104|       |
  105|      0|            case ASTNodeType::IfStatement: {
  ------------------
  |  Branch (105:13): [True: 0, False: 96.8k]
  ------------------
  106|      0|                auto if_statement = statement->as<ASTIfStatement>();
  107|       |
  108|      0|                const Variant if_condition_value =
  109|      0|                        InterpretExpression(if_statement->m_IfCase.condition).CastToBoolean();
  110|      0|                PHI_ASSERT(if_condition_value.IsBoolean());
  111|       |
  112|      0|                if (if_condition_value.AsBoolean())
  ------------------
  |  Branch (112:21): [True: 0, False: 0]
  ------------------
  113|      0|                {
  114|      0|                    vm().PushBlockScope(if_statement->m_IfCase.body);
  115|      0|                    return StatementFinished::Yes;
  116|      0|                }
  117|       |
  118|       |                // Handle all ElseIf cases
  119|      0|                for (auto&& else_if_case : if_statement->m_ElseIfCases)
  ------------------
  |  Branch (119:42): [True: 0, False: 0]
  ------------------
  120|      0|                {
  121|      0|                    const Variant condition_value =
  122|      0|                            InterpretExpression(else_if_case.condition).CastToBoolean();
  123|      0|                    PHI_ASSERT(condition_value.IsBoolean());
  124|       |
  125|      0|                    if (condition_value.AsBoolean())
  ------------------
  |  Branch (125:25): [True: 0, False: 0]
  ------------------
  126|      0|                    {
  127|      0|                        vm().PushBlockScope(else_if_case.body);
  128|      0|                        return StatementFinished::Yes;
  129|      0|                    }
  130|      0|                }
  131|       |
  132|       |                // Handle Else case
  133|      0|                vm().PushBlockScope(if_statement->m_ElseCase);
  134|      0|                return StatementFinished::Yes;
  135|      0|            }
  136|       |
  137|  7.61k|            case ASTNodeType::VariableAssignment: {
  ------------------
  |  Branch (137:13): [True: 7.61k, False: 89.2k]
  ------------------
  138|  7.61k|                auto variable_assignment = statement->as<ASTVariableAssignment>();
  139|       |
  140|  7.61k|                const phi::string_view variable_name = variable_assignment->m_VariableName;
  141|  7.61k|                PHI_ASSERT(!variable_name.is_empty());
  142|       |
  143|       |                // TODO: Const?
  144|  7.61k|                phi::observer_ptr<ASTExpression> initial_expression =
  145|  7.61k|                        variable_assignment->m_InitialValueExpression;
  146|  7.61k|                if (initial_expression)
  ------------------
  |  Branch (146:21): [True: 2.33k, False: 5.28k]
  ------------------
  147|  2.33k|                {
  148|  2.33k|                    const Variant expression_value =
  149|  2.33k|                            InterpretExpression(initial_expression.release_not_null());
  150|       |
  151|  2.33k|                    vm().PushOrAssignVariable(variable_name, expression_value);
  152|  2.33k|                    return StatementFinished::Yes;
  153|  2.33k|                }
  154|       |
  155|       |                // Insert a default initialized variable
  156|  5.28k|                vm().PushVariable(variable_name, {});
  157|  5.28k|                return StatementFinished::Yes;
  158|  7.61k|            }
  159|       |
  160|  60.7k|            case ASTNodeType::WhileStatement: {
  ------------------
  |  Branch (160:13): [True: 60.7k, False: 36.1k]
  ------------------
  161|  60.7k|                auto while_statement = statement->as<ASTWhileStatement>();
  162|       |
  163|       |                // Evalaute condition
  164|  60.7k|                const Variant condition =
  165|  60.7k|                        InterpretExpression(while_statement->m_ConditionExpression).CastToBoolean();
  166|  60.7k|                PHI_ASSERT(condition.IsBoolean());
  167|       |
  168|  60.7k|                if (!condition.AsBoolean())
  ------------------
  |  Branch (168:21): [True: 185, False: 60.5k]
  ------------------
  169|    185|                {
  170|    185|                    return StatementFinished::Yes;
  171|    185|                }
  172|       |
  173|       |                // Interpret while statements
  174|  60.5k|                vm().PushBlockScope(while_statement->m_Statements);
  175|  60.5k|                return StatementFinished::No;
  176|  60.7k|            }
  177|       |
  178|      0|            default:
  ------------------
  |  Branch (178:13): [True: 0, False: 96.8k]
  ------------------
  179|      0|                PHI_ASSERT_NOT_REACHED();
  180|      0|                return StatementFinished::No;
  181|  96.8k|        }
  182|  96.8k|    }
_ZN10OpenAutoIt11Interpreter19InterpretExpressionEN3phi21not_null_observer_ptrINS_13ASTExpressionEEE:
  185|   144k|    {
  186|   144k|        switch (expression->NodeType())
  187|   144k|        {
  188|      0|            case ASTNodeType::ArraySubscriptExpression:
  ------------------
  |  Branch (188:13): [True: 0, False: 144k]
  ------------------
  189|       |                // TODO: ArraySubscriptExpression
  190|      0|                return {};
  191|       |
  192|  24.7k|            case ASTNodeType::BinaryExpression: {
  ------------------
  |  Branch (192:13): [True: 24.7k, False: 120k]
  ------------------
  193|  24.7k|                auto binary_expression = expression->as<ASTBinaryExpression>();
  194|       |
  195|  24.7k|                const Variant lhs_value = InterpretExpression(binary_expression->m_LHS);
  196|  24.7k|                const Variant rhs_value = InterpretExpression(binary_expression->m_RHS);
  197|       |
  198|  24.7k|                return EvaluateBinaryExpression(lhs_value, rhs_value,
  199|  24.7k|                                                binary_expression->m_Operator);
  200|      0|            }
  201|       |
  202|    812|            case ASTNodeType::BooleanLiteral: {
  ------------------
  |  Branch (202:13): [True: 812, False: 144k]
  ------------------
  203|    812|                auto boolean_literal = expression->as<ASTBooleanLiteral>();
  204|       |
  205|    812|                return Variant::MakeBoolean(boolean_literal->m_Value);
  206|      0|            }
  207|       |
  208|  3.28k|            case ASTNodeType::FunctionCallExpression: {
  ------------------
  |  Branch (208:13): [True: 3.28k, False: 141k]
  ------------------
  209|       |                // TODO: What happens when you assign variable to the return of a void function?
  210|  3.28k|                auto function_call_expression = expression->as<ASTFunctionCallExpression>();
  211|       |
  212|       |                // Evaluate all arguments
  213|  3.28k|                const std::vector<Variant> arguments =
  214|  3.28k|                        InterpretExpressions(function_call_expression->m_Arguments);
  215|       |
  216|       |                // Handle builtin functions seperately
  217|  3.28k|                if (function_call_expression->m_IsBuiltIn)
  ------------------
  |  Branch (217:21): [True: 1.21k, False: 2.07k]
  ------------------
  218|  1.21k|                {
  219|  1.21k|                    return InterpretBuiltInFunctionCall(function_call_expression->m_BuiltInFunction,
  220|  1.21k|                                                        arguments);
  221|  1.21k|                }
  222|       |
  223|  2.07k|                return InterpretFunctionCall(function_call_expression->m_FunctionName, arguments);
  224|  3.28k|            }
  225|       |
  226|  81.3k|            case ASTNodeType::IntegerLiteral: {
  ------------------
  |  Branch (226:13): [True: 81.3k, False: 63.5k]
  ------------------
  227|  81.3k|                auto integer_literal = expression->as<ASTIntegerLiteral>();
  228|       |
  229|  81.3k|                return Variant::MakeInt(integer_literal->m_Value);
  230|  3.28k|            }
  231|       |
  232|    720|            case ASTNodeType::KeywordLiteral: {
  ------------------
  |  Branch (232:13): [True: 720, False: 144k]
  ------------------
  233|    720|                auto keyword_literal = expression->as<ASTKeywordLiteral>();
  234|       |
  235|    720|                return Variant::MakeKeyword(keyword_literal->m_Keyword);
  236|  3.28k|            }
  237|       |
  238|  19.8k|            case ASTNodeType::FloatLiteral: {
  ------------------
  |  Branch (238:13): [True: 19.8k, False: 125k]
  ------------------
  239|  19.8k|                auto float_literal = expression->as<ASTFloatLiteral>();
  240|       |
  241|  19.8k|                return Variant::MakeDouble(float_literal->m_Value);
  242|  3.28k|            }
  243|       |
  244|  11.4k|            case ASTNodeType::StringLiteral: {
  ------------------
  |  Branch (244:13): [True: 11.4k, False: 133k]
  ------------------
  245|  11.4k|                auto string_literal = expression->as<ASTStringLiteral>();
  246|       |
  247|  11.4k|                return Variant::MakeString(string_literal->m_Value);
  248|  3.28k|            }
  249|       |
  250|      0|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (250:13): [True: 0, False: 144k]
  ------------------
  251|       |                // TODO: UnaryExpression
  252|      0|                return {};
  253|       |
  254|  2.71k|            case ASTNodeType::VariableExpression: {
  ------------------
  |  Branch (254:13): [True: 2.71k, False: 142k]
  ------------------
  255|  2.71k|                auto variable_expression = expression->as<ASTVariableExpression>();
  256|       |
  257|  2.71k|                const phi::string_view variable_name = variable_expression->m_VariableName;
  258|       |
  259|  2.71k|                auto value = vm().LookupVariableByName(variable_name);
  260|  2.71k|                if (!value)
  ------------------
  |  Branch (260:21): [True: 2.41k, False: 300]
  ------------------
  261|  2.41k|                {
  262|  2.41k|                    vm().RuntimeError("No variable named '{}'", std::string_view(variable_name));
  263|  2.41k|                    return {};
  264|  2.41k|                }
  265|       |
  266|    300|                return value.value();
  267|  2.71k|            }
  268|       |
  269|      0|            default:
  ------------------
  |  Branch (269:13): [True: 0, False: 144k]
  ------------------
  270|      0|                PHI_ASSERT_NOT_REACHED();
  271|   144k|        }
  272|       |
  273|      0|        PHI_ASSERT_NOT_REACHED();
  274|      0|        return {};
  275|   144k|    }
_ZN10OpenAutoIt11Interpreter20InterpretExpressionsERNSt3__16vectorIN3phi18not_null_scope_ptrINS_13ASTExpressionEEENS1_9allocatorIS6_EEEE:
  279|  3.28k|    {
  280|  3.28k|        std::vector<Variant> ret;
  281|  3.28k|        ret.reserve(expressions.size());
  282|       |
  283|  3.28k|        for (auto& expression : expressions)
  ------------------
  |  Branch (283:31): [True: 3.89k, False: 3.28k]
  ------------------
  284|  3.89k|        {
  285|  3.89k|            ret.emplace_back(InterpretExpression(expression));
  286|  3.89k|        }
  287|       |
  288|  3.28k|        return ret;
  289|  3.28k|    }
_ZN10OpenAutoIt11Interpreter28InterpretBuiltInFunctionCallENS_9TokenKindERKNSt3__16vectorINS_7VariantENS2_9allocatorIS4_EEEE:
  293|  1.21k|    {
  294|       |        // TODO: Is pretty incovinient that every function has to check for itself that it hast the right amount of arguments etc.
  295|       |
  296|  1.21k|        switch (function)
  297|  1.21k|        {
  298|       |            // https://www.autoitscript.com/autoit3/docs/functions/Abs.htm
  299|    543|            case TokenKind::BI_Abs: {
  ------------------
  |  Branch (299:13): [True: 543, False: 673]
  ------------------
  300|    543|                if (arguments.size() != 1u)
  ------------------
  |  Branch (300:21): [True: 215, False: 328]
  ------------------
  301|    215|                {
  302|       |                    // TODO: Error
  303|    215|                    return {};
  304|    215|                }
  305|       |
  306|    328|                return BuiltIn_Abs(m_VirtualMachine, arguments.at(0u));
  307|    543|            }
  308|       |
  309|       |            // https://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm
  310|     69|            case TokenKind::BI_ConsoleWrite: {
  ------------------
  |  Branch (310:13): [True: 69, False: 1.14k]
  ------------------
  311|     69|                if (arguments.size() != 1u)
  ------------------
  |  Branch (311:21): [True: 33, False: 36]
  ------------------
  312|     33|                {
  313|       |                    // TODO: Error
  314|     33|                    return {};
  315|     33|                }
  316|       |
  317|     36|                return BuiltIn_ConsoleWrite(m_VirtualMachine, arguments.at(0u));
  318|     69|            }
  319|       |
  320|       |            // https://www.autoitscript.com/autoit3/docs/functions/ConsoleWriteError.htm
  321|    238|            case TokenKind::BI_ConsoleWriteError: {
  ------------------
  |  Branch (321:13): [True: 238, False: 978]
  ------------------
  322|    238|                if (arguments.size() != 1u)
  ------------------
  |  Branch (322:21): [True: 67, False: 171]
  ------------------
  323|     67|                {
  324|       |                    // TODO: Error
  325|     67|                    return {};
  326|     67|                }
  327|       |
  328|    171|                return BuiltIn_ConsoleWriteError(m_VirtualMachine, arguments.at(0u));
  329|    238|            }
  330|       |
  331|       |            // https://www.autoitscript.com/autoit3/docs/functions/VarGetType.htm
  332|    166|            case TokenKind::BI_VarGetType: {
  ------------------
  |  Branch (332:13): [True: 166, False: 1.05k]
  ------------------
  333|    166|                if (arguments.size() != 1u)
  ------------------
  |  Branch (333:21): [True: 80, False: 86]
  ------------------
  334|     80|                {
  335|       |                    // TODO: Error
  336|     80|                    return {};
  337|     80|                }
  338|       |
  339|     86|                return BuiltIn_VarGetType(m_VirtualMachine, arguments.at(0u));
  340|    166|            }
  341|       |
  342|      0|            case TokenKind::BI_ConsoleWriteLine: {
  ------------------
  |  Branch (342:13): [True: 0, False: 1.21k]
  ------------------
  343|      0|                if (arguments.size() != 1u)
  ------------------
  |  Branch (343:21): [True: 0, False: 0]
  ------------------
  344|      0|                {
  345|       |                    // TODO: Error:
  346|      0|                    return {};
  347|      0|                }
  348|       |
  349|      0|                return BuiltIn_ConsoleWriteLine(vm(), arguments.at(0u));
  350|      0|            }
  351|       |
  352|      0|            case TokenKind::BI_ConsoleWriteErrorLine: {
  ------------------
  |  Branch (352:13): [True: 0, False: 1.21k]
  ------------------
  353|      0|                if (arguments.size() != 1u)
  ------------------
  |  Branch (353:21): [True: 0, False: 0]
  ------------------
  354|      0|                {
  355|       |                    // TODO: Error
  356|      0|                    return {};
  357|      0|                }
  358|       |
  359|      0|                return BuiltIn_ConsoleWriteErrorLine(vm(), arguments.at(0u));
  360|      0|            }
  361|       |
  362|    200|            default:
  ------------------
  |  Branch (362:13): [True: 200, False: 1.01k]
  ------------------
  363|    200|                vm().RuntimeError("Builtin function '{:s}' not implemented", enum_name(function));
  364|    200|                return {};
  365|  1.21k|        }
  366|       |
  367|      0|        PHI_ASSERT_NOT_REACHED();
  368|      0|        return {};
  369|  1.21k|    }
_ZN10OpenAutoIt11Interpreter21InterpretFunctionCallEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS_7VariantENS3_9allocatorIS8_EEEE:
  373|  2.07k|    {
  374|  2.07k|        phi::observer_ptr<ASTFunctionDefinition> function_definition =
  375|  2.07k|                m_Document->LookupFunctionDefinitionByName(function);
  376|       |
  377|  2.07k|        if (!function_definition)
  ------------------
  |  Branch (377:13): [True: 1.61k, False: 456]
  ------------------
  378|  1.61k|        {
  379|  1.61k|            vm().RuntimeError("Function '{:s}' not found'", std::string_view(function));
  380|  1.61k|            return {};
  381|  1.61k|        }
  382|       |
  383|       |        // Push new function scope
  384|    456|        vm().PushFunctionScope(function, function_definition->m_FunctionBody);
  385|       |
  386|       |        // Push arguments into the new scope
  387|    596|        for (phi::usize index{0u}; index < function_definition->m_Parameters.size(); ++index)
  ------------------
  |  Branch (387:36): [True: 153, False: 443]
  ------------------
  388|    153|        {
  389|       |            // TODO: This should be const but theres currently a bug in Phi which prevents us more doing so
  390|    153|            FunctionParameter& parameter = function_definition->m_Parameters.at(index.unsafe());
  391|       |
  392|       |            // Check if the argument was explicitly provided
  393|    153|            if (index < arguments.size())
  ------------------
  |  Branch (393:17): [True: 140, False: 13]
  ------------------
  394|    140|            {
  395|       |                // Simply set the parameter to be the given argument
  396|    140|                vm().PushVariable(parameter.name, arguments.at(index.unsafe()));
  397|    140|            }
  398|     13|            else
  399|     13|            {
  400|       |                // Otherwise the parameter MUST be defaultet
  401|     13|                if (!parameter.default_value)
  ------------------
  |  Branch (401:21): [True: 13, False: 0]
  ------------------
  402|     13|                {
  403|       |                    // TODO: Better error message
  404|     13|                    vm().RuntimeError("Missing argument");
  405|     13|                    break;
  406|     13|                }
  407|       |
  408|       |                // The value is simply the interpreted value of our default expression
  409|      0|                Variant value = InterpretExpression(parameter.default_value.not_null_observer());
  410|       |
  411|      0|                vm().PushVariable(parameter.name, value);
  412|      0|            }
  413|    153|        }
  414|       |
  415|    456|        return {};
  416|  2.07k|    }
_ZN10OpenAutoIt11Interpreter24EvaluateBinaryExpressionERKNS_7VariantES3_NS_9TokenKindE:
  420|  24.7k|    {
  421|       |        // TODO: Lots of operators missing here
  422|  24.7k|        switch (op)
  423|  24.7k|        {
  424|  3.48k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (424:13): [True: 3.48k, False: 21.2k]
  ------------------
  425|  3.48k|                return EvaluateBinaryPlusExpression(lhs, rhs);
  426|       |
  427|  11.7k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (427:13): [True: 11.7k, False: 12.9k]
  ------------------
  428|  11.7k|                return EvaluateBinaryMinusExpression(lhs, rhs);
  429|       |
  430|  4.53k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (430:13): [True: 4.53k, False: 20.1k]
  ------------------
  431|  4.53k|                return EvaluateBinaryMultiplyExpression(lhs, rhs);
  432|       |
  433|  4.90k|            default:
  ------------------
  |  Branch (433:13): [True: 4.90k, False: 19.8k]
  ------------------
  434|  4.90k|                return {};
  435|  24.7k|        }
  436|  24.7k|    }
_ZN10OpenAutoIt11Interpreter28EvaluateBinaryPlusExpressionERKNS_7VariantES3_:
  440|  3.48k|    {
  441|       |        // TODO: We currently only support adding integer which is not correct
  442|  3.48k|        if (!lhs.IsInt64() || !rhs.IsInt64())
  ------------------
  |  Branch (442:13): [True: 2.26k, False: 1.22k]
  |  Branch (442:13): [True: 2.70k, False: 778]
  |  Branch (442:31): [True: 444, False: 778]
  ------------------
  443|  2.70k|        {
  444|  2.70k|            return {};
  445|  2.70k|        }
  446|       |
  447|    778|        return Variant::MakeInt(UnsafeAdd(lhs.AsInt64(), rhs.AsInt64()));
  448|  3.48k|    }
_ZN10OpenAutoIt11Interpreter29EvaluateBinaryMinusExpressionERKNS_7VariantES3_:
  452|  11.7k|    {
  453|  11.7k|        if (!lhs.IsInt64() || !rhs.IsInt64())
  ------------------
  |  Branch (453:13): [True: 462, False: 11.3k]
  |  Branch (453:13): [True: 603, False: 11.1k]
  |  Branch (453:31): [True: 141, False: 11.1k]
  ------------------
  454|    603|        {
  455|    603|            return {};
  456|    603|        }
  457|       |
  458|  11.1k|        return Variant::MakeInt(UnsafeMinus(lhs.AsInt64(), rhs.AsInt64()));
  459|  11.7k|    }
_ZN10OpenAutoIt11Interpreter32EvaluateBinaryMultiplyExpressionERKNS_7VariantES3_:
  463|  4.53k|    {
  464|  4.53k|        if (!lhs.IsInt64() || !rhs.IsInt64())
  ------------------
  |  Branch (464:13): [True: 149, False: 4.38k]
  |  Branch (464:13): [True: 214, False: 4.31k]
  |  Branch (464:31): [True: 65, False: 4.31k]
  ------------------
  465|    214|        {
  466|    214|            return {};
  467|    214|        }
  468|       |
  469|  4.31k|        return Variant::MakeInt(UnsafeMultiply(lhs.AsInt64(), rhs.AsInt64()));
  470|  4.53k|    }

_ZN10OpenAutoIt9UnsafeAddEN3phi7integerIlEES2_:
   18|    778|    {
   19|    778|        return lhs.unsafe() + rhs.unsafe();
   20|    778|    }
_ZN10OpenAutoIt11UnsafeMinusEN3phi7integerIlEES2_:
   23|  11.1k|    {
   24|  11.1k|        return lhs.unsafe() - rhs.unsafe();
   25|  11.1k|    }
_ZN10OpenAutoIt14UnsafeMultiplyEN3phi7integerIlEES2_:
   29|  4.31k|    {
   30|  4.31k|        return lhs.unsafe() * rhs.unsafe();
   31|  4.31k|    }

_ZN10OpenAutoIt7VariantC2Ev:
   25|   214k|    {}
_ZN10OpenAutoIt7VariantC2ERKS0_:
   31|  4.46k|    {
   32|  4.46k|        copy_from(other);
   33|  4.46k|    }
_ZN10OpenAutoIt7VariantC2EOS0_:
   39|  3.89k|    {
   40|  3.89k|        move_from(phi::move(other));
   41|  3.89k|    }
_ZN10OpenAutoIt7VariantD2Ev:
   44|   222k|    {
   45|   222k|        Clear();
   46|   222k|    }
_ZN10OpenAutoIt7VariantaSERKS0_:
   51|  1.05k|    {
   52|  1.05k|        PHI_ASSERT(this != &other);
   53|       |
   54|  1.05k|        Clear();
   55|  1.05k|        copy_from(other);
   56|       |
   57|  1.05k|        return *this;
   58|  1.05k|    }
_ZN10OpenAutoIt7VariantaSEOS0_:
   61|  3.50k|    {
   62|  3.50k|        Clear();
   63|  3.50k|        move_from(phi::move(other));
   64|       |
   65|  3.50k|        return *this;
   66|  3.50k|    }
_ZN10OpenAutoIt7Variant5ClearEv:
   69|   227k|    {
   70|   227k|        switch (m_Type)
   71|   227k|        {
   72|      0|            case Type::Array:
  ------------------
  |  Branch (72:13): [True: 0, False: 227k]
  ------------------
   73|      0|                PHI_ASSERT(array.data());
   74|       |
   75|      0|                array.~vector();
   76|      0|                return;
   77|       |
   78|  40.1k|            case Type::String:
  ------------------
  |  Branch (78:13): [True: 40.1k, False: 186k]
  ------------------
   79|  40.1k|            case Type::Function:
  ------------------
  |  Branch (79:13): [True: 0, False: 227k]
  ------------------
   80|  40.1k|                PHI_ASSERT(string.c_str());
   81|       |
   82|  40.1k|                string.~basic_string();
   83|  40.1k|                return;
   84|       |
   85|      0|            case Type::Binary:
  ------------------
  |  Branch (85:13): [True: 0, False: 227k]
  ------------------
   86|      0|                PHI_ASSERT(binary.c_str());
   87|       |
   88|      0|                binary.~basic_string();
   89|      0|                return;
   90|       |
   91|   186k|            default:
  ------------------
  |  Branch (91:13): [True: 186k, False: 40.1k]
  ------------------
   92|       |                // The other types are trivially destructable
   93|   186k|                return;
   94|   227k|        }
   95|       |
   96|      0|        PHI_ASSERT_NOT_REACHED();
   97|      0|    }
_ZNK10OpenAutoIt7Variant7GetTypeEv:
  102|    328|    {
  103|    328|        return m_Type;
  104|    328|    }
_ZNK10OpenAutoIt7Variant11GetTypeNameEv:
  109|     86|    {
  110|     86|        switch (m_Type)
  ------------------
  |  Branch (110:17): [True: 0, False: 86]
  ------------------
  111|     86|        {
  112|      0|            case Type::Array:
  ------------------
  |  Branch (112:13): [True: 0, False: 86]
  ------------------
  113|      0|                return "Array";
  114|      0|            case Type::Binary:
  ------------------
  |  Branch (114:13): [True: 0, False: 86]
  ------------------
  115|      0|                return "Binary";
  116|      0|            case Type::Boolean:
  ------------------
  |  Branch (116:13): [True: 0, False: 86]
  ------------------
  117|      0|                return "Boolean";
  118|      0|            case Type::Double:
  ------------------
  |  Branch (118:13): [True: 0, False: 86]
  ------------------
  119|      0|                return "Double";
  120|      0|            case Type::Function:
  ------------------
  |  Branch (120:13): [True: 0, False: 86]
  ------------------
  121|      0|                return "Function";
  122|      0|            case Type::Int64:
  ------------------
  |  Branch (122:13): [True: 0, False: 86]
  ------------------
  123|      0|                return "Int64";
  124|      0|            case Type::Keyword:
  ------------------
  |  Branch (124:13): [True: 0, False: 86]
  ------------------
  125|      0|                return "Keyword";
  126|      0|            case Type::Pointer:
  ------------------
  |  Branch (126:13): [True: 0, False: 86]
  ------------------
  127|      0|                return "Pointer";
  128|     86|            case Type::String:
  ------------------
  |  Branch (128:13): [True: 86, False: 0]
  ------------------
  129|     86|                return "String";
  130|     86|        }
  131|       |
  132|      0|        PHI_ASSERT_NOT_REACHED();
  133|      0|        return "";
  134|     86|    }
_ZNK10OpenAutoIt7Variant7IsInt64Ev:
  139|  36.7k|    {
  140|  36.7k|        return m_Type == Type::Int64;
  141|  36.7k|    }
_ZNK10OpenAutoIt7Variant9IsBooleanEv:
  149|  60.7k|    {
  150|  60.7k|        return m_Type == Type::Boolean;
  151|  60.7k|    }
_ZNK10OpenAutoIt7Variant8IsStringEv:
  154|    207|    {
  155|    207|        return m_Type == Type::String;
  156|    207|    }
_ZNK10OpenAutoIt7Variant7AsInt64Ev:
  205|  74.7k|    {
  206|  74.7k|        PHI_ASSERT(m_Type == Type::Int64);
  207|       |
  208|  74.7k|        return int64;
  209|  74.7k|    }
_ZNK10OpenAutoIt7Variant8AsDoubleEv:
  219|  18.9k|    {
  220|  18.9k|        PHI_ASSERT(m_Type == Type::Double);
  221|       |
  222|  18.9k|        return floating_point;
  223|  18.9k|    }
_ZNK10OpenAutoIt7Variant9AsBooleanEv:
  233|  60.7k|    {
  234|  60.7k|        PHI_ASSERT(m_Type == Type::Boolean);
  235|       |
  236|  60.7k|        return boolean;
  237|  60.7k|    }
_ZNK10OpenAutoIt7Variant8AsStringEv:
  247|    209|    {
  248|    209|        PHI_ASSERT(m_Type == Type::String);
  249|       |
  250|    209|        return string;
  251|    209|    }
_ZNK10OpenAutoIt7Variant13CastToBooleanEv:
  331|  60.7k|    {
  332|       |        // https://www.autoitscript.com/autoit3/docs/intro/lang_datatypes.htm
  333|       |        // "Strings and numbers can be used as Booleans. An empty string "" equals Boolean False as does the number 0. Any other number value will be equal to Boolean True"
  334|       |        // "Only an empty string ("") will be a Boolean False.
  335|       |        // Any other string values(including a string equal "0") will be a Boolean True."
  336|       |
  337|  60.7k|        switch (m_Type)
  ------------------
  |  Branch (337:17): [True: 0, False: 60.7k]
  ------------------
  338|  60.7k|        {
  339|      0|            case Type::Array:
  ------------------
  |  Branch (339:13): [True: 0, False: 60.7k]
  ------------------
  340|      0|            case Type::Function:
  ------------------
  |  Branch (340:13): [True: 0, False: 60.7k]
  ------------------
  341|      2|            case Type::Keyword:
  ------------------
  |  Branch (341:13): [True: 2, False: 60.7k]
  ------------------
  342|       |                // These types are always false regardless of their value
  343|      2|                return Variant::MakeBoolean(false);
  344|       |
  345|      0|            case Type::Binary: {
  ------------------
  |  Branch (345:13): [True: 0, False: 60.7k]
  ------------------
  346|       |                // TODO:
  347|      0|                return {};
  348|      0|            }
  349|       |
  350|      0|            case Type::Boolean:
  ------------------
  |  Branch (350:13): [True: 0, False: 60.7k]
  ------------------
  351|       |                // Nothing todo as we already have a boolean
  352|      0|                return *this;
  353|       |
  354|  18.9k|            case Type::Double: {
  ------------------
  |  Branch (354:13): [True: 18.9k, False: 41.8k]
  ------------------
  355|  18.9k|                const phi::f64 value = AsDouble();
  356|       |
  357|  18.9k|                PHI_GCC_SUPPRESS_WARNING_WITH_PUSH("-Wfloat-equal")
  358|       |
  359|       |                // Everything apart from "0.0" is considered true
  360|  18.9k|                return MakeBoolean(value.unsafe() != 0.0);
  361|       |
  362|      0|                PHI_GCC_SUPPRESS_WARNING_POP()
  363|      0|            }
  364|       |
  365|  41.8k|            case Type::Int64: {
  ------------------
  |  Branch (365:13): [True: 41.8k, False: 18.9k]
  ------------------
  366|  41.8k|                const phi::i64 value = AsInt64();
  367|       |
  368|       |                // Everything apart from "0" is considered true
  369|  41.8k|                return MakeBoolean(value != 0);
  370|      0|            }
  371|       |
  372|      0|            case Type::Pointer: {
  ------------------
  |  Branch (372:13): [True: 0, False: 60.7k]
  ------------------
  373|      0|                const ptr_t value = AsPointer();
  374|       |
  375|       |                // Everything apart from "nullptr/0" is considered true
  376|      0|                return MakeBoolean(value != 0);
  377|      0|            }
  378|       |
  379|      2|            case Type::String: {
  ------------------
  |  Branch (379:13): [True: 2, False: 60.7k]
  ------------------
  380|      2|                const string_t value = AsString();
  381|       |
  382|       |                // Every apart from the empty string "" is considered true
  383|      2|                return MakeBoolean(!value.empty());
  384|      0|            }
  385|  60.7k|        }
  386|       |
  387|      0|        PHI_ASSERT_NOT_REACHED();
  388|      0|        return {};
  389|  60.7k|    }
_ZNK10OpenAutoIt7Variant12CastToStringEv:
  410|    207|    {
  411|       |        // https://www.autoitscript.com/autoit3/docs/functions/String.htm
  412|    207|        switch (m_Type)
  ------------------
  |  Branch (412:17): [True: 0, False: 207]
  ------------------
  413|    207|        {
  414|      0|            case Type::Array: {
  ------------------
  |  Branch (414:13): [True: 0, False: 207]
  ------------------
  415|       |                // TODO:
  416|      0|                return {};
  417|      0|            }
  418|       |
  419|      0|            case Type::Binary: {
  ------------------
  |  Branch (419:13): [True: 0, False: 207]
  ------------------
  420|       |                // TODO:
  421|      0|                return {};
  422|      0|            }
  423|       |
  424|      0|            case Type::Boolean: {
  ------------------
  |  Branch (424:13): [True: 0, False: 207]
  ------------------
  425|      0|                const phi::boolean value = AsBoolean();
  426|       |
  427|      0|                static const constexpr phi::string_view string_true{"True"};
  428|      0|                static const constexpr phi::string_view string_false{"False"};
  429|       |
  430|      0|                return MakeString(value ? string_true : string_false);
  ------------------
  |  Branch (430:35): [True: 0, False: 0]
  ------------------
  431|      0|            }
  432|       |
  433|      0|            case Type::Double: {
  ------------------
  |  Branch (433:13): [True: 0, False: 207]
  ------------------
  434|      0|                const phi::f64 value = AsDouble();
  435|       |
  436|       |                // TODO: std::to_string outputs our values with trailing zeros which is not what we want
  437|      0|                return MakeString(std::to_string(value.unsafe()));
  438|      0|            }
  439|       |
  440|      0|            case Type::Function: {
  ------------------
  |  Branch (440:13): [True: 0, False: 207]
  ------------------
  441|       |                // TODO:
  442|       |
  443|      0|                return {};
  444|      0|            }
  445|       |
  446|     94|            case Type::Int64: {
  ------------------
  |  Branch (446:13): [True: 94, False: 113]
  ------------------
  447|     94|                const phi::i64 value = AsInt64();
  448|       |
  449|     94|                return MakeString(std::to_string(value.unsafe()));
  450|      0|            }
  451|       |
  452|      0|            case Type::Keyword: {
  ------------------
  |  Branch (452:13): [True: 0, False: 207]
  ------------------
  453|      0|                const OpenAutoIt::TokenKind value = AsKeyword();
  454|       |
  455|      0|                static const constexpr phi::string_view string_default{"Default"};
  456|      0|                static const constexpr phi::string_view string_null{"Null"};
  457|       |
  458|      0|                switch (value)
  459|      0|                {
  460|      0|                    case OpenAutoIt::TokenKind::KW_Default:
  ------------------
  |  Branch (460:21): [True: 0, False: 0]
  ------------------
  461|      0|                        return MakeString(string_default);
  462|       |
  463|      0|                    case OpenAutoIt::TokenKind::KW_Null:
  ------------------
  |  Branch (463:21): [True: 0, False: 0]
  ------------------
  464|      0|                        return MakeString(string_null);
  465|       |
  466|      0|                    default:
  ------------------
  |  Branch (466:21): [True: 0, False: 0]
  ------------------
  467|      0|                        PHI_ASSERT_NOT_REACHED();
  468|      0|                }
  469|       |
  470|      0|                PHI_ASSERT_NOT_REACHED();
  471|      0|                break;
  472|      0|            }
  473|       |
  474|      0|            case Type::Pointer: {
  ------------------
  |  Branch (474:13): [True: 0, False: 207]
  ------------------
  475|       |                // TODO:
  476|      0|                return {};
  477|      0|            }
  478|       |
  479|    113|            case Type::String:
  ------------------
  |  Branch (479:13): [True: 113, False: 94]
  ------------------
  480|       |                // Return as is
  481|    113|                return *this;
  482|    207|        }
  483|       |
  484|      0|        PHI_ASSERT_NOT_REACHED();
  485|      0|        return {};
  486|    207|    }
_ZN10OpenAutoIt7Variant11MakeBooleanEN3phi7booleanE:
  494|  61.5k|    {
  495|  61.5k|        Variant variant;
  496|       |
  497|  61.5k|        variant.m_Type  = Type::Boolean;
  498|  61.5k|        variant.boolean = value;
  499|       |
  500|  61.5k|        return variant;
  501|  61.5k|    }
_ZN10OpenAutoIt7Variant10MakeDoubleEN3phi14floating_pointIdEE:
  504|  19.8k|    {
  505|  19.8k|        Variant variant;
  506|       |
  507|  19.8k|        variant.m_Type         = Type::Double;
  508|  19.8k|        variant.floating_point = value;
  509|       |
  510|  19.8k|        return variant;
  511|  19.8k|    }
_ZN10OpenAutoIt7Variant7MakeIntEN3phi7integerIlEE:
  514|  98.2k|    {
  515|  98.2k|        Variant variant;
  516|       |
  517|  98.2k|        variant.m_Type = Type::Int64;
  518|  98.2k|        variant.int64  = value;
  519|       |
  520|  98.2k|        return variant;
  521|  98.2k|    }
_ZN10OpenAutoIt7Variant11MakeKeywordENS_9TokenKindE:
  526|    720|    {
  527|    720|        PHI_ASSERT(value == TokenKind::KW_Default || value == TokenKind::KW_Null);
  528|       |
  529|    720|        Variant variant;
  530|       |
  531|    720|        variant.m_Type  = Type::Keyword;
  532|    720|        variant.keyword = value;
  533|       |
  534|    720|        return variant;
  535|    720|    }
_ZN10OpenAutoIt7Variant10MakeStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  563|  11.5k|    {
  564|  11.5k|        Variant variant;
  565|       |
  566|       |        // Reserve engough space for the string plus the null terminator
  567|  11.5k|        variant.string.reserve(value.length().unsafe() + 1u);
  568|       |
  569|  11.5k|        variant.m_Type = Type::String;
  570|  11.5k|        variant.string = string_t{value.data(), value.length().unsafe()};
  571|       |
  572|       |        // Ensure the string is null terminated
  573|  11.5k|        variant.string.push_back('\0');
  574|       |
  575|  11.5k|        return variant;
  576|  11.5k|    }
_ZN10OpenAutoIt7Variant10MakeStringEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE:
  592|     94|    {
  593|     94|        Variant variant;
  594|       |
  595|     94|        variant.m_Type = Type::String;
  596|     94|        variant.string = phi::move(value);
  597|       |
  598|       |        // Ensure the string is null terminated
  599|     94|        variant.string.push_back('\0');
  600|       |
  601|     94|        return variant;
  602|     94|    }
_ZN10OpenAutoIt7Variant9copy_fromERKS0_:
  605|  5.51k|    {
  606|  5.51k|        m_Type = other.m_Type;
  607|       |
  608|  5.51k|        switch (m_Type)
  ------------------
  |  Branch (608:17): [True: 0, False: 5.51k]
  ------------------
  609|  5.51k|        {
  610|      0|            case Type::Array:
  ------------------
  |  Branch (610:13): [True: 0, False: 5.51k]
  ------------------
  611|      0|                new (&array) array_t(other.array);
  612|      0|                return;
  613|       |
  614|      0|            case Type::Binary:
  ------------------
  |  Branch (614:13): [True: 0, False: 5.51k]
  ------------------
  615|      0|                new (&binary) binary_t(other.binary);
  616|      0|                return;
  617|       |
  618|    286|            case Type::Boolean:
  ------------------
  |  Branch (618:13): [True: 286, False: 5.23k]
  ------------------
  619|    286|                boolean = other.boolean;
  620|    286|                return;
  621|       |
  622|    380|            case Type::Double:
  ------------------
  |  Branch (622:13): [True: 380, False: 5.13k]
  ------------------
  623|    380|                floating_point = other.floating_point;
  624|    380|                return;
  625|       |
  626|      0|            case Type::Function:
  ------------------
  |  Branch (626:13): [True: 0, False: 5.51k]
  ------------------
  627|      0|                new (&string) string_t(other.string);
  628|      0|                return;
  629|       |
  630|  3.37k|            case Type::Int64:
  ------------------
  |  Branch (630:13): [True: 3.37k, False: 2.14k]
  ------------------
  631|  3.37k|                int64 = other.int64;
  632|  3.37k|                return;
  633|       |
  634|    366|            case Type::Keyword:
  ------------------
  |  Branch (634:13): [True: 366, False: 5.15k]
  ------------------
  635|    366|                keyword = other.keyword;
  636|    366|                return;
  637|       |
  638|      0|            case Type::Pointer:
  ------------------
  |  Branch (638:13): [True: 0, False: 5.51k]
  ------------------
  639|      0|                pointer = other.pointer;
  640|      0|                return;
  641|       |
  642|  1.11k|            case Type::String:
  ------------------
  |  Branch (642:13): [True: 1.11k, False: 4.40k]
  ------------------
  643|  1.11k|                new (&string) string_t(other.string);
  644|  1.11k|                return;
  645|  5.51k|        }
  646|       |
  647|      0|        PHI_ASSERT_NOT_REACHED();
  648|      0|    }
_ZN10OpenAutoIt7Variant9move_fromEOS0_:
  651|  7.40k|    {
  652|  7.40k|        m_Type = other.m_Type;
  653|       |
  654|  7.40k|        switch (m_Type)
  ------------------
  |  Branch (654:17): [True: 0, False: 7.40k]
  ------------------
  655|  7.40k|        {
  656|      0|            case Type::Array:
  ------------------
  |  Branch (656:13): [True: 0, False: 7.40k]
  ------------------
  657|      0|                new (&array) array_t(phi::move(other.array));
  658|      0|                return;
  659|       |
  660|      0|            case Type::Binary:
  ------------------
  |  Branch (660:13): [True: 0, False: 7.40k]
  ------------------
  661|      0|                new (&binary) binary_t(phi::move(other.binary));
  662|      0|                return;
  663|       |
  664|    407|            case Type::Boolean:
  ------------------
  |  Branch (664:13): [True: 407, False: 6.99k]
  ------------------
  665|    407|                boolean = other.boolean;
  666|    407|                return;
  667|       |
  668|     69|            case Type::Double:
  ------------------
  |  Branch (668:13): [True: 69, False: 7.33k]
  ------------------
  669|     69|                floating_point = other.floating_point;
  670|     69|                return;
  671|       |
  672|      0|            case Type::Function:
  ------------------
  |  Branch (672:13): [True: 0, False: 7.40k]
  ------------------
  673|      0|                new (&string) string_t(phi::move(other.string));
  674|      0|                return;
  675|       |
  676|  1.72k|            case Type::Int64:
  ------------------
  |  Branch (676:13): [True: 1.72k, False: 5.67k]
  ------------------
  677|  1.72k|                int64 = other.int64;
  678|  1.72k|                return;
  679|       |
  680|     86|            case Type::Keyword:
  ------------------
  |  Branch (680:13): [True: 86, False: 7.31k]
  ------------------
  681|     86|                keyword = other.keyword;
  682|     86|                return;
  683|       |
  684|      0|            case Type::Pointer:
  ------------------
  |  Branch (684:13): [True: 0, False: 7.40k]
  ------------------
  685|      0|                pointer = other.pointer;
  686|      0|                return;
  687|       |
  688|  5.11k|            case Type::String:
  ------------------
  |  Branch (688:13): [True: 5.11k, False: 2.28k]
  ------------------
  689|  5.11k|                new (&string) string_t(phi::move(other.string));
  690|  5.11k|                return;
  691|  7.40k|        }
  692|       |
  693|      0|        PHI_ASSERT_NOT_REACHED();
  694|      0|    }

_ZN10OpenAutoIt14VirtualMachine17PushFunctionScopeENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEERNS1_6vectorIN3phi18not_null_scope_ptrINS_12ASTStatementEEENS1_9allocatorISA_EEEE:
   18|    456|    {
   19|    456|        m_Scopes.emplace_front(ScopeKind::Function, function_name, statements);
   20|    456|    }
_ZN10OpenAutoIt14VirtualMachine14PushBlockScopeERNSt3__16vectorIN3phi18not_null_scope_ptrINS_12ASTStatementEEENS1_9allocatorIS6_EEEE:
   23|  60.5k|    {
   24|  60.5k|        m_Scopes.emplace_back(ScopeKind::Block, "<block_scope>", statements);
   25|  60.5k|    }
_ZN10OpenAutoIt14VirtualMachine15PushGlobalScopeERNSt3__16vectorIN3phi18not_null_scope_ptrINS_12ASTStatementEEENS1_9allocatorIS6_EEEE:
   28|  4.65k|    {
   29|  4.65k|        m_Scopes.emplace_back(ScopeKind::Function, "<global>", statements);
   30|  4.65k|    }
_ZN10OpenAutoIt14VirtualMachine8PopScopeEv:
   33|  4.22k|    {
   34|  4.22k|        m_Scopes.pop_front();
   35|  4.22k|    }
_ZN10OpenAutoIt14VirtualMachine15GetCurrentScopeEv:
   38|   108k|    {
   39|   108k|        PHI_ASSERT(!m_Scopes.empty());
   40|       |
   41|   108k|        return m_Scopes.front();
   42|   108k|    }
_ZNK10OpenAutoIt14VirtualMachine15GetCurrentScopeEv:
   45|  96.8k|    {
   46|  96.8k|        PHI_ASSERT(!m_Scopes.empty());
   47|       |
   48|  96.8k|        return m_Scopes.front();
   49|  96.8k|    }
_ZNK10OpenAutoIt14VirtualMachine14GetStrackTraceEv:
   66|  4.24k|    {
   67|       |        // Count number of function elements
   68|  4.24k|        phi::u64 count = 0u;
   69|  4.24k|        for (const Scope& scope : m_Scopes)
  ------------------
  |  Branch (69:33): [True: 4.27k, False: 4.24k]
  ------------------
   70|  4.27k|        {
   71|  4.27k|            if (scope.kind == ScopeKind::Function)
  ------------------
  |  Branch (71:17): [True: 4.27k, False: 0]
  ------------------
   72|  4.27k|            {
   73|  4.27k|                count += 1u;
   74|  4.27k|            }
   75|  4.27k|        }
   76|       |
   77|  4.24k|        StackTrace stack_trace;
   78|  4.24k|        stack_trace.reserve(count.unsafe());
   79|       |
   80|       |        // Populate the stacktrace
   81|  4.24k|        for (const Scope& scope : m_Scopes)
  ------------------
  |  Branch (81:33): [True: 4.27k, False: 4.24k]
  ------------------
   82|  4.27k|        {
   83|  4.27k|            if (scope.kind == ScopeKind::Function)
  ------------------
  |  Branch (83:17): [True: 4.27k, False: 0]
  ------------------
   84|  4.27k|            {
   85|       |                // TODO: Line and Column not implemented
   86|  4.27k|                stack_trace.emplace_back(StackTraceEntry{
   87|  4.27k|                        .file = "", .function = scope.name, .line = 0u, .column = 0u});
   88|  4.27k|            }
   89|  4.27k|        }
   90|       |
   91|  4.24k|        return phi::move(stack_trace);
   92|  4.24k|    }
_ZN10OpenAutoIt14VirtualMachine12PushVariableENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEENS_7VariantE:
   95|  5.42k|    {
   96|  5.42k|        Scope& current_scope = GetCurrentScope();
   97|       |
   98|  5.42k|        if (current_scope.variables.contains(name))
  ------------------
  |  Branch (98:13): [True: 1.91k, False: 3.50k]
  ------------------
   99|  1.91k|        {
  100|  1.91k|            return false;
  101|  1.91k|        }
  102|       |
  103|  3.50k|        current_scope.variables[name] = phi::move(value);
  104|  3.50k|        return true;
  105|  5.42k|    }
_ZN10OpenAutoIt14VirtualMachine20PushOrAssignVariableENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEENS_7VariantE:
  134|  2.33k|    {
  135|  2.33k|        Scope& current_scope = GetCurrentScope();
  136|       |
  137|  2.33k|        current_scope.variables.insert_or_assign(name, value);
  138|  2.33k|    }
_ZNK10OpenAutoIt14VirtualMachine20LookupVariableByNameENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEE:
  142|  2.71k|    {
  143|  2.71k|        phi::boolean found_function_boundary{false};
  144|       |
  145|  2.71k|        for (const Scope& scope : m_Scopes)
  ------------------
  |  Branch (145:33): [True: 2.71k, False: 2.41k]
  ------------------
  146|  2.71k|        {
  147|  2.71k|            if (scope.kind == ScopeKind::Function)
  ------------------
  |  Branch (147:17): [True: 2.71k, False: 0]
  ------------------
  148|  2.71k|            {
  149|  2.71k|                if (found_function_boundary)
  ------------------
  |  Branch (149:21): [True: 0, False: 2.71k]
  ------------------
  150|      0|                {
  151|       |                    // We hit the function boundary so only check the global scope and don't continue
  152|      0|                    const Scope& global_scope = GetGlobalScope();
  153|      0|                    if (global_scope.variables.contains(variable_name))
  ------------------
  |  Branch (153:25): [True: 0, False: 0]
  ------------------
  154|      0|                    {
  155|      0|                        return global_scope.variables.at(variable_name);
  156|      0|                    }
  157|       |
  158|      0|                    return {};
  159|      0|                }
  160|       |
  161|  2.71k|                found_function_boundary = true;
  162|  2.71k|            }
  163|       |
  164|  2.71k|            if (scope.variables.contains(variable_name))
  ------------------
  |  Branch (164:17): [True: 300, False: 2.41k]
  ------------------
  165|    300|            {
  166|    300|                return scope.variables.at(variable_name);
  167|    300|            }
  168|  2.71k|        }
  169|       |
  170|  2.41k|        return {};
  171|  2.71k|    }
_ZNK10OpenAutoIt14VirtualMachine6CanRunEv:
  174|   105k|    {
  175|   105k|        return !m_Scopes.empty() && !m_Aborting;
  ------------------
  |  Branch (175:16): [True: 101k, False: 3.81k]
  |  Branch (175:37): [True: 101k, False: 779]
  ------------------
  176|   105k|    }
_ZN10OpenAutoIt14VirtualMachine17OverwriteIOSreamsEN3phi12observer_ptrINSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEEES8_:
  180|  4.65k|    {
  181|  4.65k|        m_Stdout = out;
  182|  4.65k|        m_Stderr = err;
  183|  4.65k|    }
_ZNK10OpenAutoIt14VirtualMachine9GetStdoutEv:
  186|     36|    {
  187|     36|        return m_Stdout;
  188|     36|    }
_ZNK10OpenAutoIt14VirtualMachine9GetStderrEv:
  191|    171|    {
  192|    171|        return m_Stderr;
  193|    171|    }

