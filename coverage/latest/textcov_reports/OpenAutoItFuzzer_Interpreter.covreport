_ZN3fmt2v96detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  393|    302|    typename std::make_unsigned<Int>::type {
  394|    302|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  352|    604|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (352:37): [Folded - Ignored]
  |  |  |  Branch (352:37): [True: 302, False: 0]
  |  |  ------------------
  ------------------
  395|    302|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  396|    302|}
_ZN3fmt2v96detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  328|  2.42k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v917basic_string_viewIcE4sizeEv:
  460|  2.21k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  328|    302|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE4sizeEv:
  914|    378|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail6bufferIcEC2EPcmm:
  886|    378|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt2v96detail6bufferIcE3setEPcm:
  892|    378|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  893|    378|    ptr_ = buf_data;
  894|    378|    capacity_ = buf_capacity;
  895|    378|  }
_ZN3fmt2v96detail6bufferIcE4dataEv:
  920|    378|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt2v917basic_string_viewIcE5beginEv:
  462|    832|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt2v917basic_string_viewIcE3endEv:
  463|    832|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKc:
  443|     58|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt2v96detail10locale_refC2Ev:
 1714|    436|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1281|    378|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt2v99monostateC2Ev:
  311|    378|  constexpr monostate() {}
_ZN3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1975|    378|      : desc_(desc), values_(values) {}
_ZNK3fmt2v917basic_string_viewIcE4dataEv:
  457|  1.00k|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKcm:
  428|  1.07k|      : data_(s), size_(count) {}
_ZN3fmt2v96detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  393|  2.12k|    typename std::make_unsigned<Int>::type {
  394|  2.12k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  352|  4.24k|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (352:37): [Folded - Ignored]
  |  |  |  Branch (352:37): [True: 2.12k, False: 0]
  |  |  ------------------
  ------------------
  395|  2.12k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  396|  2.12k|}
_ZN3fmt2v96detail6bufferIcE11try_reserveEm:
  939|  1.13k|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  940|  1.13k|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (940:9): [True: 0, False: 1.13k]
  ------------------
  941|  1.13k|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 2013|    378|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 2014|    378|    format_arg arg;
 2015|    378|    if (!is_packed()) {
  ------------------
  |  Branch (2015:9): [True: 0, False: 378]
  ------------------
 2016|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (2016:11): [True: 0, False: 0]
  ------------------
 2017|      0|      return arg;
 2018|      0|    }
 2019|    378|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (2019:9): [True: 0, False: 378]
  ------------------
 2020|    378|    arg.type_ = type(id);
 2021|    378|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (2021:9): [True: 0, False: 378]
  ------------------
 2022|    378|    arg.value_ = values_[id];
 2023|    378|    return arg;
 2024|    378|  }
_ZN3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1602|    378|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1960|    378|  constexpr auto is_packed() const -> bool {
 1961|    378|    return (desc_ & detail::is_unpacked_bit) == 0;
 1962|    378|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1967|    378|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1968|    378|    int shift = index * detail::packed_arg_bits;
 1969|    378|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1970|    378|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1971|    378|  }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1604|    378|  constexpr explicit operator bool() const noexcept {
 1605|    378|    return type_ != detail::type::none_type;
 1606|    378|  }
_ZN3fmt2v916visit_format_argINS0_6detail21default_arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1625|     76|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1626|     76|  switch (arg.type_) {
  ------------------
  |  Branch (1626:11): [True: 0, False: 76]
  ------------------
 1627|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1627:3): [True: 0, False: 76]
  ------------------
 1628|      0|    break;
 1629|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1629:3): [True: 0, False: 76]
  ------------------
 1630|      0|    return vis(arg.value_.int_value);
 1631|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1631:3): [True: 0, False: 76]
  ------------------
 1632|      0|    return vis(arg.value_.uint_value);
 1633|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1633:3): [True: 0, False: 76]
  ------------------
 1634|      0|    return vis(arg.value_.long_long_value);
 1635|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1635:3): [True: 0, False: 76]
  ------------------
 1636|      0|    return vis(arg.value_.ulong_long_value);
 1637|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1637:3): [True: 0, False: 76]
  ------------------
 1638|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1639|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1639:3): [True: 0, False: 76]
  ------------------
 1640|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1641|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1641:3): [True: 0, False: 76]
  ------------------
 1642|      0|    return vis(arg.value_.bool_value);
 1643|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1643:3): [True: 0, False: 76]
  ------------------
 1644|      0|    return vis(arg.value_.char_value);
 1645|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1645:3): [True: 0, False: 76]
  ------------------
 1646|      0|    return vis(arg.value_.float_value);
 1647|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1647:3): [True: 0, False: 76]
  ------------------
 1648|      0|    return vis(arg.value_.double_value);
 1649|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1649:3): [True: 0, False: 76]
  ------------------
 1650|      0|    return vis(arg.value_.long_double_value);
 1651|      0|  case detail::type::cstring_type:
  ------------------
  |  Branch (1651:3): [True: 0, False: 76]
  ------------------
 1652|      0|    return vis(arg.value_.string.data);
 1653|     76|  case detail::type::string_type:
  ------------------
  |  Branch (1653:3): [True: 76, False: 0]
  ------------------
 1654|     76|    using sv = basic_string_view<typename Context::char_type>;
 1655|     76|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1656|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1656:3): [True: 0, False: 76]
  ------------------
 1657|      0|    return vis(arg.value_.pointer);
 1658|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1658:3): [True: 0, False: 76]
  ------------------
 1659|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1660|     76|  }
 1661|      0|  return vis(monostate());
 1662|     76|}
_ZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  842|  1.13k|    -> Container& {
  843|  1.13k|  using base = std::back_insert_iterator<Container>;
  844|  1.13k|  struct accessor : base {
  845|  1.13k|    accessor(base b) : base(b) {}
  846|  1.13k|    using base::container;
  847|  1.13k|  };
  848|  1.13k|  return *accessor(it).container;
  849|  1.13k|}
_ZZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  845|  1.13k|    accessor(base b) : base(b) {}
_ZNK3fmt2v96detail6fill_tIcE4sizeEv:
 2091|    302|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt2v96detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1667|  1.13k|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1668|  1.13k|  get_container(out).append(begin, end);
 1669|  1.13k|  return out;
 1670|  1.13k|}
_ZN3fmt2v912format_specsIcEC2Ev:
 2142|    302|        localized(false) {}
_ZN3fmt2v926basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  681|    378|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1811|    378|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE3outEv:
 1826|  1.13k|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2570|    378|    basic_string_view<Char> format_str, Handler&& handler) {
 2571|       |  // Workaround a name-lookup bug in MSVC's modules implementation.
 2572|    378|  using detail::find;
 2573|       |
 2574|    378|  auto begin = format_str.data();
 2575|    378|  auto end = begin + format_str.size();
 2576|    378|  if (end - begin < 32) {
  ------------------
  |  Branch (2576:7): [True: 320, False: 58]
  ------------------
 2577|       |    // Use a simple loop instead of memchr for small strings.
 2578|    320|    const Char* p = begin;
 2579|  7.52k|    while (p != end) {
  ------------------
  |  Branch (2579:12): [True: 7.20k, False: 320]
  ------------------
 2580|  7.20k|      auto c = *p++;
 2581|  7.20k|      if (c == '{') {
  ------------------
  |  Branch (2581:11): [True: 320, False: 6.88k]
  ------------------
 2582|    320|        handler.on_text(begin, p - 1);
 2583|    320|        begin = p = parse_replacement_field(p - 1, end, handler);
 2584|  6.88k|      } else if (c == '}') {
  ------------------
  |  Branch (2584:18): [True: 0, False: 6.88k]
  ------------------
 2585|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2585:13): [True: 0, False: 0]
  |  Branch (2585:25): [True: 0, False: 0]
  ------------------
 2586|      0|          return handler.on_error("unmatched '}' in format string");
 2587|      0|        handler.on_text(begin, p);
 2588|      0|        begin = ++p;
 2589|      0|      }
 2590|  7.20k|    }
 2591|    320|    handler.on_text(begin, end);
 2592|    320|    return;
 2593|    320|  }
 2594|     58|  struct writer {
 2595|     58|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2596|     58|      if (from == to) return;
 2597|     58|      for (;;) {
 2598|     58|        const Char* p = nullptr;
 2599|     58|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2600|     58|          return handler_.on_text(from, to);
 2601|     58|        ++p;
 2602|     58|        if (p == to || *p != '}')
 2603|     58|          return handler_.on_error("unmatched '}' in format string");
 2604|     58|        handler_.on_text(from, p);
 2605|     58|        from = p + 1;
 2606|     58|      }
 2607|     58|    }
 2608|     58|    Handler& handler_;
 2609|     58|  } write = {handler};
 2610|    116|  while (begin != end) {
  ------------------
  |  Branch (2610:10): [True: 116, False: 0]
  ------------------
 2611|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2612|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2613|    116|    const Char* p = begin;
 2614|    116|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2614:9): [True: 116, False: 0]
  |  Branch (2614:26): [True: 58, False: 58]
  ------------------
 2615|     58|      return write(begin, end);
 2616|     58|    write(begin, p);
 2617|     58|    begin = parse_replacement_field(p, end, handler);
 2618|     58|  }
 2619|     58|}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1829|  1.13k|  void advance_to(iterator it) {
 1830|  1.13k|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1830:9): [Folded - Ignored]
  ------------------
 1831|  1.13k|  }
_ZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2533|    378|                                           Handler&& handler) -> const Char* {
 2534|    378|  struct id_adapter {
 2535|    378|    Handler& handler;
 2536|    378|    int arg_id;
 2537|       |
 2538|    378|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2539|    378|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2540|    378|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2541|    378|      arg_id = handler.on_arg_id(id);
 2542|    378|    }
 2543|    378|  };
 2544|       |
 2545|    378|  ++begin;
 2546|    378|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2546:7): [True: 0, False: 378]
  ------------------
 2547|    378|  if (*begin == '}') {
  ------------------
  |  Branch (2547:7): [True: 76, False: 302]
  ------------------
 2548|     76|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2549|    302|  } else if (*begin == '{') {
  ------------------
  |  Branch (2549:14): [True: 0, False: 302]
  ------------------
 2550|      0|    handler.on_text(begin, begin + 1);
 2551|    302|  } else {
 2552|    302|    auto adapter = id_adapter{handler, 0};
 2553|    302|    begin = parse_arg_id(begin, end, adapter);
 2554|    302|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2554:14): [True: 302, False: 0]
  ------------------
 2555|    302|    if (c == '}') {
  ------------------
  |  Branch (2555:9): [True: 0, False: 302]
  ------------------
 2556|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2557|    302|    } else if (c == ':') {
  ------------------
  |  Branch (2557:16): [True: 302, False: 0]
  ------------------
 2558|    302|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2559|    302|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2559:11): [True: 0, False: 302]
  |  Branch (2559:27): [True: 0, False: 302]
  ------------------
 2560|      0|        return handler.on_error("unknown format specifier"), end;
 2561|    302|    } else {
 2562|      0|      return handler.on_error("missing '}' in format string"), end;
 2563|      0|    }
 2564|    302|  }
 2565|    378|  return begin + 1;
 2566|    378|}
_ZNK3fmt2v920basic_format_contextINS0_8appenderEcE3argEi:
 1813|    378|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZNK3fmt2v920basic_format_contextINS0_8appenderEcE4argsEv:
 1820|     76|  auto args() const -> const format_args& { return args_; }
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE6localeEv:
 1833|    378|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt2v926basic_format_parse_contextIcE11next_arg_idEv:
  705|    378|  FMT_CONSTEXPR auto next_arg_id() -> int {
  706|    378|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (706:9): [True: 0, False: 378]
  ------------------
  707|      0|      detail::throw_format_error(
  708|      0|          "cannot switch from manual to automatic argument indexing");
  709|      0|      return 0;
  710|      0|    }
  711|    378|    int id = next_arg_id_++;
  712|    378|    do_check_arg_id(id);
  713|    378|    return id;
  714|    378|  }
_ZN3fmt2v926basic_format_parse_contextIcE15do_check_arg_idEi:
  776|    378|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
  777|       |  // Argument id is only checked at compile-time during parsing because
  778|       |  // formatting has its own validation.
  779|    378|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (779:7): [Folded - Ignored]
  ------------------
  780|    378|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (780:8): [Folded - Ignored]
  |  Branch (780:28): [Folded - Ignored]
  ------------------
  781|      0|    using context = detail::compile_parse_context<Char>;
  782|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (782:9): [True: 0, False: 0]
  ------------------
  783|      0|      detail::throw_format_error("argument not found");
  784|      0|  }
  785|    378|}
_ZN3fmt2v96detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2298|    302|                                           Handler&& handler) -> const Char* {
 2299|    302|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  352|    302|      ::fmt::detail::ignore_unused((condition), (message))
  ------------------
 2300|    302|  Char c = *begin;
 2301|    302|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2301:7): [True: 302, False: 0]
  |  Branch (2301:19): [True: 0, False: 302]
  ------------------
 2302|    302|  handler.on_auto();
 2303|    302|  return begin;
 2304|    302|}
_ZZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2538|    302|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1608|    604|  auto type() const -> detail::type { return type_; }
_ZN3fmt2v96detail7arg_refIcEC2Ev:
 2151|    604|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt2v96detail7arg_refIcE5valueC2Ei:
 2166|    604|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2368|    302|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2369|    302|  auto c = '\0';
 2370|    302|  if (end - begin > 1) {
  ------------------
  |  Branch (2370:7): [True: 302, False: 0]
  ------------------
 2371|    302|    auto next = to_ascii(begin[1]);
 2372|    302|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2372:9): [True: 302, False: 0]
  ------------------
 2373|    302|  } else {
 2374|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2374:9): [True: 0, False: 0]
  ------------------
 2375|      0|    c = to_ascii(*begin);
 2376|      0|  }
 2377|       |
 2378|    302|  struct {
 2379|    302|    state current_state = state::start;
 2380|    302|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2381|    302|      if (current_state >= s || !valid)
 2382|    302|        throw_format_error("invalid format specifier");
 2383|    302|      current_state = s;
 2384|    302|    }
 2385|    302|  } enter_state;
 2386|       |
 2387|    302|  using pres = presentation_type;
 2388|    302|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2389|    302|  struct {
 2390|    302|    const Char*& begin;
 2391|    302|    dynamic_format_specs<Char>& specs;
 2392|    302|    type arg_type;
 2393|       |
 2394|    302|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2395|    302|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
 2396|    302|      specs.type = type;
 2397|    302|      return begin + 1;
 2398|    302|    }
 2399|    302|  } parse_presentation_type{begin, specs, arg_type};
 2400|       |
 2401|    302|  for (;;) {
 2402|    302|    switch (c) {
 2403|      0|    case '<':
  ------------------
  |  Branch (2403:5): [True: 0, False: 302]
  ------------------
 2404|      0|    case '>':
  ------------------
  |  Branch (2404:5): [True: 0, False: 302]
  ------------------
 2405|      0|    case '^':
  ------------------
  |  Branch (2405:5): [True: 0, False: 302]
  ------------------
 2406|      0|      enter_state(state::align);
 2407|      0|      specs.align = parse_align(c);
 2408|      0|      ++begin;
 2409|      0|      break;
 2410|      0|    case '+':
  ------------------
  |  Branch (2410:5): [True: 0, False: 302]
  ------------------
 2411|      0|    case '-':
  ------------------
  |  Branch (2411:5): [True: 0, False: 302]
  ------------------
 2412|      0|    case ' ':
  ------------------
  |  Branch (2412:5): [True: 0, False: 302]
  ------------------
 2413|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2414|      0|      switch (c) {
  ------------------
  |  Branch (2414:15): [True: 0, False: 0]
  ------------------
 2415|      0|      case '+':
  ------------------
  |  Branch (2415:7): [True: 0, False: 0]
  ------------------
 2416|      0|        specs.sign = sign::plus;
 2417|      0|        break;
 2418|      0|      case '-':
  ------------------
  |  Branch (2418:7): [True: 0, False: 0]
  ------------------
 2419|      0|        specs.sign = sign::minus;
 2420|      0|        break;
 2421|      0|      case ' ':
  ------------------
  |  Branch (2421:7): [True: 0, False: 0]
  ------------------
 2422|      0|        specs.sign = sign::space;
 2423|      0|        break;
 2424|      0|      }
 2425|      0|      ++begin;
 2426|      0|      break;
 2427|      0|    case '#':
  ------------------
  |  Branch (2427:5): [True: 0, False: 302]
  ------------------
 2428|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2429|      0|      specs.alt = true;
 2430|      0|      ++begin;
 2431|      0|      break;
 2432|      0|    case '0':
  ------------------
  |  Branch (2432:5): [True: 0, False: 302]
  ------------------
 2433|      0|      enter_state(state::zero);
 2434|      0|      if (!is_arithmetic_type(arg_type))
  ------------------
  |  Branch (2434:11): [True: 0, False: 0]
  ------------------
 2435|      0|        throw_format_error("format specifier requires numeric argument");
 2436|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2436:11): [True: 0, False: 0]
  ------------------
 2437|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2438|      0|        specs.align = align::numeric;
 2439|      0|        specs.fill[0] = Char('0');
 2440|      0|      }
 2441|      0|      ++begin;
 2442|      0|      break;
 2443|      0|    case '1':
  ------------------
  |  Branch (2443:5): [True: 0, False: 302]
  ------------------
 2444|      0|    case '2':
  ------------------
  |  Branch (2444:5): [True: 0, False: 302]
  ------------------
 2445|      0|    case '3':
  ------------------
  |  Branch (2445:5): [True: 0, False: 302]
  ------------------
 2446|      0|    case '4':
  ------------------
  |  Branch (2446:5): [True: 0, False: 302]
  ------------------
 2447|      0|    case '5':
  ------------------
  |  Branch (2447:5): [True: 0, False: 302]
  ------------------
 2448|      0|    case '6':
  ------------------
  |  Branch (2448:5): [True: 0, False: 302]
  ------------------
 2449|      0|    case '7':
  ------------------
  |  Branch (2449:5): [True: 0, False: 302]
  ------------------
 2450|      0|    case '8':
  ------------------
  |  Branch (2450:5): [True: 0, False: 302]
  ------------------
 2451|      0|    case '9':
  ------------------
  |  Branch (2451:5): [True: 0, False: 302]
  ------------------
 2452|      0|    case '{':
  ------------------
  |  Branch (2452:5): [True: 0, False: 302]
  ------------------
 2453|      0|      enter_state(state::width);
 2454|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2455|      0|      break;
 2456|      0|    case '.':
  ------------------
  |  Branch (2456:5): [True: 0, False: 302]
  ------------------
 2457|      0|      enter_state(state::precision,
 2458|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2459|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2460|      0|                              ctx);
 2461|      0|      break;
 2462|      0|    case 'L':
  ------------------
  |  Branch (2462:5): [True: 0, False: 302]
  ------------------
 2463|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2464|      0|      specs.localized = true;
 2465|      0|      ++begin;
 2466|      0|      break;
 2467|      0|    case 'd':
  ------------------
  |  Branch (2467:5): [True: 0, False: 302]
  ------------------
 2468|      0|      return parse_presentation_type(pres::dec, integral_set);
 2469|      0|    case 'o':
  ------------------
  |  Branch (2469:5): [True: 0, False: 302]
  ------------------
 2470|      0|      return parse_presentation_type(pres::oct, integral_set);
 2471|      0|    case 'x':
  ------------------
  |  Branch (2471:5): [True: 0, False: 302]
  ------------------
 2472|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2473|      0|    case 'X':
  ------------------
  |  Branch (2473:5): [True: 0, False: 302]
  ------------------
 2474|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2475|      0|    case 'b':
  ------------------
  |  Branch (2475:5): [True: 0, False: 302]
  ------------------
 2476|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2477|      0|    case 'B':
  ------------------
  |  Branch (2477:5): [True: 0, False: 302]
  ------------------
 2478|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2479|      0|    case 'a':
  ------------------
  |  Branch (2479:5): [True: 0, False: 302]
  ------------------
 2480|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2481|      0|    case 'A':
  ------------------
  |  Branch (2481:5): [True: 0, False: 302]
  ------------------
 2482|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2483|      0|    case 'e':
  ------------------
  |  Branch (2483:5): [True: 0, False: 302]
  ------------------
 2484|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2485|      0|    case 'E':
  ------------------
  |  Branch (2485:5): [True: 0, False: 302]
  ------------------
 2486|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2487|      0|    case 'f':
  ------------------
  |  Branch (2487:5): [True: 0, False: 302]
  ------------------
 2488|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2489|      0|    case 'F':
  ------------------
  |  Branch (2489:5): [True: 0, False: 302]
  ------------------
 2490|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2491|      0|    case 'g':
  ------------------
  |  Branch (2491:5): [True: 0, False: 302]
  ------------------
 2492|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2493|      0|    case 'G':
  ------------------
  |  Branch (2493:5): [True: 0, False: 302]
  ------------------
 2494|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2495|      0|    case 'c':
  ------------------
  |  Branch (2495:5): [True: 0, False: 302]
  ------------------
 2496|      0|      return parse_presentation_type(pres::chr, integral_set);
 2497|    302|    case 's':
  ------------------
  |  Branch (2497:5): [True: 302, False: 0]
  ------------------
 2498|    302|      return parse_presentation_type(pres::string,
 2499|    302|                                     bool_set | string_set | cstring_set);
 2500|      0|    case 'p':
  ------------------
  |  Branch (2500:5): [True: 0, False: 302]
  ------------------
 2501|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2502|      0|    case '?':
  ------------------
  |  Branch (2502:5): [True: 0, False: 302]
  ------------------
 2503|      0|      return parse_presentation_type(pres::debug,
 2504|      0|                                     char_set | string_set | cstring_set);
 2505|      0|    case '}':
  ------------------
  |  Branch (2505:5): [True: 0, False: 302]
  ------------------
 2506|      0|      return begin;
 2507|      0|    default: {
  ------------------
  |  Branch (2507:5): [True: 0, False: 302]
  ------------------
 2508|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2508:11): [True: 0, False: 0]
  ------------------
 2509|       |      // Parse fill and alignment.
 2510|      0|      auto fill_end = begin + code_point_length(begin);
 2511|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2511:11): [True: 0, False: 0]
  ------------------
 2512|      0|        throw_format_error("invalid format specifier");
 2513|      0|        return begin;
 2514|      0|      }
 2515|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2515:11): [True: 0, False: 0]
  ------------------
 2516|      0|        throw_format_error("invalid fill character '{'");
 2517|      0|        return begin;
 2518|      0|      }
 2519|      0|      auto align = parse_align(to_ascii(*fill_end));
 2520|      0|      enter_state(state::align, align != align::none);
 2521|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2522|      0|      specs.align = align;
 2523|      0|      begin = fill_end + 1;
 2524|      0|    }
 2525|    302|    }
 2526|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2526:9): [True: 0, False: 0]
  ------------------
 2527|      0|    c = to_ascii(*begin);
 2528|      0|  }
 2529|    302|}
_ZN3fmt2v96detail8to_asciiIcLi0EEEcT_:
 2185|    604|constexpr auto to_ascii(Char c) -> char {
 2186|    604|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2186:10): [True: 604, False: 0]
  ------------------
 2187|    604|}
_ZN3fmt2v96detail11parse_alignEc:
 2251|    302|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2252|    302|  switch (c) {
  ------------------
  |  Branch (2252:11): [True: 302, False: 0]
  ------------------
 2253|      0|  case '<':
  ------------------
  |  Branch (2253:3): [True: 0, False: 302]
  ------------------
 2254|      0|    return align::left;
 2255|      0|  case '>':
  ------------------
  |  Branch (2255:3): [True: 0, False: 302]
  ------------------
 2256|      0|    return align::right;
 2257|      0|  case '^':
  ------------------
  |  Branch (2257:3): [True: 0, False: 302]
  ------------------
 2258|      0|    return align::center;
 2259|    302|  }
 2260|    302|  return align::none;
 2261|    302|}
_ZN3fmt2v96detail2inENS1_4typeEi:
  627|    302|constexpr auto in(type t, int set) -> bool {
  628|    302|  return ((set >> static_cast<int>(t)) & 1) != 0;
  629|    302|}
_ZZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2394|    302|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2395|    302|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
  ------------------
  |  Branch (2395:11): [True: 0, False: 302]
  ------------------
 2396|    302|      specs.type = type;
 2397|    302|      return begin + 1;
 2398|    302|    }
_ZN3fmt2v916visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1625|    302|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1626|    302|  switch (arg.type_) {
  ------------------
  |  Branch (1626:11): [True: 0, False: 302]
  ------------------
 1627|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1627:3): [True: 0, False: 302]
  ------------------
 1628|      0|    break;
 1629|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1629:3): [True: 0, False: 302]
  ------------------
 1630|      0|    return vis(arg.value_.int_value);
 1631|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1631:3): [True: 0, False: 302]
  ------------------
 1632|      0|    return vis(arg.value_.uint_value);
 1633|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1633:3): [True: 0, False: 302]
  ------------------
 1634|      0|    return vis(arg.value_.long_long_value);
 1635|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1635:3): [True: 0, False: 302]
  ------------------
 1636|      0|    return vis(arg.value_.ulong_long_value);
 1637|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1637:3): [True: 0, False: 302]
  ------------------
 1638|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1639|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1639:3): [True: 0, False: 302]
  ------------------
 1640|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1641|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1641:3): [True: 0, False: 302]
  ------------------
 1642|      0|    return vis(arg.value_.bool_value);
 1643|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1643:3): [True: 0, False: 302]
  ------------------
 1644|      0|    return vis(arg.value_.char_value);
 1645|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1645:3): [True: 0, False: 302]
  ------------------
 1646|      0|    return vis(arg.value_.float_value);
 1647|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1647:3): [True: 0, False: 302]
  ------------------
 1648|      0|    return vis(arg.value_.double_value);
 1649|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1649:3): [True: 0, False: 302]
  ------------------
 1650|      0|    return vis(arg.value_.long_double_value);
 1651|     58|  case detail::type::cstring_type:
  ------------------
  |  Branch (1651:3): [True: 58, False: 244]
  ------------------
 1652|     58|    return vis(arg.value_.string.data);
 1653|    244|  case detail::type::string_type:
  ------------------
  |  Branch (1653:3): [True: 244, False: 58]
  ------------------
 1654|    244|    using sv = basic_string_view<typename Context::char_type>;
 1655|    244|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1656|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1656:3): [True: 0, False: 302]
  ------------------
 1657|      0|    return vis(arg.value_.pointer);
 1658|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1658:3): [True: 0, False: 302]
  ------------------
 1659|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1660|    302|  }
 1661|      0|  return vis(monostate());
 1662|    302|}
_ZN3fmt2v96detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2220|    232|                              const char*& out) -> bool {
 2221|    232|  out = static_cast<const char*>(
 2222|    232|      std::memchr(first, value, to_unsigned(last - first)));
 2223|    232|  return out != nullptr;
 2224|    232|}
_ZZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2595|    116|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2596|    116|      if (from == to) return;
  ------------------
  |  Branch (2596:11): [True: 0, False: 116]
  ------------------
 2597|    116|      for (;;) {
 2598|    116|        const Char* p = nullptr;
 2599|    116|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2599:13): [True: 116, False: 0]
  ------------------
 2600|    116|          return handler_.on_text(from, to);
 2601|      0|        ++p;
 2602|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2602:13): [True: 0, False: 0]
  |  Branch (2602:24): [True: 0, False: 0]
  ------------------
 2603|      0|          return handler_.on_error("unmatched '}' in format string");
 2604|      0|        handler_.on_text(from, p);
 2605|      0|        from = p + 1;
 2606|      0|      }
 2607|    116|    }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1297|    320|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1298|    320|    string.data = val.data();
 1299|    320|    string.size = val.size();
 1300|    320|  }
_ZN3fmt2v96detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1425|     58|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1426|     58|    return val;
 1427|     58|  }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1293|     58|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1294|     58|    string.data = val;
 1295|     58|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1295:9): [Folded - Ignored]
  ------------------
 1296|     58|  }
_ZNK3fmt2v96detail6bufferIcE4dataEv:
  923|    378|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt2v97vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1488|    378|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1489|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1490|       |  // can be better optimized in fmt::format anyway.
 1491|    378|  auto buffer = memory_buffer();
 1492|    378|  detail::vformat_to(buffer, fmt, args);
 1493|    378|  return to_string(buffer);
 1494|    378|}

_ZN3fmt2v96detail6bufferIcE6appendIcEEvPKT_S7_:
  820|  1.13k|void buffer<T>::append(const U* begin, const U* end) {
  821|  2.26k|  while (begin != end) {
  ------------------
  |  Branch (821:10): [True: 1.13k, False: 1.13k]
  ------------------
  822|  1.13k|    auto count = to_unsigned(end - begin);
  823|  1.13k|    try_reserve(size_ + count);
  824|  1.13k|    auto free_cap = capacity_ - size_;
  825|  1.13k|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (825:9): [True: 0, False: 1.13k]
  ------------------
  826|  1.13k|    std::uninitialized_copy_n(begin, count, make_checked(ptr_ + size_, count));
  827|  1.13k|    size_ += count;
  828|  1.13k|    begin += count;
  829|  1.13k|  }
  830|  1.13k|}
_ZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4145|    378|                typename vformat_args<Char>::type args, locale_ref loc) {
 4146|       |  // workaround for msvc bug regarding name-lookup in module
 4147|       |  // link names into function scope
 4148|    378|  using detail::arg_formatter;
 4149|    378|  using detail::buffer_appender;
 4150|    378|  using detail::custom_formatter;
 4151|    378|  using detail::default_arg_formatter;
 4152|    378|  using detail::get_arg;
 4153|    378|  using detail::locale_ref;
 4154|    378|  using detail::parse_format_specs;
 4155|    378|  using detail::to_unsigned;
 4156|    378|  using detail::type;
 4157|    378|  using detail::write;
 4158|    378|  auto out = buffer_appender<Char>(buf);
 4159|    378|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4159:7): [True: 0, False: 378]
  |  Branch (4159:26): [True: 0, False: 0]
  ------------------
 4160|      0|    auto arg = args.get(0);
 4161|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4161:9): [True: 0, False: 0]
  ------------------
 4162|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4163|      0|    return;
 4164|      0|  }
 4165|       |
 4166|    378|  struct format_handler : error_handler {
 4167|    378|    basic_format_parse_context<Char> parse_context;
 4168|    378|    buffer_context<Char> context;
 4169|       |
 4170|    378|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4171|    378|                   basic_format_args<buffer_context<Char>> p_args,
 4172|    378|                   locale_ref p_loc)
 4173|    378|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4174|       |
 4175|    378|    void on_text(const Char* begin, const Char* end) {
 4176|    378|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4177|    378|      context.advance_to(write<Char>(context.out(), text));
 4178|    378|    }
 4179|       |
 4180|    378|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4181|    378|      return parse_context.next_arg_id();
 4182|    378|    }
 4183|    378|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4184|    378|      return parse_context.check_arg_id(id), id;
 4185|    378|    }
 4186|    378|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4187|    378|      int arg_id = context.arg_id(id);
 4188|    378|      if (arg_id < 0) on_error("argument not found");
 4189|    378|      return arg_id;
 4190|    378|    }
 4191|       |
 4192|    378|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4193|    378|      auto arg = get_arg(context, id);
 4194|    378|      context.advance_to(visit_format_arg(
 4195|    378|          default_arg_formatter<Char>{context.out(), context.args(),
 4196|    378|                                      context.locale()},
 4197|    378|          arg));
 4198|    378|    }
 4199|       |
 4200|    378|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4201|    378|        -> const Char* {
 4202|    378|      auto arg = get_arg(context, id);
 4203|    378|      if (arg.type() == type::custom_type) {
 4204|    378|        parse_context.advance_to(begin);
 4205|    378|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4206|    378|        return parse_context.begin();
 4207|    378|      }
 4208|    378|      auto specs = detail::dynamic_format_specs<Char>();
 4209|    378|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4210|    378|      detail::handle_dynamic_spec<detail::width_checker>(
 4211|    378|          specs.width, specs.width_ref, context);
 4212|    378|      detail::handle_dynamic_spec<detail::precision_checker>(
 4213|    378|          specs.precision, specs.precision_ref, context);
 4214|    378|      if (begin == end || *begin != '}')
 4215|    378|        on_error("missing '}' in format string");
 4216|    378|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4217|    378|      context.advance_to(visit_format_arg(f, arg));
 4218|    378|      return begin;
 4219|    378|    }
 4220|    378|  };
 4221|    378|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4222|    378|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  889|    378|      : alloc_(alloc) {
  890|    378|    this->set(store_, SIZE);
  891|    378|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (891:9): [Folded - Ignored]
  ------------------
  892|    378|  }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  893|    378|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  875|    378|  FMT_CONSTEXPR20 void deallocate() {
  876|    378|    T* data = this->data();
  877|    378|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (877:9): [True: 0, False: 378]
  ------------------
  878|    378|  }
_ZN3fmt2v96detail12make_checkedIcEEPT_S4_m:
  529|  1.13k|template <typename T> constexpr auto make_checked(T* p, size_t) -> T* {
  530|  1.13k|  return p;
  531|  1.13k|}
_ZN3fmt2v96detail7reserveINS0_8appenderEEERT_S5_m:
  557|  1.13k|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  558|  1.13k|  return it;
  559|  1.13k|}
_ZN3fmt2v96detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  585|  1.13k|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  586|  1.13k|  return it;
  587|  1.13k|}
_ZN3fmt2v96detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  614|    832|                                                  OutputIt out) -> OutputIt {
  615|    832|  return copy_str<OutChar>(begin, end, out);
  616|    832|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3475|    832|    -> OutputIt {
 3476|    832|  auto it = reserve(out, value.size());
 3477|    832|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3478|    832|  return base_iterator(out, it);
 3479|    832|}
_ZN3fmt2v96detail21default_arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3567|     76|  template <typename T> auto operator()(T value) -> iterator {
 3568|     76|    return write<Char>(out, value);
 3569|     76|  }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4175|    756|    void on_text(const Char* begin, const Char* end) {
 4176|    756|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4177|    756|      context.advance_to(write<Char>(context.out(), text));
 4178|    756|    }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler20on_replacement_fieldEiPKc:
 4192|     76|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4193|     76|      auto arg = get_arg(context, id);
 4194|     76|      context.advance_to(visit_format_arg(
 4195|     76|          default_arg_formatter<Char>{context.out(), context.args(),
 4196|     76|                                      context.locale()},
 4197|     76|          arg));
 4198|     76|    }
_ZN3fmt2v96detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEENT_10format_argERS6_T0_:
 3658|    378|    typename Context::format_arg {
 3659|    378|  auto arg = ctx.arg(id);
 3660|    378|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3660:7): [True: 0, False: 378]
  ------------------
 3661|    378|  return arg;
 3662|    378|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4180|    378|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4181|    378|      return parse_context.next_arg_id();
 4182|    378|    }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4201|    302|        -> const Char* {
 4202|    302|      auto arg = get_arg(context, id);
 4203|    302|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4203:11): [True: 0, False: 302]
  ------------------
 4204|      0|        parse_context.advance_to(begin);
 4205|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4206|      0|        return parse_context.begin();
 4207|      0|      }
 4208|    302|      auto specs = detail::dynamic_format_specs<Char>();
 4209|    302|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4210|    302|      detail::handle_dynamic_spec<detail::width_checker>(
 4211|    302|          specs.width, specs.width_ref, context);
 4212|    302|      detail::handle_dynamic_spec<detail::precision_checker>(
 4213|    302|          specs.precision, specs.precision_ref, context);
 4214|    302|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4214:11): [True: 0, False: 302]
  |  Branch (4214:27): [True: 0, False: 302]
  ------------------
 4215|      0|        on_error("missing '}' in format string");
 4216|    302|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4217|    302|      context.advance_to(visit_format_arg(f, arg));
 4218|    302|      return begin;
 4219|    302|    }
_ZN3fmt2v96detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3667|    302|                                       Context& ctx) {
 3668|    302|  switch (ref.kind) {
  ------------------
  |  Branch (3668:11): [True: 0, False: 302]
  ------------------
 3669|    302|  case arg_id_kind::none:
  ------------------
  |  Branch (3669:3): [True: 302, False: 0]
  ------------------
 3670|    302|    break;
 3671|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3671:3): [True: 0, False: 302]
  ------------------
 3672|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3673|      0|                                              ctx.error_handler());
 3674|      0|    break;
 3675|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3675:3): [True: 0, False: 302]
  ------------------
 3676|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3677|      0|                                              ctx.error_handler());
 3678|      0|    break;
 3679|    302|  }
 3680|    302|}
_ZN3fmt2v96detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3667|    302|                                       Context& ctx) {
 3668|    302|  switch (ref.kind) {
  ------------------
  |  Branch (3668:11): [True: 0, False: 302]
  ------------------
 3669|    302|  case arg_id_kind::none:
  ------------------
  |  Branch (3669:3): [True: 302, False: 0]
  ------------------
 3670|    302|    break;
 3671|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3671:3): [True: 0, False: 302]
  ------------------
 3672|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3673|      0|                                              ctx.error_handler());
 3674|      0|    break;
 3675|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3675:3): [True: 0, False: 302]
  ------------------
 3676|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3677|      0|                                              ctx.error_handler());
 3678|      0|    break;
 3679|    302|  }
 3680|    302|}
_ZN3fmt2v96detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3587|     58|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3588|     58|    return detail::write(out, value, specs, locale);
 3589|     58|  }
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2257|     58|    -> OutputIt {
 2258|     58|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2258:10): [True: 58, False: 0]
  ------------------
 2259|     58|             ? write(out, basic_string_view<Char>(s), specs, {})
 2260|     58|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2261|     58|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2251|    302|    -> OutputIt {
 2252|    302|  return write(out, s, specs);
 2253|    302|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2228|    302|                         const format_specs<Char>& specs) -> OutputIt {
 2229|    302|  auto data = s.data();
 2230|    302|  auto size = s.size();
 2231|    302|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2231:7): [True: 0, False: 302]
  |  Branch (2231:31): [True: 0, False: 0]
  ------------------
 2232|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2233|    302|  bool is_debug = specs.type == presentation_type::debug;
 2234|    302|  size_t width = 0;
 2235|    302|  if (specs.width != 0) {
  ------------------
  |  Branch (2235:7): [True: 0, False: 302]
  ------------------
 2236|      0|    if (is_debug)
  ------------------
  |  Branch (2236:9): [True: 0, False: 0]
  ------------------
 2237|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2238|      0|    else
 2239|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2240|      0|  }
 2241|    302|  return write_padded(out, specs, size, width,
 2242|    302|                      [=](reserve_iterator<OutputIt> it) {
 2243|    302|                        if (is_debug) return write_escaped_string(it, s);
 2244|    302|                        return copy_str<Char>(data, data + size, it);
 2245|    302|                      });
 2246|    302|}
_ZN3fmt2v96detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1681|    302|                                size_t size, size_t width, F&& f) -> OutputIt {
 1682|    302|  static_assert(align == align::left || align == align::right, "");
 1683|    302|  unsigned spec_width = to_unsigned(specs.width);
 1684|    302|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1684:20): [True: 0, False: 302]
  ------------------
 1685|       |  // Shifts are encoded as string literals because static constexpr is not
 1686|       |  // supported in constexpr functions.
 1687|    302|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1687:18): [Folded - Ignored]
  ------------------
 1688|    302|  size_t left_padding = padding >> shifts[specs.align];
 1689|    302|  size_t right_padding = padding - left_padding;
 1690|    302|  auto it = reserve(out, size + padding * specs.fill.size());
 1691|    302|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1691:7): [True: 0, False: 302]
  ------------------
 1692|    302|  it = f(it);
 1693|    302|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1693:7): [True: 0, False: 302]
  ------------------
 1694|    302|  return base_iterator(out, it);
 1695|    302|}
_ZZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2242|    302|                      [=](reserve_iterator<OutputIt> it) {
 2243|    302|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2243:29): [True: 0, False: 302]
  ------------------
 2244|    302|                        return copy_str<Char>(data, data + size, it);
 2245|    302|                      });
_ZN3fmt2v96detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3587|    244|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3588|    244|    return detail::write(out, value, specs, locale);
 3589|    244|  }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4173|    378|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt2v99to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4135|    378|    -> std::basic_string<Char> {
 4136|    378|  auto size = buf.size();
 4137|    378|  detail::assume(size < std::basic_string<Char>().max_size());
 4138|    378|  return std::basic_string<Char>(buf.data(), size);
 4139|    378|}
_ZN3fmt2v96detail6assumeEb:
  498|    378|FMT_INLINE void assume(bool condition) {
  499|    378|  (void)condition;
  500|    378|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  501|    378|  __builtin_assume(condition);
  502|    378|#endif
  503|    378|}

LLVMFuzzerTestOneInput:
   19|  1.60k|{
   20|  1.60k|    phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   21|       |
   22|  1.60k|    OpenAutoIt::ParseResult parse_result;
   23|       |
   24|       |    // Lexing
   25|  1.60k|    OpenAutoIt::Lexer lexer{parse_result, source};
   26|  1.60k|    lexer.ProcessAll();
   27|       |
   28|       |    // Parsing
   29|  1.60k|    OpenAutoIt::Parser parser{};
   30|  1.60k|    parser.ParseDocument(parse_result);
   31|       |
   32|       |    // Ignore if document was null
   33|  1.60k|    if (!parse_result.m_Document)
  ------------------
  |  Branch (33:9): [True: 0, False: 1.60k]
  ------------------
   34|      0|    {
   35|      0|        return 0;
   36|      0|    }
   37|       |
   38|       |    // Interpreting
   39|  1.60k|    OpenAutoIt::Interpreter interpreter{parse_result.m_Document.not_null_observer()};
   40|       |
   41|       |    // Prevent output
   42|  1.60k|    interpreter.vm().OverwriteIOSreams(nullptr, nullptr);
   43|       |
   44|       |    // Limit number of executions because of the halting problem
   45|  1.60k|    phi::u64 statements_ran = 0u;
   46|  15.2k|    while (interpreter.vm().CanRun() && statements_ran < MaxNumberOfStatements)
  ------------------
  |  Branch (46:12): [True: 13.6k, False: 1.60k]
  |  Branch (46:12): [True: 13.6k, False: 1.60k]
  |  Branch (46:41): [True: 13.6k, False: 0]
  ------------------
   47|  13.6k|    {
   48|  13.6k|        interpreter.Step();
   49|  13.6k|        ++statements_ran;
   50|  13.6k|    }
   51|       |
   52|  1.60k|    return 0;
   53|  1.60k|}

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  2.80k|        {
   20|  2.80k|            m_NodeType = ASTNodeType::BinaryExpression;
   21|  2.80k|        }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|     46|        {
   18|     46|            m_NodeType = ASTNodeType::BooleanLiteral;
   19|     46|        }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   18|  12.3k|        {
   19|  12.3k|            m_Statements.emplace_back(phi::move(child));
   20|  12.3k|        }
_ZN10OpenAutoIt11ASTDocument30LookupFunctionDefinitionByNameEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
   29|    244|        {
   30|    244|            for (phi::not_null_observer_ptr<ASTFunctionDefinition> func_definition : m_Functions)
  ------------------
  |  Branch (30:84): [True: 0, False: 244]
  ------------------
   31|      0|            {
   32|       |                // TODO: Should ignore case
   33|      0|                if (phi::string_equals(func_definition->m_FunctionName, function_name))
  ------------------
  |  Branch (33:21): [True: 0, False: 0]
  ------------------
   34|      0|                {
   35|      0|                    return phi::move(func_definition);
   36|      0|                }
   37|      0|            }
   38|       |
   39|    244|            return nullptr;
   40|    244|        }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|  10.9k|        {
   17|  10.9k|            m_NodeType = ASTNodeType::ExpressionStatement;
   18|  10.9k|        }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|    303|        {
   17|    303|            m_NodeType = ASTNodeType::FloatLiteral;
   18|    303|        }

_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|  12.6k|        {
   21|  12.6k|            m_NodeType = ASTNodeType::FunctionCallExpression;
   22|  12.6k|        }
_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|  12.0k|        {
   26|  12.0k|            if (m_IsBuiltIn)
  ------------------
  |  Branch (26:17): [True: 402, False: 11.6k]
  ------------------
   27|    402|            {
   28|    402|                return enum_name(m_BuiltInFunction);
   29|    402|            }
   30|       |
   31|  11.6k|            return m_FunctionName;
   32|  12.0k|        }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|  9.56k|        {
   17|  9.56k|            m_NodeType = ASTNodeType::IntegerLiteral;
   18|  9.56k|        }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|    122|        {
   19|    122|            m_NodeType = ASTNodeType::KeywordLiteral;
   20|    122|            PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|    122|        }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   64|  48.4k|        virtual ~ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode8NodeTypeEv:
   77|  28.2k|        {
   78|  28.2k|            return m_NodeType;
   79|  28.2k|        }
_ZN10OpenAutoIt7ASTNode2asINS_22ASTExpressionStatementEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  9.93k|        {
   84|  9.93k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  9.93k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  9.93k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  9.93k|            PHI_ASSERT(ret);
   89|       |
   90|  9.93k|            return ret;
   91|  9.93k|        }
_ZN10OpenAutoIt7ASTNode2asINS_21ASTVariableAssignmentEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  2.20k|        {
   84|  2.20k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  2.20k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  2.20k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  2.20k|            PHI_ASSERT(ret);
   89|       |
   90|  2.20k|            return ret;
   91|  2.20k|        }
_ZN10OpenAutoIt7ASTNode2asINS_19ASTBinaryExpressionEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  2.57k|        {
   84|  2.57k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  2.57k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  2.57k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  2.57k|            PHI_ASSERT(ret);
   89|       |
   90|  2.57k|            return ret;
   91|  2.57k|        }
_ZN10OpenAutoIt7ASTNode2asINS_17ASTBooleanLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|     45|        {
   84|     45|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|     45|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|     45|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|     45|            PHI_ASSERT(ret);
   89|       |
   90|     45|            return ret;
   91|     45|        }
_ZN10OpenAutoIt7ASTNode2asINS_25ASTFunctionCallExpressionEEEN3phi21not_null_observer_ptrIT_EEv:
   83|    302|        {
   84|    302|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|    302|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|    302|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|    302|            PHI_ASSERT(ret);
   89|       |
   90|    302|            return ret;
   91|    302|        }
_ZN10OpenAutoIt7ASTNode2asINS_17ASTIntegerLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  7.27k|        {
   84|  7.27k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  7.27k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  7.27k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  7.27k|            PHI_ASSERT(ret);
   89|       |
   90|  7.27k|            return ret;
   91|  7.27k|        }
_ZN10OpenAutoIt7ASTNode2asINS_17ASTKeywordLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|    101|        {
   84|    101|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|    101|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|    101|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|    101|            PHI_ASSERT(ret);
   89|       |
   90|    101|            return ret;
   91|    101|        }
_ZN10OpenAutoIt7ASTNode2asINS_15ASTFloatLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|    252|        {
   84|    252|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|    252|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|    252|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|    252|            PHI_ASSERT(ret);
   89|       |
   90|    252|            return ret;
   91|    252|        }
_ZN10OpenAutoIt7ASTNode2asINS_16ASTStringLiteralEEEN3phi21not_null_observer_ptrIT_EEv:
   83|  5.50k|        {
   84|  5.50k|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|  5.50k|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|  5.50k|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|  5.50k|            PHI_ASSERT(ret);
   89|       |
   90|  5.50k|            return ret;
   91|  5.50k|        }
_ZN10OpenAutoIt7ASTNode2asINS_21ASTVariableExpressionEEEN3phi21not_null_observer_ptrIT_EEv:
   83|     96|        {
   84|     96|            static_assert(phi::is_base_of_v<ASTNode, TypeT>,
   85|     96|                          "Can only cast to derived classes of ASTNode");
   86|       |
   87|     96|            TypeT* ret = dynamic_cast<TypeT*>(this);
   88|     96|            PHI_ASSERT(ret);
   89|       |
   90|     96|            return ret;
   91|     96|        }
_ZN10OpenAutoIt7ASTNodeC2Ev:
   62|  48.4k|        ASTNode() = default;

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  6.87k|        {
   15|  6.87k|            m_NodeType = ASTNodeType::StringLiteral;
   16|  6.87k|        }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|  2.57k|        {
   20|  2.57k|            m_NodeType = ASTNodeType::VariableAssignment;
   21|  2.57k|        }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|    204|        {
   15|    204|            m_NodeType = ASTNodeType::VariableExpression;
   16|    204|        }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|    193|        {
   18|    193|            m_NodeType = ASTNodeType::WhileStatement;
   19|    193|        }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  80.5k|        {
   46|  80.5k|            Token token{kind,
   47|  80.5k|                        m_Source.substring_view(
   48|  80.5k|                                static_cast<typename phi::string_view::size_type::value_type>(
   49|  80.5k|                                        m_Iterator - m_Source.begin()),
   50|  80.5k|                                1u),
   51|  80.5k|                        m_LineNumber, m_Column};
   52|       |
   53|       |            // 1 character sized token
   54|  80.5k|            ++m_Column;
   55|       |
   56|  80.5k|            return token;
   57|  80.5k|        }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  96.9k|        {
   61|  96.9k|            Token token{kind, TokenText(token_begin), m_LineNumber, m_Column};
   62|       |
   63|       |            // Consume the amount of characters that make up our new token
   64|  96.9k|            m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  96.9k|            return token;
   67|  96.9k|        }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|   161k|        {
   71|   161k|            return m_Source.substring_view(token_begin, m_Iterator);
   72|   161k|        }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   61|   120k|        {
   62|   120k|            switch (token_kind)
   63|   120k|            {
   64|    509|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (64:17): [True: 509, False: 120k]
  ------------------
   65|  1.05k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (65:17): [True: 547, False: 119k]
  ------------------
   66|  1.12k|                case TokenKind::KW_Not:
  ------------------
  |  Branch (66:17): [True: 65, False: 120k]
  ------------------
   67|  1.12k|                    return true;
   68|       |
   69|   119k|                default:
  ------------------
  |  Branch (69:17): [True: 119k, False: 1.12k]
  ------------------
   70|   119k|                    return false;
   71|   120k|            }
   72|   120k|        }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   76|  18.1k|        {
   77|  18.1k|            switch (token_kind)
   78|  18.1k|            {
   79|     18|                case TokenKind::KW_And:
  ------------------
  |  Branch (79:17): [True: 18, False: 18.1k]
  ------------------
   80|     36|                case TokenKind::KW_Or:
  ------------------
  |  Branch (80:17): [True: 18, False: 18.1k]
  ------------------
   81|  1.86k|                case TokenKind::OP_Equals:
  ------------------
  |  Branch (81:17): [True: 1.82k, False: 16.3k]
  ------------------
   82|  1.98k|                case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (82:17): [True: 120, False: 18.0k]
  ------------------
   83|  2.02k|                case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (83:17): [True: 37, False: 18.1k]
  ------------------
   84|  2.13k|                case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (84:17): [True: 113, False: 18.0k]
  ------------------
   85|  2.20k|                case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (85:17): [True: 66, False: 18.0k]
  ------------------
   86|  2.70k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (86:17): [True: 503, False: 17.6k]
  ------------------
   87|  3.00k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (87:17): [True: 300, False: 17.8k]
  ------------------
   88|  3.25k|                case TokenKind::OP_Multiply:
  ------------------
  |  Branch (88:17): [True: 247, False: 17.9k]
  ------------------
   89|  3.36k|                case TokenKind::OP_Divide:
  ------------------
  |  Branch (89:17): [True: 114, False: 18.0k]
  ------------------
   90|  3.46k|                case TokenKind::OP_Raise:
  ------------------
  |  Branch (90:17): [True: 98, False: 18.0k]
  ------------------
   91|  3.73k|                case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (91:17): [True: 267, False: 17.8k]
  ------------------
   92|  3.81k|                case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (92:17): [True: 87, False: 18.0k]
  ------------------
   93|  3.97k|                case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (93:17): [True: 162, False: 17.9k]
  ------------------
   94|  4.01k|                case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (94:17): [True: 37, False: 18.1k]
  ------------------
   95|  4.18k|                case TokenKind::OP_LessThan:
  ------------------
  |  Branch (95:17): [True: 172, False: 17.9k]
  ------------------
   96|  4.22k|                case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (96:17): [True: 35, False: 18.1k]
  ------------------
   97|  4.22k|                    return true;
   98|       |
   99|  13.9k|                default:
  ------------------
  |  Branch (99:17): [True: 13.9k, False: 4.22k]
  ------------------
  100|  13.9k|                    return false;
  101|  18.1k|            }
  102|  18.1k|        }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  114|  12.3k|        {
  115|  12.3k|            m_ParseResult->m_Document->AppendStatement(phi::move(statement));
  116|  12.3k|        }

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS2_7integerImEES9_:
   23|   177k|        {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   36|  1.23M|        {
   37|  1.23M|            return m_Kind;
   38|  1.23M|        }
_ZNK10OpenAutoIt5Token7GetTextEv:
   41|   131k|        {
   42|   131k|            return m_Text;
   43|   131k|        }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   68|  53.1k|        {
   69|  53.1k|            const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   70|       |
   71|  53.1k|            if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (71:17): [True: 1.42k, False: 51.6k]
  ------------------
   72|  53.1k|                underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (72:17): [True: 1.42k, False: 0]
  ------------------
   73|  1.42k|            {
   74|  1.42k|                return true;
   75|  1.42k|            }
   76|       |
   77|  51.6k|            return false;
   78|  53.1k|        }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
   81|  39.4k|        {
   82|  39.4k|            switch (m_Kind)
   83|  39.4k|            {
   84|     90|                case TokenKind::KW_Default:
  ------------------
  |  Branch (84:17): [True: 90, False: 39.3k]
  ------------------
   85|    244|                case TokenKind::KW_Null:
  ------------------
  |  Branch (85:17): [True: 154, False: 39.2k]
  ------------------
   86|    244|                    return true;
   87|       |
   88|  39.1k|                default:
  ------------------
  |  Branch (88:17): [True: 39.1k, False: 244]
  ------------------
   89|  39.1k|                    return false;
   90|  39.4k|            }
   91|  39.4k|        }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  679|  90.0k|    {
  680|  90.0k|        switch (token_kind)
  681|  90.0k|        {
  682|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  683|      0|    case TokenKind::name:                                                                          \
  684|      0|        return #name;
  685|       |
  686|      0|            OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|    296|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  683|    296|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 296, False: 89.7k]
  |  |  |  |  ------------------
  |  |  |  |  684|    296|        return #name;
  |  |  ------------------
  |  |   13|  18.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  683|  18.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18.8k, False: 71.1k]
  |  |  |  |  ------------------
  |  |  |  |  684|  18.8k|        return #name;
  |  |  ------------------
  |  |   14|  18.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   15|     55|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  683|     55|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 55, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     55|        return #name;
  |  |  ------------------
  |  |   16|     55|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   17|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   18|  8.72k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|  8.72k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.72k, False: 81.3k]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.72k|        return #name;
  |  |  ------------------
  |  |   19|  8.72k|    /* Literals */                                                                                 \
  |  |   20|  8.72k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  683|  1.03k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.03k, False: 88.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.03k|        return #name;
  |  |  ------------------
  |  |   21|  1.03k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |   22|    143|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  683|    143|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 143, False: 89.8k]
  |  |  |  |  ------------------
  |  |  |  |  684|    143|        return #name;
  |  |  ------------------
  |  |   23|    143|    /* Punctuation */                                                                              \
  |  |   24|  1.06k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  683|  1.06k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.06k, False: 88.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.06k|        return #name;
  |  |  ------------------
  |  |   25|  1.06k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|    996|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 996, False: 89.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|    996|        return #name;
  |  |  ------------------
  |  |   26|  11.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  11.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11.6k, False: 78.3k]
  |  |  |  |  ------------------
  |  |  |  |  684|  11.6k|        return #name;
  |  |  ------------------
  |  |   27|  11.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   28|  2.16k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  2.16k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.16k, False: 87.8k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.16k|        return #name;
  |  |  ------------------
  |  |   29|  6.92k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  6.92k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6.92k, False: 83.1k]
  |  |  |  |  ------------------
  |  |  |  |  684|  6.92k|        return #name;
  |  |  ------------------
  |  |   30|  6.92k|    /* Macros */                                                                                   \
  |  |   31|  6.92k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  6.92k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   33|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   34|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   35|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   36|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   37|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   38|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   40|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |   41|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   42|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   43|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   44|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   45|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   46|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   47|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   49|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   51|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   52|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   53|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   54|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   55|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   56|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   59|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   60|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   67|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   70|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   74|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   75|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   76|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   77|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   81|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   82|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   83|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   84|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   86|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   87|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   88|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   89|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   91|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   92|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   93|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   96|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   97|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   98|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  100|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  101|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  103|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  105|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  106|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  107|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  108|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  109|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  111|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  112|    102|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  683|    102|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 102, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|    102|        return #name;
  |  |  ------------------
  |  |  113|    102|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  122|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  123|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  124|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  125|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  127|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  128|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  129|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  130|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  131|     65|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|     65|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 65, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     65|        return #name;
  |  |  ------------------
  |  |  132|     65|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  133|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|     79|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  683|     79|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 79, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     79|        return #name;
  |  |  ------------------
  |  |  138|     99|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  683|     99|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 99, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     99|        return #name;
  |  |  ------------------
  |  |  139|     99|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|     99|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  141|     22|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  683|     64|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 64, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     64|        return #name;
  |  |  ------------------
  |  |  143|     64|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  145|      7|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  147|     12|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  149|      6|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  683|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 32, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     32|        return #name;
  |  |  ------------------
  |  |  151|     32|    /* Keywords */                                                                                 \
  |  |  152|     32|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|     32|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|     32|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  156|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  157|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  163|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  165|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  166|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  167|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  168|      1|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  683|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     13|        return #name;
  |  |  ------------------
  |  |  170|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  171|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  173|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  175|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  179|    159|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  683|    159|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 159, False: 89.8k]
  |  |  |  |  ------------------
  |  |  |  |  684|    159|        return #name;
  |  |  ------------------
  |  |  180|    159|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  181|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  182|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  184|      4|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|     71|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  683|     71|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 71, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     71|        return #name;
  |  |  ------------------
  |  |  186|     71|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  187|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  188|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  189|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  191|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  192|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  193|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  195|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  196|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  198|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  200|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  202|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  203|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  206|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  208|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  213|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  214|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  216|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  217|      4|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  219|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  220|    130|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  683|    130|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 130, False: 89.8k]
  |  |  |  |  ------------------
  |  |  |  |  684|    130|        return #name;
  |  |  ------------------
  |  |  221|    130|    /* Operator */                                                                                 \
  |  |  222|    130|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  2.57k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)                                                     \
  |  |  ------------------
  |  |  |  |  683|  2.57k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.57k, False: 87.4k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.57k|        return #name;
  |  |  ------------------
  |  |  224|  2.57k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  225|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)                                                \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |  226|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)                                             \
  |  |  ------------------
  |  |  |  |  683|     72|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 72, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     72|        return #name;
  |  |  ------------------
  |  |  227|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 20, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     20|        return #name;
  |  |  ------------------
  |  |  228|  3.17k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)                                                \
  |  |  ------------------
  |  |  |  |  683|  3.17k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.17k, False: 86.8k]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.17k|        return #name;
  |  |  ------------------
  |  |  229|  3.17k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals)                                          \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  230|    999|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)                                                       \
  |  |  ------------------
  |  |  |  |  683|    999|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 999, False: 89.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|    999|        return #name;
  |  |  ------------------
  |  |  231|  1.08k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)                                                      \
  |  |  ------------------
  |  |  |  |  683|  1.08k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.08k, False: 88.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.08k|        return #name;
  |  |  ------------------
  |  |  232|  2.25k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)                                                   \
  |  |  ------------------
  |  |  |  |  683|  2.25k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.25k, False: 87.7k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.25k|        return #name;
  |  |  ------------------
  |  |  233|  2.25k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)                                                     \
  |  |  ------------------
  |  |  |  |  683|    790|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 790, False: 89.2k]
  |  |  |  |  ------------------
  |  |  |  |  684|    790|        return #name;
  |  |  ------------------
  |  |  234|  5.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)                                                      \
  |  |  ------------------
  |  |  |  |  683|  5.37k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.37k, False: 84.6k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.37k|        return #name;
  |  |  ------------------
  |  |  235|  5.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|  4.01k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.01k, False: 86.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.01k|        return #name;
  |  |  ------------------
  |  |  236|  4.01k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)                                                   \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  237|  5.20k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)                                                \
  |  |  ------------------
  |  |  |  |  683|  5.20k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.20k, False: 84.8k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.20k|        return #name;
  |  |  ------------------
  |  |  238|  5.20k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)                                           \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  239|  8.28k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)                                                   \
  |  |  ------------------
  |  |  |  |  683|  8.28k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.28k, False: 81.7k]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.28k|        return #name;
  |  |  ------------------
  |  |  240|  8.28k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)                                              \
  |  |  ------------------
  |  |  |  |  683|    352|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 352, False: 89.6k]
  |  |  |  |  ------------------
  |  |  |  |  684|    352|        return #name;
  |  |  ------------------
  |  |  241|  1.03k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)                                                  \
  |  |  ------------------
  |  |  |  |  683|  1.03k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.03k, False: 88.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.03k|        return #name;
  |  |  ------------------
  |  |  242|  1.15k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)                                                \
  |  |  ------------------
  |  |  |  |  683|  1.15k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.15k, False: 88.8k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.15k|        return #name;
  |  |  ------------------
  |  |  243|  1.15k|    /* Built-in Functions */                                                                       \
  |  |  244|  1.15k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  1.15k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  1.15k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  247|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  248|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  249|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  250|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  251|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  683|     21|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 21, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     21|        return #name;
  |  |  ------------------
  |  |  252|     51|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  683|     51|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 51, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     51|        return #name;
  |  |  ------------------
  |  |  253|     51|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  254|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  255|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  256|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  257|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  263|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  264|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  265|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  270|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  271|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  272|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  273|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  274|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  275|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  683|     21|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 21, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     21|        return #name;
  |  |  ------------------
  |  |  276|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  279|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  280|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  288|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  297|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  298|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  299|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  300|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  301|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  302|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  307|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  308|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  309|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  312|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  313|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  314|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  315|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  316|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  320|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  321|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  323|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  327|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  328|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  330|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  331|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  332|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  333|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  334|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  335|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  336|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  337|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  338|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  340|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  341|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  343|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  344|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  345|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  347|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  348|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  352|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  357|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  358|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  359|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  361|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  362|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  363|     70|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  683|     70|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 70, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     70|        return #name;
  |  |  ------------------
  |  |  364|     70|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  365|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  366|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  367|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  368|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  369|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  370|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  371|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  373|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  374|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  384|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  385|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  402|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  403|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  404|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  417|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  418|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  421|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  422|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  428|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  430|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  435|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  436|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  437|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  438|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  440|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  444|    138|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  683|    138|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 138, False: 89.8k]
  |  |  |  |  ------------------
  |  |  |  |  684|    138|        return #name;
  |  |  ------------------
  |  |  445|    138|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  448|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  449|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  450|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  451|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  452|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  453|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  454|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  455|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  457|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  458|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  462|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  463|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  466|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  468|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  469|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  470|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  471|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  472|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  473|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  474|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  477|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  479|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  480|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  482|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  483|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  485|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  486|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  488|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  489|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  491|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  492|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  494|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  495|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  496|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  497|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  498|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  499|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  500|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  503|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  504|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  505|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  507|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  508|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  509|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  510|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  511|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  512|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  517|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  518|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  519|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  521|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  683|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 27, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     27|        return #name;
  |  |  ------------------
  |  |  522|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  523|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  525|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  526|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  529|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  530|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  533|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  535|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  536|     61|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  683|     61|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 61, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     61|        return #name;
  |  |  ------------------
  |  |  537|     61|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |  538|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  539|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  540|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  541|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  542|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  543|    135|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  683|    135|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 135, False: 89.8k]
  |  |  |  |  ------------------
  |  |  |  |  684|    135|        return #name;
  |  |  ------------------
  |  |  544|    135|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  548|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  549|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  550|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  551|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  553|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  554|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  555|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  562|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  563|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  566|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  567|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  569|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  570|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  571|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  572|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  577|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  578|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  579|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  580|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  583|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  584|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  585|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  588|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  589|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  590|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  596|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  597|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  599|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  600|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  601|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  603|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  604|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  610|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  611|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  612|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  613|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  615|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  616|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  617|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  618|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  619|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  620|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  621|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  622|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  628|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  629|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  631|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  632|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  635|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  636|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  638|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  639|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  645|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  646|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 68, False: 89.9k]
  |  |  |  |  ------------------
  |  |  |  |  684|     68|        return #name;
  |  |  ------------------
  |  |  647|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  648|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  649|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 90.0k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  ------------------
  687|       |
  688|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  689|       |
  690|      0|            default:
  ------------------
  |  Branch (690:13): [True: 0, False: 90.0k]
  ------------------
  691|      0|                PHI_ASSERT_NOT_REACHED();
  692|  90.0k|        }
  693|  90.0k|    }

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|   177k|        {
   21|       |#if defined(PHI_DEBUG)
   22|       |            PHI_ASSERT(!m_Finialized);
   23|       |#endif
   24|       |
   25|   177k|            m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|   177k|        }

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  157|  9.00k|{
  158|  9.00k|    static constexpr auto map =
  159|  9.00k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  160|  9.00k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  161|       |
  162|  9.00k|    std::string str{token.begin(), token.end()};
  163|  9.00k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  164|       |
  165|  9.00k|    return map.at(phi::string_view(str.c_str(), str.size()));
  166|  9.00k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  183|  9.96k|{
  184|  9.96k|    static constexpr auto map =
  185|  9.96k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  186|  9.96k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  187|       |
  188|  9.96k|    std::string str{token.begin(), token.end()};
  189|  9.96k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  190|       |
  191|  9.96k|    return map.at(phi::string_view(str.c_str(), str.size()));
  192|  9.96k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  660|  21.1k|{
  661|  21.1k|    static constexpr auto keyword_map =
  662|  21.1k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  663|  21.1k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  664|  21.1k|    static constexpr auto builtin_map =
  665|  21.1k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  666|  21.1k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  667|       |
  668|  21.1k|    std::string str{token.begin(), token.end()};
  669|  21.1k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  670|       |
  671|  21.1k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  672|       |
  673|  21.1k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  674|  21.1k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (674:9): [True: 19.0k, False: 2.11k]
  ------------------
  675|  19.0k|    {
  676|  19.0k|        return builtin_map.at(string);
  677|  19.0k|    }
  678|       |
  679|  2.11k|    return keyword;
  680|  21.1k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  706|  28.6k|{
  707|  28.6k|    static constexpr auto map =
  708|  28.6k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  709|  28.6k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  710|       |
  711|  28.6k|    return map.at(token);
  712|  28.6k|}
_ZN10OpenAutoIt5LexerC2ERNS_11ParseResultEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  783|  1.60k|    {}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  803|  1.14M|    {
  804|  1.14M|        return m_Iterator == m_Source.end();
  805|  1.14M|    }
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  813|   178k|    {
  814|   457k|        while (!IsFinished())
  ------------------
  |  Branch (814:16): [True: 457k, False: 759]
  ------------------
  815|   457k|        {
  816|   457k|            char current_character = *m_Iterator;
  817|       |
  818|       |            /* Embedded null character */
  819|       |
  820|   457k|            if (current_character == '\0')
  ------------------
  |  Branch (820:17): [True: 86.1k, False: 370k]
  ------------------
  821|  86.1k|            {
  822|  86.1k|                m_ParseResult.m_Warnings.emplace_back(
  823|  86.1k|                        ParseWarning::EmbeddedNullCharacter(m_LineNumber, m_Column));
  824|       |
  825|  86.1k|                SkipCurrentCharacter();
  826|  86.1k|            }
  827|       |
  828|       |            /* Multiline comments */
  829|       |
  830|   370k|            else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (830:22): [True: 57, False: 370k]
  ------------------
  831|     57|            {
  832|     57|                iterator       begin_of_multiline_comment            = m_Iterator;
  833|     57|                const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  834|     57|                const phi::u64 beginning_column_of_multiline_comment = m_Column;
  835|       |
  836|  19.4k|                while (!IsFinished())
  ------------------
  |  Branch (836:24): [True: 19.4k, False: 47]
  ------------------
  837|  19.4k|                {
  838|  19.4k|                    current_character = *m_Iterator;
  839|       |
  840|       |                    // Check for end comment multiline
  841|  19.4k|                    if (current_character == '#')
  ------------------
  |  Branch (841:25): [True: 378, False: 19.0k]
  ------------------
  842|    378|                    {
  843|    378|                        iterator begin_of_token = m_Iterator;
  844|    378|                        ConsumeCurrentCharacter();
  845|       |
  846|  1.95k|                        while (!IsFinished())
  ------------------
  |  Branch (846:32): [True: 1.95k, False: 4]
  ------------------
  847|  1.95k|                        {
  848|  1.95k|                            current_character = *m_Iterator;
  849|       |
  850|  1.95k|                            if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (850:33): [True: 1.57k, False: 374]
  ------------------
  851|  1.57k|                            {
  852|  1.57k|                                ConsumeCurrentCharacter();
  853|  1.57k|                                continue;
  854|  1.57k|                            }
  855|       |
  856|    374|                            break;
  857|  1.95k|                        }
  858|       |
  859|    378|                        const TokenKind pre_processor_token_kind =
  860|    378|                                lookup_pre_processor(TokenText(begin_of_token));
  861|       |
  862|    378|                        if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (862:29): [True: 10, False: 368]
  ------------------
  863|     10|                        {
  864|     10|                            m_InsideMultiLineComment = false;
  865|       |
  866|       |                            // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  867|     10|                            m_Iterator -= TokenText(begin_of_token).length().unsafe();
  868|       |
  869|     10|                            Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  870|     10|                                        beginning_line_of_multiline_comment,
  871|     10|                                        beginning_column_of_multiline_comment};
  872|       |
  873|     10|                            return token;
  874|     10|                        }
  875|    378|                    }
  876|  19.0k|                    else if (current_character == '\n')
  ------------------
  |  Branch (876:30): [True: 913, False: 18.1k]
  ------------------
  877|    913|                    {
  878|    913|                        ConsumeCurrentCharacter();
  879|    913|                        AdvanceToNextLine();
  880|    913|                    }
  881|  18.1k|                    else
  882|  18.1k|                    {
  883|       |                        // Otherwise simply consume the character
  884|  18.1k|                        ConsumeCurrentCharacter();
  885|  18.1k|                        m_Column += 1u;
  886|  18.1k|                    }
  887|  19.4k|                }
  888|     57|            }
  889|       |
  890|       |            /* Skip characters */
  891|       |
  892|   370k|            else if (is_skip_character(current_character))
  ------------------
  |  Branch (892:22): [True: 6.39k, False: 364k]
  ------------------
  893|  6.39k|            {
  894|  6.39k|                SkipCurrentCharacter();
  895|  6.39k|            }
  896|       |
  897|       |            /* New Lines */
  898|       |
  899|   364k|            else if (current_character == '\n')
  ------------------
  |  Branch (899:22): [True: 7.19k, False: 357k]
  ------------------
  900|  7.19k|            {
  901|  7.19k|                Token new_line_token = ConstructToken(TokenKind::NewLine);
  902|       |
  903|  7.19k|                ConsumeCurrentCharacter();
  904|  7.19k|                AdvanceToNextLine();
  905|       |
  906|  7.19k|                return new_line_token;
  907|  7.19k|            }
  908|       |
  909|       |            /* Comment */
  910|       |
  911|   357k|            else if (current_character == ';')
  ------------------
  |  Branch (911:22): [True: 651, False: 356k]
  ------------------
  912|    651|            {
  913|    651|                iterator begin_of_token = m_Iterator;
  914|    651|                ConsumeCurrentCharacter();
  915|       |
  916|  6.92k|                while (!IsFinished())
  ------------------
  |  Branch (916:24): [True: 6.90k, False: 24]
  ------------------
  917|  6.90k|                {
  918|  6.90k|                    current_character = *m_Iterator;
  919|       |
  920|  6.90k|                    if (current_character != '\n')
  ------------------
  |  Branch (920:25): [True: 6.27k, False: 627]
  ------------------
  921|  6.27k|                    {
  922|  6.27k|                        ConsumeCurrentCharacter();
  923|  6.27k|                        continue;
  924|  6.27k|                    }
  925|       |
  926|    627|                    break;
  927|  6.90k|                }
  928|       |
  929|    651|                return ConstructToken(TokenKind::Comment, begin_of_token);
  930|    651|            }
  931|       |
  932|       |            /* Macros */
  933|       |
  934|   356k|            else if (current_character == '@')
  ------------------
  |  Branch (934:22): [True: 9.00k, False: 347k]
  ------------------
  935|  9.00k|            {
  936|  9.00k|                iterator begin_of_token = m_Iterator;
  937|  9.00k|                ConsumeCurrentCharacter();
  938|       |
  939|  60.7k|                while (!IsFinished())
  ------------------
  |  Branch (939:24): [True: 60.6k, False: 49]
  ------------------
  940|  60.6k|                {
  941|  60.6k|                    current_character = *m_Iterator;
  942|       |
  943|  60.6k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (943:25): [True: 51.7k, False: 8.95k]
  ------------------
  944|  51.7k|                    {
  945|  51.7k|                        ConsumeCurrentCharacter();
  946|  51.7k|                        continue;
  947|  51.7k|                    }
  948|       |
  949|  8.95k|                    break;
  950|  60.6k|                }
  951|       |
  952|       |                // Emit token
  953|  9.00k|                return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  954|  9.00k|            }
  955|       |
  956|       |            /* Variable identifier */
  957|       |
  958|   347k|            else if (current_character == '$')
  ------------------
  |  Branch (958:22): [True: 10.3k, False: 337k]
  ------------------
  959|  10.3k|            {
  960|  10.3k|                iterator     begin_of_token = m_Iterator;
  961|  10.3k|                phi::boolean parsed_something{false};
  962|  10.3k|                ConsumeCurrentCharacter();
  963|       |
  964|  53.3k|                while (!IsFinished())
  ------------------
  |  Branch (964:24): [True: 53.2k, False: 35]
  ------------------
  965|  53.2k|                {
  966|  53.2k|                    current_character = *m_Iterator;
  967|       |
  968|  53.2k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (968:25): [True: 42.9k, False: 10.2k]
  ------------------
  969|  42.9k|                    {
  970|  42.9k|                        ConsumeCurrentCharacter();
  971|  42.9k|                        parsed_something = true;
  972|  42.9k|                        continue;
  973|  42.9k|                    }
  974|       |
  975|  10.2k|                    break;
  976|  53.2k|                }
  977|       |
  978|       |                // Ensure that '$' is not a valid variable identifier
  979|  10.3k|                if (!parsed_something)
  ------------------
  |  Branch (979:21): [True: 7.64k, False: 2.68k]
  ------------------
  980|  7.64k|                {
  981|  7.64k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
  982|  7.64k|                }
  983|       |
  984|       |                // Emit Token
  985|  2.68k|                return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  986|  10.3k|            }
  987|       |
  988|       |            /* PreProcessor directive */
  989|       |
  990|   337k|            else if (current_character == '#')
  ------------------
  |  Branch (990:22): [True: 9.58k, False: 327k]
  ------------------
  991|  9.58k|            {
  992|  9.58k|                iterator begin_of_token = m_Iterator;
  993|  9.58k|                ConsumeCurrentCharacter();
  994|       |
  995|  42.6k|                while (!IsFinished())
  ------------------
  |  Branch (995:24): [True: 42.6k, False: 41]
  ------------------
  996|  42.6k|                {
  997|  42.6k|                    current_character = *m_Iterator;
  998|       |
  999|  42.6k|                    if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (999:25): [True: 33.1k, False: 9.54k]
  ------------------
 1000|  33.1k|                    {
 1001|  33.1k|                        ConsumeCurrentCharacter();
 1002|  33.1k|                        continue;
 1003|  33.1k|                    }
 1004|       |
 1005|  9.54k|                    break;
 1006|  42.6k|                }
 1007|       |
 1008|       |                // Check for start of multiline comment
 1009|  9.58k|                const TokenKind pre_processor_token_kind =
 1010|  9.58k|                        lookup_pre_processor(TokenText(begin_of_token));
 1011|       |
 1012|  9.58k|                if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (1012:21): [True: 57, False: 9.53k]
  ------------------
 1013|     57|                {
 1014|     57|                    m_InsideMultiLineComment = true;
 1015|     57|                }
 1016|       |
 1017|  9.58k|                return ConstructToken(pre_processor_token_kind, begin_of_token);
 1018|  9.58k|            }
 1019|       |
 1020|       |            /* SingleQuoteStringLiteral */
 1021|       |
 1022|   327k|            else if (current_character == '\'')
  ------------------
  |  Branch (1022:22): [True: 4.64k, False: 323k]
  ------------------
 1023|  4.64k|            {
 1024|  4.64k|                iterator     begin_of_token = m_Iterator;
 1025|  4.64k|                phi::boolean did_terminate  = false;
 1026|  4.64k|                ConsumeCurrentCharacter();
 1027|       |
 1028|  13.2k|                while (!IsFinished())
  ------------------
  |  Branch (1028:24): [True: 13.2k, False: 50]
  ------------------
 1029|  13.2k|                {
 1030|  13.2k|                    current_character = *m_Iterator;
 1031|  13.2k|                    ConsumeCurrentCharacter();
 1032|       |
 1033|  13.2k|                    if (current_character == '\'')
  ------------------
  |  Branch (1033:25): [True: 4.59k, False: 8.65k]
  ------------------
 1034|  4.59k|                    {
 1035|  4.59k|                        did_terminate = true;
 1036|  4.59k|                        break;
 1037|  4.59k|                    }
 1038|  13.2k|                }
 1039|       |
 1040|  4.64k|                if (did_terminate)
  ------------------
  |  Branch (1040:21): [True: 4.59k, False: 50]
  ------------------
 1041|  4.59k|                {
 1042|  4.59k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1043|  4.59k|                }
 1044|       |
 1045|       |                // TODO: Warn unterminated string literal
 1046|  4.64k|            }
 1047|       |
 1048|       |            /* DoubleQuoteStringLiteral */
 1049|       |
 1050|   323k|            else if (current_character == '\"')
  ------------------
  |  Branch (1050:22): [True: 2.52k, False: 320k]
  ------------------
 1051|  2.52k|            {
 1052|  2.52k|                iterator     begin_of_token = m_Iterator;
 1053|  2.52k|                phi::boolean did_terminate  = false;
 1054|  2.52k|                ConsumeCurrentCharacter();
 1055|       |
 1056|  7.88k|                while (!IsFinished())
  ------------------
  |  Branch (1056:24): [True: 7.85k, False: 30]
  ------------------
 1057|  7.85k|                {
 1058|  7.85k|                    current_character = *m_Iterator;
 1059|  7.85k|                    ConsumeCurrentCharacter();
 1060|       |
 1061|  7.85k|                    if (current_character == '\"')
  ------------------
  |  Branch (1061:25): [True: 2.49k, False: 5.35k]
  ------------------
 1062|  2.49k|                    {
 1063|  2.49k|                        did_terminate = true;
 1064|  2.49k|                        break;
 1065|  2.49k|                    }
 1066|  7.85k|                }
 1067|       |
 1068|  2.52k|                if (did_terminate)
  ------------------
  |  Branch (1068:21): [True: 2.49k, False: 30]
  ------------------
 1069|  2.49k|                {
 1070|  2.49k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1071|  2.49k|                }
 1072|  2.52k|            }
 1073|       |
 1074|       |            /* Number Literals - IntegerLiteral/FloatLiteral */
 1075|       |
 1076|   320k|            else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1076:22): [True: 12.2k, False: 308k]
  |  Branch (1076:22): [True: 15.1k, False: 305k]
  |  Branch (1076:58): [True: 2.93k, False: 305k]
  ------------------
 1077|  15.1k|            {
 1078|  15.1k|                const phi::boolean start_with_zero{current_character == '0'};
 1079|  15.1k|                phi::boolean       parsing_hex{false};
 1080|  15.1k|                phi::boolean       parsing_float{current_character == '.'};
 1081|       |
 1082|  15.1k|                iterator begin_of_token = m_Iterator;
 1083|  15.1k|                ConsumeCurrentCharacter();
 1084|       |
 1085|  71.9k|                while (!IsFinished())
  ------------------
  |  Branch (1085:24): [True: 71.8k, False: 69]
  ------------------
 1086|  71.8k|                {
 1087|  71.8k|                    current_character = *m_Iterator;
 1088|       |
 1089|       |                    // Is the second character
 1090|  71.8k|                    if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1090:25): [True: 15.1k, False: 56.7k]
  |  Branch (1090:62): [True: 2.00k, False: 13.1k]
  ------------------
 1091|  2.00k|                    {
 1092|       |                        // Hex character
 1093|  2.00k|                        if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1093:29): [True: 325, False: 1.67k]
  |  Branch (1093:57): [True: 85, False: 1.59k]
  ------------------
 1094|    410|                        {
 1095|    410|                            parsing_hex = true;
 1096|    410|                            ConsumeCurrentCharacter();
 1097|    410|                            continue;
 1098|    410|                        }
 1099|  2.00k|                    }
 1100|       |
 1101|       |                    // Actually parsing
 1102|  71.4k|                    if (parsing_hex)
  ------------------
  |  Branch (1102:25): [True: 2.11k, False: 69.3k]
  ------------------
 1103|  2.11k|                    {
 1104|  2.11k|                        if (parsing_float)
  ------------------
  |  Branch (1104:29): [True: 0, False: 2.11k]
  ------------------
 1105|      0|                        {
 1106|       |                            // TODO: Error hexliteral not allowed for floats
 1107|      0|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1108|      0|                        }
 1109|       |
 1110|  2.11k|                        if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1110:29): [True: 1.70k, False: 402]
  ------------------
 1111|  1.70k|                        {
 1112|  1.70k|                            ConsumeCurrentCharacter();
 1113|  1.70k|                            continue;
 1114|  1.70k|                        }
 1115|  2.11k|                    }
 1116|  69.3k|                    else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1116:30): [True: 54.3k, False: 15.0k]
  ------------------
 1117|  54.3k|                    {
 1118|  54.3k|                        ConsumeCurrentCharacter();
 1119|  54.3k|                        continue;
 1120|  54.3k|                    }
 1121|       |                    // Literal dot
 1122|  15.0k|                    else if (current_character == '.')
  ------------------
  |  Branch (1122:30): [True: 2.64k, False: 12.3k]
  ------------------
 1123|  2.64k|                    {
 1124|  2.64k|                        if (parsing_float)
  ------------------
  |  Branch (1124:29): [True: 2.29k, False: 348]
  ------------------
 1125|  2.29k|                        {
 1126|       |                            // TODO: Error more than one dot in float literal
 1127|  2.29k|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1128|  2.29k|                        }
 1129|       |
 1130|    348|                        parsing_float = true;
 1131|    348|                        ConsumeCurrentCharacter();
 1132|    348|                        continue;
 1133|  2.64k|                    }
 1134|       |
 1135|  12.7k|                    break;
 1136|  71.4k|                }
 1137|       |
 1138|  12.8k|                if (parsing_float)
  ------------------
  |  Branch (1138:21): [True: 985, False: 11.8k]
  ------------------
 1139|    985|                {
 1140|       |                    // Were not allowed to end with a dot
 1141|       |                    // TODO: This is very hacky and looks nasty
 1142|    985|                    if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1142:25): [True: 573, False: 412]
  ------------------
 1143|    573|                    {
 1144|       |                        // TODO: Prober error
 1145|    573|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1146|    573|                    }
 1147|       |
 1148|    412|                    return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1149|    985|                }
 1150|       |
 1151|  11.8k|                return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1152|  12.8k|            }
 1153|       |
 1154|       |            /* Operators */
 1155|       |
 1156|   305k|            else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1156:22): [True: 23.9k, False: 281k]
  ------------------
 1157|  23.9k|            {
 1158|  23.9k|                iterator begin_of_token = m_Iterator;
 1159|  23.9k|                ConsumeCurrentCharacter();
 1160|       |
 1161|  23.9k|                if (!IsFinished())
  ------------------
  |  Branch (1161:21): [True: 23.8k, False: 94]
  ------------------
 1162|  23.8k|                {
 1163|  23.8k|                    if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1163:25): [True: 3.52k, False: 20.3k]
  |  Branch (1163:48): [True: 4.79k, False: 15.5k]
  |  Branch (1163:74): [True: 89, False: 4.70k]
  ------------------
 1164|  3.61k|                    {
 1165|       |                        // We have an actual two part operator
 1166|  3.61k|                        ConsumeCurrentCharacter();
 1167|  3.61k|                    }
 1168|  23.8k|                }
 1169|       |
 1170|  23.9k|                return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1171|  23.9k|            }
 1172|       |
 1173|   281k|            else if (is_single_operator(current_character))
  ------------------
  |  Branch (1173:22): [True: 4.72k, False: 276k]
  ------------------
 1174|  4.72k|            {
 1175|  4.72k|                Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1176|       |
 1177|  4.72k|                ConsumeCurrentCharacter();
 1178|       |
 1179|  4.72k|                return token;
 1180|  4.72k|            }
 1181|       |
 1182|       |            /* Punctioation */
 1183|       |
 1184|   276k|            else if (current_character == ',')
  ------------------
  |  Branch (1184:22): [True: 642, False: 276k]
  ------------------
 1185|    642|            {
 1186|    642|                Token token = ConstructToken(TokenKind::Comma);
 1187|       |
 1188|    642|                ConsumeCurrentCharacter();
 1189|       |
 1190|    642|                return token;
 1191|    642|            }
 1192|       |
 1193|   276k|            else if (current_character == '(')
  ------------------
  |  Branch (1193:22): [True: 55.1k, False: 220k]
  ------------------
 1194|  55.1k|            {
 1195|  55.1k|                Token token = ConstructToken(TokenKind::LParen);
 1196|       |
 1197|  55.1k|                ConsumeCurrentCharacter();
 1198|       |
 1199|  55.1k|                return token;
 1200|  55.1k|            }
 1201|       |
 1202|   220k|            else if (current_character == ')')
  ------------------
  |  Branch (1202:22): [True: 7.67k, False: 213k]
  ------------------
 1203|  7.67k|            {
 1204|  7.67k|                Token token = ConstructToken(TokenKind::RParen);
 1205|       |
 1206|  7.67k|                ConsumeCurrentCharacter();
 1207|       |
 1208|  7.67k|                return token;
 1209|  7.67k|            }
 1210|       |
 1211|   213k|            else if (current_character == '.')
  ------------------
  |  Branch (1211:22): [True: 0, False: 213k]
  ------------------
 1212|      0|            {
 1213|      0|                Token token = ConstructToken(TokenKind::Dot);
 1214|       |
 1215|      0|                ConsumeCurrentCharacter();
 1216|       |
 1217|      0|                return token;
 1218|      0|            }
 1219|       |
 1220|   213k|            else if (current_character == '[')
  ------------------
  |  Branch (1220:22): [True: 1.36k, False: 211k]
  ------------------
 1221|  1.36k|            {
 1222|  1.36k|                Token token = ConstructToken(TokenKind::LSquare);
 1223|       |
 1224|  1.36k|                ConsumeCurrentCharacter();
 1225|       |
 1226|  1.36k|                return token;
 1227|  1.36k|            }
 1228|       |
 1229|   211k|            else if (current_character == ']')
  ------------------
  |  Branch (1229:22): [True: 3.81k, False: 208k]
  ------------------
 1230|  3.81k|            {
 1231|  3.81k|                Token token = ConstructToken(TokenKind::RSquare);
 1232|       |
 1233|  3.81k|                ConsumeCurrentCharacter();
 1234|       |
 1235|  3.81k|                return token;
 1236|  3.81k|            }
 1237|       |
 1238|       |            /* Identifier */
 1239|       |
 1240|   208k|            else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1240:22): [True: 21.1k, False: 186k]
  ------------------
 1241|  21.1k|            {
 1242|  21.1k|                iterator begin_of_token = m_Iterator;
 1243|  21.1k|                ConsumeCurrentCharacter();
 1244|       |
 1245|   200k|                while (!IsFinished())
  ------------------
  |  Branch (1245:24): [True: 200k, False: 256]
  ------------------
 1246|   200k|                {
 1247|   200k|                    current_character = *m_Iterator;
 1248|       |
 1249|   200k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1249:25): [True: 179k, False: 20.8k]
  ------------------
 1250|   179k|                    {
 1251|   179k|                        ConsumeCurrentCharacter();
 1252|   179k|                        continue;
 1253|   179k|                    }
 1254|       |
 1255|  20.8k|                    break;
 1256|   200k|                }
 1257|       |
 1258|  21.1k|                return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1259|  21.1k|            }
 1260|       |
 1261|       |            /* Unknown/Unexpected character */
 1262|       |
 1263|   186k|            else
 1264|   186k|            {
 1265|       |                // TODO: Warn unexpected character encountered
 1266|   186k|                SkipCurrentCharacter();
 1267|   186k|            }
 1268|   457k|        }
 1269|       |
 1270|    759|        return {};
 1271|   178k|    }
_ZN10OpenAutoIt5Lexer10ProcessAllEv:
 1274|  1.60k|    {
 1275|  1.60k|        TokenStream& stream = m_ParseResult.m_TokenStream;
 1276|       |
 1277|   179k|        while (!IsFinished())
  ------------------
  |  Branch (1277:16): [True: 178k, False: 1.60k]
  ------------------
 1278|   178k|        {
 1279|   178k|            phi::optional<Token> maybe_token = GetNextToken();
 1280|       |
 1281|   178k|            if (maybe_token.has_value())
  ------------------
  |  Branch (1281:17): [True: 177k, False: 759]
  ------------------
 1282|   177k|            {
 1283|   177k|                stream.emplace_back(maybe_token.value());
 1284|   177k|            }
 1285|   178k|        }
 1286|       |
 1287|  1.60k|        stream.finalize();
 1288|  1.60k|    }
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1298|   872k|    {
 1299|   872k|        ++m_Iterator;
 1300|   872k|    }
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1303|  8.10k|    {
 1304|  8.10k|        ++m_LineNumber;
 1305|  8.10k|        m_Column = 1u;
 1306|  8.10k|    }
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1309|   279k|    {
 1310|   279k|        ConsumeCurrentCharacter();
 1311|   279k|        ++m_Column;
 1312|   279k|    }
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   34|  9.00k|    {
   35|  9.00k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  9.00k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  9.00k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 215, False: 8.78k]
  ------------------
   39|    215|        {
   40|    215|            return itr->second;
   41|    215|        }
   42|       |
   43|  8.78k|        return m_Default;
   44|  9.00k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   914k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   34|  9.96k|    {
   35|  9.96k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  9.96k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  9.96k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 365, False: 9.60k]
  ------------------
   39|    365|        {
   40|    365|            return itr->second;
   41|    365|        }
   42|       |
   43|  9.60k|        return m_Default;
   44|  9.96k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  97.5k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   34|  19.0k|    {
   35|  19.0k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  19.0k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  19.0k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 617, False: 18.4k]
  ------------------
   39|    617|        {
   40|    617|            return itr->second;
   41|    617|        }
   42|       |
   43|  18.4k|        return m_Default;
   44|  19.0k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  7.58M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   34|  21.1k|    {
   35|  21.1k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  21.1k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  21.1k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 2.11k, False: 19.0k]
  ------------------
   39|  2.11k|        {
   40|  2.11k|            return itr->second;
   41|  2.11k|        }
   42|       |
   43|  19.0k|        return m_Default;
   44|  21.1k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   884k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   34|  28.6k|    {
   35|  28.6k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  28.6k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  28.6k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 28.6k, False: 0]
  ------------------
   39|  28.6k|        {
   40|  28.6k|            return itr->second;
   41|  28.6k|        }
   42|       |
   43|      0|        return m_Default;
   44|  28.6k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   307k|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  735|  44.6k|{
  736|  44.6k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (736:12): [True: 34.5k, False: 10.0k]
  |  Branch (736:40): [True: 149, False: 9.92k]
  ------------------
  737|  44.6k|}
_Z17is_skip_characterc:
  715|   370k|{
  716|   370k|    switch (c)
  717|   370k|    {
  718|  1.81k|        case ' ':
  ------------------
  |  Branch (718:9): [True: 1.81k, False: 369k]
  ------------------
  719|  3.12k|        case '\v':
  ------------------
  |  Branch (719:9): [True: 1.31k, False: 369k]
  ------------------
  720|  3.63k|        case '\t':
  ------------------
  |  Branch (720:9): [True: 511, False: 370k]
  ------------------
  721|  5.09k|        case '\b':
  ------------------
  |  Branch (721:9): [True: 1.45k, False: 369k]
  ------------------
  722|  6.39k|        case '\f':
  ------------------
  |  Branch (722:9): [True: 1.29k, False: 369k]
  ------------------
  723|  6.39k|            return true;
  724|   364k|        default:
  ------------------
  |  Branch (724:9): [True: 364k, False: 6.39k]
  ------------------
  725|   364k|            return false;
  726|   370k|    }
  727|   370k|}
_Z24is_valid_identifier_charc:
  730|   522k|{
  731|   522k|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (731:12): [True: 294k, False: 227k]
  |  Branch (731:40): [True: 325, False: 227k]
  ------------------
  732|   522k|}
_Z20is_two_part_operatorc:
  740|   305k|{
  741|   305k|    switch (c)
  742|   305k|    {
  743|  7.82k|        case '=':
  ------------------
  |  Branch (743:9): [True: 7.82k, False: 297k]
  ------------------
  744|  9.52k|        case '+':
  ------------------
  |  Branch (744:9): [True: 1.70k, False: 303k]
  ------------------
  745|  11.2k|        case '-':
  ------------------
  |  Branch (745:9): [True: 1.70k, False: 303k]
  ------------------
  746|  13.0k|        case '*':
  ------------------
  |  Branch (746:9): [True: 1.81k, False: 303k]
  ------------------
  747|  13.7k|        case '/':
  ------------------
  |  Branch (747:9): [True: 717, False: 304k]
  ------------------
  748|  15.8k|        case '&':
  ------------------
  |  Branch (748:9): [True: 2.04k, False: 303k]
  ------------------
  749|  20.8k|        case '<':
  ------------------
  |  Branch (749:9): [True: 5.08k, False: 300k]
  ------------------
  750|  23.9k|        case '>':
  ------------------
  |  Branch (750:9): [True: 3.06k, False: 302k]
  ------------------
  751|  23.9k|            return true;
  752|       |
  753|   281k|        default:
  ------------------
  |  Branch (753:9): [True: 281k, False: 23.9k]
  ------------------
  754|   281k|            return false;
  755|   305k|    }
  756|   305k|}
_Z18is_single_operatorc:
  759|   281k|{
  760|   281k|    switch (c)
  761|   281k|    {
  762|  3.11k|        case '^':
  ------------------
  |  Branch (762:9): [True: 3.11k, False: 278k]
  ------------------
  763|  3.94k|        case '?':
  ------------------
  |  Branch (763:9): [True: 821, False: 280k]
  ------------------
  764|  4.72k|        case ':':
  ------------------
  |  Branch (764:9): [True: 780, False: 280k]
  ------------------
  765|  4.72k|            return true;
  766|       |
  767|   276k|        default:
  ------------------
  |  Branch (767:9): [True: 276k, False: 4.72k]
  ------------------
  768|   276k|            return false;
  769|   281k|    }
  770|   281k|}

_ZN10OpenAutoIt12ParseWarning21EmbeddedNullCharacterEN3phi7integerImEES3_:
   12|  86.1k|    {
   13|  86.1k|        ParseWarning warn;
   14|       |
   15|  86.1k|        warn.m_Type = ParseWarningType::EmbeddedNullCharacter;
   16|       |
   17|  86.1k|        warn.m_LocationBegin.line_number = line;
   18|  86.1k|        warn.m_LocationBegin.column      = column;
   19|       |
   20|  86.1k|        warn.m_LocationEnd.line_number = line;
   21|  86.1k|        warn.m_LocationEnd.column      = column;
   22|       |
   23|  86.1k|        return warn;
   24|  86.1k|    }

_ZN10OpenAutoIt6ParserC2Ev:
  120|  1.60k|    Parser::Parser() noexcept = default;
_ZN10OpenAutoIt6Parser13ParseDocumentERNS_11ParseResultE:
  123|  1.60k|    {
  124|  1.60k|        m_ParseResult = &parse_result;
  125|  1.60k|        m_TokenStream = &parse_result.m_TokenStream;
  126|       |
  127|  1.60k|        m_ParseResult->m_Document = phi::make_not_null_scope<ASTDocument>();
  128|       |
  129|  85.4k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (129:16): [True: 83.8k, False: 1.60k]
  ------------------
  130|  83.8k|        {
  131|  83.8k|            const Token& token = CurrentToken();
  132|       |
  133|       |            // Parse global function definition
  134|  83.8k|            if (token.GetTokenKind() == TokenKind::KW_Func)
  ------------------
  |  Branch (134:17): [True: 571, False: 83.2k]
  ------------------
  135|    571|            {
  136|    571|                auto function_definition = ParseFunctionDefinition();
  137|    571|                if (!function_definition)
  ------------------
  |  Branch (137:21): [True: 571, False: 0]
  ------------------
  138|    571|                {
  139|    571|                    std::cout << "ERR: Failed to parse function definition!\n";
  140|    571|                    continue;
  141|    571|                }
  142|       |
  143|      0|                AppendFunctionToDocument(function_definition.release_not_null());
  144|      0|            }
  145|  83.2k|            else if (token.GetTokenKind() == TokenKind::NewLine ||
  ------------------
  |  Branch (145:22): [True: 4.43k, False: 78.8k]
  ------------------
  146|  83.2k|                     token.GetTokenKind() == TokenKind::Comment)
  ------------------
  |  Branch (146:22): [True: 562, False: 78.2k]
  ------------------
  147|  5.00k|            {
  148|       |                // Simply ignore and consume newlines and comments
  149|  5.00k|                ConsumeCurrent();
  150|  5.00k|            }
  151|  78.2k|            else if (token.GetTokenKind() == TokenKind::NotAToken)
  ------------------
  |  Branch (151:22): [True: 15.6k, False: 62.6k]
  ------------------
  152|  15.6k|            {
  153|  15.6k|                std::cout << "ERR: Unexpected NotAToken!\n";
  154|  15.6k|                ConsumeCurrent();
  155|  15.6k|                continue;
  156|  15.6k|            }
  157|  62.6k|            else
  158|  62.6k|            {
  159|  62.6k|                auto statement = ParseStatement();
  160|  62.6k|                if (!statement)
  ------------------
  |  Branch (160:21): [True: 50.2k, False: 12.3k]
  ------------------
  161|  50.2k|                {
  162|       |                    // TODO: Proper error reporting
  163|  50.2k|                    std::cout << "ERR: Failed to parse statement!\n";
  164|       |
  165|  50.2k|                    if (m_TokenStream->has_more())
  ------------------
  |  Branch (165:25): [True: 49.5k, False: 743]
  ------------------
  166|  49.5k|                    {
  167|       |                        // Swallow the bad token
  168|  49.5k|                        ConsumeCurrent();
  169|  49.5k|                    }
  170|  50.2k|                    continue;
  171|  50.2k|                }
  172|       |
  173|  12.3k|                AppendStatementToDocument(statement.release_not_null());
  174|  12.3k|            }
  175|  83.8k|        }
  176|  1.60k|    }
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  179|   417k|    {
  180|   417k|        PHI_ASSERT(m_TokenStream->has_more());
  181|       |
  182|   417k|        return m_TokenStream->look_ahead();
  183|   417k|    }
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  186|   126k|    {
  187|   126k|        m_TokenStream->consume();
  188|   126k|    }
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  191|  63.7k|    {
  192|  63.8k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (192:16): [True: 63.8k, False: 0]
  ------------------
  193|  63.8k|        {
  194|  63.8k|            switch (CurrentToken().GetTokenKind())
  195|  63.8k|            {
  196|    111|                case TokenKind::NewLine:
  ------------------
  |  Branch (196:17): [True: 111, False: 63.7k]
  ------------------
  197|    111|                case TokenKind::Comment:
  ------------------
  |  Branch (197:17): [True: 0, False: 63.8k]
  ------------------
  198|    111|                    ConsumeCurrent();
  199|    111|                    break;
  200|       |
  201|  63.7k|                default:
  ------------------
  |  Branch (201:17): [True: 63.7k, False: 111]
  ------------------
  202|  63.7k|                    return;
  203|  63.8k|            }
  204|  63.8k|        }
  205|  63.7k|    }
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  208|  3.03k|    {
  209|       |        // Do we even have more tokens?
  210|  3.03k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (210:13): [True: 7, False: 3.02k]
  ------------------
  211|      7|        {
  212|      7|            return false;
  213|      7|        }
  214|       |
  215|       |        // Is is the correct token kind
  216|  3.02k|        if (CurrentToken().GetTokenKind() != kind)
  ------------------
  |  Branch (216:13): [True: 783, False: 2.24k]
  ------------------
  217|    783|        {
  218|    783|            return false;
  219|    783|        }
  220|       |
  221|  2.24k|        ConsumeCurrent();
  222|  2.24k|        return true;
  223|  3.02k|    }
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  226|    571|    {
  227|    571|        if (!MustParse(TokenKind::KW_Func))
  ------------------
  |  Branch (227:13): [True: 0, False: 571]
  ------------------
  228|      0|        {
  229|       |            // TODO: Proper Error
  230|      0|            return {};
  231|      0|        }
  232|       |
  233|       |        // Next we MUST parse the function name
  234|    571|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (234:13): [True: 1, False: 570]
  ------------------
  235|      1|        {
  236|      1|            return {};
  237|      1|        }
  238|    570|        const Token& function_name_token = CurrentToken();
  239|    570|        if (function_name_token.GetTokenKind() != TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (239:13): [True: 49, False: 521]
  ------------------
  240|     49|        {
  241|       |            // TODO: Proper error
  242|     49|            return {};
  243|     49|        }
  244|    521|        ConsumeCurrent();
  245|       |
  246|    521|        auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  247|    521|        function_definition->m_FunctionName = function_name_token.GetText();
  248|       |
  249|       |        // Next we MUST parse an opening parenthesis (LParen)
  250|    521|        if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (250:13): [True: 77, False: 444]
  ------------------
  251|     77|        {
  252|       |            // TODO: Proper error
  253|     77|            return {};
  254|     77|        }
  255|       |
  256|       |        // Next me parse the function parameter declarations until right parenthesis (RParen)
  257|    445|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (257:16): [True: 444, False: 1]
  |  Branch (257:16): [True: 50, False: 395]
  |  Branch (257:45): [True: 50, False: 394]
  ------------------
  258|     50|        {
  259|     50|            phi::optional<FunctionParameter> function_paremeter_optional =
  260|     50|                    ParseFunctionParameterDefinition();
  261|     50|            if (!function_paremeter_optional)
  ------------------
  |  Branch (261:17): [True: 49, False: 1]
  ------------------
  262|     49|            {
  263|       |                // TODO: Proper error reporting
  264|     49|                return {};
  265|     49|            }
  266|      1|            FunctionParameter& function_paremeter = function_paremeter_optional.value();
  267|       |
  268|      1|            function_definition->m_Parameters.emplace_back(phi::move(function_paremeter));
  269|       |
  270|       |            // Parse comma
  271|      1|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (271:17): [True: 1, False: 0]
  |  Branch (271:17): [True: 0, False: 1]
  |  Branch (271:46): [True: 0, False: 1]
  ------------------
  272|      0|            {
  273|      0|                ConsumeCurrent();
  274|      0|            }
  275|      1|        }
  276|       |
  277|       |        // Next we MUST parse a right parenthesis (RParen)
  278|    395|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (278:13): [True: 1, False: 394]
  ------------------
  279|      1|        {
  280|       |            // TODO: Proper error
  281|      1|            return {};
  282|      1|        }
  283|       |
  284|       |        // Next we MUST parse a new line
  285|    394|        if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (285:13): [True: 315, False: 79]
  ------------------
  286|    315|        {
  287|       |            // TODO: Proper error
  288|    315|            return {};
  289|    315|        }
  290|       |
  291|       |        // Next parse Statements until EndFunc
  292|    113|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (292:16): [True: 113, False: 0]
  |  Branch (292:16): [True: 113, False: 0]
  |  Branch (292:45): [True: 113, False: 0]
  ------------------
  293|    113|        {
  294|    113|            auto statement = ParseStatement();
  295|    113|            if (!statement)
  ------------------
  |  Branch (295:17): [True: 79, False: 34]
  ------------------
  296|     79|            {
  297|     79|                std::cout << "ERR: Failed while parsing statement for function \""
  298|     79|                          << std::string(function_definition->m_FunctionName) << "\"\n";
  299|       |                // TODO: Report proper error
  300|     79|                return {};
  301|     79|            }
  302|       |
  303|     34|            function_definition->m_FunctionBody.emplace_back(
  304|     34|                    phi::move(statement.release_not_null()));
  305|       |
  306|     34|            ConsumeNewLineAndComments();
  307|     34|        }
  308|       |
  309|       |        // Next we MUST parse EndFunc
  310|      0|        if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (310:13): [True: 0, False: 0]
  ------------------
  311|      0|        {
  312|       |            // TODO: Proper error
  313|      0|            return {};
  314|      0|        }
  315|       |
  316|      0|        return phi::move(function_definition);
  317|      0|    }
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  320|     50|    {
  321|       |        // TODO: This entire function requres more error checks
  322|     50|        FunctionParameter parameter;
  323|       |
  324|     69|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (324:16): [True: 67, False: 2]
  ------------------
  325|     67|        {
  326|     67|            const Token& token = CurrentToken();
  327|       |
  328|     67|            switch (token.GetTokenKind())
  329|     67|            {
  330|     12|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (330:17): [True: 12, False: 55]
  ------------------
  331|     12|                    parameter.name = token.GetText().substring_view(1u);
  332|     12|                    ConsumeCurrent();
  333|     12|                    break;
  334|      0|                }
  335|      0|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (335:17): [True: 0, False: 67]
  ------------------
  336|      0|                    parameter.as_const = true;
  337|      0|                    ConsumeCurrent();
  338|      0|                    break;
  339|      0|                }
  340|      1|                case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (340:17): [True: 1, False: 66]
  ------------------
  341|      1|                    parameter.by_ref = true;
  342|      1|                    ConsumeCurrent();
  343|      1|                    break;
  344|      0|                }
  345|      6|                case TokenKind::OP_Equals: {
  ------------------
  |  Branch (345:17): [True: 6, False: 61]
  ------------------
  346|       |                    // Consume the '='
  347|      6|                    ConsumeCurrent();
  348|       |
  349|       |                    // Default value is an expression
  350|      6|                    auto default_expression = ParseExpression();
  351|      6|                    if (!default_expression)
  ------------------
  |  Branch (351:25): [True: 0, False: 6]
  ------------------
  352|      0|                    {
  353|       |                        // TODO: Report error
  354|      0|                        return {};
  355|      0|                    }
  356|       |
  357|      6|                    parameter.default_value = phi::move(default_expression);
  358|      6|                    break;
  359|      6|                }
  360|      0|                case TokenKind::Comma:
  ------------------
  |  Branch (360:17): [True: 0, False: 67]
  ------------------
  361|      1|                case TokenKind::RParen: {
  ------------------
  |  Branch (361:17): [True: 1, False: 66]
  ------------------
  362|      1|                    return phi::move(parameter);
  363|      0|                }
  364|     47|                default: {
  ------------------
  |  Branch (364:17): [True: 47, False: 20]
  ------------------
  365|       |                    // TODO: Report error
  366|     47|                    return {};
  367|      0|                }
  368|     67|            }
  369|     67|        }
  370|       |
  371|       |        // TODO: Report error unexpected EOF
  372|      2|        return {};
  373|     50|    }
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  376|  63.7k|    {
  377|  63.7k|        ConsumeNewLineAndComments();
  378|       |
  379|  63.7k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (379:13): [True: 0, False: 63.7k]
  ------------------
  380|      0|        {
  381|       |            // TODO: Report proper error
  382|      0|            return {};
  383|      0|        }
  384|       |
  385|       |        // Loop until we parse something or there is nothing left to parse
  386|  63.7k|        const Token& token = CurrentToken();
  387|  63.7k|        switch (token.GetTokenKind())
  388|  63.7k|        {
  389|       |            // Variable assignment
  390|     52|            case TokenKind::KW_Const:
  ------------------
  |  Branch (390:13): [True: 52, False: 63.6k]
  ------------------
  391|    123|            case TokenKind::KW_Local:
  ------------------
  |  Branch (391:13): [True: 71, False: 63.6k]
  ------------------
  392|    231|            case TokenKind::KW_Global:
  ------------------
  |  Branch (392:13): [True: 108, False: 63.6k]
  ------------------
  393|    250|            case TokenKind::KW_Static:
  ------------------
  |  Branch (393:13): [True: 19, False: 63.7k]
  ------------------
  394|  2.57k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (394:13): [True: 2.32k, False: 61.4k]
  ------------------
  395|  2.57k|                auto variable_declaration = ParseVariableAssignment();
  396|  2.57k|                if (!variable_declaration)
  ------------------
  |  Branch (396:21): [True: 359, False: 2.21k]
  ------------------
  397|    359|                {
  398|    359|                    std::cout << "ERR: Failed to parse variable assignment!\n";
  399|    359|                    break;
  400|    359|                }
  401|       |
  402|  2.21k|                return phi::move(variable_declaration);
  403|  2.57k|            }
  404|       |
  405|       |            // If Statement
  406|    272|            case TokenKind::KW_If: {
  ------------------
  |  Branch (406:13): [True: 272, False: 63.4k]
  ------------------
  407|    272|                auto if_statement = ParseIfStatement();
  408|    272|                if (!if_statement)
  ------------------
  |  Branch (408:21): [True: 272, False: 0]
  ------------------
  409|    272|                {
  410|    272|                    std::cout << "ERR: Failed to parse if statement!\n";
  411|    272|                    break;
  412|    272|                }
  413|       |
  414|      0|                return phi::move(if_statement);
  415|    272|            }
  416|       |
  417|       |            // While statement
  418|    303|            case TokenKind::KW_While: {
  ------------------
  |  Branch (418:13): [True: 303, False: 63.4k]
  ------------------
  419|    303|                auto while_statement = ParseWhileStatement();
  420|    303|                if (!while_statement)
  ------------------
  |  Branch (420:21): [True: 303, False: 0]
  ------------------
  421|    303|                {
  422|    303|                    std::cout << "ERR: Failed to parse while statement!\n";
  423|    303|                    break;
  424|    303|                }
  425|       |
  426|      0|                return phi::move(while_statement);
  427|    303|            }
  428|       |
  429|  60.5k|            default: {
  ------------------
  |  Branch (429:13): [True: 60.5k, False: 3.15k]
  ------------------
  430|       |                // Try to parse ExpressionStatement
  431|  60.5k|                auto expression_statement = ParseExpressionStatement();
  432|  60.5k|                if (!expression_statement)
  ------------------
  |  Branch (432:21): [True: 49.5k, False: 10.9k]
  ------------------
  433|  49.5k|                {
  434|  49.5k|                    std::cout << "ERR: Unexpected token: " << enum_name(token.GetTokenKind())
  435|  49.5k|                              << '\n';
  436|  49.5k|                    return {};
  437|  49.5k|                }
  438|       |
  439|  10.9k|                return phi::move(expression_statement);
  440|  60.5k|            }
  441|  63.7k|        }
  442|       |
  443|       |        // TODO: Proper error reporting
  444|    934|        return {};
  445|  63.7k|    }
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  448|    303|    {
  449|    303|        const Token& token = CurrentToken();
  450|    303|        if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (450:13): [True: 0, False: 303]
  ------------------
  451|      0|        {
  452|       |            // TODO: Proper error
  453|      0|            return {};
  454|      0|        }
  455|    303|        ConsumeCurrent();
  456|       |
  457|       |        // Next we MUST parse an Expression
  458|    303|        auto while_condition_expression = ParseExpression();
  459|    303|        if (!while_condition_expression)
  ------------------
  |  Branch (459:13): [True: 110, False: 193]
  ------------------
  460|    110|        {
  461|       |            // TODO: Proper error
  462|    110|            return {};
  463|    110|        }
  464|       |
  465|    193|        auto while_statement =
  466|    193|                phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  467|       |
  468|       |        // Parse statements until KW_WEnd
  469|  1.95k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (469:16): [True: 1.92k, False: 30]
  |  Branch (469:16): [True: 1.92k, False: 30]
  |  Branch (469:45): [True: 1.92k, False: 0]
  ------------------
  470|  1.92k|        {
  471|       |            // Skip NewLines and comments
  472|  1.92k|            if (CurrentToken().GetTokenKind() == TokenKind::NewLine ||
  ------------------
  |  Branch (472:17): [True: 936, False: 991]
  ------------------
  473|  1.92k|                CurrentToken().GetTokenKind() == TokenKind::Comment)
  ------------------
  |  Branch (473:17): [True: 27, False: 964]
  ------------------
  474|    963|            {
  475|    963|                ConsumeCurrent();
  476|    963|                continue;
  477|    963|            }
  478|       |
  479|       |            // Parse statements
  480|    964|            auto statement = ParseStatement();
  481|    964|            if (!statement)
  ------------------
  |  Branch (481:17): [True: 163, False: 801]
  ------------------
  482|    163|            {
  483|       |                // TODO: Propeer error
  484|    163|                return {};
  485|    163|            }
  486|       |
  487|    801|            while_statement->m_Statements.emplace_back(statement.release_not_null());
  488|    801|        }
  489|       |
  490|     30|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (490:13): [True: 30, False: 0]
  ------------------
  491|     30|        {
  492|       |            // TODO: Proper error
  493|     30|            return {};
  494|     30|        }
  495|       |
  496|       |        // Next token MUST be KW_Wend
  497|      0|        const Token& wend_token = CurrentToken();
  498|      0|        if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (498:13): [True: 0, False: 0]
  ------------------
  499|      0|        {
  500|       |            // TODO: Proper error
  501|      0|            return {};
  502|      0|        }
  503|      0|        ConsumeCurrent();
  504|       |
  505|      0|        return phi::move(while_statement);
  506|      0|    }
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  509|  2.57k|    {
  510|  2.57k|        auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  511|       |
  512|  2.57k|        phi::boolean parsed_identifier = false;
  513|       |        // Parse all specifiers until we hit a VariableIdentifier
  514|  5.15k|        while (m_TokenStream->has_more() && !parsed_identifier)
  ------------------
  |  Branch (514:16): [True: 5.11k, False: 41]
  |  Branch (514:16): [True: 2.82k, False: 2.33k]
  |  Branch (514:45): [True: 2.82k, False: 2.28k]
  ------------------
  515|  2.82k|        {
  516|  2.82k|            const Token& current_token = CurrentToken();
  517|  2.82k|            ConsumeCurrent();
  518|       |
  519|  2.82k|            switch (current_token.GetTokenKind())
  520|  2.82k|            {
  521|     70|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (521:17): [True: 70, False: 2.75k]
  ------------------
  522|     70|                    if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (522:25): [True: 18, False: 52]
  ------------------
  523|     18|                    {
  524|       |                        // TODO: Error more than a const specifier
  525|     18|                        std::cout << "ERR: More than one const specifier given\n";
  526|     18|                        return {};
  527|     18|                    }
  528|     52|                    variable_declaration->m_IsConst = true;
  529|     52|                    break;
  530|     70|                }
  531|       |
  532|     20|                case TokenKind::KW_Static: {
  ------------------
  |  Branch (532:17): [True: 20, False: 2.80k]
  ------------------
  533|     20|                    if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (533:25): [True: 1, False: 19]
  ------------------
  534|      1|                    {
  535|       |                        // TODO: Error more than one static specifier
  536|      1|                        std::cout << "ERR: More than one static specifier given\n";
  537|      1|                        return {};
  538|      1|                    }
  539|     19|                    variable_declaration->m_IsStatic = true;
  540|     19|                    break;
  541|     20|                }
  542|       |
  543|    118|                case TokenKind::KW_Global: {
  ------------------
  |  Branch (543:17): [True: 118, False: 2.70k]
  ------------------
  544|    118|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (544:25): [True: 10, False: 108]
  ------------------
  545|     10|                    {
  546|       |                        // TODO: Error more than one scope specifier
  547|     10|                        std::cout << "ERR: More than one scope specifier given\n";
  548|     10|                        return {};
  549|     10|                    }
  550|    108|                    variable_declaration->m_Scope = VariableScope::Global;
  551|    108|                    break;
  552|    118|                }
  553|       |
  554|    137|                case TokenKind::KW_Local: {
  ------------------
  |  Branch (554:17): [True: 137, False: 2.68k]
  ------------------
  555|    137|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (555:25): [True: 66, False: 71]
  ------------------
  556|     66|                    {
  557|       |                        // TODO: Error more than one scope specifier
  558|     66|                        std::cout << "ERR: More than one scope specifier given\n";
  559|     66|                        return {};
  560|     66|                    }
  561|     71|                    variable_declaration->m_Scope = VariableScope::Local;
  562|     71|                    break;
  563|    137|                }
  564|       |
  565|  2.32k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (565:17): [True: 2.32k, False: 498]
  ------------------
  566|       |                    // VariableIdentifiers begin with a '$'
  567|       |                    // Like: $MyVariable
  568|       |                    // So for the name we ignore the very first character
  569|  2.32k|                    PHI_ASSERT(current_token.GetText().length() > 1u);
  570|  2.32k|                    variable_declaration->m_VariableName =
  571|  2.32k|                            current_token.GetText().substring_view(1u);
  572|       |
  573|  2.32k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  574|  2.32k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  575|       |
  576|  2.32k|                    parsed_identifier = true;
  577|  2.32k|                    break;
  578|    137|                }
  579|       |
  580|    153|                default: {
  ------------------
  |  Branch (580:17): [True: 153, False: 2.67k]
  ------------------
  581|       |                    // TODO: Error unexpected token
  582|    153|                    return {};
  583|    137|                }
  584|  2.82k|            }
  585|  2.82k|        }
  586|       |
  587|  2.33k|        if (!parsed_identifier)
  ------------------
  |  Branch (587:13): [True: 2, False: 2.32k]
  ------------------
  588|      2|        {
  589|       |            // TODO: Error variable declaration ends before the VariableIdentifier
  590|      2|            std::cout << "ERR: Missing variable identifier!\n";
  591|      2|            return {};
  592|      2|        }
  593|       |
  594|       |        // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  595|  2.32k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (595:13): [True: 39, False: 2.28k]
  ------------------
  596|     39|        {
  597|     39|            return variable_declaration;
  598|     39|        }
  599|       |
  600|       |        // Check for equals
  601|  2.28k|        const Token& next_token = CurrentToken();
  602|       |
  603|  2.28k|        if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (603:13): [True: 750, False: 1.53k]
  ------------------
  604|    750|        {
  605|    750|            ConsumeCurrent();
  606|       |
  607|       |            // Now me MUST parse an expression
  608|    750|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
  609|    750|            if (!expression)
  ------------------
  |  Branch (609:17): [True: 109, False: 641]
  ------------------
  610|    109|            {
  611|       |                // TODO: Error failed to parse a valid expression
  612|    109|                std::cout
  613|    109|                        << "ERR: Failed to parse a valid expression inside variable assignment!\n";
  614|    109|                return {};
  615|    109|            }
  616|       |
  617|    641|            variable_declaration->m_InitialValueExpression = phi::move(expression);
  618|    641|        }
  619|       |
  620|  2.18k|        return variable_declaration;
  621|  2.28k|    }
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  624|  60.5k|    {
  625|  60.5k|        auto expression = ParseExpression();
  626|  60.5k|        if (!expression)
  ------------------
  |  Branch (626:13): [True: 49.5k, False: 10.9k]
  ------------------
  627|  49.5k|        {
  628|  49.5k|            return {};
  629|  49.5k|        }
  630|       |
  631|  10.9k|        auto expression_statement =
  632|  10.9k|                phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  633|       |
  634|       |        // TODO: Afterwards we surely should parse a NewLine or EOF
  635|       |
  636|       |        // TODO: Make sure the expression is valid for an expression statement!
  637|       |
  638|  10.9k|        return phi::move(expression_statement);
  639|  60.5k|    }
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  642|    272|    {
  643|    272|        if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (643:13): [True: 0, False: 272]
  ------------------
  644|      0|        {
  645|      0|            return {};
  646|      0|        }
  647|       |
  648|       |        // Next me MUST parse an expression
  649|    272|        auto if_condition = ParseExpression();
  650|    272|        if (!if_condition)
  ------------------
  |  Branch (650:13): [True: 207, False: 65]
  ------------------
  651|    207|        {
  652|    207|            std::cout << "ERR: failed to parse expression!\n";
  653|       |
  654|    207|            return {};
  655|    207|        }
  656|       |
  657|       |        // Next we MUST parse Then
  658|     65|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (658:13): [True: 65, False: 0]
  ------------------
  659|     65|        {
  660|     65|            std::cout << "ERR: Missing then!\n";
  661|       |
  662|     65|            return {};
  663|     65|        }
  664|       |
  665|      0|        ConsumeNewLineAndComments();
  666|       |
  667|      0|        IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  668|       |
  669|       |        // Next parse statements until we hit and EndIf, ElseIf or Else
  670|      0|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (670:16): [True: 0, False: 0]
  |  Branch (670:16): [True: 0, False: 0]
  |  Branch (670:45): [True: 0, False: 0]
  ------------------
  671|      0|               CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (671:16): [True: 0, False: 0]
  ------------------
  672|      0|               CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (672:16): [True: 0, False: 0]
  ------------------
  673|      0|        {
  674|      0|            auto statement = ParseStatement();
  675|      0|            if (!statement)
  ------------------
  |  Branch (675:17): [True: 0, False: 0]
  ------------------
  676|      0|            {
  677|      0|                std::cout << "ERR: Failed to parse statement inside of IF\n";
  678|      0|                return {};
  679|      0|            }
  680|       |
  681|      0|            if_case.body.emplace_back(statement.release_not_null());
  682|       |
  683|      0|            ConsumeNewLineAndComments();
  684|      0|        }
  685|       |
  686|      0|        auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
  687|       |
  688|       |        // TODO: Handle ElseIf, Else
  689|       |
  690|      0|        if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (690:13): [True: 0, False: 0]
  ------------------
  691|      0|        {
  692|      0|            std::cout << "ERR: Missing EndIf!\n";
  693|       |            // TODO: Proper Error
  694|      0|            return {};
  695|      0|        }
  696|       |
  697|      0|        return phi::move(if_statement);
  698|      0|    }
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
  701|  9.82k|    {
  702|  9.82k|        const Token& token = CurrentToken();
  703|  9.82k|        if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (703:13): [True: 0, False: 9.82k]
  ------------------
  704|      0|        {
  705|      0|            return {};
  706|      0|        }
  707|       |
  708|  9.82k|        if (token.GetText().length() > 18u)
  ------------------
  |  Branch (708:13): [True: 259, False: 9.56k]
  ------------------
  709|    259|        {
  710|       |            // TODO: Better check and proper error
  711|    259|            return {};
  712|    259|        }
  713|       |
  714|  9.56k|        phi::int64_t value{0};
  715|  9.56k|        phi::boolean parsing_hex{false};
  716|  49.8k|        for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (716:36): [True: 40.2k, False: 9.56k]
  ------------------
  717|  40.2k|        {
  718|  40.2k|            char character = token.GetText().at(index);
  719|       |
  720|       |            // Checking the second character
  721|  40.2k|            if (index == 1u)
  ------------------
  |  Branch (721:17): [True: 6.82k, False: 33.4k]
  ------------------
  722|  6.82k|            {
  723|  6.82k|                if (character == 'x' || character == 'X')
  ------------------
  |  Branch (723:21): [True: 312, False: 6.50k]
  |  Branch (723:41): [True: 79, False: 6.42k]
  ------------------
  724|    391|                {
  725|    391|                    parsing_hex = true;
  726|    391|                    continue;
  727|    391|                }
  728|  6.82k|            }
  729|       |
  730|  39.8k|            if (parsing_hex)
  ------------------
  |  Branch (730:17): [True: 1.27k, False: 38.5k]
  ------------------
  731|  1.27k|            {
  732|  1.27k|                PHI_ASSERT(phi::is_hex_digit(character));
  733|       |
  734|  1.27k|                value <<= 4;
  735|  1.27k|                value |= phi::hex_digit_value(character).unsafe();
  736|  1.27k|            }
  737|  38.5k|            else
  738|  38.5k|            {
  739|  38.5k|                PHI_ASSERT(character >= '0' && character <= '9');
  740|       |
  741|  38.5k|                value *= 10;
  742|  38.5k|                value += (character - '0');
  743|  38.5k|            }
  744|  39.8k|        }
  745|       |
  746|  9.56k|        ConsumeCurrent();
  747|  9.56k|        return phi::make_scope<ASTIntegerLiteral>(value);
  748|  9.82k|    }
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
  751|  6.87k|    {
  752|  6.87k|        const Token& token = CurrentToken();
  753|  6.87k|        if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (753:13): [True: 0, False: 6.87k]
  ------------------
  754|      0|        {
  755|      0|            return {};
  756|      0|        }
  757|  6.87k|        ConsumeCurrent();
  758|       |
  759|  6.87k|        auto string_literal = phi::make_scope<ASTStringLiteral>();
  760|       |
  761|  6.87k|        const phi::usize length = token.GetText().length();
  762|       |        // Trim the trailing and leading "
  763|  6.87k|        string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
  764|       |
  765|  6.87k|        return phi::move(string_literal);
  766|  6.87k|    }
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
  769|   116k|    {
  770|   116k|        phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
  771|   116k|        if (!lhs_expression)
  ------------------
  |  Branch (771:13): [True: 101k, False: 15.2k]
  ------------------
  772|   101k|        {
  773|   101k|            return {};
  774|   101k|        }
  775|       |
  776|  15.2k|        return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
  777|   116k|    }
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
  780|   120k|    {
  781|   120k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (781:13): [True: 95, False: 120k]
  ------------------
  782|     95|        {
  783|       |            // TODO: Proper error
  784|     95|            return {};
  785|     95|        }
  786|       |
  787|   120k|        const Token& token = CurrentToken();
  788|   120k|        if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (788:13): [True: 1.12k, False: 119k]
  ------------------
  789|  1.12k|        {
  790|  1.12k|            const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
  791|  1.12k|            PHI_UNUSED_VARIABLE(op_precedence);
  792|  1.12k|            ConsumeCurrent();
  793|       |
  794|       |            // TODO: Implement me
  795|  1.12k|        }
  796|   119k|        else if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (796:18): [True: 50.4k, False: 68.9k]
  ------------------
  797|  50.4k|        {
  798|       |            // Consume the LParen
  799|  50.4k|            m_TokenStream->consume();
  800|       |
  801|  50.4k|            phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
  802|  50.4k|            if (!paren_expression)
  ------------------
  |  Branch (802:17): [True: 50.0k, False: 480]
  ------------------
  803|  50.0k|            {
  804|       |                // TODO: Proper error
  805|  50.0k|                return {};
  806|  50.0k|            }
  807|       |
  808|    480|            return phi::move(paren_expression);
  809|  50.4k|        }
  810|  68.9k|        else if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (810:18): [True: 9.82k, False: 59.0k]
  ------------------
  811|  9.82k|        {
  812|  9.82k|            phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
  813|  9.82k|            if (!int_literal)
  ------------------
  |  Branch (813:17): [True: 259, False: 9.56k]
  ------------------
  814|    259|            {
  815|       |                // TODO: Error failed to parse integer literal
  816|    259|                return {};
  817|    259|            }
  818|       |
  819|  9.56k|            return phi::move(int_literal);
  820|  9.82k|        }
  821|  59.0k|        else if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (821:18): [True: 6.87k, False: 52.2k]
  ------------------
  822|  6.87k|        {
  823|  6.87k|            auto string_literal_expression = ParseStringLiteral();
  824|  6.87k|            if (!string_literal_expression)
  ------------------
  |  Branch (824:17): [True: 0, False: 6.87k]
  ------------------
  825|      0|            {
  826|       |                // TODO: Proper error
  827|      0|                return {};
  828|      0|            }
  829|       |
  830|  6.87k|            return phi::move(string_literal_expression);
  831|  6.87k|        }
  832|       |
  833|       |        // Boolean literal
  834|  52.2k|        else if (token.GetTokenKind() == TokenKind::KW_True ||
  ------------------
  |  Branch (834:18): [True: 0, False: 52.2k]
  ------------------
  835|  52.2k|                 token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (835:18): [True: 46, False: 52.1k]
  ------------------
  836|     46|        {
  837|     46|            auto boolean_literal = ParseBooleanLiteral();
  838|     46|            if (!boolean_literal)
  ------------------
  |  Branch (838:17): [True: 0, False: 46]
  ------------------
  839|      0|            {
  840|       |                // TODO: Proper error
  841|      0|                return {};
  842|      0|            }
  843|       |
  844|     46|            return phi::move(boolean_literal);
  845|     46|        }
  846|       |
  847|       |        // Function call expression
  848|  52.1k|        else if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (848:18): [True: 12.2k, False: 39.9k]
  |  Branch (848:18): [True: 12.6k, False: 39.4k]
  |  Branch (848:75): [True: 476, False: 39.4k]
  ------------------
  849|  12.6k|        {
  850|  12.6k|            auto function_call_expression = ParseFunctionCallExpression();
  851|  12.6k|            if (!function_call_expression)
  ------------------
  |  Branch (851:17): [True: 12.0k, False: 601]
  ------------------
  852|  12.0k|            {
  853|       |                // TODO: Proper error
  854|  12.0k|                std::cout << "ERR: Failed to parse function call expression!\n";
  855|  12.0k|                return {};
  856|  12.0k|            }
  857|       |
  858|    601|            return phi::move(function_call_expression);
  859|  12.6k|        }
  860|       |        // Variable expression
  861|  39.4k|        else if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (861:18): [True: 204, False: 39.2k]
  ------------------
  862|    204|        {
  863|    204|            auto variable_expression = ParseVariableExpression();
  864|    204|            if (!variable_expression)
  ------------------
  |  Branch (864:17): [True: 0, False: 204]
  ------------------
  865|      0|            {
  866|       |                // TODO: Proper error
  867|      0|                std::cout << "ERR: Failed to parse Variable expression\n";
  868|      0|                return {};
  869|      0|            }
  870|       |
  871|    204|            return phi::move(variable_expression);
  872|    204|        }
  873|       |        // Keyword literal
  874|  39.2k|        else if (token.IsKeywordLiteral())
  ------------------
  |  Branch (874:18): [True: 122, False: 39.1k]
  ------------------
  875|    122|        {
  876|    122|            auto keyword_literal = ParseKeywordliteral();
  877|    122|            if (!keyword_literal)
  ------------------
  |  Branch (877:17): [True: 0, False: 122]
  ------------------
  878|      0|            {
  879|       |                // TODO: Proper error
  880|      0|                std::cout << "ERR: Failed to parse keyword literal expression!\n";
  881|      0|                return {};
  882|      0|            }
  883|       |
  884|    122|            return phi::move(keyword_literal);
  885|    122|        }
  886|       |        // Float literal
  887|  39.1k|        else if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (887:18): [True: 303, False: 38.8k]
  ------------------
  888|    303|        {
  889|    303|            auto float_literal = ParseFloatLiteral();
  890|    303|            if (!float_literal)
  ------------------
  |  Branch (890:17): [True: 0, False: 303]
  ------------------
  891|      0|            {
  892|       |                // TODO: Proper error
  893|      0|                std::cout << "ERR: Failed to parse float literal expression!\n";
  894|      0|                return {};
  895|      0|            }
  896|       |
  897|    303|            return phi::move(float_literal);
  898|    303|        }
  899|       |
  900|       |        // TODO: Error Unexpected token
  901|  39.9k|        std::cout << "Unexpected token \"" << enum_name(token.GetTokenKind())
  902|  39.9k|                  << "\" while parsing expression\n";
  903|  39.9k|        return {};
  904|   120k|    }
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
  908|  15.5k|    {
  909|  18.3k|        while (true)
  ------------------
  |  Branch (909:16): [Folded - Ignored]
  ------------------
  910|  18.3k|        {
  911|  18.3k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (911:17): [True: 182, False: 18.1k]
  ------------------
  912|    182|            {
  913|    182|                return phi::move(lhs);
  914|    182|            }
  915|       |
  916|  18.1k|            const Token& operator_token = CurrentToken();
  917|  18.1k|            if (!IsBinaryOperator(operator_token.GetTokenKind()))
  ------------------
  |  Branch (917:17): [True: 13.9k, False: 4.22k]
  ------------------
  918|  13.9k|            {
  919|       |                // If its not a binary operator just return the lhs expression
  920|  13.9k|                return phi::move(lhs);
  921|  13.9k|            }
  922|  4.22k|            int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
  923|  4.22k|            ConsumeCurrent();
  924|       |
  925|  4.22k|            if (token_precedence < precedence)
  ------------------
  |  Branch (925:17): [True: 107, False: 4.11k]
  ------------------
  926|    107|            {
  927|    107|                return phi::move(lhs);
  928|    107|            }
  929|       |
  930|       |            // This must be an binary expression
  931|  4.11k|            phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
  932|  4.11k|            if (!rhs_expression)
  ------------------
  |  Branch (932:17): [True: 1.21k, False: 2.90k]
  ------------------
  933|  1.21k|            {
  934|       |                // TODO: Proper error
  935|  1.21k|                return {};
  936|  1.21k|            }
  937|       |
  938|       |            // Nothing left to parse so directly return from here
  939|  2.90k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (939:17): [True: 28, False: 2.87k]
  ------------------
  940|     28|            {
  941|     28|                return phi::make_not_null_scope<ASTBinaryExpression>(
  942|     28|                        phi::move(lhs), operator_token.GetTokenKind(),
  943|     28|                        rhs_expression.release_not_null());
  944|     28|            }
  945|       |
  946|       |            // If BinOp binds less tightly with RHS than the operator after RHS, let
  947|       |            // the pending operator take RHS as its LHS.
  948|  2.87k|            const Token& next_token      = CurrentToken();
  949|  2.87k|            int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
  950|       |
  951|  2.87k|            if (token_precedence < next_precedence)
  ------------------
  |  Branch (951:17): [True: 281, False: 2.59k]
  ------------------
  952|    281|            {
  953|    281|                rhs_expression =
  954|    281|                        ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
  955|    281|                if (!rhs_expression)
  ------------------
  |  Branch (955:21): [True: 99, False: 182]
  ------------------
  956|     99|                {
  957|       |                    // TODO: Proper error
  958|     99|                    return {};
  959|     99|                }
  960|    281|            }
  961|       |
  962|       |            // Merge LHS/RHS.
  963|  2.77k|            lhs = phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
  964|  2.77k|                                                                operator_token.GetTokenKind(),
  965|  2.77k|                                                                rhs_expression.release_not_null());
  966|  2.77k|        }
  967|  15.5k|    }
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
  970|  12.6k|    {
  971|       |        // Parse the function name
  972|  12.6k|        const Token& function_identifier_token = CurrentToken();
  973|  12.6k|        if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (973:13): [True: 476, False: 12.2k]
  |  Branch (973:13): [True: 0, False: 12.6k]
  ------------------
  974|  12.6k|            !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (974:13): [True: 0, False: 476]
  ------------------
  975|      0|        {
  976|      0|            return {};
  977|      0|        }
  978|  12.6k|        ConsumeCurrent();
  979|       |
  980|  12.6k|        phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
  981|  12.6k|                phi::make_scope<ASTFunctionCallExpression>();
  982|  12.6k|        if (!function_call_expression)
  ------------------
  |  Branch (982:13): [True: 0, False: 12.6k]
  ------------------
  983|      0|        {
  984|       |            // TODO: Proper error
  985|      0|            return {};
  986|      0|        }
  987|       |
  988|  12.6k|        if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (988:13): [True: 476, False: 12.2k]
  ------------------
  989|    476|        {
  990|    476|            function_call_expression->m_IsBuiltIn       = true;
  991|    476|            function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
  992|    476|        }
  993|  12.2k|        else
  994|  12.2k|        {
  995|  12.2k|            const phi::string_view function_name = function_identifier_token.GetText();
  996|       |
  997|  12.2k|            function_call_expression->m_IsBuiltIn    = false;
  998|  12.2k|            function_call_expression->m_FunctionName = function_name;
  999|  12.2k|        }
 1000|       |
 1001|       |        // TODO: These 2 checks should be combined
 1002|       |        // Now me MUST parse an LParen
 1003|  12.6k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1003:13): [True: 295, False: 12.3k]
  ------------------
 1004|    295|        {
 1005|    295|            std::cout << "ERR: Expected opening parenthesis for function call \""
 1006|    295|                      << std::string{function_call_expression->FunctionName()} << "\"\n";
 1007|       |            // TODO: Give proper error
 1008|    295|            return {};
 1009|    295|        }
 1010|       |
 1011|  12.3k|        const Token& left_paren_token = CurrentToken();
 1012|  12.3k|        ConsumeCurrent();
 1013|  12.3k|        if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1013:13): [True: 9.20k, False: 3.18k]
  ------------------
 1014|  9.20k|        {
 1015|  9.20k|            std::cout << "ERR: Expected opening parenthesis for function call \""
 1016|  9.20k|                      << std::string{function_call_expression->FunctionName()} << "\"\n";
 1017|       |            // TODO: Give error
 1018|  9.20k|            return {};
 1019|  9.20k|        }
 1020|       |
 1021|       |        // Now parse all the arguments (which are expressions) separated by commas or nothing
 1022|  3.18k|        function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1023|       |
 1024|       |        // Finally we MUST parse an RParen
 1025|  3.18k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1025:13): [True: 1.68k, False: 1.50k]
  ------------------
 1026|  1.68k|        {
 1027|  1.68k|            std::cout << "ERR: Expected closing parenthesis for function call \""
 1028|  1.68k|                      << std::string{function_call_expression->FunctionName()} << "\"\n";
 1029|       |            // TODO: Give proper error
 1030|  1.68k|            return {};
 1031|  1.68k|        }
 1032|       |
 1033|  1.50k|        const Token& right_paren_token = CurrentToken();
 1034|  1.50k|        ConsumeCurrent();
 1035|  1.50k|        if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1035:13): [True: 904, False: 601]
  ------------------
 1036|    904|        {
 1037|    904|            std::cout << "ERR: Expected closing parenthesis for function call \""
 1038|    904|                      << std::string{function_call_expression->FunctionName()} << "\"\n";
 1039|       |            // TODO: Give Error
 1040|    904|            return {};
 1041|    904|        }
 1042|       |
 1043|       |        // Return result
 1044|    601|        return function_call_expression;
 1045|  1.50k|    }
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1049|  3.18k|    {
 1050|  3.18k|        std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1051|       |
 1052|  4.54k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1052:16): [True: 4.52k, False: 18]
  |  Branch (1052:16): [True: 4.09k, False: 456]
  |  Branch (1052:45): [True: 4.09k, False: 438]
  ------------------
 1053|  4.09k|        {
 1054|       |            // Parse the expression
 1055|  4.09k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1056|  4.09k|            if (!expression)
  ------------------
  |  Branch (1056:17): [True: 2.73k, False: 1.36k]
  ------------------
 1057|  2.73k|            {
 1058|  2.73k|                std::cout << "ERR: While parsing expression for function call arguments\n";
 1059|       |                // TODO: Give Prober error
 1060|  2.73k|                arguments.clear();
 1061|  2.73k|                return arguments;
 1062|  2.73k|            }
 1063|       |
 1064|       |            // Add argument to parameters
 1065|  1.36k|            arguments.emplace_back(expression.release_not_null());
 1066|       |
 1067|       |            // Next Token MUST be a comma followed by another expression or RParen
 1068|  1.36k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1068:17): [True: 1.34k, False: 13]
  |  Branch (1068:17): [True: 43, False: 1.31k]
  |  Branch (1068:46): [True: 43, False: 1.30k]
  ------------------
 1069|     43|            {
 1070|     43|                ConsumeCurrent();
 1071|     43|            }
 1072|  1.36k|        }
 1073|       |
 1074|    456|        return arguments;
 1075|  3.18k|    }
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1078|    204|    {
 1079|    204|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1079:13): [True: 0, False: 204]
  ------------------
 1080|      0|        {
 1081|       |            // TODO: Proper error
 1082|      0|            return {};
 1083|      0|        }
 1084|       |
 1085|    204|        const Token& token = CurrentToken();
 1086|    204|        if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1086:13): [True: 0, False: 204]
  ------------------
 1087|      0|        {
 1088|       |            // TODO error
 1089|      0|            return {};
 1090|      0|        }
 1091|       |
 1092|    204|        auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1093|    204|        variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1094|       |
 1095|    204|        ConsumeCurrent();
 1096|       |
 1097|    204|        return phi::move(variable_expression);
 1098|    204|    }
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1113|  50.4k|    {
 1114|       |        // NOTE: Me MUST have consumed the LParen before this
 1115|       |
 1116|  50.4k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1117|  50.4k|        if (!expression)
  ------------------
  |  Branch (1117:13): [True: 49.6k, False: 812]
  ------------------
 1118|  49.6k|        {
 1119|       |            // TODO: Proper error
 1120|  49.6k|            return {};
 1121|  49.6k|        }
 1122|       |
 1123|    812|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1123:13): [True: 332, False: 480]
  ------------------
 1124|    332|        {
 1125|       |            // TODO: Proper error expected closing paren
 1126|    332|            return {};
 1127|    332|        }
 1128|       |
 1129|    480|        return phi::move(expression);
 1130|    812|    }
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1133|     46|    {
 1134|     46|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1134:13): [True: 0, False: 46]
  ------------------
 1135|      0|        {
 1136|       |            // TODO: Proper error
 1137|      0|            return {};
 1138|      0|        }
 1139|       |
 1140|       |        // BooleanLiteral is either KW_True or KW_False
 1141|     46|        const Token& token = CurrentToken();
 1142|     46|        if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1142:13): [True: 0, False: 46]
  ------------------
 1143|      0|        {
 1144|      0|            ConsumeCurrent();
 1145|      0|            return phi::make_scope<ASTBooleanLiteral>(true);
 1146|      0|        }
 1147|       |
 1148|     46|        if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1148:13): [True: 46, False: 0]
  ------------------
 1149|     46|        {
 1150|     46|            ConsumeCurrent();
 1151|     46|            return phi::make_scope<ASTBooleanLiteral>(false);
 1152|     46|        }
 1153|       |
 1154|       |        // TODO: Proper error
 1155|      0|        return {};
 1156|     46|    }
_ZN10OpenAutoIt6Parser19ParseKeywordliteralEv:
 1159|    122|    {
 1160|    122|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1160:13): [True: 0, False: 122]
  ------------------
 1161|      0|        {
 1162|       |            // TODO: Proper error
 1163|      0|            return {};
 1164|      0|        }
 1165|       |
 1166|    122|        const Token& token = CurrentToken();
 1167|    122|        if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1167:13): [True: 122, False: 0]
  ------------------
 1168|    122|        {
 1169|    122|            ConsumeCurrent();
 1170|    122|            return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1171|    122|        }
 1172|       |
 1173|       |        // TODO: Proper error
 1174|      0|        return {};
 1175|    122|    }
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1178|    303|    {
 1179|    303|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1179:13): [True: 0, False: 303]
  ------------------
 1180|      0|        {
 1181|       |            // TODO: Proper error
 1182|      0|            return {};
 1183|      0|        }
 1184|       |
 1185|    303|        const Token& token = CurrentToken();
 1186|    303|        if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1186:13): [True: 303, False: 0]
  ------------------
 1187|    303|        {
 1188|    303|            ConsumeCurrent();
 1189|       |
 1190|    303|            char*    ptr   = nullptr;
 1191|    303|            phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1192|       |
 1193|    303|            return phi::make_scope<ASTFloatLiteral>(value);
 1194|    303|        }
 1195|       |
 1196|       |        // TODO: Proper error
 1197|      0|        return {};
 1198|    303|    }
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   63|  8.22k|        {
   64|  8.22k|            int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   65|       |            //PHI_ASSERT(precedence != 0);
   66|       |
   67|  8.22k|            return precedence;
   68|  8.22k|        }

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  1.60k|    {
   31|       |#if defined(PHI_DEBUG)
   32|       |        PHI_ASSERT(!m_Finialized);
   33|       |#endif
   34|       |
   35|  1.60k|        m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |        m_Finialized = true;
   38|       |#endif
   39|  1.60k|    }
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   69|   858k|    {
   70|       |#if defined(PHI_DEBUG)
   71|       |        PHI_ASSERT(m_Finialized);
   72|       |#endif
   73|       |
   74|   858k|        return m_Index < m_Tokens.size();
   75|   858k|    }
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   78|   594k|    {
   79|       |#if defined(PHI_DEBUG)
   80|       |        PHI_ASSERT(m_Finialized);
   81|       |#endif
   82|       |
   83|   594k|        return m_Index >= m_Tokens.size();
   84|   594k|    }
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   87|   417k|    {
   88|   417k|        PHI_ASSERT(!reached_end());
   89|       |#if defined(PHI_DEBUG)
   90|       |        PHI_ASSERT(m_Finialized);
   91|       |#endif
   92|       |
   93|   417k|        return m_Tokens[m_Index.unsafe()];
   94|   417k|    }
_ZN10OpenAutoIt11TokenStream7consumeEv:
   97|   177k|    {
   98|   177k|        PHI_ASSERT(!reached_end());
   99|       |#if defined(PHI_DEBUG)
  100|       |        PHI_ASSERT(m_Finialized);
  101|       |#endif
  102|       |
  103|   177k|        m_Index += 1u;
  104|   177k|    }

_ZN10OpenAutoIt5ScopeC2ENS_9ScopeKindENSt3__117basic_string_viewIcNS2_11char_traitsIcEEEERNS2_6vectorIN3phi18not_null_scope_ptrINS_12ASTStatementEEENS2_9allocatorISB_EEEE:
   29|  1.60k|        {}

_ZN10OpenAutoIt14VirtualMachine12RuntimeErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEEvS6_DpOT_:
   38|    320|        {
   39|    320|            std::cerr << "[OpenAutoIt] "
   40|    320|                      << "\033[31m"
   41|    320|                         "RUNTIME ERROR!"
   42|    320|                      << "\033[0m\n"
   43|    320|                      << " > "
   44|    320|                      << "\033[31m"
   45|    320|                      << fmt::format(fmt::runtime(format_string), phi::forward<ArgsT>(args)...)
   46|    320|                      << "\033[0m\n"
   47|    320|                      << "Stack trace:\n";
   48|       |
   49|       |            // Print stack trace
   50|    320|            StackTrace strack_trace = GetStrackTrace();
   51|    640|            for (phi::u64 index{0u}; index < strack_trace.size(); ++index)
  ------------------
  |  Branch (51:38): [True: 320, False: 320]
  ------------------
   52|    320|            {
   53|    320|                const StackTraceEntry& entry = strack_trace.at(index.unsafe());
   54|       |
   55|    320|                std::cerr << "    #" << index.unsafe() << ' ' << entry.function << ' ' << entry.file
   56|    320|                          << ':' << entry.line.unsafe() << ':' << entry.column.unsafe() << '\n';
   57|    320|            }
   58|       |
   59|    320|            m_Aborting = true;
   60|    320|        }
_ZN10OpenAutoIt14VirtualMachine12RuntimeErrorIJPKcEEEvNSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   38|     58|        {
   39|     58|            std::cerr << "[OpenAutoIt] "
   40|     58|                      << "\033[31m"
   41|     58|                         "RUNTIME ERROR!"
   42|     58|                      << "\033[0m\n"
   43|     58|                      << " > "
   44|     58|                      << "\033[31m"
   45|     58|                      << fmt::format(fmt::runtime(format_string), phi::forward<ArgsT>(args)...)
   46|     58|                      << "\033[0m\n"
   47|     58|                      << "Stack trace:\n";
   48|       |
   49|       |            // Print stack trace
   50|     58|            StackTrace strack_trace = GetStrackTrace();
   51|    116|            for (phi::u64 index{0u}; index < strack_trace.size(); ++index)
  ------------------
  |  Branch (51:38): [True: 58, False: 58]
  ------------------
   52|     58|            {
   53|     58|                const StackTraceEntry& entry = strack_trace.at(index.unsafe());
   54|       |
   55|     58|                std::cerr << "    #" << index.unsafe() << ' ' << entry.function << ' ' << entry.file
   56|     58|                          << ':' << entry.line.unsafe() << ':' << entry.column.unsafe() << '\n';
   57|     58|            }
   58|       |
   59|     58|            m_Aborting = true;
   60|     58|        }

_ZN10OpenAutoIt11InterpreterC2EN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
   36|  1.60k|    {
   37|  1.60k|        vm().PushGlobalScope(document->m_Statements);
   38|  1.60k|    }
_ZN10OpenAutoIt11Interpreter4StepEv:
   49|  13.6k|    {
   50|  13.6k|        Scope& current_scope = vm().GetCurrentScope();
   51|       |
   52|       |        // Check if we reached the end of the current scope
   53|  13.6k|        if (current_scope.index >= current_scope.statements.size())
  ------------------
  |  Branch (53:13): [True: 1.47k, False: 12.1k]
  ------------------
   54|  1.47k|        {
   55|  1.47k|            vm().PopScope();
   56|  1.47k|            return;
   57|  1.47k|        }
   58|       |
   59|  12.1k|        auto current_statement = GetCurrentStatement();
   60|       |
   61|       |        // Interpret statement
   62|  12.1k|        StatementFinished result = InterpretStatement(current_statement);
   63|       |
   64|       |        // Increment index if the statement is finished
   65|  12.1k|        if (result == StatementFinished::Yes)
  ------------------
  |  Branch (65:13): [True: 12.1k, False: 0]
  ------------------
   66|  12.1k|        {
   67|  12.1k|            ++current_scope.index;
   68|  12.1k|        }
   69|  12.1k|    }
_ZNK10OpenAutoIt11Interpreter19GetCurrentStatementEv:
   72|  12.1k|    {
   73|  12.1k|        const Scope& current_scope = vm().GetCurrentScope();
   74|  12.1k|        PHI_ASSERT(!current_scope.statements.empty());
   75|  12.1k|        PHI_ASSERT(current_scope.index < current_scope.statements.size());
   76|       |
   77|  12.1k|        return current_scope.statements.at(current_scope.index.unsafe());
   78|  12.1k|    }
_ZN10OpenAutoIt11Interpreter2vmEv:
   81|  36.1k|    {
   82|  36.1k|        return m_VirtualMachine;
   83|  36.1k|    }
_ZNK10OpenAutoIt11Interpreter2vmEv:
   86|  12.1k|    {
   87|  12.1k|        return m_VirtualMachine;
   88|  12.1k|    }
_ZN10OpenAutoIt11Interpreter18InterpretStatementEN3phi21not_null_observer_ptrINS_12ASTStatementEEE:
   92|  12.1k|    {
   93|       |        // NOTE: Generally we return Yes for finished statments and the ending of loops
   94|       |        //       While returning No for unfinished loops like While and For
   95|       |
   96|  12.1k|        switch (statement->NodeType())
   97|  12.1k|        {
   98|  9.93k|            case ASTNodeType::ExpressionStatement: {
  ------------------
  |  Branch (98:13): [True: 9.93k, False: 2.20k]
  ------------------
   99|  9.93k|                auto expression_statement = statement->as<ASTExpressionStatement>();
  100|       |
  101|  9.93k|                InterpretExpression(expression_statement->m_Expression);
  102|  9.93k|                return StatementFinished::Yes;
  103|      0|            }
  104|       |
  105|      0|            case ASTNodeType::IfStatement: {
  ------------------
  |  Branch (105:13): [True: 0, False: 12.1k]
  ------------------
  106|      0|                auto if_statement = statement->as<ASTIfStatement>();
  107|       |
  108|      0|                const Variant if_condition_value =
  109|      0|                        InterpretExpression(if_statement->m_IfCase.condition).CastToBoolean();
  110|      0|                PHI_ASSERT(if_condition_value.IsBoolean());
  111|       |
  112|      0|                if (if_condition_value.AsBoolean())
  ------------------
  |  Branch (112:21): [True: 0, False: 0]
  ------------------
  113|      0|                {
  114|      0|                    vm().PushBlockScope(if_statement->m_IfCase.body);
  115|      0|                    return StatementFinished::Yes;
  116|      0|                }
  117|       |
  118|       |                // Handle all ElseIf cases
  119|      0|                for (auto&& else_if_case : if_statement->m_ElseIfCases)
  ------------------
  |  Branch (119:42): [True: 0, False: 0]
  ------------------
  120|      0|                {
  121|      0|                    const Variant condition_value =
  122|      0|                            InterpretExpression(else_if_case.condition).CastToBoolean();
  123|      0|                    PHI_ASSERT(condition_value.IsBoolean());
  124|       |
  125|      0|                    if (condition_value.AsBoolean())
  ------------------
  |  Branch (125:25): [True: 0, False: 0]
  ------------------
  126|      0|                    {
  127|      0|                        vm().PushBlockScope(else_if_case.body);
  128|      0|                        return StatementFinished::Yes;
  129|      0|                    }
  130|      0|                }
  131|       |
  132|       |                // Handle Else case
  133|      0|                vm().PushBlockScope(if_statement->m_ElseCase);
  134|      0|                return StatementFinished::Yes;
  135|      0|            }
  136|       |
  137|  2.20k|            case ASTNodeType::VariableAssignment: {
  ------------------
  |  Branch (137:13): [True: 2.20k, False: 9.93k]
  ------------------
  138|  2.20k|                auto variable_assignment = statement->as<ASTVariableAssignment>();
  139|       |
  140|  2.20k|                const phi::string_view variable_name = variable_assignment->m_VariableName;
  141|  2.20k|                PHI_ASSERT(!variable_name.is_empty());
  142|       |
  143|       |                // TODO: Const?
  144|  2.20k|                phi::observer_ptr<ASTExpression> initial_expression =
  145|  2.20k|                        variable_assignment->m_InitialValueExpression;
  146|  2.20k|                if (initial_expression)
  ------------------
  |  Branch (146:21): [True: 639, False: 1.56k]
  ------------------
  147|    639|                {
  148|    639|                    const Variant expression_value =
  149|    639|                            InterpretExpression(initial_expression.release_not_null());
  150|       |
  151|    639|                    vm().PushOrAssignVariable(variable_name, expression_value);
  152|    639|                    return StatementFinished::Yes;
  153|    639|                }
  154|       |
  155|       |                // Insert a default initialized variable
  156|  1.56k|                vm().PushVariable(variable_name, {});
  157|  1.56k|                return StatementFinished::Yes;
  158|  2.20k|            }
  159|       |
  160|      0|            case ASTNodeType::WhileStatement: {
  ------------------
  |  Branch (160:13): [True: 0, False: 12.1k]
  ------------------
  161|      0|                auto while_statement = statement->as<ASTWhileStatement>();
  162|       |
  163|       |                // Evalaute condition
  164|      0|                const Variant condition =
  165|      0|                        InterpretExpression(while_statement->m_ConditionExpression).CastToBoolean();
  166|      0|                PHI_ASSERT(condition.IsBoolean());
  167|       |
  168|      0|                if (!condition.AsBoolean())
  ------------------
  |  Branch (168:21): [True: 0, False: 0]
  ------------------
  169|      0|                {
  170|      0|                    return StatementFinished::Yes;
  171|      0|                }
  172|       |
  173|       |                // Interpret while statements
  174|      0|                vm().PushBlockScope(while_statement->m_Statements);
  175|      0|                return StatementFinished::No;
  176|      0|            }
  177|       |
  178|      0|            default:
  ------------------
  |  Branch (178:13): [True: 0, False: 12.1k]
  ------------------
  179|      0|                PHI_ASSERT_NOT_REACHED();
  180|      0|                return StatementFinished::No;
  181|  12.1k|        }
  182|  12.1k|    }
_ZN10OpenAutoIt11Interpreter19InterpretExpressionEN3phi21not_null_observer_ptrINS_13ASTExpressionEEE:
  185|  16.1k|    {
  186|  16.1k|        switch (expression->NodeType())
  187|  16.1k|        {
  188|      0|            case ASTNodeType::ArraySubscriptExpression:
  ------------------
  |  Branch (188:13): [True: 0, False: 16.1k]
  ------------------
  189|       |                // TODO: ArraySubscriptExpression
  190|      0|                return {};
  191|       |
  192|  2.57k|            case ASTNodeType::BinaryExpression: {
  ------------------
  |  Branch (192:13): [True: 2.57k, False: 13.5k]
  ------------------
  193|  2.57k|                auto binary_expression = expression->as<ASTBinaryExpression>();
  194|       |
  195|  2.57k|                const Variant lhs_value = InterpretExpression(binary_expression->m_LHS);
  196|  2.57k|                const Variant rhs_value = InterpretExpression(binary_expression->m_RHS);
  197|       |
  198|  2.57k|                return EvaluateBinaryExpression(lhs_value, rhs_value,
  199|  2.57k|                                                binary_expression->m_Operator);
  200|      0|            }
  201|       |
  202|     45|            case ASTNodeType::BooleanLiteral: {
  ------------------
  |  Branch (202:13): [True: 45, False: 16.1k]
  ------------------
  203|     45|                auto boolean_literal = expression->as<ASTBooleanLiteral>();
  204|       |
  205|     45|                return Variant::MakeBoolean(boolean_literal->m_Value);
  206|      0|            }
  207|       |
  208|    302|            case ASTNodeType::FunctionCallExpression: {
  ------------------
  |  Branch (208:13): [True: 302, False: 15.8k]
  ------------------
  209|       |                // TODO: What happens when you assign variable to the return of a void function?
  210|    302|                auto function_call_expression = expression->as<ASTFunctionCallExpression>();
  211|       |
  212|       |                // Evaluate all arguments
  213|    302|                const std::vector<Variant> arguments =
  214|    302|                        InterpretExpressions(function_call_expression->m_Arguments);
  215|       |
  216|       |                // Handle builtin functions seperately
  217|    302|                if (function_call_expression->m_IsBuiltIn)
  ------------------
  |  Branch (217:21): [True: 58, False: 244]
  ------------------
  218|     58|                {
  219|     58|                    return InterpretBuiltInFunctionCall(function_call_expression->m_BuiltInFunction,
  220|     58|                                                        arguments);
  221|     58|                }
  222|       |
  223|    244|                return InterpretFunctionCall(function_call_expression->m_FunctionName, arguments);
  224|    302|            }
  225|       |
  226|  7.27k|            case ASTNodeType::IntegerLiteral: {
  ------------------
  |  Branch (226:13): [True: 7.27k, False: 8.87k]
  ------------------
  227|  7.27k|                auto integer_literal = expression->as<ASTIntegerLiteral>();
  228|       |
  229|  7.27k|                return Variant::MakeInt(integer_literal->m_Value);
  230|    302|            }
  231|       |
  232|    101|            case ASTNodeType::KeywordLiteral: {
  ------------------
  |  Branch (232:13): [True: 101, False: 16.0k]
  ------------------
  233|    101|                auto keyword_literal = expression->as<ASTKeywordLiteral>();
  234|       |
  235|    101|                return Variant::MakeKeyword(keyword_literal->m_Keyword);
  236|    302|            }
  237|       |
  238|    252|            case ASTNodeType::FloatLiteral: {
  ------------------
  |  Branch (238:13): [True: 252, False: 15.8k]
  ------------------
  239|    252|                auto float_literal = expression->as<ASTFloatLiteral>();
  240|       |
  241|    252|                return Variant::MakeDouble(float_literal->m_Value);
  242|    302|            }
  243|       |
  244|  5.50k|            case ASTNodeType::StringLiteral: {
  ------------------
  |  Branch (244:13): [True: 5.50k, False: 10.6k]
  ------------------
  245|  5.50k|                auto string_literal = expression->as<ASTStringLiteral>();
  246|       |
  247|  5.50k|                return Variant::MakeString(string_literal->m_Value);
  248|    302|            }
  249|       |
  250|      0|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (250:13): [True: 0, False: 16.1k]
  ------------------
  251|       |                // TODO: UnaryExpression
  252|      0|                return {};
  253|       |
  254|     96|            case ASTNodeType::VariableExpression: {
  ------------------
  |  Branch (254:13): [True: 96, False: 16.0k]
  ------------------
  255|     96|                auto variable_expression = expression->as<ASTVariableExpression>();
  256|       |
  257|     96|                const phi::string_view variable_name = variable_expression->m_VariableName;
  258|       |
  259|     96|                auto value = vm().LookupVariableByName(variable_name);
  260|     96|                if (!value)
  ------------------
  |  Branch (260:21): [True: 76, False: 20]
  ------------------
  261|     76|                {
  262|     76|                    vm().RuntimeError("No variable named '{}'", std::string_view(variable_name));
  263|     76|                    return {};
  264|     76|                }
  265|       |
  266|     20|                return value.value();
  267|     96|            }
  268|       |
  269|      0|            default:
  ------------------
  |  Branch (269:13): [True: 0, False: 16.1k]
  ------------------
  270|      0|                PHI_ASSERT_NOT_REACHED();
  271|  16.1k|        }
  272|       |
  273|      0|        PHI_ASSERT_NOT_REACHED();
  274|      0|        return {};
  275|  16.1k|    }
_ZN10OpenAutoIt11Interpreter20InterpretExpressionsERNSt3__16vectorIN3phi18not_null_scope_ptrINS_13ASTExpressionEEENS1_9allocatorIS6_EEEE:
  279|    302|    {
  280|    302|        std::vector<Variant> ret;
  281|    302|        ret.reserve(expressions.size());
  282|       |
  283|    302|        for (auto& expression : expressions)
  ------------------
  |  Branch (283:31): [True: 428, False: 302]
  ------------------
  284|    428|        {
  285|    428|            ret.emplace_back(InterpretExpression(expression));
  286|    428|        }
  287|       |
  288|    302|        return ret;
  289|    302|    }
_ZN10OpenAutoIt11Interpreter28InterpretBuiltInFunctionCallENS_9TokenKindERKNSt3__16vectorINS_7VariantENS2_9allocatorIS4_EEEE:
  293|     58|    {
  294|       |        // TODO: Is pretty incovinient that every function has to check for itself that it hast the right amount of arguments etc.
  295|       |
  296|     58|        switch (function)
  297|     58|        {
  298|       |            // https://www.autoitscript.com/autoit3/docs/functions/Abs.htm
  299|      0|            case TokenKind::BI_Abs: {
  ------------------
  |  Branch (299:13): [True: 0, False: 58]
  ------------------
  300|      0|                if (arguments.size() != 1u)
  ------------------
  |  Branch (300:21): [True: 0, False: 0]
  ------------------
  301|      0|                {
  302|       |                    // TODO: Error
  303|      0|                    return {};
  304|      0|                }
  305|       |
  306|      0|                return BuiltIn_Abs(m_VirtualMachine, arguments.at(0u));
  307|      0|            }
  308|       |
  309|       |            // https://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm
  310|      0|            case TokenKind::BI_ConsoleWrite: {
  ------------------
  |  Branch (310:13): [True: 0, False: 58]
  ------------------
  311|      0|                if (arguments.size() != 1u)
  ------------------
  |  Branch (311:21): [True: 0, False: 0]
  ------------------
  312|      0|                {
  313|       |                    // TODO: Error
  314|      0|                    return {};
  315|      0|                }
  316|       |
  317|      0|                return BuiltIn_ConsoleWrite(m_VirtualMachine, arguments.at(0u));
  318|      0|            }
  319|       |
  320|       |            // https://www.autoitscript.com/autoit3/docs/functions/ConsoleWriteError.htm
  321|      0|            case TokenKind::BI_ConsoleWriteError: {
  ------------------
  |  Branch (321:13): [True: 0, False: 58]
  ------------------
  322|      0|                if (arguments.size() != 1u)
  ------------------
  |  Branch (322:21): [True: 0, False: 0]
  ------------------
  323|      0|                {
  324|       |                    // TODO: Error
  325|      0|                    return {};
  326|      0|                }
  327|       |
  328|      0|                return BuiltIn_ConsoleWriteError(m_VirtualMachine, arguments.at(0u));
  329|      0|            }
  330|       |
  331|       |            // https://www.autoitscript.com/autoit3/docs/functions/VarGetType.htm
  332|      0|            case TokenKind::BI_VarGetType: {
  ------------------
  |  Branch (332:13): [True: 0, False: 58]
  ------------------
  333|      0|                if (arguments.size() != 1u)
  ------------------
  |  Branch (333:21): [True: 0, False: 0]
  ------------------
  334|      0|                {
  335|       |                    // TODO: Error
  336|      0|                    return {};
  337|      0|                }
  338|       |
  339|      0|                return BuiltIn_VarGetType(m_VirtualMachine, arguments.at(0u));
  340|      0|            }
  341|       |
  342|      0|            case TokenKind::BI_ConsoleWriteLine: {
  ------------------
  |  Branch (342:13): [True: 0, False: 58]
  ------------------
  343|      0|                if (arguments.size() != 1u)
  ------------------
  |  Branch (343:21): [True: 0, False: 0]
  ------------------
  344|      0|                {
  345|       |                    // TODO: Error:
  346|      0|                    return {};
  347|      0|                }
  348|       |
  349|      0|                return BuiltIn_ConsoleWriteLine(vm(), arguments.at(0u));
  350|      0|            }
  351|       |
  352|      0|            case TokenKind::BI_ConsoleWriteErrorLine: {
  ------------------
  |  Branch (352:13): [True: 0, False: 58]
  ------------------
  353|      0|                if (arguments.size() != 1u)
  ------------------
  |  Branch (353:21): [True: 0, False: 0]
  ------------------
  354|      0|                {
  355|       |                    // TODO: Error
  356|      0|                    return {};
  357|      0|                }
  358|       |
  359|      0|                return BuiltIn_ConsoleWriteErrorLine(vm(), arguments.at(0u));
  360|      0|            }
  361|       |
  362|     58|            default:
  ------------------
  |  Branch (362:13): [True: 58, False: 0]
  ------------------
  363|     58|                vm().RuntimeError("Builtin function '{:s}' not implemented", enum_name(function));
  364|     58|                return {};
  365|     58|        }
  366|       |
  367|      0|        PHI_ASSERT_NOT_REACHED();
  368|      0|        return {};
  369|     58|    }
_ZN10OpenAutoIt11Interpreter21InterpretFunctionCallEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS_7VariantENS3_9allocatorIS8_EEEE:
  373|    244|    {
  374|    244|        phi::observer_ptr<ASTFunctionDefinition> function_definition =
  375|    244|                m_Document->LookupFunctionDefinitionByName(function);
  376|       |
  377|    244|        if (!function_definition)
  ------------------
  |  Branch (377:13): [True: 244, False: 0]
  ------------------
  378|    244|        {
  379|    244|            vm().RuntimeError("Function '{:s}' not found'", std::string_view(function));
  380|    244|            return {};
  381|    244|        }
  382|       |
  383|       |        // Push new function scope
  384|      0|        vm().PushFunctionScope(function, function_definition->m_FunctionBody);
  385|       |
  386|       |        // Push arguments into the new scope
  387|      0|        for (phi::usize index{0u}; index < function_definition->m_Parameters.size(); ++index)
  ------------------
  |  Branch (387:36): [True: 0, False: 0]
  ------------------
  388|      0|        {
  389|       |            // TODO: This should be const but theres currently a bug in Phi which prevents us more doing so
  390|      0|            FunctionParameter& parameter = function_definition->m_Parameters.at(index.unsafe());
  391|       |
  392|       |            // Check if the argument was explicitly provided
  393|      0|            if (index < arguments.size())
  ------------------
  |  Branch (393:17): [True: 0, False: 0]
  ------------------
  394|      0|            {
  395|       |                // Simply set the parameter to be the given argument
  396|      0|                vm().PushVariable(parameter.name, arguments.at(index.unsafe()));
  397|      0|            }
  398|      0|            else
  399|      0|            {
  400|       |                // Otherwise the parameter MUST be defaultet
  401|      0|                if (!parameter.default_value)
  ------------------
  |  Branch (401:21): [True: 0, False: 0]
  ------------------
  402|      0|                {
  403|       |                    // TODO: Better error message
  404|      0|                    vm().RuntimeError("Missing argument");
  405|      0|                    break;
  406|      0|                }
  407|       |
  408|       |                // The value is simply the interpreted value of our default expression
  409|      0|                Variant value = InterpretExpression(parameter.default_value.not_null_observer());
  410|       |
  411|      0|                vm().PushVariable(parameter.name, value);
  412|      0|            }
  413|      0|        }
  414|       |
  415|      0|        return {};
  416|    244|    }
_ZN10OpenAutoIt11Interpreter24EvaluateBinaryExpressionERKNS_7VariantES3_NS_9TokenKindE:
  420|  2.57k|    {
  421|       |        // TODO: Lots of operators missing here
  422|  2.57k|        switch (op)
  423|  2.57k|        {
  424|    392|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (424:13): [True: 392, False: 2.18k]
  ------------------
  425|    392|                return EvaluateBinaryPlusExpression(lhs, rhs);
  426|       |
  427|    220|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (427:13): [True: 220, False: 2.35k]
  ------------------
  428|    220|                return EvaluateBinaryMinusExpression(lhs, rhs);
  429|       |
  430|    209|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (430:13): [True: 209, False: 2.36k]
  ------------------
  431|    209|                return EvaluateBinaryMultiplyExpression(lhs, rhs);
  432|       |
  433|  1.75k|            default:
  ------------------
  |  Branch (433:13): [True: 1.75k, False: 821]
  ------------------
  434|  1.75k|                return {};
  435|  2.57k|        }
  436|  2.57k|    }
_ZN10OpenAutoIt11Interpreter28EvaluateBinaryPlusExpressionERKNS_7VariantES3_:
  440|    392|    {
  441|       |        // TODO: We currently only support adding integer which is not correct
  442|    392|        if (!lhs.IsInt64() || !rhs.IsInt64())
  ------------------
  |  Branch (442:13): [True: 64, False: 328]
  |  Branch (442:13): [True: 107, False: 285]
  |  Branch (442:31): [True: 43, False: 285]
  ------------------
  443|    107|        {
  444|    107|            return {};
  445|    107|        }
  446|       |
  447|    285|        return Variant::MakeInt(UnsafeAdd(lhs.AsInt64(), rhs.AsInt64()));
  448|    392|    }
_ZN10OpenAutoIt11Interpreter29EvaluateBinaryMinusExpressionERKNS_7VariantES3_:
  452|    220|    {
  453|    220|        if (!lhs.IsInt64() || !rhs.IsInt64())
  ------------------
  |  Branch (453:13): [True: 128, False: 92]
  |  Branch (453:13): [True: 148, False: 72]
  |  Branch (453:31): [True: 20, False: 72]
  ------------------
  454|    148|        {
  455|    148|            return {};
  456|    148|        }
  457|       |
  458|     72|        return Variant::MakeInt(UnsafeMinus(lhs.AsInt64(), rhs.AsInt64()));
  459|    220|    }
_ZN10OpenAutoIt11Interpreter32EvaluateBinaryMultiplyExpressionERKNS_7VariantES3_:
  463|    209|    {
  464|    209|        if (!lhs.IsInt64() || !rhs.IsInt64())
  ------------------
  |  Branch (464:13): [True: 81, False: 128]
  |  Branch (464:13): [True: 100, False: 109]
  |  Branch (464:31): [True: 19, False: 109]
  ------------------
  465|    100|        {
  466|    100|            return {};
  467|    100|        }
  468|       |
  469|    109|        return Variant::MakeInt(UnsafeMultiply(lhs.AsInt64(), rhs.AsInt64()));
  470|    209|    }

_ZN10OpenAutoIt9UnsafeAddEN3phi7integerIlEES2_:
   18|    285|    {
   19|    285|        return lhs.unsafe() + rhs.unsafe();
   20|    285|    }
_ZN10OpenAutoIt11UnsafeMinusEN3phi7integerIlEES2_:
   23|     72|    {
   24|     72|        return lhs.unsafe() - rhs.unsafe();
   25|     72|    }
_ZN10OpenAutoIt14UnsafeMultiplyEN3phi7integerIlEES2_:
   29|    109|    {
   30|    109|        return lhs.unsafe() * rhs.unsafe();
   31|    109|    }

_ZN10OpenAutoIt7VariantC2Ev:
   25|  18.4k|    {}
_ZN10OpenAutoIt7VariantC2ERKS0_:
   31|    981|    {
   32|    981|        copy_from(other);
   33|    981|    }
_ZN10OpenAutoIt7VariantC2EOS0_:
   39|    428|    {
   40|    428|        move_from(phi::move(other));
   41|    428|    }
_ZN10OpenAutoIt7VariantD2Ev:
   44|  19.8k|    {
   45|  19.8k|        Clear();
   46|  19.8k|    }
_ZN10OpenAutoIt7VariantaSERKS0_:
   51|    337|    {
   52|    337|        PHI_ASSERT(this != &other);
   53|       |
   54|    337|        Clear();
   55|    337|        copy_from(other);
   56|       |
   57|    337|        return *this;
   58|    337|    }
_ZN10OpenAutoIt7VariantaSEOS0_:
   61|    783|    {
   62|    783|        Clear();
   63|    783|        move_from(phi::move(other));
   64|       |
   65|    783|        return *this;
   66|    783|    }
_ZN10OpenAutoIt7Variant5ClearEv:
   69|  21.0k|    {
   70|  21.0k|        switch (m_Type)
   71|  21.0k|        {
   72|      0|            case Type::Array:
  ------------------
  |  Branch (72:13): [True: 0, False: 21.0k]
  ------------------
   73|      0|                PHI_ASSERT(array.data());
   74|       |
   75|      0|                array.~vector();
   76|      0|                return;
   77|       |
   78|  11.4k|            case Type::String:
  ------------------
  |  Branch (78:13): [True: 11.4k, False: 9.51k]
  ------------------
   79|  11.4k|            case Type::Function:
  ------------------
  |  Branch (79:13): [True: 0, False: 21.0k]
  ------------------
   80|  11.4k|                PHI_ASSERT(string.c_str());
   81|       |
   82|  11.4k|                string.~basic_string();
   83|  11.4k|                return;
   84|       |
   85|      0|            case Type::Binary:
  ------------------
  |  Branch (85:13): [True: 0, False: 21.0k]
  ------------------
   86|      0|                PHI_ASSERT(binary.c_str());
   87|       |
   88|      0|                binary.~basic_string();
   89|      0|                return;
   90|       |
   91|  9.51k|            default:
  ------------------
  |  Branch (91:13): [True: 9.51k, False: 11.4k]
  ------------------
   92|       |                // The other types are trivially destructable
   93|  9.51k|                return;
   94|  21.0k|        }
   95|       |
   96|      0|        PHI_ASSERT_NOT_REACHED();
   97|      0|    }
_ZNK10OpenAutoIt7Variant7IsInt64Ev:
  139|  1.36k|    {
  140|  1.36k|        return m_Type == Type::Int64;
  141|  1.36k|    }
_ZNK10OpenAutoIt7Variant7AsInt64Ev:
  205|    932|    {
  206|    932|        PHI_ASSERT(m_Type == Type::Int64);
  207|       |
  208|    932|        return int64;
  209|    932|    }
_ZN10OpenAutoIt7Variant11MakeBooleanEN3phi7booleanE:
  494|     45|    {
  495|     45|        Variant variant;
  496|       |
  497|     45|        variant.m_Type  = Type::Boolean;
  498|     45|        variant.boolean = value;
  499|       |
  500|     45|        return variant;
  501|     45|    }
_ZN10OpenAutoIt7Variant10MakeDoubleEN3phi14floating_pointIdEE:
  504|    252|    {
  505|    252|        Variant variant;
  506|       |
  507|    252|        variant.m_Type         = Type::Double;
  508|    252|        variant.floating_point = value;
  509|       |
  510|    252|        return variant;
  511|    252|    }
_ZN10OpenAutoIt7Variant7MakeIntEN3phi7integerIlEE:
  514|  7.74k|    {
  515|  7.74k|        Variant variant;
  516|       |
  517|  7.74k|        variant.m_Type = Type::Int64;
  518|  7.74k|        variant.int64  = value;
  519|       |
  520|  7.74k|        return variant;
  521|  7.74k|    }
_ZN10OpenAutoIt7Variant11MakeKeywordENS_9TokenKindE:
  526|    101|    {
  527|    101|        PHI_ASSERT(value == TokenKind::KW_Default || value == TokenKind::KW_Null);
  528|       |
  529|    101|        Variant variant;
  530|       |
  531|    101|        variant.m_Type  = Type::Keyword;
  532|    101|        variant.keyword = value;
  533|       |
  534|    101|        return variant;
  535|    101|    }
_ZN10OpenAutoIt7Variant10MakeStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  563|  5.50k|    {
  564|  5.50k|        Variant variant;
  565|       |
  566|       |        // Reserve engough space for the string plus the null terminator
  567|  5.50k|        variant.string.reserve(value.length().unsafe() + 1u);
  568|       |
  569|  5.50k|        variant.m_Type = Type::String;
  570|  5.50k|        variant.string = string_t{value.data(), value.length().unsafe()};
  571|       |
  572|       |        // Ensure the string is null terminated
  573|  5.50k|        variant.string.push_back('\0');
  574|       |
  575|  5.50k|        return variant;
  576|  5.50k|    }
_ZN10OpenAutoIt7Variant9copy_fromERKS0_:
  605|  1.31k|    {
  606|  1.31k|        m_Type = other.m_Type;
  607|       |
  608|  1.31k|        switch (m_Type)
  ------------------
  |  Branch (608:17): [True: 0, False: 1.31k]
  ------------------
  609|  1.31k|        {
  610|      0|            case Type::Array:
  ------------------
  |  Branch (610:13): [True: 0, False: 1.31k]
  ------------------
  611|      0|                new (&array) array_t(other.array);
  612|      0|                return;
  613|       |
  614|      0|            case Type::Binary:
  ------------------
  |  Branch (614:13): [True: 0, False: 1.31k]
  ------------------
  615|      0|                new (&binary) binary_t(other.binary);
  616|      0|                return;
  617|       |
  618|      6|            case Type::Boolean:
  ------------------
  |  Branch (618:13): [True: 6, False: 1.31k]
  ------------------
  619|      6|                boolean = other.boolean;
  620|      6|                return;
  621|       |
  622|     78|            case Type::Double:
  ------------------
  |  Branch (622:13): [True: 78, False: 1.24k]
  ------------------
  623|     78|                floating_point = other.floating_point;
  624|     78|                return;
  625|       |
  626|      0|            case Type::Function:
  ------------------
  |  Branch (626:13): [True: 0, False: 1.31k]
  ------------------
  627|      0|                new (&string) string_t(other.string);
  628|      0|                return;
  629|       |
  630|  1.13k|            case Type::Int64:
  ------------------
  |  Branch (630:13): [True: 1.13k, False: 188]
  ------------------
  631|  1.13k|                int64 = other.int64;
  632|  1.13k|                return;
  633|       |
  634|      6|            case Type::Keyword:
  ------------------
  |  Branch (634:13): [True: 6, False: 1.31k]
  ------------------
  635|      6|                keyword = other.keyword;
  636|      6|                return;
  637|       |
  638|      0|            case Type::Pointer:
  ------------------
  |  Branch (638:13): [True: 0, False: 1.31k]
  ------------------
  639|      0|                pointer = other.pointer;
  640|      0|                return;
  641|       |
  642|     98|            case Type::String:
  ------------------
  |  Branch (642:13): [True: 98, False: 1.22k]
  ------------------
  643|     98|                new (&string) string_t(other.string);
  644|     98|                return;
  645|  1.31k|        }
  646|       |
  647|      0|        PHI_ASSERT_NOT_REACHED();
  648|      0|    }
_ZN10OpenAutoIt7Variant9move_fromEOS0_:
  651|  1.21k|    {
  652|  1.21k|        m_Type = other.m_Type;
  653|       |
  654|  1.21k|        switch (m_Type)
  ------------------
  |  Branch (654:17): [True: 0, False: 1.21k]
  ------------------
  655|  1.21k|        {
  656|      0|            case Type::Array:
  ------------------
  |  Branch (656:13): [True: 0, False: 1.21k]
  ------------------
  657|      0|                new (&array) array_t(phi::move(other.array));
  658|      0|                return;
  659|       |
  660|      0|            case Type::Binary:
  ------------------
  |  Branch (660:13): [True: 0, False: 1.21k]
  ------------------
  661|      0|                new (&binary) binary_t(phi::move(other.binary));
  662|      0|                return;
  663|       |
  664|     10|            case Type::Boolean:
  ------------------
  |  Branch (664:13): [True: 10, False: 1.20k]
  ------------------
  665|     10|                boolean = other.boolean;
  666|     10|                return;
  667|       |
  668|     22|            case Type::Double:
  ------------------
  |  Branch (668:13): [True: 22, False: 1.18k]
  ------------------
  669|     22|                floating_point = other.floating_point;
  670|     22|                return;
  671|       |
  672|      0|            case Type::Function:
  ------------------
  |  Branch (672:13): [True: 0, False: 1.21k]
  ------------------
  673|      0|                new (&string) string_t(phi::move(other.string));
  674|      0|                return;
  675|       |
  676|    117|            case Type::Int64:
  ------------------
  |  Branch (676:13): [True: 117, False: 1.09k]
  ------------------
  677|    117|                int64 = other.int64;
  678|    117|                return;
  679|       |
  680|      6|            case Type::Keyword:
  ------------------
  |  Branch (680:13): [True: 6, False: 1.20k]
  ------------------
  681|      6|                keyword = other.keyword;
  682|      6|                return;
  683|       |
  684|      0|            case Type::Pointer:
  ------------------
  |  Branch (684:13): [True: 0, False: 1.21k]
  ------------------
  685|      0|                pointer = other.pointer;
  686|      0|                return;
  687|       |
  688|  1.05k|            case Type::String:
  ------------------
  |  Branch (688:13): [True: 1.05k, False: 155]
  ------------------
  689|  1.05k|                new (&string) string_t(phi::move(other.string));
  690|  1.05k|                return;
  691|  1.21k|        }
  692|       |
  693|      0|        PHI_ASSERT_NOT_REACHED();
  694|      0|    }

_ZN10OpenAutoIt14VirtualMachine15PushGlobalScopeERNSt3__16vectorIN3phi18not_null_scope_ptrINS_12ASTStatementEEENS1_9allocatorIS6_EEEE:
   28|  1.60k|    {
   29|  1.60k|        m_Scopes.emplace_back(ScopeKind::Function, "<global>", statements);
   30|  1.60k|    }
_ZN10OpenAutoIt14VirtualMachine8PopScopeEv:
   33|  1.47k|    {
   34|  1.47k|        m_Scopes.pop_front();
   35|  1.47k|    }
_ZN10OpenAutoIt14VirtualMachine15GetCurrentScopeEv:
   38|  15.8k|    {
   39|  15.8k|        PHI_ASSERT(!m_Scopes.empty());
   40|       |
   41|  15.8k|        return m_Scopes.front();
   42|  15.8k|    }
_ZNK10OpenAutoIt14VirtualMachine15GetCurrentScopeEv:
   45|  12.1k|    {
   46|  12.1k|        PHI_ASSERT(!m_Scopes.empty());
   47|       |
   48|  12.1k|        return m_Scopes.front();
   49|  12.1k|    }
_ZNK10OpenAutoIt14VirtualMachine14GetStrackTraceEv:
   66|    378|    {
   67|       |        // Count number of function elements
   68|    378|        phi::u64 count = 0u;
   69|    378|        for (const Scope& scope : m_Scopes)
  ------------------
  |  Branch (69:33): [True: 378, False: 378]
  ------------------
   70|    378|        {
   71|    378|            if (scope.kind == ScopeKind::Function)
  ------------------
  |  Branch (71:17): [True: 378, False: 0]
  ------------------
   72|    378|            {
   73|    378|                count += 1u;
   74|    378|            }
   75|    378|        }
   76|       |
   77|    378|        StackTrace stack_trace;
   78|    378|        stack_trace.reserve(count.unsafe());
   79|       |
   80|       |        // Populate the stacktrace
   81|    378|        for (const Scope& scope : m_Scopes)
  ------------------
  |  Branch (81:33): [True: 378, False: 378]
  ------------------
   82|    378|        {
   83|    378|            if (scope.kind == ScopeKind::Function)
  ------------------
  |  Branch (83:17): [True: 378, False: 0]
  ------------------
   84|    378|            {
   85|       |                // TODO: Line and Column not implemented
   86|    378|                stack_trace.emplace_back(StackTraceEntry{
   87|    378|                        .file = "", .function = scope.name, .line = 0u, .column = 0u});
   88|    378|            }
   89|    378|        }
   90|       |
   91|    378|        return phi::move(stack_trace);
   92|    378|    }
_ZN10OpenAutoIt14VirtualMachine12PushVariableENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEENS_7VariantE:
   95|  1.56k|    {
   96|  1.56k|        Scope& current_scope = GetCurrentScope();
   97|       |
   98|  1.56k|        if (current_scope.variables.contains(name))
  ------------------
  |  Branch (98:13): [True: 786, False: 783]
  ------------------
   99|    786|        {
  100|    786|            return false;
  101|    786|        }
  102|       |
  103|    783|        current_scope.variables[name] = phi::move(value);
  104|    783|        return true;
  105|  1.56k|    }
_ZN10OpenAutoIt14VirtualMachine20PushOrAssignVariableENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEENS_7VariantE:
  134|    639|    {
  135|    639|        Scope& current_scope = GetCurrentScope();
  136|       |
  137|    639|        current_scope.variables.insert_or_assign(name, value);
  138|    639|    }
_ZNK10OpenAutoIt14VirtualMachine20LookupVariableByNameENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEE:
  142|     96|    {
  143|     96|        phi::boolean found_function_boundary{false};
  144|       |
  145|     96|        for (const Scope& scope : m_Scopes)
  ------------------
  |  Branch (145:33): [True: 96, False: 76]
  ------------------
  146|     96|        {
  147|     96|            if (scope.kind == ScopeKind::Function)
  ------------------
  |  Branch (147:17): [True: 96, False: 0]
  ------------------
  148|     96|            {
  149|     96|                if (found_function_boundary)
  ------------------
  |  Branch (149:21): [True: 0, False: 96]
  ------------------
  150|      0|                {
  151|       |                    // We hit the function boundary so only check the global scope and don't continue
  152|      0|                    const Scope& global_scope = GetGlobalScope();
  153|      0|                    if (global_scope.variables.contains(variable_name))
  ------------------
  |  Branch (153:25): [True: 0, False: 0]
  ------------------
  154|      0|                    {
  155|      0|                        return global_scope.variables.at(variable_name);
  156|      0|                    }
  157|       |
  158|      0|                    return {};
  159|      0|                }
  160|       |
  161|     96|                found_function_boundary = true;
  162|     96|            }
  163|       |
  164|     96|            if (scope.variables.contains(variable_name))
  ------------------
  |  Branch (164:17): [True: 20, False: 76]
  ------------------
  165|     20|            {
  166|     20|                return scope.variables.at(variable_name);
  167|     20|            }
  168|     96|        }
  169|       |
  170|     76|        return {};
  171|     96|    }
_ZNK10OpenAutoIt14VirtualMachine6CanRunEv:
  174|  15.2k|    {
  175|  15.2k|        return !m_Scopes.empty() && !m_Aborting;
  ------------------
  |  Branch (175:16): [True: 13.7k, False: 1.47k]
  |  Branch (175:37): [True: 13.6k, False: 128]
  ------------------
  176|  15.2k|    }
_ZN10OpenAutoIt14VirtualMachine17OverwriteIOSreamsEN3phi12observer_ptrINSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEEES8_:
  180|  1.60k|    {
  181|  1.60k|        m_Stdout = out;
  182|  1.60k|        m_Stderr = err;
  183|  1.60k|    }

