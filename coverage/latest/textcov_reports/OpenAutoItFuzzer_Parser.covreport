_ZN3fmt3v106detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  379|  1.96M|    typename std::make_unsigned<Int>::type {
  380|  1.96M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  338|  3.93M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (338:35): [Folded - Ignored]
  |  |  |  Branch (338:35): [True: 1.96M, False: 0]
  |  |  ------------------
  ------------------
  381|  1.96M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  382|  1.96M|}
_ZN3fmt3v106detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  306|  16.6M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v1017basic_string_viewIcE4sizeEv:
  447|  11.3M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  306|  1.96M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE4sizeEv:
  842|  2.41M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail6bufferIcEC2EPcmm:
  814|  2.41M|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt3v106detail6bufferIcE3setEPcm:
  820|  2.41M|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  821|  2.41M|    ptr_ = buf_data;
  822|  2.41M|    capacity_ = buf_capacity;
  823|  2.41M|  }
_ZN3fmt3v106detail13ignore_unusedIJbEEEvDpRKT_:
  306|    155|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE8capacityEv:
  845|    271|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt3v106detail6bufferIcE4dataEv:
  848|  2.41M|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt3v1017basic_string_viewIcE5beginEv:
  449|  4.38M|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt3v1017basic_string_viewIcE3endEv:
  450|  4.38M|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKc:
  430|  2.29M|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt3v106detail10locale_refC2Ev:
 1540|  4.20M|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZNK3fmt3v1019basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2765|   447k|  FMT_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt3v1016make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJEEENS0_16format_arg_storeIT_JDpNSt3__19remove_cvINS7_16remove_referenceIT0_E4typeEE4typeEEEEDpRSA_:
 1831|   447k|    -> format_arg_store<Context, remove_cvref_t<T>...> {
 1832|   447k|  return {args...};
 1833|   447k|}
_ZN3fmt3v1016format_arg_storeINS0_20basic_format_contextINS0_8appenderEcEEJEEC2IJEEEDpRT_:
 1814|   447k|        data_{detail::make_arg<is_packed, Context>(args)...} {
 1815|   447k|    if (detail::const_check(num_named_args != 0))
  ------------------
  |  Branch (1815:9): [Folded - Ignored]
  ------------------
 1816|      0|      detail::init_named_args(data_.named_args(), 0, 0, args...);
 1817|   447k|  }
_ZN3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EEC2IJEEEDpRKT_:
 1172|   447k|  FMT_CONSTEXPR FMT_INLINE arg_data(const U&... init) : args_{init...} {}
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1265|  2.41M|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt3v109monostateC2Ev:
  281|  2.41M|  constexpr monostate() {}
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2IJEEERKNS0_16format_arg_storeIS4_JDpT_EEE:
 1915|   447k|                          store.data_.args()) {}
_ZNK3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE4argsEv:
 1173|   447k|  FMT_CONSTEXPR FMT_INLINE auto args() const -> const T* { return args_; }
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1899|  2.41M|      : desc_(desc), values_(values) {}
_ZNK3fmt3v1017basic_string_viewIcE4dataEv:
  444|  4.55M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKcm:
  415|  4.55M|      : data_(s), size_(count) {}
_ZN3fmt3v106detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  379|  14.7M|    typename std::make_unsigned<Int>::type {
  380|  14.7M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  338|  29.4M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (338:35): [Folded - Ignored]
  |  |  |  Branch (338:35): [True: 14.7M, False: 0]
  |  |  ------------------
  ------------------
  381|  14.7M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  382|  14.7M|}
_ZN3fmt3v106detail6bufferIcE11try_reserveEm:
  865|  6.28M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  866|  6.28M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (866:9): [True: 155, False: 6.28M]
  ------------------
  867|  6.28M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 1937|  1.96M|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1938|  1.96M|    format_arg arg;
 1939|  1.96M|    if (!is_packed()) {
  ------------------
  |  Branch (1939:9): [True: 0, False: 1.96M]
  ------------------
 1940|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1940:11): [True: 0, False: 0]
  ------------------
 1941|      0|      return arg;
 1942|      0|    }
 1943|  1.96M|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1943:9): [True: 0, False: 1.96M]
  ------------------
 1944|  1.96M|    arg.type_ = type(id);
 1945|  1.96M|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1945:9): [True: 0, False: 1.96M]
  ------------------
 1946|  1.96M|    arg.value_ = values_[id];
 1947|  1.96M|    return arg;
 1948|  1.96M|  }
_ZN3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1648|  1.96M|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1884|  1.96M|  constexpr auto is_packed() const -> bool {
 1885|  1.96M|    return (desc_ & detail::is_unpacked_bit) == 0;
 1886|  1.96M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1891|  1.96M|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1892|  1.96M|    int shift = index * detail::packed_arg_bits;
 1893|  1.96M|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1894|  1.96M|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1895|  1.96M|  }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1650|  1.96M|  constexpr explicit operator bool() const noexcept {
 1651|  1.96M|    return type_ != detail::type::none_type;
 1652|  1.96M|  }
_ZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  770|  6.34M|    -> Container& {
  771|  6.34M|  using base = std::back_insert_iterator<Container>;
  772|  6.34M|  struct accessor : base {
  773|  6.34M|    accessor(base b) : base(b) {}
  774|  6.34M|    using base::container;
  775|  6.34M|  };
  776|  6.34M|  return *accessor(it).container;
  777|  6.34M|}
_ZZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  773|  6.34M|    accessor(base b) : base(b) {}
_ZNK3fmt3v106detail6fill_tIcE4sizeEv:
 2015|  1.96M|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt3v106detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1492|  6.34M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1493|  6.34M|  get_container(out).append(begin, end);
 1494|  6.34M|  return out;
 1495|  6.34M|}
_ZN3fmt3v1012format_specsIcEC2Ev:
 2065|  1.96M|        localized(false) {}
_ZN3fmt3v1026basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  673|  2.41M|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1737|  2.41M|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE3outEv:
 1752|  6.34M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2494|  2.41M|    basic_string_view<Char> format_str, Handler&& handler) {
 2495|  2.41M|  auto begin = format_str.data();
 2496|  2.41M|  auto end = begin + format_str.size();
 2497|  2.41M|  if (end - begin < 32) {
  ------------------
  |  Branch (2497:7): [True: 1.40M, False: 1.00M]
  ------------------
 2498|       |    // Use a simple loop instead of memchr for small strings.
 2499|  1.40M|    const Char* p = begin;
 2500|  36.1M|    while (p != end) {
  ------------------
  |  Branch (2500:12): [True: 34.7M, False: 1.40M]
  ------------------
 2501|  34.7M|      auto c = *p++;
 2502|  34.7M|      if (c == '{') {
  ------------------
  |  Branch (2502:11): [True: 957k, False: 33.7M]
  ------------------
 2503|   957k|        handler.on_text(begin, p - 1);
 2504|   957k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2505|  33.7M|      } else if (c == '}') {
  ------------------
  |  Branch (2505:18): [True: 0, False: 33.7M]
  ------------------
 2506|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2506:13): [True: 0, False: 0]
  |  Branch (2506:25): [True: 0, False: 0]
  ------------------
 2507|      0|          return handler.on_error("unmatched '}' in format string");
 2508|      0|        handler.on_text(begin, p);
 2509|      0|        begin = ++p;
 2510|      0|      }
 2511|  34.7M|    }
 2512|  1.40M|    handler.on_text(begin, end);
 2513|  1.40M|    return;
 2514|  1.40M|  }
 2515|  1.00M|  struct writer {
 2516|  1.00M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2517|  1.00M|      if (from == to) return;
 2518|  1.00M|      for (;;) {
 2519|  1.00M|        const Char* p = nullptr;
 2520|  1.00M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2521|  1.00M|          return handler_.on_text(from, to);
 2522|  1.00M|        ++p;
 2523|  1.00M|        if (p == to || *p != '}')
 2524|  1.00M|          return handler_.on_error("unmatched '}' in format string");
 2525|  1.00M|        handler_.on_text(from, p);
 2526|  1.00M|        from = p + 1;
 2527|  1.00M|      }
 2528|  1.00M|    }
 2529|  1.00M|    Handler& handler_;
 2530|  1.00M|  } write = {handler};
 2531|  2.01M|  while (begin != end) {
  ------------------
  |  Branch (2531:10): [True: 2.01M, False: 8]
  ------------------
 2532|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2533|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2534|  2.01M|    const Char* p = begin;
 2535|  2.01M|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2535:9): [True: 2.01M, False: 0]
  |  Branch (2535:26): [True: 1.00M, False: 1.00M]
  ------------------
 2536|  1.00M|      return write(begin, end);
 2537|  1.00M|    write(begin, p);
 2538|  1.00M|    begin = parse_replacement_field(p, end, handler);
 2539|  1.00M|  }
 2540|  1.00M|}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1755|  6.34M|  void advance_to(iterator it) {
 1756|  6.34M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1756:9): [Folded - Ignored]
  ------------------
 1757|  6.34M|  }
_ZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2457|  1.96M|                                           Handler&& handler) -> const Char* {
 2458|  1.96M|  struct id_adapter {
 2459|  1.96M|    Handler& handler;
 2460|  1.96M|    int arg_id;
 2461|       |
 2462|  1.96M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2463|  1.96M|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2464|  1.96M|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2465|  1.96M|      arg_id = handler.on_arg_id(id);
 2466|  1.96M|    }
 2467|  1.96M|  };
 2468|       |
 2469|  1.96M|  ++begin;
 2470|  1.96M|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2470:7): [True: 0, False: 1.96M]
  ------------------
 2471|  1.96M|  if (*begin == '}') {
  ------------------
  |  Branch (2471:7): [True: 0, False: 1.96M]
  ------------------
 2472|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2473|  1.96M|  } else if (*begin == '{') {
  ------------------
  |  Branch (2473:14): [True: 0, False: 1.96M]
  ------------------
 2474|      0|    handler.on_text(begin, begin + 1);
 2475|  1.96M|  } else {
 2476|  1.96M|    auto adapter = id_adapter{handler, 0};
 2477|  1.96M|    begin = parse_arg_id(begin, end, adapter);
 2478|  1.96M|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2478:14): [True: 1.96M, False: 0]
  ------------------
 2479|  1.96M|    if (c == '}') {
  ------------------
  |  Branch (2479:9): [True: 0, False: 1.96M]
  ------------------
 2480|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2481|  1.96M|    } else if (c == ':') {
  ------------------
  |  Branch (2481:16): [True: 1.96M, False: 0]
  ------------------
 2482|  1.96M|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2483|  1.96M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2483:11): [True: 0, False: 1.96M]
  |  Branch (2483:27): [True: 0, False: 1.96M]
  ------------------
 2484|      0|        return handler.on_error("unknown format specifier"), end;
 2485|  1.96M|    } else {
 2486|      0|      return handler.on_error("missing '}' in format string"), end;
 2487|      0|    }
 2488|  1.96M|  }
 2489|  1.96M|  return begin + 1;
 2490|  1.96M|}
_ZNK3fmt3v1020basic_format_contextINS0_8appenderEcE3argEi:
 1739|  1.96M|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE6localeEv:
 1759|  1.96M|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt3v1026basic_format_parse_contextIcE11next_arg_idEv:
  697|  1.96M|  FMT_CONSTEXPR auto next_arg_id() -> int {
  698|  1.96M|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (698:9): [True: 0, False: 1.96M]
  ------------------
  699|      0|      detail::throw_format_error(
  700|      0|          "cannot switch from manual to automatic argument indexing");
  701|      0|      return 0;
  702|      0|    }
  703|  1.96M|    int id = next_arg_id_++;
  704|  1.96M|    do_check_arg_id(id);
  705|  1.96M|    return id;
  706|  1.96M|  }
_ZN3fmt3v1026basic_format_parse_contextIcE15do_check_arg_idEi:
 1044|  1.96M|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
 1045|       |  // Argument id is only checked at compile-time during parsing because
 1046|       |  // formatting has its own validation.
 1047|  1.96M|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (1047:7): [Folded - Ignored]
  ------------------
 1048|  1.96M|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (1048:8): [Folded - Ignored]
  |  Branch (1048:28): [Folded - Ignored]
  ------------------
 1049|      0|    using context = detail::compile_parse_context<Char>;
 1050|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (1050:9): [True: 0, False: 0]
  ------------------
 1051|      0|      detail::throw_format_error("argument not found");
 1052|      0|  }
 1053|  1.96M|}
_ZN3fmt3v106detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2213|  1.96M|                                           Handler&& handler) -> const Char* {
 2214|  1.96M|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  338|  1.96M|      fmt::detail::ignore_unused((condition), (message))
  ------------------
 2215|  1.96M|  Char c = *begin;
 2216|  1.96M|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2216:7): [True: 1.96M, False: 0]
  |  Branch (2216:19): [True: 0, False: 1.96M]
  ------------------
 2217|  1.96M|  handler.on_auto();
 2218|  1.96M|  return begin;
 2219|  1.96M|}
_ZZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2462|  1.96M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1654|  3.93M|  auto type() const -> detail::type { return type_; }
_ZN3fmt3v106detail7arg_refIcEC2Ev:
 2074|  3.93M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt3v106detail7arg_refIcE5valueC2Ei:
 2089|  3.93M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2283|  1.96M|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2284|  1.96M|  auto c = '\0';
 2285|  1.96M|  if (end - begin > 1) {
  ------------------
  |  Branch (2285:7): [True: 1.96M, False: 0]
  ------------------
 2286|  1.96M|    auto next = to_ascii(begin[1]);
 2287|  1.96M|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2287:9): [True: 1.96M, False: 0]
  ------------------
 2288|  1.96M|  } else {
 2289|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2289:9): [True: 0, False: 0]
  ------------------
 2290|      0|    c = to_ascii(*begin);
 2291|      0|  }
 2292|       |
 2293|  1.96M|  struct {
 2294|  1.96M|    state current_state = state::start;
 2295|  1.96M|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2296|  1.96M|      if (current_state >= s || !valid)
 2297|  1.96M|        throw_format_error("invalid format specifier");
 2298|  1.96M|      current_state = s;
 2299|  1.96M|    }
 2300|  1.96M|  } enter_state;
 2301|       |
 2302|  1.96M|  using pres = presentation_type;
 2303|  1.96M|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2304|  1.96M|  struct {
 2305|  1.96M|    const Char*& begin;
 2306|  1.96M|    dynamic_format_specs<Char>& specs;
 2307|  1.96M|    type arg_type;
 2308|       |
 2309|  1.96M|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2310|  1.96M|      if (!in(arg_type, set)) {
 2311|  1.96M|        if (arg_type == type::none_type) return begin;
 2312|  1.96M|        throw_format_error("invalid format specifier");
 2313|  1.96M|      }
 2314|  1.96M|      specs.type = pres_type;
 2315|  1.96M|      return begin + 1;
 2316|  1.96M|    }
 2317|  1.96M|  } parse_presentation_type{begin, specs, arg_type};
 2318|       |
 2319|  1.96M|  for (;;) {
 2320|  1.96M|    switch (c) {
 2321|      0|    case '<':
  ------------------
  |  Branch (2321:5): [True: 0, False: 1.96M]
  ------------------
 2322|      0|    case '>':
  ------------------
  |  Branch (2322:5): [True: 0, False: 1.96M]
  ------------------
 2323|      0|    case '^':
  ------------------
  |  Branch (2323:5): [True: 0, False: 1.96M]
  ------------------
 2324|      0|      enter_state(state::align);
 2325|      0|      specs.align = parse_align(c);
 2326|      0|      ++begin;
 2327|      0|      break;
 2328|      0|    case '+':
  ------------------
  |  Branch (2328:5): [True: 0, False: 1.96M]
  ------------------
 2329|      0|    case '-':
  ------------------
  |  Branch (2329:5): [True: 0, False: 1.96M]
  ------------------
 2330|      0|    case ' ':
  ------------------
  |  Branch (2330:5): [True: 0, False: 1.96M]
  ------------------
 2331|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2331:11): [True: 0, False: 0]
  ------------------
 2332|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2333|      0|      switch (c) {
  ------------------
  |  Branch (2333:15): [True: 0, False: 0]
  ------------------
 2334|      0|      case '+':
  ------------------
  |  Branch (2334:7): [True: 0, False: 0]
  ------------------
 2335|      0|        specs.sign = sign::plus;
 2336|      0|        break;
 2337|      0|      case '-':
  ------------------
  |  Branch (2337:7): [True: 0, False: 0]
  ------------------
 2338|      0|        specs.sign = sign::minus;
 2339|      0|        break;
 2340|      0|      case ' ':
  ------------------
  |  Branch (2340:7): [True: 0, False: 0]
  ------------------
 2341|      0|        specs.sign = sign::space;
 2342|      0|        break;
 2343|      0|      }
 2344|      0|      ++begin;
 2345|      0|      break;
 2346|      0|    case '#':
  ------------------
  |  Branch (2346:5): [True: 0, False: 1.96M]
  ------------------
 2347|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2347:11): [True: 0, False: 0]
  ------------------
 2348|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2349|      0|      specs.alt = true;
 2350|      0|      ++begin;
 2351|      0|      break;
 2352|      0|    case '0':
  ------------------
  |  Branch (2352:5): [True: 0, False: 1.96M]
  ------------------
 2353|      0|      enter_state(state::zero);
 2354|      0|      if (!is_arithmetic_type(arg_type)) {
  ------------------
  |  Branch (2354:11): [True: 0, False: 0]
  ------------------
 2355|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2355:13): [True: 0, False: 0]
  ------------------
 2356|      0|        throw_format_error("format specifier requires numeric argument");
 2357|      0|      }
 2358|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2358:11): [True: 0, False: 0]
  ------------------
 2359|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2360|      0|        specs.align = align::numeric;
 2361|      0|        specs.fill[0] = Char('0');
 2362|      0|      }
 2363|      0|      ++begin;
 2364|      0|      break;
 2365|      0|    case '1':
  ------------------
  |  Branch (2365:5): [True: 0, False: 1.96M]
  ------------------
 2366|      0|    case '2':
  ------------------
  |  Branch (2366:5): [True: 0, False: 1.96M]
  ------------------
 2367|      0|    case '3':
  ------------------
  |  Branch (2367:5): [True: 0, False: 1.96M]
  ------------------
 2368|      0|    case '4':
  ------------------
  |  Branch (2368:5): [True: 0, False: 1.96M]
  ------------------
 2369|      0|    case '5':
  ------------------
  |  Branch (2369:5): [True: 0, False: 1.96M]
  ------------------
 2370|      0|    case '6':
  ------------------
  |  Branch (2370:5): [True: 0, False: 1.96M]
  ------------------
 2371|      0|    case '7':
  ------------------
  |  Branch (2371:5): [True: 0, False: 1.96M]
  ------------------
 2372|      0|    case '8':
  ------------------
  |  Branch (2372:5): [True: 0, False: 1.96M]
  ------------------
 2373|      0|    case '9':
  ------------------
  |  Branch (2373:5): [True: 0, False: 1.96M]
  ------------------
 2374|      0|    case '{':
  ------------------
  |  Branch (2374:5): [True: 0, False: 1.96M]
  ------------------
 2375|      0|      enter_state(state::width);
 2376|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2377|      0|      break;
 2378|      0|    case '.':
  ------------------
  |  Branch (2378:5): [True: 0, False: 1.96M]
  ------------------
 2379|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2379:11): [True: 0, False: 0]
  ------------------
 2380|      0|      enter_state(state::precision,
 2381|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2382|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2383|      0|                              ctx);
 2384|      0|      break;
 2385|      0|    case 'L':
  ------------------
  |  Branch (2385:5): [True: 0, False: 1.96M]
  ------------------
 2386|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2386:11): [True: 0, False: 0]
  ------------------
 2387|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2388|      0|      specs.localized = true;
 2389|      0|      ++begin;
 2390|      0|      break;
 2391|      0|    case 'd':
  ------------------
  |  Branch (2391:5): [True: 0, False: 1.96M]
  ------------------
 2392|      0|      return parse_presentation_type(pres::dec, integral_set);
 2393|      0|    case 'o':
  ------------------
  |  Branch (2393:5): [True: 0, False: 1.96M]
  ------------------
 2394|      0|      return parse_presentation_type(pres::oct, integral_set);
 2395|      0|    case 'x':
  ------------------
  |  Branch (2395:5): [True: 0, False: 1.96M]
  ------------------
 2396|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2397|      0|    case 'X':
  ------------------
  |  Branch (2397:5): [True: 0, False: 1.96M]
  ------------------
 2398|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2399|      0|    case 'b':
  ------------------
  |  Branch (2399:5): [True: 0, False: 1.96M]
  ------------------
 2400|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2401|      0|    case 'B':
  ------------------
  |  Branch (2401:5): [True: 0, False: 1.96M]
  ------------------
 2402|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2403|      0|    case 'a':
  ------------------
  |  Branch (2403:5): [True: 0, False: 1.96M]
  ------------------
 2404|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2405|      0|    case 'A':
  ------------------
  |  Branch (2405:5): [True: 0, False: 1.96M]
  ------------------
 2406|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2407|      0|    case 'e':
  ------------------
  |  Branch (2407:5): [True: 0, False: 1.96M]
  ------------------
 2408|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2409|      0|    case 'E':
  ------------------
  |  Branch (2409:5): [True: 0, False: 1.96M]
  ------------------
 2410|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2411|      0|    case 'f':
  ------------------
  |  Branch (2411:5): [True: 0, False: 1.96M]
  ------------------
 2412|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2413|      0|    case 'F':
  ------------------
  |  Branch (2413:5): [True: 0, False: 1.96M]
  ------------------
 2414|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2415|      0|    case 'g':
  ------------------
  |  Branch (2415:5): [True: 0, False: 1.96M]
  ------------------
 2416|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2417|      0|    case 'G':
  ------------------
  |  Branch (2417:5): [True: 0, False: 1.96M]
  ------------------
 2418|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2419|      0|    case 'c':
  ------------------
  |  Branch (2419:5): [True: 0, False: 1.96M]
  ------------------
 2420|      0|      return parse_presentation_type(pres::chr, integral_set);
 2421|  1.96M|    case 's':
  ------------------
  |  Branch (2421:5): [True: 1.96M, False: 0]
  ------------------
 2422|  1.96M|      return parse_presentation_type(pres::string,
 2423|  1.96M|                                     bool_set | string_set | cstring_set);
 2424|      0|    case 'p':
  ------------------
  |  Branch (2424:5): [True: 0, False: 1.96M]
  ------------------
 2425|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2426|      0|    case '?':
  ------------------
  |  Branch (2426:5): [True: 0, False: 1.96M]
  ------------------
 2427|      0|      return parse_presentation_type(pres::debug,
 2428|      0|                                     char_set | string_set | cstring_set);
 2429|      0|    case '}':
  ------------------
  |  Branch (2429:5): [True: 0, False: 1.96M]
  ------------------
 2430|      0|      return begin;
 2431|      0|    default: {
  ------------------
  |  Branch (2431:5): [True: 0, False: 1.96M]
  ------------------
 2432|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2432:11): [True: 0, False: 0]
  ------------------
 2433|       |      // Parse fill and alignment.
 2434|      0|      auto fill_end = begin + code_point_length(begin);
 2435|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2435:11): [True: 0, False: 0]
  ------------------
 2436|      0|        throw_format_error("invalid format specifier");
 2437|      0|        return begin;
 2438|      0|      }
 2439|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2439:11): [True: 0, False: 0]
  ------------------
 2440|      0|        throw_format_error("invalid fill character '{'");
 2441|      0|        return begin;
 2442|      0|      }
 2443|      0|      auto align = parse_align(to_ascii(*fill_end));
 2444|      0|      enter_state(state::align, align != align::none);
 2445|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2446|      0|      specs.align = align;
 2447|      0|      begin = fill_end + 1;
 2448|      0|    }
 2449|  1.96M|    }
 2450|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2450:9): [True: 0, False: 0]
  ------------------
 2451|      0|    c = to_ascii(*begin);
 2452|      0|  }
 2453|  1.96M|}
_ZN3fmt3v106detail8to_asciiIcLi0EEEcT_:
 2108|  3.93M|constexpr auto to_ascii(Char c) -> char {
 2109|  3.93M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2109:10): [True: 3.93M, False: 0]
  ------------------
 2110|  3.93M|}
_ZN3fmt3v106detail11parse_alignEc:
 2166|  1.96M|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2167|  1.96M|  switch (c) {
  ------------------
  |  Branch (2167:11): [True: 1.96M, False: 0]
  ------------------
 2168|      0|  case '<':
  ------------------
  |  Branch (2168:3): [True: 0, False: 1.96M]
  ------------------
 2169|      0|    return align::left;
 2170|      0|  case '>':
  ------------------
  |  Branch (2170:3): [True: 0, False: 1.96M]
  ------------------
 2171|      0|    return align::right;
 2172|      0|  case '^':
  ------------------
  |  Branch (2172:3): [True: 0, False: 1.96M]
  ------------------
 2173|      0|    return align::center;
 2174|  1.96M|  }
 2175|  1.96M|  return align::none;
 2176|  1.96M|}
_ZN3fmt3v106detail2inENS1_4typeEi:
  615|  1.96M|constexpr auto in(type t, int set) -> bool {
  616|  1.96M|  return ((set >> static_cast<int>(t)) & 1) != 0;
  617|  1.96M|}
_ZZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2309|  1.96M|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2310|  1.96M|      if (!in(arg_type, set)) {
  ------------------
  |  Branch (2310:11): [True: 0, False: 1.96M]
  ------------------
 2311|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2311:13): [True: 0, False: 0]
  ------------------
 2312|      0|        throw_format_error("invalid format specifier");
 2313|      0|      }
 2314|  1.96M|      specs.type = pres_type;
 2315|  1.96M|      return begin + 1;
 2316|  1.96M|    }
_ZN3fmt3v1016visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1672|  1.96M|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1673|  1.96M|  switch (arg.type_) {
  ------------------
  |  Branch (1673:11): [True: 0, False: 1.96M]
  ------------------
 1674|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1674:3): [True: 0, False: 1.96M]
  ------------------
 1675|      0|    break;
 1676|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1676:3): [True: 0, False: 1.96M]
  ------------------
 1677|      0|    return vis(arg.value_.int_value);
 1678|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1678:3): [True: 0, False: 1.96M]
  ------------------
 1679|      0|    return vis(arg.value_.uint_value);
 1680|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1680:3): [True: 0, False: 1.96M]
  ------------------
 1681|      0|    return vis(arg.value_.long_long_value);
 1682|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1682:3): [True: 0, False: 1.96M]
  ------------------
 1683|      0|    return vis(arg.value_.ulong_long_value);
 1684|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1684:3): [True: 0, False: 1.96M]
  ------------------
 1685|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1686|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1686:3): [True: 0, False: 1.96M]
  ------------------
 1687|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1688|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1688:3): [True: 0, False: 1.96M]
  ------------------
 1689|      0|    return vis(arg.value_.bool_value);
 1690|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1690:3): [True: 0, False: 1.96M]
  ------------------
 1691|      0|    return vis(arg.value_.char_value);
 1692|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1692:3): [True: 0, False: 1.96M]
  ------------------
 1693|      0|    return vis(arg.value_.float_value);
 1694|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1694:3): [True: 0, False: 1.96M]
  ------------------
 1695|      0|    return vis(arg.value_.double_value);
 1696|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1696:3): [True: 0, False: 1.96M]
  ------------------
 1697|      0|    return vis(arg.value_.long_double_value);
 1698|  1.78M|  case detail::type::cstring_type:
  ------------------
  |  Branch (1698:3): [True: 1.78M, False: 177k]
  ------------------
 1699|  1.78M|    return vis(arg.value_.string.data);
 1700|   177k|  case detail::type::string_type:
  ------------------
  |  Branch (1700:3): [True: 177k, False: 1.78M]
  ------------------
 1701|   177k|    using sv = basic_string_view<typename Context::char_type>;
 1702|   177k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1703|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1703:3): [True: 0, False: 1.96M]
  ------------------
 1704|      0|    return vis(arg.value_.pointer);
 1705|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1705:3): [True: 0, False: 1.96M]
  ------------------
 1706|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1707|  1.96M|  }
 1708|      0|  return vis(monostate());
 1709|  1.96M|}
_ZN3fmt3v106detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2135|  4.03M|                              const char*& out) -> bool {
 2136|  4.03M|  out = static_cast<const char*>(
 2137|  4.03M|      std::memchr(first, value, to_unsigned(last - first)));
 2138|  4.03M|  return out != nullptr;
 2139|  4.03M|}
_ZZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2516|  2.01M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2517|  2.01M|      if (from == to) return;
  ------------------
  |  Branch (2517:11): [True: 0, False: 2.01M]
  ------------------
 2518|  2.01M|      for (;;) {
 2519|  2.01M|        const Char* p = nullptr;
 2520|  2.01M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2520:13): [True: 2.01M, False: 0]
  ------------------
 2521|  2.01M|          return handler_.on_text(from, to);
 2522|      0|        ++p;
 2523|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2523:13): [True: 0, False: 0]
  |  Branch (2523:24): [True: 0, False: 0]
  ------------------
 2524|      0|          return handler_.on_error("unmatched '}' in format string");
 2525|      0|        handler_.on_text(from, p);
 2526|      0|        from = p + 1;
 2527|      0|      }
 2528|  2.01M|    }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1281|   177k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1282|   177k|    string.data = val.data();
 1283|   177k|    string.size = val.size();
 1284|   177k|  }
_ZN3fmt3v106detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1395|  1.78M|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1396|  1.78M|    return val;
 1397|  1.78M|  }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1277|  1.78M|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1278|  1.78M|    string.data = val;
 1279|  1.78M|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1279:9): [Folded - Ignored]
  ------------------
 1280|  1.78M|  }
_ZNK3fmt3v106detail6bufferIcE4dataEv:
  849|  2.41M|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt3v107vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1418|  2.41M|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1419|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1420|       |  // can be better optimized in fmt::format anyway.
 1421|  2.41M|  auto buffer = memory_buffer();
 1422|  2.41M|  detail::vformat_to(buffer, fmt, args);
 1423|  2.41M|  return to_string(buffer);
 1424|  2.41M|}

_ZN3fmt3v106detail6bufferIcE6appendIcEEvPKT_S7_:
  881|  6.34M|void buffer<T>::append(const U* begin, const U* end) {
  882|  12.6M|  while (begin != end) {
  ------------------
  |  Branch (882:10): [True: 6.28M, False: 6.34M]
  ------------------
  883|  6.28M|    auto count = to_unsigned(end - begin);
  884|  6.28M|    try_reserve(size_ + count);
  885|  6.28M|    auto free_cap = capacity_ - size_;
  886|  6.28M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (886:9): [True: 0, False: 6.28M]
  ------------------
  887|  6.28M|    std::uninitialized_copy_n(begin, count, ptr_ + size_);
  888|  6.28M|    size_ += count;
  889|  6.28M|    begin += count;
  890|  6.28M|  }
  891|  6.34M|}
_ZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4388|  2.41M|                typename vformat_args<Char>::type args, locale_ref loc) {
 4389|  2.41M|  auto out = buffer_appender<Char>(buf);
 4390|  2.41M|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4390:7): [True: 0, False: 2.41M]
  |  Branch (4390:26): [True: 0, False: 0]
  ------------------
 4391|      0|    auto arg = args.get(0);
 4392|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4392:9): [True: 0, False: 0]
  ------------------
 4393|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4394|      0|    return;
 4395|      0|  }
 4396|       |
 4397|  2.41M|  struct format_handler : error_handler {
 4398|  2.41M|    basic_format_parse_context<Char> parse_context;
 4399|  2.41M|    buffer_context<Char> context;
 4400|       |
 4401|  2.41M|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4402|  2.41M|                   basic_format_args<buffer_context<Char>> p_args,
 4403|  2.41M|                   locale_ref p_loc)
 4404|  2.41M|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4405|       |
 4406|  2.41M|    void on_text(const Char* begin, const Char* end) {
 4407|  2.41M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4408|  2.41M|      context.advance_to(write<Char>(context.out(), text));
 4409|  2.41M|    }
 4410|       |
 4411|  2.41M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4412|  2.41M|      return parse_context.next_arg_id();
 4413|  2.41M|    }
 4414|  2.41M|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4415|  2.41M|      return parse_context.check_arg_id(id), id;
 4416|  2.41M|    }
 4417|  2.41M|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4418|  2.41M|      int arg_id = context.arg_id(id);
 4419|  2.41M|      if (arg_id < 0) on_error("argument not found");
 4420|  2.41M|      return arg_id;
 4421|  2.41M|    }
 4422|       |
 4423|  2.41M|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4424|  2.41M|      auto arg = get_arg(context, id);
 4425|  2.41M|      context.advance_to(visit_format_arg(
 4426|  2.41M|          default_arg_formatter<Char>{context.out(), context.args(),
 4427|  2.41M|                                      context.locale()},
 4428|  2.41M|          arg));
 4429|  2.41M|    }
 4430|       |
 4431|  2.41M|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4432|  2.41M|        -> const Char* {
 4433|  2.41M|      auto arg = get_arg(context, id);
 4434|  2.41M|      if (arg.type() == type::custom_type) {
 4435|  2.41M|        parse_context.advance_to(begin);
 4436|  2.41M|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4437|  2.41M|        return parse_context.begin();
 4438|  2.41M|      }
 4439|  2.41M|      auto specs = detail::dynamic_format_specs<Char>();
 4440|  2.41M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4441|  2.41M|      detail::handle_dynamic_spec<detail::width_checker>(
 4442|  2.41M|          specs.width, specs.width_ref, context);
 4443|  2.41M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4444|  2.41M|          specs.precision, specs.precision_ref, context);
 4445|  2.41M|      if (begin == end || *begin != '}')
 4446|  2.41M|        on_error("missing '}' in format string");
 4447|  2.41M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4448|  2.41M|      context.advance_to(visit_format_arg(f, arg));
 4449|  2.41M|      return begin;
 4450|  2.41M|    }
 4451|  2.41M|  };
 4452|  2.41M|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4453|  2.41M|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  971|  2.41M|      : alloc_(alloc) {
  972|  2.41M|    this->set(store_, SIZE);
  973|  2.41M|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (973:9): [Folded - Ignored]
  ------------------
  974|  2.41M|  }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  942|    155|  FMT_CONSTEXPR20 void grow(size_t size) override {
  943|    155|    detail::abort_fuzzing_if(size > 5000);
  944|    155|    const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  945|    155|    size_t old_capacity = this->capacity();
  946|    155|    size_t new_capacity = old_capacity + old_capacity / 2;
  947|    155|    if (size > new_capacity)
  ------------------
  |  Branch (947:9): [True: 27, False: 128]
  ------------------
  948|     27|      new_capacity = size;
  949|    128|    else if (new_capacity > max_size)
  ------------------
  |  Branch (949:14): [True: 0, False: 128]
  ------------------
  950|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (950:22): [True: 0, False: 0]
  ------------------
  951|    155|    T* old_data = this->data();
  952|    155|    T* new_data =
  953|    155|        std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  954|       |    // Suppress a bogus -Wstringop-overflow in gcc 13.1 (#3481).
  955|    155|    detail::assume(this->size() <= new_capacity);
  956|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  957|    155|    std::uninitialized_copy_n(old_data, this->size(), new_data);
  958|    155|    this->set(new_data, new_capacity);
  959|       |    // deallocate must not throw according to the standard, but even if it does,
  960|       |    // the buffer already uses the new storage and will deallocate it in
  961|       |    // destructor.
  962|    155|    if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (962:9): [True: 39, False: 116]
  ------------------
  963|    155|  }
_ZN3fmt3v106detail16abort_fuzzing_ifEb:
  295|    155|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  296|    155|  ignore_unused(condition);
  297|       |#ifdef FMT_FUZZ
  298|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  299|       |#endif
  300|    155|}
_ZN3fmt3v106detail6assumeEb:
  544|  2.41M|FMT_INLINE void assume(bool condition) {
  545|  2.41M|  (void)condition;
  546|  2.41M|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  547|  2.41M|  __builtin_assume(condition);
  548|       |#elif FMT_GCC_VERSION
  549|       |  if (!condition) __builtin_unreachable();
  550|       |#endif
  551|  2.41M|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  975|  2.41M|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  936|  2.41M|  FMT_CONSTEXPR20 void deallocate() {
  937|  2.41M|    T* data = this->data();
  938|  2.41M|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (938:9): [True: 116, False: 2.41M]
  ------------------
  939|  2.41M|  }
_ZN3fmt3v106detail7reserveINS0_8appenderEEERT_S5_m:
  591|  6.34M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  592|  6.34M|  return it;
  593|  6.34M|}
_ZN3fmt3v106detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  619|  6.34M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  620|  6.34M|  return it;
  621|  6.34M|}
_ZN3fmt3v106detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  648|  4.38M|                                                  OutputIt out) -> OutputIt {
  649|  4.38M|  return copy_str<OutChar>(begin, end, out);
  650|  4.38M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3689|  4.38M|    -> OutputIt {
 3690|  4.38M|  auto it = reserve(out, value.size());
 3691|  4.38M|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3692|  4.38M|  return base_iterator(out, it);
 3693|  4.38M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4406|  4.38M|    void on_text(const Char* begin, const Char* end) {
 4407|  4.38M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4408|  4.38M|      context.advance_to(write<Char>(context.out(), text));
 4409|  4.38M|    }
_ZN3fmt3v106detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEEDTcldtfp_3argfp0_EERT_T0_:
 3870|  1.96M|FMT_CONSTEXPR auto get_arg(Context& ctx, ID id) -> decltype(ctx.arg(id)) {
 3871|  1.96M|  auto arg = ctx.arg(id);
 3872|  1.96M|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3872:7): [True: 0, False: 1.96M]
  ------------------
 3873|  1.96M|  return arg;
 3874|  1.96M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4411|  1.96M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4412|  1.96M|      return parse_context.next_arg_id();
 4413|  1.96M|    }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4432|  1.96M|        -> const Char* {
 4433|  1.96M|      auto arg = get_arg(context, id);
 4434|  1.96M|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4434:11): [True: 0, False: 1.96M]
  ------------------
 4435|      0|        parse_context.advance_to(begin);
 4436|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4437|      0|        return parse_context.begin();
 4438|      0|      }
 4439|  1.96M|      auto specs = detail::dynamic_format_specs<Char>();
 4440|  1.96M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4441|  1.96M|      detail::handle_dynamic_spec<detail::width_checker>(
 4442|  1.96M|          specs.width, specs.width_ref, context);
 4443|  1.96M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4444|  1.96M|          specs.precision, specs.precision_ref, context);
 4445|  1.96M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4445:11): [True: 0, False: 1.96M]
  |  Branch (4445:27): [True: 0, False: 1.96M]
  ------------------
 4446|      0|        on_error("missing '}' in format string");
 4447|  1.96M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4448|  1.96M|      context.advance_to(visit_format_arg(f, arg));
 4449|  1.96M|      return begin;
 4450|  1.96M|    }
_ZN3fmt3v106detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3879|  1.96M|                                       Context& ctx) {
 3880|  1.96M|  switch (ref.kind) {
  ------------------
  |  Branch (3880:11): [True: 0, False: 1.96M]
  ------------------
 3881|  1.96M|  case arg_id_kind::none:
  ------------------
  |  Branch (3881:3): [True: 1.96M, False: 0]
  ------------------
 3882|  1.96M|    break;
 3883|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3883:3): [True: 0, False: 1.96M]
  ------------------
 3884|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3885|      0|                                              ctx.error_handler());
 3886|      0|    break;
 3887|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3887:3): [True: 0, False: 1.96M]
  ------------------
 3888|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3889|      0|                                              ctx.error_handler());
 3890|      0|    break;
 3891|  1.96M|  }
 3892|  1.96M|}
_ZN3fmt3v106detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3879|  1.96M|                                       Context& ctx) {
 3880|  1.96M|  switch (ref.kind) {
  ------------------
  |  Branch (3880:11): [True: 0, False: 1.96M]
  ------------------
 3881|  1.96M|  case arg_id_kind::none:
  ------------------
  |  Branch (3881:3): [True: 1.96M, False: 0]
  ------------------
 3882|  1.96M|    break;
 3883|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3883:3): [True: 0, False: 1.96M]
  ------------------
 3884|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3885|      0|                                              ctx.error_handler());
 3886|      0|    break;
 3887|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3887:3): [True: 0, False: 1.96M]
  ------------------
 3888|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3889|      0|                                              ctx.error_handler());
 3890|      0|    break;
 3891|  1.96M|  }
 3892|  1.96M|}
_ZN3fmt3v106detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3800|  1.78M|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3801|  1.78M|    return detail::write(out, value, specs, locale);
 3802|  1.78M|  }
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2351|  1.78M|    -> OutputIt {
 2352|  1.78M|  if (specs.type == presentation_type::pointer)
  ------------------
  |  Branch (2352:7): [True: 0, False: 1.78M]
  ------------------
 2353|      0|    return write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2354|  1.78M|  if (!s) throw_format_error("string pointer is null");
  ------------------
  |  Branch (2354:7): [True: 0, False: 1.78M]
  ------------------
 2355|  1.78M|  return write(out, basic_string_view<Char>(s), specs, {});
 2356|  1.78M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2345|  1.96M|    -> OutputIt {
 2346|  1.96M|  return write(out, s, specs);
 2347|  1.96M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2322|  1.96M|                         const format_specs<Char>& specs) -> OutputIt {
 2323|  1.96M|  auto data = s.data();
 2324|  1.96M|  auto size = s.size();
 2325|  1.96M|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2325:7): [True: 0, False: 1.96M]
  |  Branch (2325:31): [True: 0, False: 0]
  ------------------
 2326|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2327|  1.96M|  bool is_debug = specs.type == presentation_type::debug;
 2328|  1.96M|  size_t width = 0;
 2329|  1.96M|  if (specs.width != 0) {
  ------------------
  |  Branch (2329:7): [True: 0, False: 1.96M]
  ------------------
 2330|      0|    if (is_debug)
  ------------------
  |  Branch (2330:9): [True: 0, False: 0]
  ------------------
 2331|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2332|      0|    else
 2333|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2334|      0|  }
 2335|  1.96M|  return write_padded(out, specs, size, width,
 2336|  1.96M|                      [=](reserve_iterator<OutputIt> it) {
 2337|  1.96M|                        if (is_debug) return write_escaped_string(it, s);
 2338|  1.96M|                        return copy_str<Char>(data, data + size, it);
 2339|  1.96M|                      });
 2340|  1.96M|}
_ZN3fmt3v106detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1775|  1.96M|                                size_t size, size_t width, F&& f) -> OutputIt {
 1776|  1.96M|  static_assert(align == align::left || align == align::right, "");
 1777|  1.96M|  unsigned spec_width = to_unsigned(specs.width);
 1778|  1.96M|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1778:20): [True: 0, False: 1.96M]
  ------------------
 1779|       |  // Shifts are encoded as string literals because static constexpr is not
 1780|       |  // supported in constexpr functions.
 1781|  1.96M|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1781:18): [Folded - Ignored]
  ------------------
 1782|  1.96M|  size_t left_padding = padding >> shifts[specs.align];
 1783|  1.96M|  size_t right_padding = padding - left_padding;
 1784|  1.96M|  auto it = reserve(out, size + padding * specs.fill.size());
 1785|  1.96M|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1785:7): [True: 0, False: 1.96M]
  ------------------
 1786|  1.96M|  it = f(it);
 1787|  1.96M|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1787:7): [True: 0, False: 1.96M]
  ------------------
 1788|  1.96M|  return base_iterator(out, it);
 1789|  1.96M|}
_ZZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2336|  1.96M|                      [=](reserve_iterator<OutputIt> it) {
 2337|  1.96M|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2337:29): [True: 0, False: 1.96M]
  ------------------
 2338|  1.96M|                        return copy_str<Char>(data, data + size, it);
 2339|  1.96M|                      });
_ZN3fmt3v106detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3800|   177k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3801|   177k|    return detail::write(out, value, specs, locale);
 3802|   177k|  }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4404|  2.41M|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt3v109to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4370|  2.41M|    -> std::basic_string<Char> {
 4371|  2.41M|  auto size = buf.size();
 4372|  2.41M|  detail::assume(size < std::basic_string<Char>().max_size());
 4373|  2.41M|  return std::basic_string<Char>(buf.data(), size);
 4374|  2.41M|}

LLVMFuzzerTestOneInput:
   14|  13.0k|{
   15|  13.0k|    disable_output();
   16|       |
   17|  13.0k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   18|       |
   19|  13.0k|    EmptySourceManager source_manager;
   20|  13.0k|    DiagnosticEngine   diagnostic_engine;
   21|  13.0k|    Lexer              lexer{&diagnostic_engine};
   22|  13.0k|    auto               document = phi::make_not_null_scope<ASTDocument>();
   23|       |
   24|  13.0k|    Parser parser{&source_manager, &diagnostic_engine, &lexer};
   25|  13.0k|    parser.ParseString(document, "Fuzz.au3", source);
   26|       |
   27|  13.0k|    return 0;
   28|  13.0k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|   126k|    {
   18|   126k|        m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|   126k|    }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|   189k|    {
   20|   189k|        m_NodeType = ASTNodeType::BinaryExpression;
   21|   189k|    }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  1.68k|    {
   18|  1.68k|        m_NodeType = ASTNodeType::BooleanLiteral;
   19|  1.68k|    }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|  77.4k|    {
   20|  77.4k|        m_Statements.emplace_back(phi::move(child));
   21|  77.4k|    }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  18.2k|    {
   25|  18.2k|        m_Functions.emplace_back(phi::move(child));
   26|  18.2k|    }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|  5.77k|    {
   18|  5.77k|        m_NodeType = ASTNodeType::ExitStatement;
   19|  5.77k|    }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|   404k|    {
   13|   404k|        switch (m_NodeType)
   14|   404k|        {
   15|  29.2k|            case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:13): [True: 29.2k, False: 374k]
  ------------------
   16|  61.9k|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:13): [True: 32.7k, False: 371k]
  ------------------
   17|  64.6k|            case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:13): [True: 2.68k, False: 401k]
  ------------------
   18|  64.6k|                return true;
   19|       |
   20|   339k|            default:
  ------------------
  |  Branch (20:13): [True: 339k, False: 64.6k]
  ------------------
   21|   339k|                return false;
   22|   404k|        }
   23|   404k|    }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|   404k|    {
   17|   404k|        m_NodeType = ASTNodeType::ExpressionStatement;
   18|   404k|    }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  1.00k|    {
   17|  1.00k|        m_NodeType = ASTNodeType::FloatLiteral;
   18|  1.00k|    }

_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   28|  40.9k|    {
   29|  40.9k|        return m_FunctionReference.FunctionName();
   30|  40.9k|    }
_ZN10OpenAutoIt25ASTFunctionCallExpressionC2ENS_17FunctionReferenceE:
   18|  78.4k|    {
   19|  78.4k|        m_NodeType = ASTNodeType::FunctionCallExpression;
   20|  78.4k|    }

_ZN10OpenAutoIt30ASTFunctionReferenceExpressionC2ENS_17FunctionReferenceE:
   19|   251k|    {
   20|   251k|        m_NodeType = ASTNodeType::FunctionReferenceExpression;
   21|   251k|    }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  16.0k|    {
   25|  16.0k|        m_NodeType = ASTNodeType::IfStatement;
   26|  16.0k|    }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|   470k|    {
   17|   470k|        m_NodeType = ASTNodeType::IntegerLiteral;
   18|   470k|    }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|    684|    {
   19|    684|        m_NodeType = ASTNodeType::KeywordLiteral;
   20|    684|        PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|    684|    }

_ZN10OpenAutoIt18ASTMacroExpressionC2ENS_9TokenKindE:
   18|  33.0k|    {
   19|  33.0k|        m_NodeType = ASTNodeType::MacroExpression;
   20|  33.0k|        PHI_ASSERT(static_cast<phi::size_t>(m_Macro) >= MacroFirst &&
   21|  33.0k|                   static_cast<phi::size_t>(m_Macro) <= MacroLast);
   22|  33.0k|    }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   75|  2.20M|    virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   73|  2.20M|    ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   78|   339k|    {
   79|   339k|        PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   80|   339k|        PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   81|       |
   82|   339k|        return enum_name(m_NodeType);
   83|   339k|    }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   51|   339k|{
   52|   339k|    switch (node_type)
   53|   339k|    {
   54|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   55|      0|    case ASTNodeType::name:                                                                        \
   56|      0|        return "AST" #name;
   57|       |
   58|      0|        OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   15|  27.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   55|  27.0k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 27.0k, False: 312k]
  |  |  |  |  ------------------
  |  |  |  |   56|  27.0k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  46.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   55|  46.2k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 46.2k, False: 293k]
  |  |  |  |  ------------------
  |  |  |  |   56|  46.2k|        return "AST" #name;
  |  |  ------------------
  |  |   17|  46.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|  1.27k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 1.27k, False: 338k]
  |  |  |  |  ------------------
  |  |  |  |   56|  1.27k|        return "AST" #name;
  |  |  ------------------
  |  |   18|  1.27k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   20|    500|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   55|    500|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 500, False: 338k]
  |  |  |  |  ------------------
  |  |  |  |   56|    500|        return "AST" #name;
  |  |  ------------------
  |  |   21|    500|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   22|   116k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionReferenceExpression)                                \
  |  |  ------------------
  |  |  |  |   55|   116k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 116k, False: 222k]
  |  |  |  |  ------------------
  |  |  |  |   56|   116k|        return "AST" #name;
  |  |  ------------------
  |  |   23|   116k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   24|  82.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|  82.2k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 82.2k, False: 257k]
  |  |  |  |  ------------------
  |  |  |  |   56|  82.2k|        return "AST" #name;
  |  |  ------------------
  |  |   25|  82.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|    462|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 462, False: 338k]
  |  |  |  |  ------------------
  |  |  |  |   56|    462|        return "AST" #name;
  |  |  ------------------
  |  |   26|  19.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(MacroExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|  19.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 19.1k, False: 320k]
  |  |  |  |  ------------------
  |  |  |  |   56|  19.1k|        return "AST" #name;
  |  |  ------------------
  |  |   27|  31.4k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   55|  31.4k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 31.4k, False: 307k]
  |  |  |  |  ------------------
  |  |  |  |   56|  31.4k|        return "AST" #name;
  |  |  ------------------
  |  |   28|  31.4k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(TernaryIfExpression)                                        \
  |  |  ------------------
  |  |  |  |   55|  14.4k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 14.4k, False: 324k]
  |  |  |  |  ------------------
  |  |  |  |   56|  14.4k|        return "AST" #name;
  |  |  ------------------
  |  |   29|  14.4k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   30|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   31|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   32|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   59|       |
   60|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   61|       |
   62|      0|        default:
  ------------------
  |  Branch (62:9): [True: 0, False: 339k]
  ------------------
   63|      0|            PHI_ASSERT_NOT_REACHED();
   64|      0|            return "";
   65|   339k|    }
   66|   339k|}

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  65.4k|    {
   15|  65.4k|        m_NodeType = ASTNodeType::StringLiteral;
   16|  65.4k|    }

_ZN10OpenAutoIt22ASTTernaryIfExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEES5_S5_:
   19|  15.2k|    {
   20|  15.2k|        m_NodeType = ASTNodeType::TernaryIfExpression;
   21|  15.2k|    }

_ZN10OpenAutoIt18ASTUnaryExpressionC2ENS_9TokenKindEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   15|   251k|    {
   16|   251k|        m_NodeType = ASTNodeType::UnaryExpression;
   17|   251k|    }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|   100k|    {
   20|   100k|        m_NodeType = ASTNodeType::VariableAssignment;
   21|   100k|    }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|  37.3k|    {
   15|  37.3k|        m_NodeType = ASTNodeType::VariableExpression;
   16|  37.3k|    }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  5.61k|    {
   18|  5.61k|        m_NodeType = ASTNodeType::WhileStatement;
   19|  5.61k|    }

_ZN10OpenAutoIt17DiagnosticBuilder7WarningIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   55|   443k|    {
   56|   443k|        m_Diagnostics.emplace_back(Diagnostic{
   57|   443k|                id, DiagnosticLevel::Warning, location,
   58|   443k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   59|       |
   60|   443k|        return *this;
   61|   443k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA9_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  54.6k|    {
   66|  54.6k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  54.6k|                id, DiagnosticLevel::Error, location,
   68|  54.6k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  54.6k|        return *this;
   71|  54.6k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA18_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|      8|    {
   66|      8|        m_Diagnostics.emplace_back(Diagnostic{
   67|      8|                id, DiagnosticLevel::Error, location,
   68|      8|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|      8|        return *this;
   71|      8|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA4_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  2.11k|    {
   66|  2.11k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  2.11k|                id, DiagnosticLevel::Error, location,
   68|  2.11k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  2.11k|        return *this;
   71|  2.11k|    }
_ZN10OpenAutoIt17DiagnosticBuilder4NoteIJEEERS0_NS_14SourceLocationENSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   31|  2.11k|    {
   32|  2.11k|        PHI_ASSERT(!m_Diagnostics.empty());
   33|       |
   34|  2.11k|        m_Diagnostics.back().AddNote(
   35|  2.11k|                Diagnostic{DiagnosticId::None, DiagnosticLevel::Note, location,
   36|  2.11k|                           std::string{fmt::format(fmt::runtime(format_string),
   37|  2.11k|                                                   phi::forward<ArgsT>(args)...)}});
   38|       |
   39|  2.11k|        return *this;
   40|  2.11k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA25_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    311|    {
   66|    311|        m_Diagnostics.emplace_back(Diagnostic{
   67|    311|                id, DiagnosticLevel::Error, location,
   68|    311|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    311|        return *this;
   71|    311|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  1.95k|    {
   66|  1.95k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  1.95k|                id, DiagnosticLevel::Error, location,
   68|  1.95k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  1.95k|        return *this;
   71|  1.95k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    523|    {
   66|    523|        m_Diagnostics.emplace_back(Diagnostic{
   67|    523|                id, DiagnosticLevel::Error, location,
   68|    523|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    523|        return *this;
   71|    523|    }

_ZN10OpenAutoIt19DiagnosticIdMessageENS_12DiagnosticIdE:
   87|   502k|{
   88|   502k|    PHI_ASSERT(id != DiagnosticId::None);
   89|       |
   90|   502k|    switch (id)
   91|   502k|    {
   92|      0|#define OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EnumName, FlagName, DiagnosticMessage)                 \
   93|      0|    case DiagnosticId::EnumName: {                                                                 \
   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
   95|      0|        return DiagnosticMessage;                                                                  \
   96|      0|    }
   97|       |
   98|      0|        OPENAUTOIT_ENUM_DIAGNOSTIC_IDS()
  ------------------
  |  |   12|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(None, "", "")                                              \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 502k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   13|      0|    /* Lexer warnings */                                                                           \
  |  |   14|   443k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(NullCharacter, "-Wnull-character",                         \
  |  |  ------------------
  |  |  |  |   93|   443k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 443k, False: 59.5k]
  |  |  |  |  ------------------
  |  |  |  |   94|   443k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|   443k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|   443k|    }
  |  |  ------------------
  |  |   15|   443k|                                        "null character ignored")                                  \
  |  |   16|   443k|    /* Lexer errors */                                                                             \
  |  |   17|   443k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(InvalidFloatLiteral, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 502k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   18|      0|                                        "invalid float literal declaration")                       \
  |  |   19|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FloatHexLiteral, "",                                       \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 502k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   20|      0|                                        "hexadecimal float literal are not allowed")               \
  |  |   21|      0|    /* Parser error */                                                                             \
  |  |   22|      8|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(UnexpectedEndOfFile, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      8|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 8, False: 502k]
  |  |  |  |  ------------------
  |  |  |  |   94|      8|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      8|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      8|    }
  |  |  ------------------
  |  |   23|      8|                                        "unexpected end of file while parsing {:s}")               \
  |  |   24|  57.0k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(Expected, "", "expected {:s}")                             \
  |  |  ------------------
  |  |  |  |   93|  57.0k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 57.0k, False: 445k]
  |  |  |  |  ------------------
  |  |  |  |   94|  57.0k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  57.0k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  57.0k|    }
  |  |  ------------------
  |  |   25|  57.0k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IntegerLiteralTooLarge, "",                                \
  |  |  ------------------
  |  |  |  |   93|  1.76k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 1.76k, False: 501k]
  |  |  |  |  ------------------
  |  |  |  |   94|  1.76k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  1.76k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  1.76k|    }
  |  |  ------------------
  |  |   26|  1.76k|                                        "integer literal is too large.")                           \
  |  |   27|  1.76k|    /* Parser fatal error */                                                                       \
  |  |   28|  1.76k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNotFound, "", "'{:s}' file not found")                 \
  |  |  ------------------
  |  |  |  |   93|    451|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 451, False: 502k]
  |  |  |  |  ------------------
  |  |  |  |   94|    451|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    451|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    451|    }
  |  |  ------------------
  |  |   29|    451|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EmptyFilename, "", "empty filename")                       \
  |  |  ------------------
  |  |  |  |   93|    194|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 194, False: 502k]
  |  |  |  |  ------------------
  |  |  |  |   94|    194|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    194|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    194|    }
  |  |  ------------------
  |  |   30|    194|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IncludeNestingTooDeeply, "", "#include nested too deeply") \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 502k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   31|     72|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNameTooLong, "",                                       \
  |  |  ------------------
  |  |  |  |   93|     72|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 72, False: 502k]
  |  |  |  |  ------------------
  |  |  |  |   94|     72|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|     72|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|     72|    }
  |  |  ------------------
  |  |   32|     72|                                        "cannot open file '{:s}': File name too long")
  ------------------
   99|       |
  100|      0|#undef OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL
  101|       |
  102|      0|        default:
  ------------------
  |  Branch (102:9): [True: 0, False: 502k]
  ------------------
  103|      0|            PHI_ASSERT_NOT_REACHED();
  104|   502k|    }
  105|   502k|}

_ZN10OpenAutoIt17FunctionReferenceC2ERKNS_5TokenE:
   23|  4.31k|    {
   24|  4.31k|        PHI_ASSERT(built_in_function.IsBuiltInFunction());
   25|  4.31k|    }
_ZN10OpenAutoIt17FunctionReferenceC2EN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
   18|   325k|    {}
_ZNK10OpenAutoIt17FunctionReference12FunctionNameEv:
   33|  40.9k|    {
   34|  40.9k|        return m_IsBuiltIn ? enum_name(m_BuiltInFunction) : m_FunctionName;
  ------------------
  |  Branch (34:16): [True: 1.67k, False: 39.2k]
  ------------------
   35|  40.9k|    }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  2.35M|    {
   46|  2.35M|        Token token{kind,
   47|  2.35M|                    m_Source.substring_view(
   48|  2.35M|                            static_cast<typename phi::string_view::size_type::value_type>(
   49|  2.35M|                                    m_Iterator - m_Source.cbegin()),
   50|  2.35M|                            1u),
   51|  2.35M|                    CurrentSourceLocation()};
   52|       |
   53|       |        // 1 character sized token
   54|  2.35M|        ++m_Column;
   55|       |
   56|  2.35M|        return token;
   57|  2.35M|    }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  2.40M|    {
   61|  2.40M|        Token token{kind, TokenText(token_begin), CurrentSourceLocation()};
   62|       |
   63|       |        // Consume the amount of characters that make up our new token
   64|  2.40M|        m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  2.40M|        return token;
   67|  2.40M|    }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  3.99M|    {
   71|  3.99M|        return m_Source.substring_view(token_begin, m_Iterator);
   72|  3.99M|    }
_ZNK10OpenAutoIt5Lexer21CurrentSourceLocationEv:
   75|  5.19M|    {
   76|  5.19M|        return BuildSourceLocation(m_LineNumber, m_Column);
   77|  5.19M|    }
_ZNK10OpenAutoIt5Lexer19BuildSourceLocationEN3phi7integerImEES3_:
   81|  5.20M|    {
   82|  5.20M|        return {m_SourceFile, line_number, column};
   83|  5.20M|    }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   71|  2.90M|    {
   72|  2.90M|        switch (token_kind)
   73|  2.90M|        {
   74|  82.3k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (74:13): [True: 82.3k, False: 2.82M]
  ------------------
   75|   542k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (75:13): [True: 460k, False: 2.44M]
  ------------------
   76|   543k|            case TokenKind::KW_Not:
  ------------------
  |  Branch (76:13): [True: 656, False: 2.90M]
  ------------------
   77|   543k|                return true;
   78|       |
   79|  2.36M|            default:
  ------------------
  |  Branch (79:13): [True: 2.36M, False: 543k]
  ------------------
   80|  2.36M|                return false;
   81|  2.90M|        }
   82|  2.90M|    }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   86|  1.31M|    {
   87|  1.31M|        switch (token_kind)
   88|  1.31M|        {
   89|    194|            case TokenKind::KW_And:
  ------------------
  |  Branch (89:13): [True: 194, False: 1.31M]
  ------------------
   90|    399|            case TokenKind::KW_Or:
  ------------------
  |  Branch (90:13): [True: 205, False: 1.31M]
  ------------------
   91|  46.3k|            case TokenKind::OP_Equals:
  ------------------
  |  Branch (91:13): [True: 45.9k, False: 1.26M]
  ------------------
   92|  46.5k|            case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (92:13): [True: 228, False: 1.31M]
  ------------------
   93|  53.8k|            case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (93:13): [True: 7.24k, False: 1.30M]
  ------------------
   94|  54.2k|            case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (94:13): [True: 387, False: 1.31M]
  ------------------
   95|  54.4k|            case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (95:13): [True: 206, False: 1.31M]
  ------------------
   96|  65.0k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (96:13): [True: 10.5k, False: 1.30M]
  ------------------
   97|   189k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (97:13): [True: 124k, False: 1.18M]
  ------------------
   98|   190k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (98:13): [True: 794, False: 1.31M]
  ------------------
   99|   201k|            case TokenKind::OP_Divide:
  ------------------
  |  Branch (99:13): [True: 11.5k, False: 1.30M]
  ------------------
  100|   202k|            case TokenKind::OP_Raise:
  ------------------
  |  Branch (100:13): [True: 990, False: 1.31M]
  ------------------
  101|   202k|            case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (101:13): [True: 309, False: 1.31M]
  ------------------
  102|   203k|            case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (102:13): [True: 205, False: 1.31M]
  ------------------
  103|   204k|            case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (103:13): [True: 1.28k, False: 1.31M]
  ------------------
  104|   204k|            case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (104:13): [True: 196, False: 1.31M]
  ------------------
  105|   214k|            case TokenKind::OP_LessThan:
  ------------------
  |  Branch (105:13): [True: 9.74k, False: 1.30M]
  ------------------
  106|   214k|            case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (106:13): [True: 195, False: 1.31M]
  ------------------
  107|   215k|            case TokenKind::OP_Concatenate:
  ------------------
  |  Branch (107:13): [True: 1.11k, False: 1.31M]
  ------------------
  108|   216k|            case TokenKind::OP_ConcatenateEquals:
  ------------------
  |  Branch (108:13): [True: 359, False: 1.31M]
  ------------------
  109|   216k|                return true;
  110|       |
  111|  1.09M|            default:
  ------------------
  |  Branch (111:13): [True: 1.09M, False: 216k]
  ------------------
  112|  1.09M|                return false;
  113|  1.31M|        }
  114|  1.31M|    }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  155|  18.2k|    {
  156|  18.2k|        m_Document->AppendFunction(phi::move(function));
  157|  18.2k|    }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  149|  77.4k|    {
  150|  77.4k|        m_Document->AppendStatement(phi::move(statement));
  151|  77.4k|    }

_ZN10OpenAutoIt14SourceLocation7InvalidEv:
   23|  13.0k|    {
   24|  13.0k|        return {nullptr, 1u, 1u};
   25|  13.0k|    }

_ZN10OpenAutoIt13SourceManagerC2Ev:
   21|  13.0k|    SourceManager()          = default;

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_14SourceLocationE:
   27|  4.75M|    {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   39|  31.6M|    {
   40|  31.6M|        return m_Kind;
   41|  31.6M|    }
_ZNK10OpenAutoIt5Token7GetTextEv:
   44|  2.39M|    {
   45|  2.39M|        return m_Text;
   46|  2.39M|    }
_ZNK10OpenAutoIt5Token16GetBeginLocationEv:
   64|  59.2k|    {
   65|  59.2k|        return m_SourceLocation;
   66|  59.2k|    }
_ZNK10OpenAutoIt5Token14GetEndLocationEv:
   69|  2.43k|    {
   70|  2.43k|        return {.source_file = m_SourceLocation.source_file,
   71|  2.43k|                .line_number = m_SourceLocation.line_number,
   72|  2.43k|                .column      = m_SourceLocation.column + m_Text.length()};
   73|  2.43k|    }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   88|  1.73M|    {
   89|  1.73M|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   90|       |
   91|  1.73M|        if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (91:13): [True: 17.2k, False: 1.72M]
  ------------------
   92|  1.73M|            underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (92:13): [True: 17.2k, False: 0]
  ------------------
   93|  17.2k|        {
   94|  17.2k|            return true;
   95|  17.2k|        }
   96|       |
   97|  1.72M|        return false;
   98|  1.73M|    }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
  101|  1.36M|    {
  102|  1.36M|        switch (m_Kind)
  103|  1.36M|        {
  104|    952|            case TokenKind::KW_Default:
  ------------------
  |  Branch (104:13): [True: 952, False: 1.35M]
  ------------------
  105|  1.36k|            case TokenKind::KW_Null:
  ------------------
  |  Branch (105:13): [True: 416, False: 1.35M]
  ------------------
  106|  1.36k|                return true;
  107|       |
  108|  1.35M|            default:
  ------------------
  |  Branch (108:13): [True: 1.35M, False: 1.36k]
  ------------------
  109|  1.35M|                return false;
  110|  1.36M|        }
  111|  1.36M|    }
_ZNK10OpenAutoIt5Token7IsMacroEv:
  158|   526k|    {
  159|   526k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
  160|       |
  161|   526k|        if (underlying_value >= MacroFirst && underlying_value <= MacroLast)
  ------------------
  |  Branch (161:13): [True: 132k, False: 393k]
  |  Branch (161:47): [True: 33.0k, False: 99.2k]
  ------------------
  162|  33.0k|        {
  163|  33.0k|            return true;
  164|  33.0k|        }
  165|       |
  166|   493k|        return false;
  167|   526k|    }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  682|  1.39M|{
  683|  1.39M|    switch (token_kind)
  684|  1.39M|    {
  685|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  686|      0|    case TokenKind::name:                                                                          \
  687|      0|        return #name;
  688|       |
  689|      0|        OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  5.47k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  686|  5.47k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.47k, False: 1.38M]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.47k|        return #name;
  |  |  ------------------
  |  |   13|   118k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  686|   118k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 118k, False: 1.27M]
  |  |  |  |  ------------------
  |  |  |  |  687|   118k|        return #name;
  |  |  ------------------
  |  |   14|   118k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   15|  7.80k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  686|  7.80k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.80k, False: 1.38M]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.80k|        return #name;
  |  |  ------------------
  |  |   16|  7.80k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |   17|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   18|   183k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|   183k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 183k, False: 1.21M]
  |  |  |  |  ------------------
  |  |  |  |  687|   183k|        return #name;
  |  |  ------------------
  |  |   19|   183k|    /* Literals */                                                                                 \
  |  |   20|   183k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  686|   100k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 100k, False: 1.29M]
  |  |  |  |  ------------------
  |  |  |  |  687|   100k|        return #name;
  |  |  ------------------
  |  |   21|   100k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  686|    735|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 735, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    735|        return #name;
  |  |  ------------------
  |  |   22|  32.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  686|  32.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 32.0k, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |  687|  32.0k|        return #name;
  |  |  ------------------
  |  |   23|  32.0k|    /* Punctuation */                                                                              \
  |  |   24|   406k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  686|   406k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 406k, False: 987k]
  |  |  |  |  ------------------
  |  |  |  |  687|   406k|        return #name;
  |  |  ------------------
  |  |   25|   406k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  38.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 38.2k, False: 1.35M]
  |  |  |  |  ------------------
  |  |  |  |  687|  38.2k|        return #name;
  |  |  ------------------
  |  |   26|  66.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  66.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 66.0k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  687|  66.0k|        return #name;
  |  |  ------------------
  |  |   27|  66.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   28|   101k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|   101k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 101k, False: 1.29M]
  |  |  |  |  ------------------
  |  |  |  |  687|   101k|        return #name;
  |  |  ------------------
  |  |   29|   120k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|   120k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 120k, False: 1.27M]
  |  |  |  |  ------------------
  |  |  |  |  687|   120k|        return #name;
  |  |  ------------------
  |  |   30|   120k|    /* Macros */                                                                                   \
  |  |   31|   120k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|   120k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   33|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |   34|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   35|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   36|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   37|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   38|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   40|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   41|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   42|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   43|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |   44|  22.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  686|  22.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22.2k, False: 1.37M]
  |  |  |  |  ------------------
  |  |  |  |  687|  22.2k|        return #name;
  |  |  ------------------
  |  |   45|  22.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   46|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   47|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   49|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |   50|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   51|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  686|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     22|        return #name;
  |  |  ------------------
  |  |   52|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   53|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   54|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   55|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   56|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   59|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |   60|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   67|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   70|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   73|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   74|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   75|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   76|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   77|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   80|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |   81|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   82|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |   83|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   84|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   86|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |   87|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   88|    158|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  686|    158|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 158, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    158|        return #name;
  |  |  ------------------
  |  |   89|    158|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   91|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  686|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 32, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     32|        return #name;
  |  |  ------------------
  |  |   92|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   93|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   96|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   97|     33|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  686|     33|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 33, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     33|        return #name;
  |  |  ------------------
  |  |   98|     33|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  100|     57|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  686|     57|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 57, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     57|        return #name;
  |  |  ------------------
  |  |  101|     57|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  103|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  104|     95|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|     95|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 95, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     95|        return #name;
  |  |  ------------------
  |  |  105|     95|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  106|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  107|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  108|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  109|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  111|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  112|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  113|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  114|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  115|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  117|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  118|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  122|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  123|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  124|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  125|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  126|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  127|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  128|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  129|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  130|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  131|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  132|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 34, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     34|        return #name;
  |  |  ------------------
  |  |  133|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  138|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  139|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  141|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  143|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    340|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|    340|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 340, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    340|        return #name;
  |  |  ------------------
  |  |  145|    340|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|    383|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  686|    383|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 383, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    383|        return #name;
  |  |  ------------------
  |  |  147|    383|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    744|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  686|    744|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 744, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    744|        return #name;
  |  |  ------------------
  |  |  149|    744|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    744|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  686|    378|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 378, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    378|        return #name;
  |  |  ------------------
  |  |  151|    378|    /* Keywords */                                                                                 \
  |  |  152|    378|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    378|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    378|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|    378|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  686|    377|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 377, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    377|        return #name;
  |  |  ------------------
  |  |  156|  1.15k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  686|  1.15k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.15k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.15k|        return #name;
  |  |  ------------------
  |  |  157|  1.15k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  1.15k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|    171|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  686|    171|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 171, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    171|        return #name;
  |  |  ------------------
  |  |  161|    171|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|    420|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  686|    420|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 420, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    420|        return #name;
  |  |  ------------------
  |  |  163|    420|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|    420|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  165|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  686|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 27, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     27|        return #name;
  |  |  ------------------
  |  |  166|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  167|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  168|      1|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|    131|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  686|    131|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 131, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    131|        return #name;
  |  |  ------------------
  |  |  170|    131|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  171|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|    194|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  686|    194|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 194, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    194|        return #name;
  |  |  ------------------
  |  |  173|    194|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|    194|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  686|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     19|        return #name;
  |  |  ------------------
  |  |  175|     19|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  179|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  180|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  181|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  182|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|    162|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  686|    162|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 162, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    162|        return #name;
  |  |  ------------------
  |  |  184|    162|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  27.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  686|  27.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 27.4k, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |  687|  27.4k|        return #name;
  |  |  ------------------
  |  |  186|  27.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  686|    191|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 191, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    191|        return #name;
  |  |  ------------------
  |  |  187|    671|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  686|    671|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 671, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    671|        return #name;
  |  |  ------------------
  |  |  188|  28.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  686|  28.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28.6k, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |  687|  28.6k|        return #name;
  |  |  ------------------
  |  |  189|  28.6k|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  28.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  686|  2.44k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.44k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.44k|        return #name;
  |  |  ------------------
  |  |  191|  2.44k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  686|  1.02k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.02k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.02k|        return #name;
  |  |  ------------------
  |  |  192|  1.27k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  686|  1.27k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.27k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.27k|        return #name;
  |  |  ------------------
  |  |  193|  1.27k|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|  2.57k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  686|  2.57k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.57k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.57k|        return #name;
  |  |  ------------------
  |  |  195|  12.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  686|  12.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12.2k, False: 1.38M]
  |  |  |  |  ------------------
  |  |  |  |  687|  12.2k|        return #name;
  |  |  ------------------
  |  |  196|  12.2k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|  12.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  686|     80|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 80, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     80|        return #name;
  |  |  ------------------
  |  |  198|     80|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|     80|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  200|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  202|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  686|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 34, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     34|        return #name;
  |  |  ------------------
  |  |  203|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  206|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  208|    116|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|    116|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 116, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    116|        return #name;
  |  |  ------------------
  |  |  209|    116|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|    116|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  686|     29|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     29|        return #name;
  |  |  ------------------
  |  |  213|     98|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|     98|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 98, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     98|        return #name;
  |  |  ------------------
  |  |  214|     98|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|     98|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  216|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  217|      2|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  219|    128|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  686|    128|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 128, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    128|        return #name;
  |  |  ------------------
  |  |  220|    301|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  686|    301|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 301, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    301|        return #name;
  |  |  ------------------
  |  |  221|    301|    /* Operator */                                                                                 \
  |  |  222|    301|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  40.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)            /* = */                                  \
  |  |  ------------------
  |  |  |  |  686|  40.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 40.6k, False: 1.35M]
  |  |  |  |  ------------------
  |  |  |  |  687|  40.6k|        return #name;
  |  |  ------------------
  |  |  224|  40.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)        /* += */                                 \
  |  |  ------------------
  |  |  |  |  686|     59|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 59, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     59|        return #name;
  |  |  ------------------
  |  |  225|  1.00k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)       /* -= */                                 \
  |  |  ------------------
  |  |  |  |  686|  1.00k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.00k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.00k|        return #name;
  |  |  ------------------
  |  |  226|  1.00k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)    /* *= */                                 \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  227|     83|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)      /* /= */                                 \
  |  |  ------------------
  |  |  |  |  686|     83|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 83, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     83|        return #name;
  |  |  ------------------
  |  |  228|  2.92k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)       /* & */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.92k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.92k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.92k|        return #name;
  |  |  ------------------
  |  |  229|  2.92k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals) /* &= */                                 \
  |  |  ------------------
  |  |  |  |  686|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 46, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     46|        return #name;
  |  |  ------------------
  |  |  230|    987|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)              /* + */                                  \
  |  |  ------------------
  |  |  |  |  686|    987|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 987, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    987|        return #name;
  |  |  ------------------
  |  |  231|  1.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)             /* - */                                  \
  |  |  ------------------
  |  |  |  |  686|  1.29k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.29k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.29k|        return #name;
  |  |  ------------------
  |  |  232|  2.57k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)          /* * */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.57k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.57k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.57k|        return #name;
  |  |  ------------------
  |  |  233|  3.88k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)            /* / */                                  \
  |  |  ------------------
  |  |  |  |  686|  3.88k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.88k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.88k|        return #name;
  |  |  ------------------
  |  |  234|  3.88k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)             /* ^ */                                  \
  |  |  ------------------
  |  |  |  |  686|  1.86k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.86k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.86k|        return #name;
  |  |  ------------------
  |  |  235|  1.86k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)      /* == */                                 \
  |  |  ------------------
  |  |  |  |  686|    602|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 602, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    602|        return #name;
  |  |  ------------------
  |  |  236|    869|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)          /* <> */                                 \
  |  |  ------------------
  |  |  |  |  686|    869|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 869, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    869|        return #name;
  |  |  ------------------
  |  |  237|  2.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)       /* > */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.14k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.14k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.14k|        return #name;
  |  |  ------------------
  |  |  238|  2.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)  /* >= */                                 \
  |  |  ------------------
  |  |  |  |  686|     36|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 36, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     36|        return #name;
  |  |  ------------------
  |  |  239|  23.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)          /* < */                                  \
  |  |  ------------------
  |  |  |  |  686|  23.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23.1k, False: 1.37M]
  |  |  |  |  ------------------
  |  |  |  |  687|  23.1k|        return #name;
  |  |  ------------------
  |  |  240|  23.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)     /* <= */                                 \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  241|  8.60k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)         /* ? */                                  \
  |  |  ------------------
  |  |  |  |  686|  8.60k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8.60k, False: 1.38M]
  |  |  |  |  ------------------
  |  |  |  |  687|  8.60k|        return #name;
  |  |  ------------------
  |  |  242|  13.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)       /* : */                                  \
  |  |  ------------------
  |  |  |  |  686|  13.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13.1k, False: 1.38M]
  |  |  |  |  ------------------
  |  |  |  |  687|  13.1k|        return #name;
  |  |  ------------------
  |  |  243|  13.1k|    /* Built-in Functions */                                                                       \
  |  |  244|  13.1k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  13.1k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  13.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  686|  1.44k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.44k, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.44k|        return #name;
  |  |  ------------------
  |  |  247|  1.44k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  248|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  249|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  250|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  251|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  253|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  254|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  255|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  256|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  257|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  258|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  259|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  263|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  264|     79|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  686|     79|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 79, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     79|        return #name;
  |  |  ------------------
  |  |  265|     79|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  268|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  269|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  270|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  271|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |  272|     83|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  686|     83|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 83, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     83|        return #name;
  |  |  ------------------
  |  |  273|     83|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  274|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  686|     41|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 41, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     41|        return #name;
  |  |  ------------------
  |  |  275|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  276|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  277|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  278|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  279|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  280|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  282|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  283|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  284|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  285|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  288|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  292|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  293|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  297|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  298|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  299|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  686|     25|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 25, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     25|        return #name;
  |  |  ------------------
  |  |  300|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  301|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  302|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  305|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  306|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  307|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  308|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  309|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  312|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  313|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  314|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  315|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  316|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  319|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  320|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  321|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  323|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  326|    641|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  686|    641|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 641, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    641|        return #name;
  |  |  ------------------
  |  |  327|    641|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  328|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  329|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  330|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  331|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  332|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  333|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  334|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  335|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  336|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  337|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  338|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  339|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  340|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  341|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  343|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  344|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  345|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  347|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  348|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  349|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  351|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  352|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  354|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  355|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  357|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  358|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  359|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  360|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  361|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  362|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  363|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  364|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  365|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  366|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  367|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  368|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  369|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  370|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  371|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  373|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  374|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  380|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  381|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  384|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  385|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  392|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  393|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  399|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |  400|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  401|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  402|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  403|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  404|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  406|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  686|     37|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 37, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     37|        return #name;
  |  |  ------------------
  |  |  407|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  409|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  410|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  417|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  418|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  421|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  422|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  424|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  425|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  428|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  430|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  431|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  435|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  436|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  437|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  438|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  439|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  686|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     19|        return #name;
  |  |  ------------------
  |  |  440|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  444|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  445|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  448|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  449|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  450|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  451|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  452|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  453|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  454|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  455|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  460|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  461|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  462|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  463|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  464|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  465|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  466|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  468|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  469|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  470|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  471|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  686|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 34, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     34|        return #name;
  |  |  ------------------
  |  |  472|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  473|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  474|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  477|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  478|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  479|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  480|     60|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  686|     60|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 60, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     60|        return #name;
  |  |  ------------------
  |  |  481|     60|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  482|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  483|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  484|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  485|    133|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  686|    133|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 133, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    133|        return #name;
  |  |  ------------------
  |  |  486|    133|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  488|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  489|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  491|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  492|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  494|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  495|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  496|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  497|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  498|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  499|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  500|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  503|    105|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  686|    105|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 105, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|    105|        return #name;
  |  |  ------------------
  |  |  504|    105|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  505|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  506|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  507|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  508|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  509|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  510|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  511|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  512|     52|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  686|     52|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 52, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     52|        return #name;
  |  |  ------------------
  |  |  513|     52|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  514|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  517|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  518|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  519|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  522|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  523|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  525|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  526|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  527|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  528|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  529|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  530|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  533|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  534|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  536|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  537|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  538|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  539|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  540|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  541|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  542|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  543|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  544|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  548|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  549|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  550|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  551|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  552|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  553|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  554|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  562|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  563|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  686|     29|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     29|        return #name;
  |  |  ------------------
  |  |  564|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  565|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  566|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  567|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  569|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  570|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  576|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  577|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  579|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  580|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  581|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  582|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  583|     88|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  686|     88|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 88, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     88|        return #name;
  |  |  ------------------
  |  |  584|     88|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  585|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  587|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  588|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  589|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  590|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  593|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  594|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  596|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  597|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  686|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 42, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     42|        return #name;
  |  |  ------------------
  |  |  598|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  600|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  601|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  603|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  604|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  611|     58|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  686|     58|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 58, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     58|        return #name;
  |  |  ------------------
  |  |  612|     58|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  613|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  614|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  615|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  616|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  618|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  619|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  620|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  621|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  622|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  686|     25|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 25, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     25|        return #name;
  |  |  ------------------
  |  |  623|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |  624|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  628|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  629|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  631|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  632|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  635|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  636|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  637|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  638|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  639|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  642|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  643|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  645|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  646|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  647|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  649|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  650|      0|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.39M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  ------------------
  690|       |
  691|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  692|       |
  693|      0|        default:
  ------------------
  |  Branch (693:9): [True: 0, False: 1.39M]
  ------------------
  694|      0|            PHI_ASSERT_NOT_REACHED();
  695|  1.39M|    }
  696|  1.39M|}

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  4.75M|    {
   21|       |#if defined(PHI_DEBUG)
   22|       |        PHI_ASSERT(!m_Finalized);
   23|       |#endif
   24|       |
   25|  4.75M|        m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  4.75M|    }

_ZN10OpenAutoIt10DiagnosticC2ENS_12DiagnosticIdENS_15DiagnosticLevelENS_14SourceLocationEONSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE:
   14|   505k|{}
_ZNK10OpenAutoIt10Diagnostic6IsNoteEv:
   42|   505k|{
   43|   505k|    return m_Level == DiagnosticLevel::Note;
   44|   505k|}
_ZNK10OpenAutoIt10Diagnostic9IsWarningEv:
   47|   502k|{
   48|   502k|    return m_Level == DiagnosticLevel::Warning;
   49|   502k|}
_ZNK10OpenAutoIt10Diagnostic7IsErrorEv:
   52|   502k|{
   53|   502k|    return m_Level == DiagnosticLevel::Error;
   54|   502k|}
_ZNK10OpenAutoIt10Diagnostic12IsFatalErrorEv:
   57|   946k|{
   58|   946k|    return m_Level == DiagnosticLevel::FatalError;
   59|   946k|}
_ZNK10OpenAutoIt10Diagnostic14IsErrorOrFatalEv:
   62|   502k|{
   63|   502k|    return IsError() || IsFatalError();
  ------------------
  |  Branch (63:12): [True: 59.5k, False: 443k]
  |  Branch (63:25): [True: 0, False: 443k]
  ------------------
   64|   502k|}
_ZN10OpenAutoIt10Diagnostic7AddNoteEOS0_:
   93|  2.11k|{
   94|  2.11k|    PHI_ASSERT(note.IsNote());
   95|       |
   96|  2.11k|    m_Notes.emplace_back(note);
   97|  2.11k|}

_ZN10OpenAutoIt17DiagnosticBuilderC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
   11|   502k|{}
_ZN10OpenAutoIt17DiagnosticBuilderD2Ev:
   14|   502k|{
   15|   502k|    for (auto& diagnostic : m_Diagnostics)
  ------------------
  |  Branch (15:27): [True: 502k, False: 502k]
  ------------------
   16|   502k|    {
   17|   502k|        m_DiagnosticEngine->Report(diagnostic);
   18|   502k|    }
   19|   502k|}

_ZN10OpenAutoIt16DiagnosticEngineC2Ev:
   12|  13.0k|{}
_ZNK10OpenAutoIt16DiagnosticEngine13GetErrorLimitEv:
   29|  1.33M|{
   30|  1.33M|    return m_ErrorLimit;
   31|  1.33M|}
_ZNK10OpenAutoIt16DiagnosticEngine21HasFatalErrorOccurredEv:
   44|  1.33M|{
   45|  1.33M|    return m_FatalErrorOccurred;
   46|  1.33M|}
_ZN10OpenAutoIt16DiagnosticEngine6ReportENS_10DiagnosticE:
   69|   502k|{
   70|   502k|    PHI_ASSERT(!diagnostic.IsNote());
   71|       |
   72|   502k|    if (m_IgnoreAllWarnings)
  ------------------
  |  Branch (72:9): [True: 0, False: 502k]
  ------------------
   73|      0|    {
   74|      0|        diagnostic.IgnoreWarning();
   75|      0|    }
   76|       |
   77|   502k|    if (m_WarningsAsError)
  ------------------
  |  Branch (77:9): [True: 0, False: 502k]
  ------------------
   78|      0|    {
   79|      0|        diagnostic.UpgradeWarningToError();
   80|      0|    }
   81|       |
   82|   502k|    if (diagnostic.IsErrorOrFatal())
  ------------------
  |  Branch (82:9): [True: 59.5k, False: 443k]
  ------------------
   83|  59.5k|    {
   84|  59.5k|        m_ErrorOccurred = true;
   85|  59.5k|        ++m_NumberOfErrors;
   86|  59.5k|    }
   87|       |
   88|   502k|    if (diagnostic.IsFatalError())
  ------------------
  |  Branch (88:9): [True: 0, False: 502k]
  ------------------
   89|      0|    {
   90|      0|        m_FatalErrorOccurred = true;
   91|      0|    }
   92|       |
   93|   502k|    if (diagnostic.IsWarning())
  ------------------
  |  Branch (93:9): [True: 443k, False: 59.5k]
  ------------------
   94|   443k|    {
   95|   443k|        ++m_NumberOfWarnings;
   96|   443k|    }
   97|       |
   98|   502k|    if (m_Consumer)
  ------------------
  |  Branch (98:9): [True: 0, False: 502k]
  ------------------
   99|      0|    {
  100|      0|        m_Consumer->Report(diagnostic);
  101|      0|    }
  102|   502k|}

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  160|  87.6k|{
  161|  87.6k|    static constexpr auto map =
  162|  87.6k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  163|  87.6k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  164|       |
  165|  87.6k|    std::string str{token.begin(), token.end()};
  166|  87.6k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  167|       |
  168|  87.6k|    return map.at(phi::string_view(str.c_str(), str.size()));
  169|  87.6k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  186|  78.0k|{
  187|  78.0k|    static constexpr auto map =
  188|  78.0k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  189|  78.0k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  190|       |
  191|  78.0k|    std::string str{token.begin(), token.end()};
  192|  78.0k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  193|       |
  194|  78.0k|    return map.at(phi::string_view(str.c_str(), str.size()));
  195|  78.0k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  662|   870k|{
  663|   870k|    static constexpr auto keyword_map =
  664|   870k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  665|   870k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  666|   870k|    static constexpr auto builtin_map =
  667|   870k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  668|   870k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  669|       |
  670|   870k|    std::string str{token.begin(), token.end()};
  671|   870k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  672|       |
  673|   870k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  674|       |
  675|   870k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  676|   870k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (676:9): [True: 548k, False: 321k]
  ------------------
  677|   548k|    {
  678|   548k|        return builtin_map.at(string);
  679|   548k|    }
  680|       |
  681|   321k|    return keyword;
  682|   870k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  707|   613k|{
  708|   613k|    static constexpr auto map =
  709|   613k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  710|   613k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  711|       |
  712|   613k|    return map.at(token);
  713|   613k|}
_ZN10OpenAutoIt5LexerC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
  778|  13.0k|{}
_ZN10OpenAutoIt5Lexer5ResetEv:
  781|  13.0k|{
  782|  13.0k|    m_Iterator = m_Source.begin();
  783|       |
  784|  13.0k|    m_InsideMultiLineComment = false;
  785|       |
  786|  13.0k|    m_LineNumber = 1u;
  787|  13.0k|    m_Column     = 1u;
  788|  13.0k|}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  791|  15.9M|{
  792|  15.9M|    return m_Iterator == m_Source.end();
  793|  15.9M|}
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  796|  4.76M|{
  797|  6.07M|    while (!IsFinished())
  ------------------
  |  Branch (797:12): [True: 6.07M, False: 1.69k]
  ------------------
  798|  6.07M|    {
  799|  6.07M|        char current_character = *m_Iterator;
  800|       |
  801|       |        /* null character */
  802|       |
  803|  6.07M|        if (current_character == '\0')
  ------------------
  |  Branch (803:13): [True: 443k, False: 5.63M]
  ------------------
  804|   443k|        {
  805|   443k|            Diag().Warning(DiagnosticId::NullCharacter, CurrentSourceLocation());
  806|       |
  807|   443k|            SkipCurrentCharacter();
  808|   443k|        }
  809|       |
  810|       |        /* Multiline comments */
  811|       |
  812|  5.63M|        else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (812:18): [True: 2.30k, False: 5.63M]
  ------------------
  813|  2.30k|        {
  814|  2.30k|            iterator       begin_of_multiline_comment            = m_Iterator;
  815|  2.30k|            const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  816|  2.30k|            const phi::u64 beginning_column_of_multiline_comment = m_Column;
  817|       |
  818|  4.03k|            while (!IsFinished())
  ------------------
  |  Branch (818:20): [True: 3.96k, False: 62]
  ------------------
  819|  3.96k|            {
  820|  3.96k|                current_character = *m_Iterator;
  821|       |
  822|       |                // Check for end comment multiline
  823|  3.96k|                if (current_character == '#')
  ------------------
  |  Branch (823:21): [True: 3.20k, False: 760]
  ------------------
  824|  3.20k|                {
  825|  3.20k|                    iterator begin_of_token = m_Iterator;
  826|  3.20k|                    ConsumeCurrentCharacter();
  827|       |
  828|  14.2k|                    while (!IsFinished())
  ------------------
  |  Branch (828:28): [True: 14.2k, False: 63]
  ------------------
  829|  14.2k|                    {
  830|  14.2k|                        current_character = *m_Iterator;
  831|       |
  832|  14.2k|                        if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (832:29): [True: 11.0k, False: 3.14k]
  ------------------
  833|  11.0k|                        {
  834|  11.0k|                            ConsumeCurrentCharacter();
  835|  11.0k|                            continue;
  836|  11.0k|                        }
  837|       |
  838|  3.14k|                        break;
  839|  14.2k|                    }
  840|       |
  841|  3.20k|                    const TokenKind pre_processor_token_kind =
  842|  3.20k|                            lookup_pre_processor(TokenText(begin_of_token));
  843|       |
  844|  3.20k|                    if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (844:25): [True: 2.23k, False: 969]
  ------------------
  845|  2.23k|                    {
  846|  2.23k|                        m_InsideMultiLineComment = false;
  847|       |
  848|       |                        // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  849|  2.23k|                        m_Iterator -= TokenText(begin_of_token).length().unsafe();
  850|       |
  851|  2.23k|                        Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  852|  2.23k|                                    BuildSourceLocation(beginning_line_of_multiline_comment,
  853|  2.23k|                                                        beginning_column_of_multiline_comment)};
  854|       |
  855|  2.23k|                        return token;
  856|  2.23k|                    }
  857|  3.20k|                }
  858|    760|                else if (current_character == '\n')
  ------------------
  |  Branch (858:26): [True: 194, False: 566]
  ------------------
  859|    194|                {
  860|    194|                    ConsumeCurrentCharacter();
  861|    194|                    AdvanceToNextLine();
  862|    194|                }
  863|    566|                else
  864|    566|                {
  865|       |                    // Otherwise simply consume the character
  866|    566|                    ConsumeCurrentCharacter();
  867|    566|                    m_Column += 1u;
  868|    566|                }
  869|  3.96k|            }
  870|  2.30k|        }
  871|       |
  872|       |        /* Skip characters */
  873|       |
  874|  5.63M|        else if (is_skip_character(current_character))
  ------------------
  |  Branch (874:18): [True: 323k, False: 5.30M]
  ------------------
  875|   323k|        {
  876|   323k|            SkipCurrentCharacter();
  877|   323k|        }
  878|       |
  879|       |        /* New Lines */
  880|       |
  881|  5.30M|        else if (current_character == '\n')
  ------------------
  |  Branch (881:18): [True: 316k, False: 4.99M]
  ------------------
  882|   316k|        {
  883|   316k|            Token new_line_token = ConstructToken(TokenKind::NewLine);
  884|       |
  885|   316k|            ConsumeCurrentCharacter();
  886|   316k|            AdvanceToNextLine();
  887|       |
  888|   316k|            return new_line_token;
  889|   316k|        }
  890|       |
  891|       |        /* Comment */
  892|       |
  893|  4.99M|        else if (current_character == ';')
  ------------------
  |  Branch (893:18): [True: 1.77k, False: 4.98M]
  ------------------
  894|  1.77k|        {
  895|  1.77k|            iterator begin_of_token = m_Iterator;
  896|  1.77k|            ConsumeCurrentCharacter();
  897|       |
  898|  10.8k|            while (!IsFinished())
  ------------------
  |  Branch (898:20): [True: 10.7k, False: 68]
  ------------------
  899|  10.7k|            {
  900|  10.7k|                current_character = *m_Iterator;
  901|       |
  902|  10.7k|                if (current_character != '\n')
  ------------------
  |  Branch (902:21): [True: 9.02k, False: 1.71k]
  ------------------
  903|  9.02k|                {
  904|  9.02k|                    ConsumeCurrentCharacter();
  905|  9.02k|                    continue;
  906|  9.02k|                }
  907|       |
  908|  1.71k|                break;
  909|  10.7k|            }
  910|       |
  911|  1.77k|            return ConstructToken(TokenKind::Comment, begin_of_token);
  912|  1.77k|        }
  913|       |
  914|       |        /* Macros */
  915|       |
  916|  4.98M|        else if (current_character == '@')
  ------------------
  |  Branch (916:18): [True: 87.6k, False: 4.90M]
  ------------------
  917|  87.6k|        {
  918|  87.6k|            iterator begin_of_token = m_Iterator;
  919|  87.6k|            ConsumeCurrentCharacter();
  920|       |
  921|   250k|            while (!IsFinished())
  ------------------
  |  Branch (921:20): [True: 250k, False: 548]
  ------------------
  922|   250k|            {
  923|   250k|                current_character = *m_Iterator;
  924|       |
  925|   250k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (925:21): [True: 163k, False: 87.1k]
  ------------------
  926|   163k|                {
  927|   163k|                    ConsumeCurrentCharacter();
  928|   163k|                    continue;
  929|   163k|                }
  930|       |
  931|  87.1k|                break;
  932|   250k|            }
  933|       |
  934|       |            // Emit token
  935|  87.6k|            return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  936|  87.6k|        }
  937|       |
  938|       |        /* Variable identifier */
  939|       |
  940|  4.90M|        else if (current_character == '$')
  ------------------
  |  Branch (940:18): [True: 218k, False: 4.68M]
  ------------------
  941|   218k|        {
  942|   218k|            iterator     begin_of_token = m_Iterator;
  943|   218k|            phi::boolean parsed_something{false};
  944|   218k|            ConsumeCurrentCharacter();
  945|       |
  946|   425k|            while (!IsFinished())
  ------------------
  |  Branch (946:20): [True: 424k, False: 951]
  ------------------
  947|   424k|            {
  948|   424k|                current_character = *m_Iterator;
  949|       |
  950|   424k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (950:21): [True: 206k, False: 218k]
  ------------------
  951|   206k|                {
  952|   206k|                    ConsumeCurrentCharacter();
  953|   206k|                    parsed_something = true;
  954|   206k|                    continue;
  955|   206k|                }
  956|       |
  957|   218k|                break;
  958|   424k|            }
  959|       |
  960|       |            // Ensure that '$' is not a valid variable identifier
  961|   218k|            if (!parsed_something)
  ------------------
  |  Branch (961:17): [True: 50.3k, False: 168k]
  ------------------
  962|  50.3k|            {
  963|  50.3k|                return ConstructToken(TokenKind::Garbage, begin_of_token);
  964|  50.3k|            }
  965|       |
  966|       |            // Emit Token
  967|   168k|            return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  968|   218k|        }
  969|       |
  970|       |        /* PreProcessor directive */
  971|       |
  972|  4.68M|        else if (current_character == '#')
  ------------------
  |  Branch (972:18): [True: 74.8k, False: 4.60M]
  ------------------
  973|  74.8k|        {
  974|  74.8k|            iterator begin_of_token = m_Iterator;
  975|  74.8k|            ConsumeCurrentCharacter();
  976|       |
  977|   218k|            while (!IsFinished())
  ------------------
  |  Branch (977:20): [True: 217k, False: 415]
  ------------------
  978|   217k|            {
  979|   217k|                current_character = *m_Iterator;
  980|       |
  981|   217k|                if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (981:21): [True: 143k, False: 74.4k]
  ------------------
  982|   143k|                {
  983|   143k|                    ConsumeCurrentCharacter();
  984|   143k|                    continue;
  985|   143k|                }
  986|       |
  987|  74.4k|                break;
  988|   217k|            }
  989|       |
  990|       |            // Check for start of multiline comment
  991|  74.8k|            const TokenKind pre_processor_token_kind =
  992|  74.8k|                    lookup_pre_processor(TokenText(begin_of_token));
  993|       |
  994|  74.8k|            if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (994:17): [True: 2.33k, False: 72.5k]
  ------------------
  995|  2.33k|            {
  996|  2.33k|                m_InsideMultiLineComment = true;
  997|  2.33k|            }
  998|       |
  999|  74.8k|            return ConstructToken(pre_processor_token_kind, begin_of_token);
 1000|  74.8k|        }
 1001|       |
 1002|       |        /* SingleQuoteStringLiteral */
 1003|       |
 1004|  4.60M|        else if (current_character == '\'')
  ------------------
  |  Branch (1004:18): [True: 76.5k, False: 4.53M]
  ------------------
 1005|  76.5k|        {
 1006|  76.5k|            iterator     begin_of_token = m_Iterator;
 1007|  76.5k|            phi::boolean did_terminate  = false;
 1008|  76.5k|            ConsumeCurrentCharacter();
 1009|       |
 1010|   377k|            while (!IsFinished())
  ------------------
  |  Branch (1010:20): [True: 376k, False: 459]
  ------------------
 1011|   376k|            {
 1012|   376k|                current_character = *m_Iterator;
 1013|   376k|                ConsumeCurrentCharacter();
 1014|       |
 1015|   376k|                if (current_character == '\'')
  ------------------
  |  Branch (1015:21): [True: 76.1k, False: 300k]
  ------------------
 1016|  76.1k|                {
 1017|  76.1k|                    did_terminate = true;
 1018|  76.1k|                    break;
 1019|  76.1k|                }
 1020|   376k|            }
 1021|       |
 1022|  76.5k|            if (did_terminate)
  ------------------
  |  Branch (1022:17): [True: 76.1k, False: 459]
  ------------------
 1023|  76.1k|            {
 1024|  76.1k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1025|  76.1k|            }
 1026|       |
 1027|       |            // TODO: Warn unterminated string literal
 1028|  76.5k|        }
 1029|       |
 1030|       |        /* DoubleQuoteStringLiteral */
 1031|       |
 1032|  4.53M|        else if (current_character == '\"')
  ------------------
  |  Branch (1032:18): [True: 2.10k, False: 4.52M]
  ------------------
 1033|  2.10k|        {
 1034|  2.10k|            iterator     begin_of_token = m_Iterator;
 1035|  2.10k|            phi::boolean did_terminate  = false;
 1036|  2.10k|            ConsumeCurrentCharacter();
 1037|       |
 1038|  34.5k|            while (!IsFinished())
  ------------------
  |  Branch (1038:20): [True: 34.5k, False: 49]
  ------------------
 1039|  34.5k|            {
 1040|  34.5k|                current_character = *m_Iterator;
 1041|  34.5k|                ConsumeCurrentCharacter();
 1042|       |
 1043|  34.5k|                if (current_character == '\"')
  ------------------
  |  Branch (1043:21): [True: 2.05k, False: 32.4k]
  ------------------
 1044|  2.05k|                {
 1045|  2.05k|                    did_terminate = true;
 1046|  2.05k|                    break;
 1047|  2.05k|                }
 1048|  34.5k|            }
 1049|       |
 1050|  2.10k|            if (did_terminate)
  ------------------
  |  Branch (1050:17): [True: 2.05k, False: 49]
  ------------------
 1051|  2.05k|            {
 1052|  2.05k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1053|  2.05k|            }
 1054|  2.10k|        }
 1055|       |
 1056|       |        /* Number Literals - IntegerLiteral/FloatLiteral */
 1057|       |
 1058|  4.52M|        else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1058:18): [True: 497k, False: 4.03M]
  |  Branch (1058:18): [True: 520k, False: 4.00M]
  |  Branch (1058:54): [True: 22.8k, False: 4.00M]
  ------------------
 1059|   520k|        {
 1060|   520k|            const phi::boolean start_with_zero{current_character == '0'};
 1061|   520k|            phi::boolean       parsing_hex{false};
 1062|   520k|            phi::boolean       parsing_float{current_character == '.'};
 1063|       |
 1064|   520k|            iterator begin_of_token = m_Iterator;
 1065|   520k|            ConsumeCurrentCharacter();
 1066|       |
 1067|   569k|            while (!IsFinished())
  ------------------
  |  Branch (1067:20): [True: 568k, False: 995]
  ------------------
 1068|   568k|            {
 1069|   568k|                current_character = *m_Iterator;
 1070|       |
 1071|       |                // Is the second character
 1072|   568k|                if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1072:21): [True: 519k, False: 48.8k]
  |  Branch (1072:58): [True: 213k, False: 306k]
  ------------------
 1073|   213k|                {
 1074|       |                    // Hex character
 1075|   213k|                    if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1075:25): [True: 654, False: 212k]
  |  Branch (1075:53): [True: 2.06k, False: 210k]
  ------------------
 1076|  2.71k|                    {
 1077|  2.71k|                        parsing_hex = true;
 1078|  2.71k|                        ConsumeCurrentCharacter();
 1079|  2.71k|                        continue;
 1080|  2.71k|                    }
 1081|   213k|                }
 1082|       |
 1083|       |                // Actually parsing
 1084|   565k|                if (parsing_hex)
  ------------------
  |  Branch (1084:21): [True: 13.3k, False: 552k]
  ------------------
 1085|  13.3k|                {
 1086|  13.3k|                    if (parsing_float)
  ------------------
  |  Branch (1086:25): [True: 0, False: 13.3k]
  ------------------
 1087|      0|                    {
 1088|       |                        // TODO: Fix include and enable this warning
 1089|       |                        //Diag().Error(DiagnosticId::FloatHexLiteral, CurrentSourceLocation());
 1090|       |
 1091|      0|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1092|      0|                    }
 1093|       |
 1094|  13.3k|                    if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1094:25): [True: 10.6k, False: 2.65k]
  ------------------
 1095|  10.6k|                    {
 1096|  10.6k|                        ConsumeCurrentCharacter();
 1097|  10.6k|                        continue;
 1098|  10.6k|                    }
 1099|  13.3k|                }
 1100|   552k|                else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1100:26): [True: 35.2k, False: 516k]
  ------------------
 1101|  35.2k|                {
 1102|  35.2k|                    ConsumeCurrentCharacter();
 1103|  35.2k|                    continue;
 1104|  35.2k|                }
 1105|       |                // Literal dot
 1106|   516k|                else if (current_character == '.')
  ------------------
  |  Branch (1106:26): [True: 611, False: 516k]
  ------------------
 1107|    611|                {
 1108|    611|                    if (parsing_float)
  ------------------
  |  Branch (1108:25): [True: 231, False: 380]
  ------------------
 1109|    231|                    {
 1110|       |                        //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1111|       |
 1112|    231|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1113|    231|                    }
 1114|       |
 1115|    380|                    parsing_float = true;
 1116|    380|                    ConsumeCurrentCharacter();
 1117|    380|                    continue;
 1118|    611|                }
 1119|       |
 1120|   518k|                break;
 1121|   565k|            }
 1122|       |
 1123|   519k|            if (parsing_float)
  ------------------
  |  Branch (1123:17): [True: 23.0k, False: 496k]
  ------------------
 1124|  23.0k|            {
 1125|       |                // Were not allowed to end with a dot
 1126|       |                // TODO: This is very hacky and looks nasty
 1127|  23.0k|                if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1127:21): [True: 21.8k, False: 1.17k]
  ------------------
 1128|  21.8k|                {
 1129|       |                    //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1130|       |
 1131|  21.8k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
 1132|  21.8k|                }
 1133|       |
 1134|  1.17k|                return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1135|  23.0k|            }
 1136|       |
 1137|   496k|            return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1138|   519k|        }
 1139|       |
 1140|       |        /* Operators */
 1141|       |
 1142|  4.00M|        else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1142:18): [True: 550k, False: 3.45M]
  ------------------
 1143|   550k|        {
 1144|   550k|            iterator begin_of_token = m_Iterator;
 1145|   550k|            ConsumeCurrentCharacter();
 1146|       |
 1147|   550k|            if (!IsFinished())
  ------------------
  |  Branch (1147:17): [True: 550k, False: 525]
  ------------------
 1148|   550k|            {
 1149|   550k|                if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1149:21): [True: 10.1k, False: 539k]
  |  Branch (1149:44): [True: 25.2k, False: 514k]
  |  Branch (1149:70): [True: 644, False: 24.5k]
  ------------------
 1150|  10.8k|                {
 1151|       |                    // We have an actual two part operator
 1152|  10.8k|                    ConsumeCurrentCharacter();
 1153|  10.8k|                }
 1154|   550k|            }
 1155|       |
 1156|   550k|            return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1157|   550k|        }
 1158|       |
 1159|  3.45M|        else if (is_single_operator(current_character))
  ------------------
  |  Branch (1159:18): [True: 63.2k, False: 3.39M]
  ------------------
 1160|  63.2k|        {
 1161|  63.2k|            Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1162|       |
 1163|  63.2k|            ConsumeCurrentCharacter();
 1164|       |
 1165|  63.2k|            return token;
 1166|  63.2k|        }
 1167|       |
 1168|       |        /* Punctioation */
 1169|       |
 1170|  3.39M|        else if (current_character == ',')
  ------------------
  |  Branch (1170:18): [True: 373k, False: 3.02M]
  ------------------
 1171|   373k|        {
 1172|   373k|            Token token = ConstructToken(TokenKind::Comma);
 1173|       |
 1174|   373k|            ConsumeCurrentCharacter();
 1175|       |
 1176|   373k|            return token;
 1177|   373k|        }
 1178|       |
 1179|  3.02M|        else if (current_character == '(')
  ------------------
  |  Branch (1179:18): [True: 306k, False: 2.71M]
  ------------------
 1180|   306k|        {
 1181|   306k|            Token token = ConstructToken(TokenKind::LParen);
 1182|       |
 1183|   306k|            ConsumeCurrentCharacter();
 1184|       |
 1185|   306k|            return token;
 1186|   306k|        }
 1187|       |
 1188|  2.71M|        else if (current_character == ')')
  ------------------
  |  Branch (1188:18): [True: 190k, False: 2.52M]
  ------------------
 1189|   190k|        {
 1190|   190k|            Token token = ConstructToken(TokenKind::RParen);
 1191|       |
 1192|   190k|            ConsumeCurrentCharacter();
 1193|       |
 1194|   190k|            return token;
 1195|   190k|        }
 1196|       |
 1197|  2.52M|        else if (current_character == '.')
  ------------------
  |  Branch (1197:18): [True: 0, False: 2.52M]
  ------------------
 1198|      0|        {
 1199|      0|            Token token = ConstructToken(TokenKind::Dot);
 1200|       |
 1201|      0|            ConsumeCurrentCharacter();
 1202|       |
 1203|      0|            return token;
 1204|      0|        }
 1205|       |
 1206|  2.52M|        else if (current_character == '[')
  ------------------
  |  Branch (1206:18): [True: 891k, False: 1.63M]
  ------------------
 1207|   891k|        {
 1208|   891k|            Token token = ConstructToken(TokenKind::LSquare);
 1209|       |
 1210|   891k|            ConsumeCurrentCharacter();
 1211|       |
 1212|   891k|            return token;
 1213|   891k|        }
 1214|       |
 1215|  1.63M|        else if (current_character == ']')
  ------------------
  |  Branch (1215:18): [True: 212k, False: 1.42M]
  ------------------
 1216|   212k|        {
 1217|   212k|            Token token = ConstructToken(TokenKind::RSquare);
 1218|       |
 1219|   212k|            ConsumeCurrentCharacter();
 1220|       |
 1221|   212k|            return token;
 1222|   212k|        }
 1223|       |
 1224|       |        /* Identifier */
 1225|       |
 1226|  1.42M|        else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1226:18): [True: 870k, False: 549k]
  ------------------
 1227|   870k|        {
 1228|   870k|            iterator begin_of_token = m_Iterator;
 1229|   870k|            ConsumeCurrentCharacter();
 1230|       |
 1231|  2.68M|            while (!IsFinished())
  ------------------
  |  Branch (1231:20): [True: 2.68M, False: 3.80k]
  ------------------
 1232|  2.68M|            {
 1233|  2.68M|                current_character = *m_Iterator;
 1234|       |
 1235|  2.68M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1235:21): [True: 1.81M, False: 866k]
  ------------------
 1236|  1.81M|                {
 1237|  1.81M|                    ConsumeCurrentCharacter();
 1238|  1.81M|                    continue;
 1239|  1.81M|                }
 1240|       |
 1241|   866k|                break;
 1242|  2.68M|            }
 1243|       |
 1244|   870k|            return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1245|   870k|        }
 1246|       |
 1247|       |        /* Unknown/Unexpected character */
 1248|       |
 1249|   549k|        else
 1250|   549k|        {
 1251|       |            // TODO: Warn unexpected character encountered
 1252|   549k|            SkipCurrentCharacter();
 1253|   549k|        }
 1254|  6.07M|    }
 1255|       |
 1256|  1.69k|    return {};
 1257|  4.76M|}
_ZN10OpenAutoIt5Lexer13ProcessStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEES6_:
 1260|  13.0k|{
 1261|  13.0k|    SourceFile fake_source{SourceFile::Type::Basic, file_name.data(), source};
 1262|       |
 1263|  13.0k|    return ProcessFile(&fake_source);
 1264|  13.0k|}
_ZN10OpenAutoIt5Lexer11ProcessFileEN3phi21not_null_observer_ptrIKNS_10SourceFileEEE:
 1267|  13.0k|{
 1268|  13.0k|    TokenStream stream;
 1269|       |
 1270|  13.0k|    m_SourceFile = source_file;
 1271|  13.0k|    m_Source     = m_SourceFile->m_Content;
 1272|  13.0k|    Reset();
 1273|       |
 1274|  4.77M|    while (!IsFinished())
  ------------------
  |  Branch (1274:12): [True: 4.76M, False: 13.0k]
  ------------------
 1275|  4.76M|    {
 1276|  4.76M|        phi::optional<Token> maybe_token = GetNextToken();
 1277|       |
 1278|  4.76M|        if (maybe_token.has_value())
  ------------------
  |  Branch (1278:13): [True: 4.75M, False: 1.69k]
  ------------------
 1279|  4.75M|        {
 1280|  4.75M|            stream.emplace_back(maybe_token.value());
 1281|  4.75M|        }
 1282|  4.76M|    }
 1283|       |
 1284|  13.0k|    stream.finalize();
 1285|  13.0k|    return stream;
 1286|  13.0k|}
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1289|  8.89M|{
 1290|  8.89M|    ++m_Iterator;
 1291|  8.89M|}
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1294|   316k|{
 1295|   316k|    ++m_LineNumber;
 1296|   316k|    m_Column = 1u;
 1297|   316k|}
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1300|  1.31M|{
 1301|  1.31M|    ConsumeCurrentCharacter();
 1302|  1.31M|    ++m_Column;
 1303|  1.31M|}
_ZN10OpenAutoIt5Lexer4DiagEv:
 1306|   443k|{
 1307|   443k|    return DiagnosticBuilder{m_DiagnosticEngine};
 1308|   443k|}
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   37|  87.6k|    {
   38|  87.6k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  87.6k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  87.6k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 35.1k, False: 52.5k]
  ------------------
   42|  35.1k|        {
   43|  35.1k|            return itr->second;
   44|  35.1k|        }
   45|       |
   46|  52.5k|        return m_Default;
   47|  87.6k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  5.91M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   37|  78.0k|    {
   38|  78.0k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  78.0k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  78.0k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 12.6k, False: 65.4k]
  ------------------
   42|  12.6k|        {
   43|  12.6k|            return itr->second;
   44|  12.6k|        }
   45|       |
   46|  65.4k|        return m_Default;
   47|  78.0k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   709k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   37|   548k|    {
   38|   548k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   548k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   548k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 4.96k, False: 543k]
  ------------------
   42|  4.96k|        {
   43|  4.96k|            return itr->second;
   44|  4.96k|        }
   45|       |
   46|   543k|        return m_Default;
   47|   548k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   220M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   37|   870k|    {
   38|   870k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   870k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   870k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 321k, False: 548k]
  ------------------
   42|   321k|        {
   43|   321k|            return itr->second;
   44|   321k|        }
   45|       |
   46|   548k|        return m_Default;
   47|   870k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  31.3M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   37|   613k|    {
   38|   613k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   613k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   613k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 613k, False: 0]
  ------------------
   42|   613k|        {
   43|   613k|            return itr->second;
   44|   613k|        }
   45|       |
   46|      0|        return m_Default;
   47|   613k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  5.63M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  736|   231k|{
  737|   231k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (737:12): [True: 151k, False: 79.8k]
  |  Branch (737:40): [True: 2.26k, False: 77.5k]
  ------------------
  738|   231k|}
_Z17is_skip_characterc:
  716|  5.63M|{
  717|  5.63M|    switch (c)
  718|  5.63M|    {
  719|   217k|        case ' ':
  ------------------
  |  Branch (719:9): [True: 217k, False: 5.41M]
  ------------------
  720|   219k|        case '\v':
  ------------------
  |  Branch (720:9): [True: 1.53k, False: 5.62M]
  ------------------
  721|   315k|        case '\t':
  ------------------
  |  Branch (721:9): [True: 96.4k, False: 5.53M]
  ------------------
  722|   320k|        case '\b':
  ------------------
  |  Branch (722:9): [True: 4.75k, False: 5.62M]
  ------------------
  723|   323k|        case '\f':
  ------------------
  |  Branch (723:9): [True: 3.29k, False: 5.62M]
  ------------------
  724|   323k|            return true;
  725|  5.30M|        default:
  ------------------
  |  Branch (725:9): [True: 5.30M, False: 323k]
  ------------------
  726|  5.30M|            return false;
  727|  5.63M|    }
  728|  5.63M|}
_Z24is_valid_identifier_charc:
  731|  4.77M|{
  732|  4.77M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (732:12): [True: 3.05M, False: 1.72M]
  |  Branch (732:40): [True: 7.55k, False: 1.72M]
  ------------------
  733|  4.77M|}
_Z20is_two_part_operatorc:
  741|  4.00M|{
  742|  4.00M|    switch (c)
  743|  4.00M|    {
  744|  85.3k|        case '=':
  ------------------
  |  Branch (744:9): [True: 85.3k, False: 3.92M]
  ------------------
  745|   137k|        case '+':
  ------------------
  |  Branch (745:9): [True: 52.1k, False: 3.95M]
  ------------------
  746|   501k|        case '-':
  ------------------
  |  Branch (746:9): [True: 364k, False: 3.64M]
  ------------------
  747|   504k|        case '*':
  ------------------
  |  Branch (747:9): [True: 3.02k, False: 4.00M]
  ------------------
  748|   518k|        case '/':
  ------------------
  |  Branch (748:9): [True: 13.9k, False: 3.99M]
  ------------------
  749|   521k|        case '&':
  ------------------
  |  Branch (749:9): [True: 3.17k, False: 4.00M]
  ------------------
  750|   547k|        case '<':
  ------------------
  |  Branch (750:9): [True: 25.5k, False: 3.98M]
  ------------------
  751|   550k|        case '>':
  ------------------
  |  Branch (751:9): [True: 3.17k, False: 4.00M]
  ------------------
  752|   550k|            return true;
  753|       |
  754|  3.45M|        default:
  ------------------
  |  Branch (754:9): [True: 3.45M, False: 550k]
  ------------------
  755|  3.45M|            return false;
  756|  4.00M|    }
  757|  4.00M|}
_Z18is_single_operatorc:
  760|  3.45M|{
  761|  3.45M|    switch (c)
  762|  3.45M|    {
  763|  2.09k|        case '^':
  ------------------
  |  Branch (763:9): [True: 2.09k, False: 3.45M]
  ------------------
  764|  30.7k|        case '?':
  ------------------
  |  Branch (764:9): [True: 28.6k, False: 3.42M]
  ------------------
  765|  63.2k|        case ':':
  ------------------
  |  Branch (765:9): [True: 32.4k, False: 3.42M]
  ------------------
  766|  63.2k|            return true;
  767|       |
  768|  3.39M|        default:
  ------------------
  |  Branch (768:9): [True: 3.39M, False: 63.2k]
  ------------------
  769|  3.39M|            return false;
  770|  3.45M|    }
  771|  3.45M|}

_ZN10OpenAutoIt6ParserC2EN3phi21not_null_observer_ptrINS_13SourceManagerEEENS2_INS_16DiagnosticEngineEEENS2_INS_5LexerEEE:
  135|  13.0k|{}
_ZN10OpenAutoIt6Parser16ParseTokenStreamEN3phi21not_null_observer_ptrINS_11ASTDocumentEEEONS_11TokenStreamENS2_IKNS_10SourceFileEEE:
  140|  13.0k|{
  141|  13.0k|    PushParsingContext(phi::move(source_file), phi::move(stream));
  142|       |
  143|  13.0k|    ParseDocument(phi::move(document));
  144|  13.0k|}
_ZN10OpenAutoIt6Parser11ParseStringEN3phi21not_null_observer_ptrINS_11ASTDocumentEEENS1_17basic_string_viewIcNSt3__111char_traitsIcEEEES9_:
  148|  13.0k|{
  149|  13.0k|    TokenStream stream = m_Lexer->ProcessString(file_name, source);
  150|       |
  151|  13.0k|    SourceFile fake_source_file{SourceFile::Type::Basic, std::string_view(file_name),
  152|  13.0k|                                phi::move(source)};
  153|  13.0k|    ParseTokenStream(phi::move(document), phi::move(stream), &fake_source_file);
  154|  13.0k|}
_ZN10OpenAutoIt6Parser13ParseDocumentEN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
  174|  13.0k|{
  175|  13.0k|    m_Document = phi::move(document);
  176|       |
  177|  13.0k|    m_IncludeOnceFiles.clear();
  178|       |
  179|  1.33M|    while (ShouldContinueParsing())
  ------------------
  |  Branch (179:12): [True: 1.32M, False: 13.0k]
  ------------------
  180|  1.32M|    {
  181|  1.32M|        if (!CurrentTokenStream().has_more())
  ------------------
  |  Branch (181:13): [True: 13.0k, False: 1.31M]
  ------------------
  182|  13.0k|        {
  183|  13.0k|            PopParsingContext();
  184|  13.0k|            continue;
  185|  13.0k|        }
  186|       |
  187|  1.31M|        const Token& token = CurrentToken();
  188|       |
  189|       |        // Parse global function definition
  190|  1.31M|        switch (token.GetTokenKind())
  191|  1.31M|        {
  192|   139k|            case TokenKind::KW_Func: {
  ------------------
  |  Branch (192:13): [True: 139k, False: 1.17M]
  ------------------
  193|   139k|                ConsumeCurrent();
  194|       |
  195|   139k|                auto function_definition = ParseFunctionDefinition();
  196|   139k|                if (!function_definition)
  ------------------
  |  Branch (196:21): [True: 121k, False: 18.2k]
  ------------------
  197|   121k|                {
  198|   121k|                    err("ERR: Failed to parse function definition!\n");
  199|   121k|                    continue;
  200|   121k|                }
  201|       |
  202|  18.2k|                AppendFunctionToDocument(function_definition.release_not_null());
  203|  18.2k|                break;
  204|   139k|            }
  205|       |
  206|  2.05k|            case TokenKind::Comment:
  ------------------
  |  Branch (206:13): [True: 2.05k, False: 1.30M]
  ------------------
  207|  3.67k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (207:13): [True: 1.61k, False: 1.31M]
  ------------------
  208|  5.73k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (208:13): [True: 2.06k, False: 1.30M]
  ------------------
  209|   149k|            case TokenKind::NewLine: {
  ------------------
  |  Branch (209:13): [True: 143k, False: 1.16M]
  ------------------
  210|       |                // Simply ignore and consume newlines and comments
  211|   149k|                ConsumeCurrent();
  212|   149k|                break;
  213|  5.73k|            }
  214|  72.7k|            case TokenKind::NotAToken: {
  ------------------
  |  Branch (214:13): [True: 72.7k, False: 1.23M]
  ------------------
  215|  72.7k|                err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  216|  72.7k|                                std::string_view(token.GetText())));
  217|  72.7k|                ConsumeCurrent();
  218|  72.7k|                break;
  219|  5.73k|            }
  220|       |
  221|  3.15k|            case TokenKind::PP_Include: {
  ------------------
  |  Branch (221:13): [True: 3.15k, False: 1.30M]
  ------------------
  222|  3.15k|                ConsumeCurrent();
  223|       |
  224|  3.15k|                ParseIncludeDirective();
  225|       |
  226|  3.15k|                break;
  227|  5.73k|            }
  228|       |
  229|    312|            case TokenKind::PP_IncludeOnce: {
  ------------------
  |  Branch (229:13): [True: 312, False: 1.31M]
  ------------------
  230|    312|                ConsumeCurrent();
  231|       |
  232|    312|                m_IncludeOnceFiles.emplace(CurrentSourceFile().get());
  233|       |
  234|    312|                RequireNewLine();
  235|       |
  236|    312|                break;
  237|  5.73k|            }
  238|       |
  239|   946k|            default: {
  ------------------
  |  Branch (239:13): [True: 946k, False: 365k]
  ------------------
  240|   946k|                auto statement = ParseStatement();
  241|   946k|                if (!statement)
  ------------------
  |  Branch (241:21): [True: 868k, False: 77.4k]
  ------------------
  242|   868k|                {
  243|       |                    // TODO: Proper error reporting
  244|   868k|                    err("ERR: Failed to parse statement!\n");
  245|       |
  246|   868k|                    if (HasMoreTokens())
  ------------------
  |  Branch (246:25): [True: 862k, False: 5.83k]
  ------------------
  247|   862k|                    {
  248|       |                        // Swallow the bad token
  249|   862k|                        ConsumeCurrent();
  250|   862k|                    }
  251|   868k|                    continue;
  252|   868k|                }
  253|       |
  254|  77.4k|                AppendStatementToDocument(statement.release_not_null());
  255|       |
  256|  77.4k|                RequireNewLine();
  257|  77.4k|                break;
  258|   946k|            }
  259|  1.31M|        }
  260|  1.31M|    }
  261|  13.0k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamE:
  265|  13.0k|{
  266|  13.0k|    PushParsingContext(phi::move(source_file), phi::move(token_stream), SourceLocation::Invalid());
  267|  13.0k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamENS_14SourceLocationE:
  271|  13.0k|{
  272|  13.0k|    ParsingContext context{.source_file   = phi::move(source_file),
  273|  13.0k|                           .token_stream  = phi::move(token_stream),
  274|  13.0k|                           .included_from = phi::move(included_from)};
  275|       |
  276|  13.0k|    m_ParsingContextStack.emplace(phi::move(context));
  277|  13.0k|    m_SourceManager->SetLocalSearchPath(source_file->m_FilePath.parent_path());
  278|  13.0k|}
_ZN10OpenAutoIt6Parser17PopParsingContextEv:
  281|  13.0k|{
  282|  13.0k|    m_ParsingContextStack.pop();
  283|  13.0k|    if (!m_ParsingContextStack.empty())
  ------------------
  |  Branch (283:9): [True: 0, False: 13.0k]
  ------------------
  284|      0|    {
  285|      0|        m_SourceManager->SetLocalSearchPath(
  286|      0|                m_ParsingContextStack.top().source_file->m_FilePath.parent_path());
  287|      0|    }
  288|  13.0k|    else
  289|  13.0k|    {
  290|  13.0k|        m_SourceManager->SetLocalSearchPath("");
  291|  13.0k|    }
  292|  13.0k|}
_ZN10OpenAutoIt6Parser21CurrentParsingContextEv:
  295|    312|{
  296|    312|    PHI_ASSERT(!m_ParsingContextStack.empty());
  297|       |
  298|    312|    return m_ParsingContextStack.top();
  299|    312|}
_ZN10OpenAutoIt6Parser17CurrentSourceFileEv:
  302|    312|{
  303|    312|    return CurrentParsingContext().source_file.not_null();
  304|    312|}
_ZN10OpenAutoIt6Parser18CurrentTokenStreamEv:
  307|  6.08M|{
  308|  6.08M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  309|       |
  310|  6.08M|    return m_ParsingContextStack.top().token_stream;
  311|  6.08M|}
_ZNK10OpenAutoIt6Parser18CurrentTokenStreamEv:
  314|  36.5M|{
  315|  36.5M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  316|       |
  317|  36.5M|    return m_ParsingContextStack.top().token_stream;
  318|  36.5M|}
_ZNK10OpenAutoIt6Parser13HasMoreTokensEv:
  321|  12.0M|{
  322|  12.0M|    return CurrentTokenStream().has_more();
  323|  12.0M|}
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  326|  12.2M|{
  327|  12.2M|    PHI_ASSERT(CurrentTokenStream().has_more());
  328|       |
  329|  12.2M|    return CurrentTokenStream().look_ahead();
  330|  12.2M|}
_ZNK10OpenAutoIt6Parser13PreviousTokenEv:
  333|  56.7k|{
  334|  56.7k|    return CurrentTokenStream().look_behind();
  335|  56.7k|}
_ZNK10OpenAutoIt6Parser21ShouldContinueParsingEv:
  338|  1.33M|{
  339|  1.33M|    const phi::boolean stack_empty          = m_ParsingContextStack.empty();
  340|  1.33M|    const phi::boolean fatal_error_occurred = m_DiagnosticEngine->HasFatalErrorOccurred();
  341|  1.33M|    const phi::boolean error_limit_reached =
  342|  1.33M|            (m_DiagnosticEngine->GetErrorLimit() == 0u ?
  ------------------
  |  Branch (342:14): [True: 1.33M, False: 0]
  ------------------
  343|  1.33M|                     false :
  344|  1.33M|                     m_DiagnosticEngine->GetNumberOfError() >= m_DiagnosticEngine->GetErrorLimit());
  345|       |
  346|  1.33M|    return !stack_empty && !fatal_error_occurred && !error_limit_reached;
  ------------------
  |  Branch (346:12): [True: 1.32M, False: 13.0k]
  |  Branch (346:28): [True: 1.32M, False: 0]
  |  Branch (346:53): [True: 1.32M, False: 0]
  ------------------
  347|  1.33M|}
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  350|  4.75M|{
  351|  4.75M|    CurrentTokenStream().consume();
  352|  4.75M|}
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  355|  77.7k|{
  356|  78.7k|    while (HasMoreTokens())
  ------------------
  |  Branch (356:12): [True: 78.0k, False: 730]
  ------------------
  357|  78.0k|    {
  358|  78.0k|        switch (CurrentToken().GetTokenKind())
  359|  78.0k|        {
  360|    502|            case TokenKind::Comment:
  ------------------
  |  Branch (360:13): [True: 502, False: 77.5k]
  ------------------
  361|    726|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (361:13): [True: 224, False: 77.8k]
  ------------------
  362|  1.00k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (362:13): [True: 276, False: 77.7k]
  ------------------
  363|  1.00k|                ConsumeCurrent();
  364|  1.00k|                break;
  365|       |
  366|  77.0k|            default:
  ------------------
  |  Branch (366:13): [True: 77.0k, False: 1.00k]
  ------------------
  367|  77.0k|                return;
  368|  78.0k|        }
  369|  78.0k|    }
  370|  77.7k|}
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  373|  1.24M|{
  374|  1.26M|    while (HasMoreTokens())
  ------------------
  |  Branch (374:12): [True: 1.25M, False: 457]
  ------------------
  375|  1.25M|    {
  376|  1.25M|        switch (CurrentToken().GetTokenKind())
  377|  1.25M|        {
  378|  1.35k|            case TokenKind::Comment:
  ------------------
  |  Branch (378:13): [True: 1.35k, False: 1.25M]
  ------------------
  379|  1.81k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (379:13): [True: 459, False: 1.25M]
  ------------------
  380|  2.30k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (380:13): [True: 485, False: 1.25M]
  ------------------
  381|  19.9k|            case TokenKind::NewLine:
  ------------------
  |  Branch (381:13): [True: 17.5k, False: 1.24M]
  ------------------
  382|  19.9k|                ConsumeCurrent();
  383|  19.9k|                break;
  384|       |
  385|  1.23M|            default:
  ------------------
  |  Branch (385:13): [True: 1.23M, False: 19.9k]
  ------------------
  386|  1.23M|                return;
  387|  1.25M|        }
  388|  1.25M|    }
  389|  1.24M|}
_ZN10OpenAutoIt6Parser14RequireNewLineEv:
  392|  77.7k|{
  393|  77.7k|    ConsumeComments();
  394|       |
  395|  77.7k|    if (!HasMoreTokens())
  ------------------
  |  Branch (395:9): [True: 730, False: 77.0k]
  ------------------
  396|    730|    {
  397|    730|        return;
  398|    730|    }
  399|       |
  400|  77.0k|    const Token& token = CurrentToken();
  401|       |
  402|  77.0k|    if (token.GetTokenKind() != TokenKind::NewLine)
  ------------------
  |  Branch (402:9): [True: 54.6k, False: 22.3k]
  ------------------
  403|  54.6k|    {
  404|  54.6k|        Diag().Error(DiagnosticId::Expected, PreviousToken().GetBeginLocation(), "new line");
  405|  54.6k|    }
  406|       |
  407|  77.0k|    ConsumeCurrent();
  408|  77.0k|}
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  411|  2.04M|{
  412|       |    // Do we even have more tokens?
  413|  2.04M|    if (!HasMoreTokens())
  ------------------
  |  Branch (413:9): [True: 9.53k, False: 2.04M]
  ------------------
  414|  9.53k|    {
  415|  9.53k|        return {};
  416|  9.53k|    }
  417|       |
  418|  2.04M|    const Token& token = CurrentToken();
  419|       |
  420|       |    // Is this the correct token kind
  421|  2.04M|    if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (421:9): [True: 424k, False: 1.61M]
  ------------------
  422|   424k|    {
  423|   424k|        return {};
  424|   424k|    }
  425|       |
  426|  1.61M|    ConsumeCurrent();
  427|  1.61M|    return token;
  428|  2.04M|}
_ZN10OpenAutoIt6Parser4DiagEv:
  444|  59.5k|{
  445|  59.5k|    return {m_DiagnosticEngine};
  446|  59.5k|}
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  449|   139k|{
  450|       |    // Next we MUST parse the function name
  451|   139k|    auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  452|   139k|    if (!function_name_token)
  ------------------
  |  Branch (452:9): [True: 5.01k, False: 134k]
  ------------------
  453|  5.01k|    {
  454|  5.01k|        err("Expected identifier for function name");
  455|  5.01k|        return {};
  456|  5.01k|    }
  457|       |
  458|   134k|    auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  459|   134k|    function_definition->m_FunctionName = function_name_token->GetText();
  460|       |
  461|       |    // Next we MUST parse an opening parenthesis (LParen)
  462|   134k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (462:9): [True: 11.6k, False: 123k]
  ------------------
  463|  11.6k|    {
  464|  11.6k|        err("Expected opening parenthesis");
  465|  11.6k|        return {};
  466|  11.6k|    }
  467|       |
  468|       |    // Next we parse the function parameter declarations until right parenthesis (RParen)
  469|   230k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (469:12): [True: 230k, False: 251]
  |  Branch (469:12): [True: 143k, False: 87.7k]
  |  Branch (469:31): [True: 143k, False: 87.5k]
  ------------------
  470|   143k|    {
  471|   143k|        phi::optional<FunctionParameter> function_parameter_optional =
  472|   143k|                ParseFunctionParameterDefinition();
  473|   143k|        if (!function_parameter_optional)
  ------------------
  |  Branch (473:13): [True: 35.4k, False: 107k]
  ------------------
  474|  35.4k|        {
  475|       |            // TODO: Proper error reporting
  476|  35.4k|            return {};
  477|  35.4k|        }
  478|   107k|        FunctionParameter& function_parameter = function_parameter_optional.value();
  479|       |
  480|   107k|        function_definition->m_Parameters.emplace_back(phi::move(function_parameter));
  481|       |
  482|       |        // Parse comma
  483|   107k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (483:13): [True: 107k, False: 0]
  |  Branch (483:13): [True: 106k, False: 1.65k]
  |  Branch (483:32): [True: 106k, False: 1.65k]
  ------------------
  484|   106k|        {
  485|   106k|            ConsumeCurrent();
  486|   106k|        }
  487|   107k|    }
  488|       |
  489|       |    // Next we MUST parse a right parenthesis (RParen)
  490|  87.7k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (490:9): [True: 251, False: 87.5k]
  ------------------
  491|    251|    {
  492|    251|        err("ERR: Expected ')'");
  493|    251|        return {};
  494|    251|    }
  495|       |
  496|       |    // Next we MUST parse a new line
  497|  87.5k|    if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (497:9): [True: 6.07k, False: 81.4k]
  ------------------
  498|  6.07k|    {
  499|  6.07k|        err("ERR: Missing newline!");
  500|  6.07k|        return {};
  501|  6.07k|    }
  502|       |
  503|       |    // Next parse Statements until EndFunc
  504|   153k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (504:12): [True: 152k, False: 152]
  |  Branch (504:12): [True: 134k, False: 18.4k]
  |  Branch (504:31): [True: 134k, False: 18.2k]
  ------------------
  505|   134k|    {
  506|   134k|        auto statement = ParseStatement();
  507|   134k|        if (!statement)
  ------------------
  |  Branch (507:13): [True: 63.0k, False: 71.5k]
  ------------------
  508|  63.0k|        {
  509|  63.0k|            err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  510|  63.0k|                            std::string_view(function_definition->m_FunctionName)));
  511|       |            // TODO: Report proper error
  512|  63.0k|            return {};
  513|  63.0k|        }
  514|       |
  515|  71.5k|        function_definition->m_FunctionBody.emplace_back(phi::move(statement.release_not_null()));
  516|       |
  517|  71.5k|        ConsumeNewLineAndComments();
  518|  71.5k|    }
  519|       |
  520|       |    // Next we MUST parse EndFunc
  521|  18.4k|    if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (521:9): [True: 152, False: 18.2k]
  ------------------
  522|    152|    {
  523|       |        // TODO: Proper error
  524|    152|        return {};
  525|    152|    }
  526|       |
  527|  18.2k|    return phi::move(function_definition);
  528|  18.4k|}
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  531|   143k|{
  532|       |    // TODO: This entire function requires more error checks
  533|   143k|    FunctionParameter parameter;
  534|       |
  535|   169k|    while (HasMoreTokens())
  ------------------
  |  Branch (535:12): [True: 168k, False: 179]
  ------------------
  536|   168k|    {
  537|   168k|        const Token& token = CurrentToken();
  538|       |
  539|   168k|        switch (token.GetTokenKind())
  540|   168k|        {
  541|  14.1k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (541:13): [True: 14.1k, False: 154k]
  ------------------
  542|  14.1k|                parameter.name = token.GetText().substring_view(1u);
  543|  14.1k|                ConsumeCurrent();
  544|  14.1k|                break;
  545|      0|            }
  546|    194|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (546:13): [True: 194, False: 168k]
  ------------------
  547|    194|                parameter.as_const = true;
  548|    194|                ConsumeCurrent();
  549|    194|                break;
  550|      0|            }
  551|     66|            case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (551:13): [True: 66, False: 168k]
  ------------------
  552|     66|                parameter.by_ref = true;
  553|     66|                ConsumeCurrent();
  554|     66|                break;
  555|      0|            }
  556|  12.2k|            case TokenKind::OP_Equals: {
  ------------------
  |  Branch (556:13): [True: 12.2k, False: 156k]
  ------------------
  557|  12.2k|                if (parameter.name.is_empty())
  ------------------
  |  Branch (557:21): [True: 220, False: 12.0k]
  ------------------
  558|    220|                {
  559|       |                    // TODO: PROPER ERROR
  560|    220|                    return {};
  561|    220|                }
  562|       |
  563|       |                // Consume the '='
  564|  12.0k|                ConsumeCurrent();
  565|       |
  566|       |                // Default value is an expression
  567|  12.0k|                auto default_expression = ParseExpression();
  568|  12.0k|                if (!default_expression)
  ------------------
  |  Branch (568:21): [True: 538, False: 11.5k]
  ------------------
  569|    538|                {
  570|       |                    // TODO: Report error
  571|    538|                    return {};
  572|    538|                }
  573|       |
  574|       |                // For default values we artificially create a variable assignment
  575|  11.5k|                auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  576|       |
  577|  11.5k|                default_var_assignment->m_Scope                  = VariableScope::Auto;
  578|  11.5k|                default_var_assignment->m_VariableName           = parameter.name;
  579|  11.5k|                default_var_assignment->m_InitialValueExpression = phi::move(default_expression);
  580|       |
  581|  11.5k|                parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  582|  11.5k|                break;
  583|  12.0k|            }
  584|   106k|            case TokenKind::Comma:
  ------------------
  |  Branch (584:13): [True: 106k, False: 62.8k]
  ------------------
  585|   107k|            case TokenKind::RParen: {
  ------------------
  |  Branch (585:13): [True: 1.65k, False: 167k]
  ------------------
  586|   107k|                return phi::move(parameter);
  587|   106k|            }
  588|  34.5k|            default: {
  ------------------
  |  Branch (588:13): [True: 34.5k, False: 134k]
  ------------------
  589|       |                // TODO: Report error
  590|  34.5k|                return {};
  591|   106k|            }
  592|   168k|        }
  593|   168k|    }
  594|       |
  595|       |    // TODO: Report error unexpected EOF
  596|    179|    return {};
  597|   143k|}
_ZN10OpenAutoIt6Parser21ParseIncludeDirectiveEv:
  600|  3.15k|{
  601|  3.15k|    if (!HasMoreTokens())
  ------------------
  |  Branch (601:9): [True: 8, False: 3.14k]
  ------------------
  602|      8|    {
  603|      8|        Diag().Error(DiagnosticId::UnexpectedEndOfFile, PreviousToken().GetBeginLocation(),
  604|      8|                     "include directive");
  605|      8|        return;
  606|      8|    }
  607|       |
  608|  3.14k|    const Token&     token = CurrentToken();
  609|  3.14k|    phi::string_view file_name;
  610|  3.14k|    IncludeType      include_type = IncludeType::Local;
  611|       |
  612|       |    // Local include like this '#include "foo.au3"'
  613|  3.14k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (613:9): [True: 267, False: 2.88k]
  ------------------
  614|    267|    {
  615|    267|        ConsumeCurrent();
  616|       |
  617|       |        // Get the file name
  618|    267|        file_name = token.GetText().substring_view(1u, token.GetText().length() - 2u);
  619|    267|    }
  620|       |    // Global include like this '#include <foo.au3>'
  621|  2.88k|    else if (token.GetTokenKind() == TokenKind::OP_LessThan)
  ------------------
  |  Branch (621:14): [True: 2.56k, False: 311]
  ------------------
  622|  2.56k|    {
  623|       |        // FIXME: This is not really a nice way, but we essentially start from after the opening '<' and include everything upto the closing '>'
  624|  2.56k|        ConsumeCurrent();
  625|       |
  626|  2.56k|        include_type = IncludeType::Global;
  627|  2.56k|        file_name    = token.GetText().remove_prefix(1u);
  628|       |
  629|  2.56k|        phi::boolean found_end{false};
  630|  2.56k|        phi::boolean continue_parsing{true};
  631|  6.53k|        while (HasMoreTokens() && continue_parsing)
  ------------------
  |  Branch (631:16): [True: 6.46k, False: 73]
  |  Branch (631:16): [True: 3.97k, False: 2.56k]
  |  Branch (631:35): [True: 3.97k, False: 2.49k]
  ------------------
  632|  3.97k|        {
  633|  3.97k|            const Token& end_token = CurrentToken();
  634|       |
  635|  3.97k|            if (end_token.GetTokenKind() == TokenKind::OP_GreaterThan)
  ------------------
  |  Branch (635:17): [True: 450, False: 3.52k]
  ------------------
  636|    450|            {
  637|    450|                found_end        = true;
  638|    450|                continue_parsing = false;
  639|    450|                const phi::usize difference =
  640|    450|                        phi::narrow_cast<phi::usize>(end_token.GetText().data() - file_name.data());
  641|    450|                file_name.add_postfix(difference);
  642|    450|            }
  643|  3.52k|            else if (end_token.GetTokenKind() == TokenKind::NewLine)
  ------------------
  |  Branch (643:22): [True: 2.05k, False: 1.46k]
  ------------------
  644|  2.05k|            {
  645|       |                // Stop once we hit a newline
  646|  2.05k|                continue_parsing = false;
  647|  2.05k|            }
  648|       |
  649|  3.97k|            ConsumeCurrent();
  650|  3.97k|        }
  651|       |
  652|  2.56k|        if (!found_end)
  ------------------
  |  Branch (652:13): [True: 2.11k, False: 450]
  ------------------
  653|  2.11k|        {
  654|  2.11k|            Diag().Error(DiagnosticId::Expected, PreviousToken().GetEndLocation(), "'>'")
  655|  2.11k|                    .Note(token.GetBeginLocation(), "to match this '<'");
  656|  2.11k|            return;
  657|  2.11k|        }
  658|  2.56k|    }
  659|    311|    else
  660|    311|    {
  661|    311|        Diag().Error(DiagnosticId::Expected, token.GetEndLocation(), "\"Filename\" or <Filename>");
  662|    311|        return;
  663|    311|    }
  664|       |
  665|       |    // Limit include nesting
  666|    717|    if (m_ParsingContextStack.size() >= MaxNumberOfIncludeNesting)
  ------------------
  |  Branch (666:9): [True: 0, False: 717]
  ------------------
  667|      0|    {
  668|      0|        Diag().Error(DiagnosticId::IncludeNestingTooDeeply, token.GetBeginLocation());
  669|      0|        return;
  670|      0|    }
  671|       |
  672|       |    // Emit error for empty file names
  673|    717|    if (file_name.is_empty())
  ------------------
  |  Branch (673:9): [True: 194, False: 523]
  ------------------
  674|    194|    {
  675|    194|        Diag().Error(DiagnosticId::EmptyFilename, token.GetBeginLocation());
  676|    194|        return;
  677|    194|    }
  678|       |
  679|       |    // Emit error if the file name is too long
  680|    523|    if (file_name.length() > 255u)
  ------------------
  |  Branch (680:9): [True: 72, False: 451]
  ------------------
  681|     72|    {
  682|     72|        Diag().Error(DiagnosticId::FileNameTooLong, token.GetBeginLocation(),
  683|     72|                     std::string_view(file_name));
  684|     72|        return;
  685|     72|    }
  686|       |
  687|       |    // Load the file from the SourceManager
  688|    451|    phi::observer_ptr<const SourceFile> include_file =
  689|    451|            m_SourceManager->LoadFile(std::string_view(file_name), include_type);
  690|    451|    if (!include_file)
  ------------------
  |  Branch (690:9): [True: 451, False: 0]
  ------------------
  691|    451|    {
  692|    451|        Diag().Error(DiagnosticId::FileNotFound, token.GetBeginLocation(),
  693|    451|                     std::string_view(file_name));
  694|    451|        return;
  695|    451|    }
  696|       |
  697|      0|    RequireNewLine();
  698|       |
  699|       |    // Append the file
  700|      0|    AppendSourceFileToDocument(include_file.not_null(), token.GetBeginLocation());
  701|      0|}
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  704|  1.11M|{
  705|  1.11M|    ConsumeNewLineAndComments();
  706|       |
  707|  1.11M|    if (!HasMoreTokens())
  ------------------
  |  Branch (707:9): [True: 48, False: 1.11M]
  ------------------
  708|     48|    {
  709|       |        // TODO: Report proper error
  710|     48|        return {};
  711|     48|    }
  712|       |
  713|  1.11M|    phi::scope_ptr<ASTStatement> ret_statement;
  714|       |
  715|       |    // Loop until we parse something or there is nothing left to parse
  716|  1.11M|    const Token& token = CurrentToken();
  717|  1.11M|    switch (token.GetTokenKind())
  718|  1.11M|    {
  719|       |        // Variable assignment
  720|    524|        case TokenKind::KW_Const:
  ------------------
  |  Branch (720:9): [True: 524, False: 1.11M]
  ------------------
  721|  1.63k|        case TokenKind::KW_Local:
  ------------------
  |  Branch (721:9): [True: 1.10k, False: 1.11M]
  ------------------
  722|  2.11k|        case TokenKind::KW_Global:
  ------------------
  |  Branch (722:9): [True: 480, False: 1.11M]
  ------------------
  723|  2.56k|        case TokenKind::KW_Static:
  ------------------
  |  Branch (723:9): [True: 451, False: 1.11M]
  ------------------
  724|  88.9k|        case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (724:9): [True: 86.4k, False: 1.02M]
  ------------------
  725|  88.9k|            ret_statement = ParseVariableAssignment();
  726|  88.9k|            if (!ret_statement)
  ------------------
  |  Branch (726:17): [True: 3.04k, False: 85.9k]
  ------------------
  727|  3.04k|            {
  728|  3.04k|                err("ERR: Failed to parse variable assignment!\n");
  729|  3.04k|                return {};
  730|  3.04k|            }
  731|  85.9k|            break;
  732|  88.9k|        }
  733|       |
  734|       |        // If Statement
  735|  85.9k|        case TokenKind::KW_If: {
  ------------------
  |  Branch (735:9): [True: 46.8k, False: 1.06M]
  ------------------
  736|  46.8k|            ret_statement = ParseIfStatement();
  737|  46.8k|            if (!ret_statement)
  ------------------
  |  Branch (737:17): [True: 45.4k, False: 1.39k]
  ------------------
  738|  45.4k|            {
  739|  45.4k|                err("ERR: Failed to parse if statement!\n");
  740|  45.4k|                return {};
  741|  45.4k|            }
  742|  1.39k|            break;
  743|  46.8k|        }
  744|       |
  745|       |        // While statement
  746|  6.16k|        case TokenKind::KW_While: {
  ------------------
  |  Branch (746:9): [True: 6.16k, False: 1.10M]
  ------------------
  747|  6.16k|            ret_statement = ParseWhileStatement();
  748|  6.16k|            if (!ret_statement)
  ------------------
  |  Branch (748:17): [True: 5.33k, False: 824]
  ------------------
  749|  5.33k|            {
  750|  5.33k|                err("ERR: Failed to parse while statement!\n");
  751|  5.33k|                return {};
  752|  5.33k|            }
  753|    824|            break;
  754|  6.16k|        }
  755|       |
  756|       |        // Exit statement
  757|  5.77k|        case TokenKind::KW_Exit: {
  ------------------
  |  Branch (757:9): [True: 5.77k, False: 1.10M]
  ------------------
  758|  5.77k|            ret_statement = ParseExitStatement();
  759|  5.77k|            if (!ret_statement)
  ------------------
  |  Branch (759:17): [True: 0, False: 5.77k]
  ------------------
  760|      0|            {
  761|      0|                err("ERR: Failed to parse exit statement!\n");
  762|      0|                return {};
  763|      0|            }
  764|  5.77k|            break;
  765|  5.77k|        }
  766|       |
  767|   964k|        default: {
  ------------------
  |  Branch (767:9): [True: 964k, False: 147k]
  ------------------
  768|       |            // Try to parse ExpressionStatement
  769|   964k|            ret_statement = ParseExpressionStatement();
  770|   964k|            if (!ret_statement)
  ------------------
  |  Branch (770:17): [True: 899k, False: 64.6k]
  ------------------
  771|   899k|            {
  772|   899k|                err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  773|   899k|                                enum_name(token.GetTokenKind())));
  774|   899k|                return {};
  775|   899k|            }
  776|  64.6k|            break;
  777|   964k|        }
  778|  1.11M|    }
  779|       |
  780|   158k|    return phi::move(ret_statement);
  781|  1.11M|}
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  784|  6.16k|{
  785|  6.16k|    const Token& token = CurrentToken();
  786|  6.16k|    if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (786:9): [True: 0, False: 6.16k]
  ------------------
  787|      0|    {
  788|       |        // TODO: Proper error
  789|      0|        return {};
  790|      0|    }
  791|  6.16k|    ConsumeCurrent();
  792|       |
  793|       |    // Next we MUST parse an Expression
  794|  6.16k|    auto while_condition_expression = ParseExpression();
  795|  6.16k|    if (!while_condition_expression)
  ------------------
  |  Branch (795:9): [True: 545, False: 5.61k]
  ------------------
  796|    545|    {
  797|       |        // TODO: Proper error
  798|    545|        return {};
  799|    545|    }
  800|       |
  801|  5.61k|    auto while_statement =
  802|  5.61k|            phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  803|       |
  804|       |    // Parse statements until KW_WEnd
  805|  9.08k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (805:12): [True: 8.94k, False: 143]
  |  Branch (805:12): [True: 8.11k, False: 967]
  |  Branch (805:31): [True: 8.11k, False: 824]
  ------------------
  806|  8.11k|    {
  807|  8.11k|        ConsumeNewLineAndComments();
  808|       |
  809|       |        // Parse statements
  810|  8.11k|        auto statement = ParseStatement();
  811|  8.11k|        if (!statement)
  ------------------
  |  Branch (811:13): [True: 4.65k, False: 3.46k]
  ------------------
  812|  4.65k|        {
  813|       |            // TODO: Propeer error
  814|  4.65k|            return {};
  815|  4.65k|        }
  816|       |
  817|  3.46k|        while_statement->m_Statements.emplace_back(statement.release_not_null());
  818|  3.46k|    }
  819|       |
  820|    967|    if (!HasMoreTokens())
  ------------------
  |  Branch (820:9): [True: 143, False: 824]
  ------------------
  821|    143|    {
  822|       |        // TODO: Proper error
  823|    143|        return {};
  824|    143|    }
  825|       |
  826|       |    // Next token MUST be KW_Wend
  827|    824|    const Token& wend_token = CurrentToken();
  828|    824|    if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (828:9): [True: 0, False: 824]
  ------------------
  829|      0|    {
  830|       |        // TODO: Proper error
  831|      0|        return {};
  832|      0|    }
  833|    824|    ConsumeCurrent();
  834|       |
  835|    824|    return phi::move(while_statement);
  836|    824|}
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  839|  88.9k|{
  840|  88.9k|    auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  841|       |
  842|  88.9k|    phi::boolean parsed_identifier = false;
  843|       |    // Parse all specifiers until we hit a VariableIdentifier
  844|   177k|    while (HasMoreTokens() && !parsed_identifier)
  ------------------
  |  Branch (844:12): [True: 177k, False: 376]
  |  Branch (844:12): [True: 91.5k, False: 86.4k]
  |  Branch (844:31): [True: 91.5k, False: 86.0k]
  ------------------
  845|  91.5k|    {
  846|  91.5k|        const Token& current_token = CurrentToken();
  847|  91.5k|        ConsumeCurrent();
  848|       |
  849|  91.5k|        switch (current_token.GetTokenKind())
  850|  91.5k|        {
  851|    846|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (851:13): [True: 846, False: 90.6k]
  ------------------
  852|    846|                if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (852:21): [True: 322, False: 524]
  ------------------
  853|    322|                {
  854|       |                    // TODO: Error more than one const specifier
  855|    322|                    err("ERR: More than one const specifier given\n");
  856|    322|                    return {};
  857|    322|                }
  858|    524|                variable_declaration->m_IsConst = true;
  859|    524|                break;
  860|    846|            }
  861|       |
  862|    646|            case TokenKind::KW_Static: {
  ------------------
  |  Branch (862:13): [True: 646, False: 90.8k]
  ------------------
  863|    646|                if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (863:21): [True: 195, False: 451]
  ------------------
  864|    195|                {
  865|       |                    // TODO: Error more than one static specifier
  866|    195|                    err("ERR: More than one static specifier given\n");
  867|    195|                    return {};
  868|    195|                }
  869|    451|                variable_declaration->m_IsStatic = true;
  870|    451|                break;
  871|    646|            }
  872|       |
  873|    674|            case TokenKind::KW_Global: {
  ------------------
  |  Branch (873:13): [True: 674, False: 90.8k]
  ------------------
  874|    674|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (874:21): [True: 194, False: 480]
  ------------------
  875|    194|                {
  876|       |                    // TODO: Error more than one scope specifier
  877|    194|                    err("ERR: More than one scope specifier given\n");
  878|    194|                    return {};
  879|    194|                }
  880|    480|                variable_declaration->m_Scope = VariableScope::Global;
  881|    480|                break;
  882|    674|            }
  883|       |
  884|  2.10k|            case TokenKind::KW_Local: {
  ------------------
  |  Branch (884:13): [True: 2.10k, False: 89.4k]
  ------------------
  885|  2.10k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (885:21): [True: 992, False: 1.10k]
  ------------------
  886|    992|                {
  887|       |                    // TODO: Error more than one scope specifier
  888|    992|                    err("ERR: More than one scope specifier given\n");
  889|    992|                    return {};
  890|    992|                }
  891|  1.10k|                variable_declaration->m_Scope = VariableScope::Local;
  892|  1.10k|                break;
  893|  2.10k|            }
  894|       |
  895|  86.4k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (895:13): [True: 86.4k, False: 5.10k]
  ------------------
  896|       |                // VariableIdentifiers begin with a '$'
  897|       |                // Like: $MyVariable
  898|       |                // So for the name we ignore the very first character
  899|  86.4k|                PHI_ASSERT(current_token.GetText().length() > 1u);
  900|  86.4k|                variable_declaration->m_VariableName = current_token.GetText().substring_view(1u);
  901|       |
  902|  86.4k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  903|  86.4k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  904|       |
  905|  86.4k|                parsed_identifier = true;
  906|  86.4k|                break;
  907|  2.10k|            }
  908|       |
  909|    834|            default: {
  ------------------
  |  Branch (909:13): [True: 834, False: 90.6k]
  ------------------
  910|       |                // TODO: Error unexpected token
  911|    834|                return {};
  912|  2.10k|            }
  913|  91.5k|        }
  914|  91.5k|    }
  915|       |
  916|  86.4k|    if (!parsed_identifier)
  ------------------
  |  Branch (916:9): [True: 24, False: 86.4k]
  ------------------
  917|     24|    {
  918|       |        // TODO: Error variable declaration ends before the VariableIdentifier
  919|     24|        err("ERR: Missing variable identifier!\n");
  920|     24|        return {};
  921|     24|    }
  922|       |
  923|       |    // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  924|  86.4k|    if (!HasMoreTokens())
  ------------------
  |  Branch (924:9): [True: 352, False: 86.0k]
  ------------------
  925|    352|    {
  926|    352|        return variable_declaration;
  927|    352|    }
  928|       |
  929|       |    // Check for equals
  930|  86.0k|    const Token& next_token = CurrentToken();
  931|       |
  932|  86.0k|    if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (932:9): [True: 3.36k, False: 82.6k]
  ------------------
  933|  3.36k|    {
  934|  3.36k|        ConsumeCurrent();
  935|       |
  936|       |        // Now me MUST parse an expression
  937|  3.36k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
  938|  3.36k|        if (!expression)
  ------------------
  |  Branch (938:13): [True: 480, False: 2.88k]
  ------------------
  939|    480|        {
  940|       |            // TODO: Error failed to parse a valid expression
  941|    480|            err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  942|    480|            return {};
  943|    480|        }
  944|       |
  945|  2.88k|        variable_declaration->m_InitialValueExpression = phi::move(expression);
  946|  2.88k|    }
  947|       |
  948|  85.5k|    return variable_declaration;
  949|  86.0k|}
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  952|   964k|{
  953|   964k|    auto expression = ParseExpression();
  954|   964k|    if (!expression)
  ------------------
  |  Branch (954:9): [True: 560k, False: 404k]
  ------------------
  955|   560k|    {
  956|   560k|        return {};
  957|   560k|    }
  958|       |
  959|   404k|    auto expression_statement =
  960|   404k|            phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  961|       |
  962|   404k|    if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (962:9): [True: 339k, False: 64.6k]
  ------------------
  963|   339k|    {
  964|   339k|        err(fmt::format("Expression {:s} is not valid as an statement\n",
  965|   339k|                        expression_statement->m_Expression->Name()));
  966|   339k|        return {};
  967|   339k|    }
  968|       |
  969|  64.6k|    return phi::move(expression_statement);
  970|   404k|}
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  973|  46.8k|{
  974|  46.8k|    if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (974:9): [True: 0, False: 46.8k]
  ------------------
  975|      0|    {
  976|      0|        return {};
  977|      0|    }
  978|       |
  979|       |    // Next me MUST parse an expression
  980|  46.8k|    auto if_condition = ParseExpression();
  981|  46.8k|    if (!if_condition)
  ------------------
  |  Branch (981:9): [True: 3.21k, False: 43.6k]
  ------------------
  982|  3.21k|    {
  983|  3.21k|        err("ERR: failed to parse expression!\n");
  984|       |
  985|  3.21k|        return {};
  986|  3.21k|    }
  987|       |
  988|       |    // Next we MUST parse Then
  989|  43.6k|    if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (989:9): [True: 21.6k, False: 21.9k]
  ------------------
  990|  21.6k|    {
  991|  21.6k|        err("ERR: Missing then!\n");
  992|       |
  993|  21.6k|        return {};
  994|  21.6k|    }
  995|       |
  996|  21.9k|    ConsumeNewLineAndComments();
  997|       |
  998|  21.9k|    IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  999|       |
 1000|       |    // Next parse statements until we hit and EndIf, ElseIf or Else
 1001|  25.8k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1001:12): [True: 25.7k, False: 64]
  |  Branch (1001:12): [True: 9.80k, False: 16.0k]
  |  Branch (1001:31): [True: 24.9k, False: 863]
  ------------------
 1002|  25.8k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1002:12): [True: 16.9k, False: 7.99k]
  ------------------
 1003|  25.8k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1003:12): [True: 9.80k, False: 7.11k]
  ------------------
 1004|  9.80k|    {
 1005|  9.80k|        auto statement = ParseStatement();
 1006|  9.80k|        if (!statement)
  ------------------
  |  Branch (1006:13): [True: 5.92k, False: 3.88k]
  ------------------
 1007|  5.92k|        {
 1008|  5.92k|            err("ERR: Failed to parse statement inside of IF\n");
 1009|  5.92k|            return {};
 1010|  5.92k|        }
 1011|       |
 1012|  3.88k|        if_case.body.emplace_back(statement.release_not_null());
 1013|       |
 1014|  3.88k|        ConsumeNewLineAndComments();
 1015|  3.88k|    }
 1016|       |
 1017|  16.0k|    auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
 1018|       |
 1019|       |    // Handle all ElseIf cases which are optional
 1020|  24.5k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1020:12): [True: 23.8k, False: 620]
  |  Branch (1020:12): [True: 9.18k, False: 15.3k]
  |  Branch (1020:31): [True: 9.18k, False: 14.6k]
  ------------------
 1021|  9.18k|    {
 1022|       |        // Consume KW_ElseIf token
 1023|  9.18k|        ConsumeCurrent();
 1024|       |
 1025|       |        // Parse the condition
 1026|  9.18k|        auto else_if_condition = ParseExpression();
 1027|  9.18k|        if (!else_if_condition)
  ------------------
  |  Branch (1027:13): [True: 730, False: 8.45k]
  ------------------
 1028|    730|        {
 1029|    730|            return {};
 1030|    730|        }
 1031|       |
 1032|       |        // Parse KW_Then
 1033|  8.45k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (1033:13): [True: 8.04k, False: 414]
  ------------------
 1034|  8.04k|        {
 1035|       |            // TODO: Better error message and this error should be recoverable
 1036|  8.04k|            err("ERR: Missing then!\n");
 1037|  8.04k|        }
 1038|       |
 1039|  8.45k|        ConsumeNewLineAndComments();
 1040|       |
 1041|  8.45k|        IfCase else_if_case{.condition{else_if_condition.release_not_null()},
 1042|  8.45k|                            .body{ParseIfCaseStatements()}};
 1043|       |
 1044|       |        // Append our case to the if statement
 1045|  8.45k|        if_statement->m_ElseIfCases.emplace_back(phi::move(else_if_case));
 1046|  8.45k|    }
 1047|       |
 1048|       |    // Handle optional else case
 1049|  15.3k|    if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_Else)
  ------------------
  |  Branch (1049:9): [True: 14.6k, False: 620]
  |  Branch (1049:9): [True: 11.8k, False: 3.43k]
  |  Branch (1049:28): [True: 11.8k, False: 2.81k]
  ------------------
 1050|  11.8k|    {
 1051|       |        // Consume KW_Else token
 1052|  11.8k|        ConsumeCurrent();
 1053|       |
 1054|  11.8k|        ConsumeNewLineAndComments();
 1055|       |
 1056|  11.8k|        if_statement->m_ElseCase = ParseIfCaseStatements();
 1057|  11.8k|    }
 1058|       |
 1059|  15.3k|    if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (1059:9): [True: 13.9k, False: 1.39k]
  ------------------
 1060|  13.9k|    {
 1061|  13.9k|        err("ERR: Missing EndIf!\n");
 1062|       |        // TODO: Proper Error
 1063|  13.9k|        return {};
 1064|  13.9k|    }
 1065|       |
 1066|  1.39k|    return phi::move(if_statement);
 1067|  15.3k|}
_ZN10OpenAutoIt6Parser21ParseIfCaseStatementsEv:
 1070|  20.3k|{
 1071|  20.3k|    std::vector<phi::not_null_scope_ptr<ASTStatement>> statements;
 1072|       |
 1073|       |    // Parse statements until KW_EndIf, KW_Else, KW_ElseIf
 1074|  22.5k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1074:12): [True: 22.3k, False: 154]
  |  Branch (1074:12): [True: 13.3k, False: 9.15k]
  |  Branch (1074:31): [True: 21.9k, False: 450]
  ------------------
 1075|  22.5k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1075:12): [True: 15.3k, False: 6.59k]
  ------------------
 1076|  22.5k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1076:12): [True: 13.3k, False: 1.95k]
  ------------------
 1077|  13.3k|    {
 1078|  13.3k|        auto statement = ParseStatement();
 1079|  13.3k|        if (!statement)
  ------------------
  |  Branch (1079:13): [True: 11.1k, False: 2.20k]
  ------------------
 1080|  11.1k|        {
 1081|  11.1k|            err("ERR: Failed to parse statement inside of IF\n");
 1082|  11.1k|            return {};
 1083|  11.1k|        }
 1084|       |
 1085|  2.20k|        statements.emplace_back(statement.release_not_null());
 1086|       |
 1087|  2.20k|        ConsumeNewLineAndComments();
 1088|  2.20k|    }
 1089|       |
 1090|  9.15k|    return statements;
 1091|  20.3k|}
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
 1094|   471k|{
 1095|   471k|    const Token& token = CurrentToken();
 1096|   471k|    if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1096:9): [True: 0, False: 471k]
  ------------------
 1097|      0|    {
 1098|      0|        return {};
 1099|      0|    }
 1100|       |
 1101|   471k|    phi::int64_t value{0};
 1102|   471k|    phi::boolean parsing_hex{false};
 1103|   987k|    for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (1103:32): [True: 517k, False: 470k]
  ------------------
 1104|   517k|    {
 1105|   517k|        const char character = token.GetText().at(index);
 1106|       |
 1107|       |        // Checking the second character
 1108|   517k|        if (index == 1u)
  ------------------
  |  Branch (1108:13): [True: 10.1k, False: 507k]
  ------------------
 1109|  10.1k|        {
 1110|  10.1k|            if (character == 'x' || character == 'X')
  ------------------
  |  Branch (1110:17): [True: 485, False: 9.64k]
  |  Branch (1110:37): [True: 1.86k, False: 7.77k]
  ------------------
 1111|  2.35k|            {
 1112|  2.35k|                parsing_hex = true;
 1113|  2.35k|                continue;
 1114|  2.35k|            }
 1115|  10.1k|        }
 1116|       |
 1117|   514k|        if (parsing_hex)
  ------------------
  |  Branch (1117:13): [True: 10.0k, False: 504k]
  ------------------
 1118|  10.0k|        {
 1119|  10.0k|            PHI_ASSERT(phi::is_hex_digit(character));
 1120|       |
 1121|  10.0k|            if (phi::detail::will_multiplication_error(phi::detail::unsigned_integer_tag{}, value,
  ------------------
  |  Branch (1121:17): [True: 332, False: 9.68k]
  ------------------
 1122|  10.0k|                                                       phi::int64_t(16)) ||
 1123|  10.0k|                phi::detail::will_addition_error(phi::detail::unsigned_integer_tag{}, value * 16,
  ------------------
  |  Branch (1123:17): [True: 226, False: 9.45k]
  ------------------
 1124|  9.68k|                                                 phi::int64_t(character - '0')))
 1125|    558|            {
 1126|    558|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1127|    558|                ConsumeCurrent();
 1128|    558|                return {};
 1129|    558|            }
 1130|       |
 1131|  9.45k|            value <<= 4;
 1132|  9.45k|            value |= phi::hex_digit_value(character).unsafe();
 1133|  9.45k|        }
 1134|   504k|        else
 1135|   504k|        {
 1136|   504k|            PHI_ASSERT(character >= '0' && character <= '9');
 1137|       |
 1138|   504k|            if (phi::detail::will_multiplication_error(phi::detail::signed_integer_tag{}, value,
  ------------------
  |  Branch (1138:17): [True: 242, False: 504k]
  ------------------
 1139|   504k|                                                       phi::int64_t(10)) ||
 1140|   504k|                phi::detail::will_addition_error(phi::detail::signed_integer_tag{}, value * 10,
  ------------------
  |  Branch (1140:17): [True: 963, False: 503k]
  ------------------
 1141|   504k|                                                 phi::int64_t(character - '0')))
 1142|  1.20k|            {
 1143|  1.20k|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1144|  1.20k|                ConsumeCurrent();
 1145|  1.20k|                return {};
 1146|  1.20k|            }
 1147|       |
 1148|   503k|            value *= 10;
 1149|   503k|            value += (character - '0');
 1150|   503k|        }
 1151|   514k|    }
 1152|       |
 1153|   470k|    ConsumeCurrent();
 1154|   470k|    return phi::make_scope<ASTIntegerLiteral>(value);
 1155|   471k|}
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
 1158|  65.4k|{
 1159|  65.4k|    const Token& token = CurrentToken();
 1160|  65.4k|    if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (1160:9): [True: 0, False: 65.4k]
  ------------------
 1161|      0|    {
 1162|      0|        return {};
 1163|      0|    }
 1164|  65.4k|    ConsumeCurrent();
 1165|       |
 1166|  65.4k|    auto string_literal = phi::make_scope<ASTStringLiteral>();
 1167|       |
 1168|  65.4k|    const phi::usize length = token.GetText().length();
 1169|       |    // Trim the trailing and leading "
 1170|  65.4k|    string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
 1171|       |
 1172|  65.4k|    return phi::move(string_literal);
 1173|  65.4k|}
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
 1176|  2.42M|{
 1177|  2.42M|    phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
 1178|  2.42M|    if (!lhs_expression)
  ------------------
  |  Branch (1178:9): [True: 1.33M, False: 1.08M]
  ------------------
 1179|  1.33M|    {
 1180|  1.33M|        return {};
 1181|  1.33M|    }
 1182|       |
 1183|  1.08M|    return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
 1184|  2.42M|}
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
 1187|  2.63M|{
 1188|  2.63M|    if (!HasMoreTokens())
  ------------------
  |  Branch (1188:9): [True: 1.01k, False: 2.63M]
  ------------------
 1189|  1.01k|    {
 1190|       |        // TODO: Proper error
 1191|  1.01k|        return {};
 1192|  1.01k|    }
 1193|       |
 1194|  2.63M|    const Token& token = CurrentToken();
 1195|  2.63M|    if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (1195:9): [True: 271k, False: 2.36M]
  ------------------
 1196|   271k|    {
 1197|   271k|        const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
 1198|   271k|        PHI_UNUSED_VARIABLE(op_precedence);
 1199|   271k|        ConsumeCurrent();
 1200|       |
 1201|   271k|        phi::scope_ptr<ASTExpression> unary_expression = ParseUnaryExpression(token.GetTokenKind());
 1202|   271k|        if (!unary_expression)
  ------------------
  |  Branch (1202:13): [True: 20.4k, False: 251k]
  ------------------
 1203|  20.4k|        {
 1204|       |            // TODO: Proper error
 1205|  20.4k|            return {};
 1206|  20.4k|        }
 1207|       |
 1208|   251k|        return phi::move(unary_expression);
 1209|   271k|    }
 1210|  2.36M|    if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (1210:9): [True: 100k, False: 2.26M]
  ------------------
 1211|   100k|    {
 1212|       |        // Consume the LParen
 1213|   100k|        ConsumeCurrent();
 1214|       |
 1215|   100k|        phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
 1216|   100k|        if (!paren_expression)
  ------------------
  |  Branch (1216:13): [True: 96.3k, False: 3.71k]
  ------------------
 1217|  96.3k|        {
 1218|       |            // TODO: Proper error
 1219|  96.3k|            return {};
 1220|  96.3k|        }
 1221|       |
 1222|  3.71k|        return phi::move(paren_expression);
 1223|   100k|    }
 1224|  2.26M|    if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1224:9): [True: 471k, False: 1.79M]
  ------------------
 1225|   471k|    {
 1226|   471k|        phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
 1227|   471k|        if (!int_literal)
  ------------------
  |  Branch (1227:13): [True: 1.76k, False: 470k]
  ------------------
 1228|  1.76k|        {
 1229|       |            // TODO: Error failed to parse integer literal
 1230|  1.76k|            return {};
 1231|  1.76k|        }
 1232|       |
 1233|   470k|        return phi::move(int_literal);
 1234|   471k|    }
 1235|  1.79M|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (1235:9): [True: 65.4k, False: 1.72M]
  ------------------
 1236|  65.4k|    {
 1237|  65.4k|        auto string_literal_expression = ParseStringLiteral();
 1238|  65.4k|        if (!string_literal_expression)
  ------------------
  |  Branch (1238:13): [True: 0, False: 65.4k]
  ------------------
 1239|      0|        {
 1240|       |            // TODO: Proper error
 1241|      0|            return {};
 1242|      0|        }
 1243|       |
 1244|  65.4k|        return phi::move(string_literal_expression);
 1245|  65.4k|    }
 1246|       |
 1247|       |    // Boolean literal
 1248|  1.72M|    if (token.GetTokenKind() == TokenKind::KW_True || token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1248:9): [True: 1.26k, False: 1.72M]
  |  Branch (1248:55): [True: 420, False: 1.72M]
  ------------------
 1249|  1.68k|    {
 1250|  1.68k|        auto boolean_literal = ParseBooleanLiteral();
 1251|  1.68k|        if (!boolean_literal)
  ------------------
  |  Branch (1251:13): [True: 0, False: 1.68k]
  ------------------
 1252|      0|        {
 1253|       |            // TODO: Proper error
 1254|      0|            return {};
 1255|      0|        }
 1256|       |
 1257|  1.68k|        return phi::move(boolean_literal);
 1258|  1.68k|    }
 1259|       |
 1260|       |    // Function call/reference expression
 1261|  1.72M|    if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (1261:9): [True: 325k, False: 1.40M]
  |  Branch (1261:9): [True: 329k, False: 1.39M]
  |  Branch (1261:66): [True: 4.31k, False: 1.39M]
  ------------------
 1262|   329k|    {
 1263|   329k|        auto function_expression = ParseFunctionExpression();
 1264|   329k|        if (!function_expression)
  ------------------
  |  Branch (1264:13): [True: 40.9k, False: 288k]
  ------------------
 1265|  40.9k|        {
 1266|       |            // TODO: Proper error
 1267|  40.9k|            err("ERR: Failed to parse function expression!\n");
 1268|  40.9k|            return {};
 1269|  40.9k|        }
 1270|       |
 1271|   288k|        return phi::move(function_expression);
 1272|   329k|    }
 1273|       |    // Variable expression
 1274|  1.39M|    if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1274:9): [True: 37.3k, False: 1.35M]
  ------------------
 1275|  37.3k|    {
 1276|  37.3k|        auto variable_expression = ParseVariableExpression();
 1277|  37.3k|        if (!variable_expression)
  ------------------
  |  Branch (1277:13): [True: 0, False: 37.3k]
  ------------------
 1278|      0|        {
 1279|       |            // TODO: Proper error
 1280|      0|            err("ERR: Failed to parse Variable expression\n");
 1281|      0|            return {};
 1282|      0|        }
 1283|       |
 1284|  37.3k|        return phi::move(variable_expression);
 1285|  37.3k|    }
 1286|       |    // Keyword literal
 1287|  1.35M|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1287:9): [True: 684, False: 1.35M]
  ------------------
 1288|    684|    {
 1289|    684|        auto keyword_literal = ParseKeywordLiteral();
 1290|    684|        if (!keyword_literal)
  ------------------
  |  Branch (1290:13): [True: 0, False: 684]
  ------------------
 1291|      0|        {
 1292|       |            // TODO: Proper error
 1293|      0|            err("ERR: Failed to parse keyword literal expression!\n");
 1294|      0|            return {};
 1295|      0|        }
 1296|       |
 1297|    684|        return phi::move(keyword_literal);
 1298|    684|    }
 1299|       |    // Float literal
 1300|  1.35M|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1300:9): [True: 1.00k, False: 1.35M]
  ------------------
 1301|  1.00k|    {
 1302|  1.00k|        auto float_literal = ParseFloatLiteral();
 1303|  1.00k|        if (!float_literal)
  ------------------
  |  Branch (1303:13): [True: 0, False: 1.00k]
  ------------------
 1304|      0|        {
 1305|       |            // TODO: Proper error
 1306|      0|            err("ERR: Failed to parse float literal expression!\n");
 1307|      0|            return {};
 1308|      0|        }
 1309|       |
 1310|  1.00k|        return phi::move(float_literal);
 1311|  1.00k|    }
 1312|       |    // ArraySubscript expression
 1313|  1.35M|    if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (1313:9): [True: 831k, False: 526k]
  ------------------
 1314|   831k|    {
 1315|   831k|        auto subscript_expression = ParseArraySubscriptExpression();
 1316|   831k|        if (!subscript_expression)
  ------------------
  |  Branch (1316:13): [True: 705k, False: 126k]
  ------------------
 1317|   705k|        {
 1318|   705k|            err("ERR: Failed to parse array subscript expression\n");
 1319|   705k|            return {};
 1320|   705k|        }
 1321|       |
 1322|   126k|        return phi::move(subscript_expression);
 1323|   831k|    }
 1324|   526k|    if (token.IsMacro())
  ------------------
  |  Branch (1324:9): [True: 33.0k, False: 493k]
  ------------------
 1325|  33.0k|    {
 1326|  33.0k|        ConsumeCurrent();
 1327|       |
 1328|  33.0k|        phi::scope_ptr<ASTExpression> macro_expression = ParseMacroExpression(token.GetTokenKind());
 1329|  33.0k|        if (!macro_expression)
  ------------------
  |  Branch (1329:13): [True: 0, False: 33.0k]
  ------------------
 1330|      0|        {
 1331|       |            // TODO: Proper error
 1332|      0|            return {};
 1333|      0|        }
 1334|       |
 1335|  33.0k|        return macro_expression;
 1336|  33.0k|    }
 1337|       |
 1338|       |    // TODO: Error Unexpected token
 1339|   493k|    err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
 1340|   493k|                    enum_name(token.GetTokenKind())));
 1341|   493k|    return {};
 1342|   526k|}
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
 1346|  1.13M|{
 1347|  1.32M|    while (true)
  ------------------
  |  Branch (1347:12): [Folded - Ignored]
  ------------------
 1348|  1.32M|    {
 1349|  1.32M|        if (!HasMoreTokens())
  ------------------
  |  Branch (1349:13): [True: 6.34k, False: 1.31M]
  ------------------
 1350|  6.34k|        {
 1351|  6.34k|            return phi::move(lhs);
 1352|  6.34k|        }
 1353|       |
 1354|  1.31M|        const Token& operator_token = CurrentToken();
 1355|  1.31M|        if (!IsBinaryOperator(operator_token.GetTokenKind()) &&
  ------------------
  |  Branch (1355:13): [True: 1.09M, False: 216k]
  |  Branch (1355:13): [True: 1.07M, False: 240k]
  ------------------
 1356|  1.31M|            operator_token.GetTokenKind() != TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1356:13): [True: 1.07M, False: 24.0k]
  ------------------
 1357|  1.07M|        {
 1358|       |            // If its not a binary operator and not a ternary just return the lhs expression
 1359|  1.07M|            return phi::move(lhs);
 1360|  1.07M|        }
 1361|   240k|        int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
 1362|   240k|        ConsumeCurrent();
 1363|       |
 1364|   240k|        if (token_precedence < precedence)
  ------------------
  |  Branch (1364:13): [True: 1.69k, False: 238k]
  ------------------
 1365|  1.69k|        {
 1366|  1.69k|            return phi::move(lhs);
 1367|  1.69k|        }
 1368|       |
 1369|   238k|        if (operator_token.GetTokenKind() == TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1369:13): [True: 24.0k, False: 214k]
  ------------------
 1370|  24.0k|        {
 1371|  24.0k|            phi::scope_ptr<ASTTernaryIfExpression> ternary_if_expression =
 1372|  24.0k|                    ParseTernaryIfExpression(phi::move(lhs));
 1373|  24.0k|            if (!ternary_if_expression)
  ------------------
  |  Branch (1373:17): [True: 8.79k, False: 15.2k]
  ------------------
 1374|  8.79k|            {
 1375|       |                // TODO: Proper error
 1376|  8.79k|                return {};
 1377|  8.79k|            }
 1378|       |
 1379|  15.2k|            return phi::move(ternary_if_expression);
 1380|  24.0k|        }
 1381|       |
 1382|       |        // This must be an binary expression
 1383|   214k|        phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
 1384|   214k|        if (!rhs_expression)
  ------------------
  |  Branch (1384:13): [True: 21.2k, False: 193k]
  ------------------
 1385|  21.2k|        {
 1386|       |            // TODO: Proper error
 1387|  21.2k|            return {};
 1388|  21.2k|        }
 1389|       |
 1390|       |        // Nothing left to parse so directly return from here
 1391|   193k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1391:13): [True: 921, False: 192k]
  ------------------
 1392|    921|        {
 1393|    921|            return phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1394|    921|                                                                 operator_token.GetTokenKind(),
 1395|    921|                                                                 rhs_expression.release_not_null());
 1396|    921|        }
 1397|       |
 1398|       |        // If BinOp binds less tightly with RHS than the operator after RHS, let
 1399|       |        // the pending operator take RHS as its LHS.
 1400|   192k|        const Token& next_token      = CurrentToken();
 1401|   192k|        int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1402|       |
 1403|   192k|        if (token_precedence < next_precedence)
  ------------------
  |  Branch (1403:13): [True: 45.1k, False: 147k]
  ------------------
 1404|  45.1k|        {
 1405|  45.1k|            rhs_expression =
 1406|  45.1k|                    ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1407|  45.1k|            if (!rhs_expression)
  ------------------
  |  Branch (1407:17): [True: 3.46k, False: 41.6k]
  ------------------
 1408|  3.46k|            {
 1409|       |                // TODO: Proper error
 1410|  3.46k|                return {};
 1411|  3.46k|            }
 1412|  45.1k|        }
 1413|       |
 1414|       |        // Merge LHS/RHS.
 1415|   188k|        lhs = phi::make_not_null_scope<ASTBinaryExpression>(
 1416|   188k|                phi::move(lhs), operator_token.GetTokenKind(), rhs_expression.release_not_null());
 1417|   188k|    }
 1418|  1.13M|}
_ZN10OpenAutoIt6Parser23ParseFunctionExpressionEv:
 1421|   329k|{
 1422|       |    // Parse the function name
 1423|   329k|    const Token& function_identifier_token = CurrentToken();
 1424|   329k|    if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1424:9): [True: 4.31k, False: 325k]
  |  Branch (1424:9): [True: 0, False: 329k]
  ------------------
 1425|   329k|        !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1425:9): [True: 0, False: 4.31k]
  ------------------
 1426|      0|    {
 1427|      0|        return {};
 1428|      0|    }
 1429|   329k|    ConsumeCurrent();
 1430|       |
 1431|   329k|    const FunctionReference function_reference =
 1432|   329k|            function_identifier_token.IsBuiltInFunction() ?
  ------------------
  |  Branch (1432:13): [True: 4.31k, False: 325k]
  ------------------
 1433|  4.31k|                    FunctionReference{function_identifier_token} :
 1434|   329k|                    FunctionReference{function_identifier_token.GetText()};
 1435|       |
 1436|       |    // If we parse an opening parenthesis we have a function call expression otherwise just a function reference
 1437|   329k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (1437:9): [True: 251k, False: 78.4k]
  ------------------
 1438|   251k|    {
 1439|   251k|        return phi::make_scope<ASTFunctionReferenceExpression>(function_reference);
 1440|   251k|    }
 1441|       |
 1442|  78.4k|    phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1443|  78.4k|            phi::make_scope<ASTFunctionCallExpression>(function_reference);
 1444|  78.4k|    if (!function_call_expression)
  ------------------
  |  Branch (1444:9): [True: 0, False: 78.4k]
  ------------------
 1445|      0|    {
 1446|       |        // TODO: Proper error
 1447|      0|        return {};
 1448|      0|    }
 1449|       |
 1450|       |    // Now parse all the arguments (which are expressions) separated by commas or nothing
 1451|  78.4k|    function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1452|       |
 1453|       |    // Finally we MUST parse an RParen
 1454|  78.4k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1454:9): [True: 40.9k, False: 37.4k]
  ------------------
 1455|  40.9k|    {
 1456|  40.9k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1457|  40.9k|                        std::string_view{function_call_expression->FunctionName()}));
 1458|       |        // TODO: Give proper error
 1459|  40.9k|        return {};
 1460|  40.9k|    }
 1461|       |
 1462|       |    // Return result
 1463|  37.4k|    return function_call_expression;
 1464|  78.4k|}
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1467|  78.4k|{
 1468|  78.4k|    std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1469|       |
 1470|   165k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1470:12): [True: 165k, False: 550]
  |  Branch (1470:12): [True: 132k, False: 33.0k]
  |  Branch (1470:31): [True: 132k, False: 32.4k]
  ------------------
 1471|   132k|    {
 1472|       |        // Parse the expression
 1473|   132k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1474|   132k|        if (!expression)
  ------------------
  |  Branch (1474:13): [True: 45.4k, False: 87.4k]
  ------------------
 1475|  45.4k|        {
 1476|  45.4k|            arguments.clear();
 1477|  45.4k|            return arguments;
 1478|  45.4k|        }
 1479|       |
 1480|       |        // Add argument to parameters
 1481|  87.4k|        arguments.emplace_back(expression.release_not_null());
 1482|       |
 1483|       |        // Next Token MUST be a comma followed by another expression or RParen
 1484|  87.4k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1484:13): [True: 87.1k, False: 298]
  |  Branch (1484:13): [True: 1.48k, False: 85.9k]
  |  Branch (1484:32): [True: 1.48k, False: 85.6k]
  ------------------
 1485|  1.48k|        {
 1486|  1.48k|            ConsumeCurrent();
 1487|  1.48k|        }
 1488|  87.4k|    }
 1489|       |
 1490|  33.0k|    return arguments;
 1491|  78.4k|}
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1494|  37.3k|{
 1495|  37.3k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1495:9): [True: 0, False: 37.3k]
  ------------------
 1496|      0|    {
 1497|       |        // TODO: Proper error
 1498|      0|        return {};
 1499|      0|    }
 1500|       |
 1501|  37.3k|    const Token& token = CurrentToken();
 1502|  37.3k|    if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1502:9): [True: 0, False: 37.3k]
  ------------------
 1503|      0|    {
 1504|       |        // TODO error
 1505|      0|        return {};
 1506|      0|    }
 1507|       |
 1508|  37.3k|    auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1509|  37.3k|    variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1510|       |
 1511|  37.3k|    ConsumeCurrent();
 1512|       |
 1513|  37.3k|    return phi::move(variable_expression);
 1514|  37.3k|}
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1520|   831k|{
 1521|   831k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1521:9): [True: 0, False: 831k]
  ------------------
 1522|      0|    {
 1523|      0|        return {};
 1524|      0|    }
 1525|       |
 1526|   831k|    if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1526:9): [True: 0, False: 831k]
  ------------------
 1527|      0|    {
 1528|      0|        return {};
 1529|      0|    }
 1530|       |
 1531|   831k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1532|   831k|    if (!expression)
  ------------------
  |  Branch (1532:9): [True: 663k, False: 168k]
  ------------------
 1533|   663k|    {
 1534|   663k|        return {};
 1535|   663k|    }
 1536|       |
 1537|   168k|    if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1537:9): [True: 42.0k, False: 126k]
  ------------------
 1538|  42.0k|    {
 1539|  42.0k|        return {};
 1540|  42.0k|    }
 1541|       |
 1542|   126k|    return phi::make_scope<ASTArraySubscriptExpression>(phi::move(expression.release_not_null()));
 1543|   168k|}
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1548|   100k|{
 1549|       |    // NOTE: Me MUST have consumed the LParen before this
 1550|       |
 1551|   100k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1552|   100k|    if (!expression)
  ------------------
  |  Branch (1552:9): [True: 69.8k, False: 30.2k]
  ------------------
 1553|  69.8k|    {
 1554|       |        // TODO: Proper error
 1555|  69.8k|        return {};
 1556|  69.8k|    }
 1557|       |
 1558|  30.2k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1558:9): [True: 26.5k, False: 3.71k]
  ------------------
 1559|  26.5k|    {
 1560|       |        // TODO: Proper error expected closing paren
 1561|  26.5k|        return {};
 1562|  26.5k|    }
 1563|       |
 1564|  3.71k|    return phi::move(expression);
 1565|  30.2k|}
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1568|  5.77k|{
 1569|  5.77k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1569:9): [True: 0, False: 5.77k]
  ------------------
 1570|      0|    {
 1571|      0|        return {};
 1572|      0|    }
 1573|       |
 1574|  5.77k|    if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1574:9): [True: 0, False: 5.77k]
  ------------------
 1575|      0|    {
 1576|      0|        return {};
 1577|      0|    }
 1578|       |
 1579|       |    // Parse optional expression
 1580|  5.77k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1581|       |
 1582|  5.77k|    return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1583|  5.77k|}
_ZN10OpenAutoIt6Parser20ParseUnaryExpressionENS_9TokenKindE:
 1586|   271k|{
 1587|   271k|    PHI_ASSERT(IsUnaryOperator(operator_kind));
 1588|       |
 1589|   271k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1589:9): [True: 158, False: 271k]
  ------------------
 1590|    158|    {
 1591|    158|        return {};
 1592|    158|    }
 1593|       |
 1594|       |    // Parse expression
 1595|   271k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1596|   271k|    if (!expression)
  ------------------
  |  Branch (1596:9): [True: 20.3k, False: 251k]
  ------------------
 1597|  20.3k|    {
 1598|       |        // TODO: Proper error
 1599|  20.3k|        return {};
 1600|  20.3k|    }
 1601|       |
 1602|   251k|    return phi::make_scope<ASTUnaryExpression>(operator_kind,
 1603|   251k|                                               phi::move(expression.release_not_null()));
 1604|   271k|}
_ZN10OpenAutoIt6Parser24ParseTernaryIfExpressionEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
 1608|  24.0k|{
 1609|  24.0k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1609:9): [True: 28, False: 24.0k]
  ------------------
 1610|     28|    {
 1611|     28|        return {};
 1612|     28|    }
 1613|       |
 1614|  24.0k|    phi::scope_ptr<ASTExpression> true_expression = ParseExpression();
 1615|  24.0k|    if (!true_expression)
  ------------------
  |  Branch (1615:9): [True: 1.47k, False: 22.5k]
  ------------------
 1616|  1.47k|    {
 1617|  1.47k|        return {};
 1618|  1.47k|    }
 1619|       |
 1620|       |    // Must parse the else part ":"
 1621|  22.5k|    if (!MustParse(TokenKind::OP_TernaryElse))
  ------------------
  |  Branch (1621:9): [True: 6.29k, False: 16.2k]
  ------------------
 1622|  6.29k|    {
 1623|  6.29k|        err("Missing ':' for ternary if\n");
 1624|  6.29k|        return {};
 1625|  6.29k|    }
 1626|       |
 1627|  16.2k|    phi::scope_ptr<ASTExpression> false_expression = ParseExpression();
 1628|  16.2k|    if (!false_expression)
  ------------------
  |  Branch (1628:9): [True: 999, False: 15.2k]
  ------------------
 1629|    999|    {
 1630|    999|        return {};
 1631|    999|    }
 1632|       |
 1633|  15.2k|    return phi::make_scope<ASTTernaryIfExpression>(phi::move(condition),
 1634|  15.2k|                                                   phi::move(true_expression.release_not_null()),
 1635|  15.2k|                                                   phi::move(false_expression.release_not_null()));
 1636|  16.2k|}
_ZN10OpenAutoIt6Parser20ParseMacroExpressionENS_9TokenKindE:
 1639|  33.0k|{
 1640|  33.0k|    const auto macro = static_cast<phi::size_t>(macro_kind);
 1641|  33.0k|    PHI_ASSERT(macro >= MacroFirst && macro <= MacroLast);
 1642|       |
 1643|  33.0k|    return phi::make_scope<ASTMacroExpression>(macro_kind);
 1644|  33.0k|}
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1647|  1.68k|{
 1648|  1.68k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1648:9): [True: 0, False: 1.68k]
  ------------------
 1649|      0|    {
 1650|       |        // TODO: Proper error
 1651|      0|        return {};
 1652|      0|    }
 1653|       |
 1654|       |    // BooleanLiteral is either KW_True or KW_False
 1655|  1.68k|    const Token& token = CurrentToken();
 1656|  1.68k|    if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1656:9): [True: 1.26k, False: 420]
  ------------------
 1657|  1.26k|    {
 1658|  1.26k|        ConsumeCurrent();
 1659|  1.26k|        return phi::make_scope<ASTBooleanLiteral>(true);
 1660|  1.26k|    }
 1661|       |
 1662|    420|    if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1662:9): [True: 420, False: 0]
  ------------------
 1663|    420|    {
 1664|    420|        ConsumeCurrent();
 1665|    420|        return phi::make_scope<ASTBooleanLiteral>(false);
 1666|    420|    }
 1667|       |
 1668|       |    // TODO: Proper error
 1669|      0|    return {};
 1670|    420|}
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1673|    684|{
 1674|    684|    if (!HasMoreTokens())
  ------------------
  |  Branch (1674:9): [True: 0, False: 684]
  ------------------
 1675|      0|    {
 1676|       |        // TODO: Proper error
 1677|      0|        return {};
 1678|      0|    }
 1679|       |
 1680|    684|    const Token& token = CurrentToken();
 1681|    684|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1681:9): [True: 684, False: 0]
  ------------------
 1682|    684|    {
 1683|    684|        ConsumeCurrent();
 1684|    684|        return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1685|    684|    }
 1686|       |
 1687|       |    // TODO: Proper error
 1688|      0|    return {};
 1689|    684|}
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1692|  1.00k|{
 1693|  1.00k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1693:9): [True: 0, False: 1.00k]
  ------------------
 1694|      0|    {
 1695|       |        // TODO: Proper error
 1696|      0|        return {};
 1697|      0|    }
 1698|       |
 1699|  1.00k|    const Token& token = CurrentToken();
 1700|  1.00k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1700:9): [True: 1.00k, False: 0]
  ------------------
 1701|  1.00k|    {
 1702|  1.00k|        ConsumeCurrent();
 1703|       |
 1704|  1.00k|        char*    ptr   = nullptr;
 1705|  1.00k|        phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1706|       |
 1707|  1.00k|        return phi::make_scope<ASTFloatLiteral>(value);
 1708|  1.00k|    }
 1709|       |
 1710|       |    // TODO: Proper error
 1711|      0|    return {};
 1712|  1.00k|}
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   72|   703k|    {
   73|   703k|        int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   74|       |        //PHI_ASSERT(precedence != 0);
   75|       |
   76|   703k|        return precedence;
   77|   703k|    }

_ZN10OpenAutoIt10SourceFileC2ENS0_4TypeENSt3__14__fs10filesystem4pathEN3phi17basic_string_viewIcNS2_11char_traitsIcEEEE:
   12|  26.1k|{}

_ZN10OpenAutoIt13SourceManager18SetLocalSearchPathERKNSt3__14__fs10filesystem4pathE:
   14|  26.1k|{}
_ZN10OpenAutoIt18EmptySourceManager8LoadFileEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_11IncludeTypeE:
  156|    451|{
  157|    451|    return {};
  158|    451|}

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  13.0k|{
   31|       |#if defined(PHI_DEBUG)
   32|       |    PHI_ASSERT(!m_Finalized);
   33|       |#endif
   34|       |
   35|  13.0k|    m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |    m_Finalized = true;
   38|       |#endif
   39|  13.0k|}
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   68|  25.5M|{
   69|       |#if defined(PHI_DEBUG)
   70|       |    PHI_ASSERT(m_Finalized);
   71|       |#endif
   72|       |
   73|  25.5M|    return m_Index < m_Tokens.size();
   74|  25.5M|}
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   77|  16.9M|{
   78|       |#if defined(PHI_DEBUG)
   79|       |    PHI_ASSERT(m_Finalized);
   80|       |#endif
   81|       |
   82|  16.9M|    return m_Index >= m_Tokens.size();
   83|  16.9M|}
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   86|  12.2M|{
   87|  12.2M|    PHI_ASSERT(!reached_end());
   88|       |#if defined(PHI_DEBUG)
   89|       |    PHI_ASSERT(m_Finalized);
   90|       |#endif
   91|       |
   92|  12.2M|    return m_Tokens[m_Index.unsafe()];
   93|  12.2M|}
_ZNK10OpenAutoIt11TokenStream11look_behindEv:
   96|  56.7k|{
   97|  56.7k|    PHI_ASSERT(!m_Tokens.empty());
   98|       |#if defined(PHI_DEBUG)
   99|       |    PHI_ASSERT(m_Finalized);
  100|       |#endif
  101|       |
  102|  56.7k|    if (m_Index == 0u)
  ------------------
  |  Branch (102:9): [True: 0, False: 56.7k]
  ------------------
  103|      0|    {
  104|      0|        return m_Tokens[0u];
  105|      0|    }
  106|       |
  107|  56.7k|    return m_Tokens[m_Index.unsafe() - 1u];
  108|  56.7k|}
_ZN10OpenAutoIt11TokenStream7consumeEv:
  111|  4.75M|{
  112|  4.75M|    PHI_ASSERT(!reached_end());
  113|       |#if defined(PHI_DEBUG)
  114|       |    PHI_ASSERT(m_Finalized);
  115|       |#endif
  116|       |
  117|  4.75M|    m_Index += 1u;
  118|  4.75M|}

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  3.79M|{
  100|  3.79M|    if (output_enabled)
  ------------------
  |  Branch (100:9): [True: 0, False: 3.79M]
  ------------------
  101|      0|    {
  102|      0|        std::cerr << data;
  103|      0|    }
  104|  3.79M|}
_ZN10OpenAutoIt14disable_outputEv:
  107|  13.0k|{
  108|  13.0k|    output_enabled = false;
  109|  13.0k|}

