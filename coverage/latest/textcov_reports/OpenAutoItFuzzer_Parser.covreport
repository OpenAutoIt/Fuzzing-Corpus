_ZN3fmt2v96detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  409|  2.21M|    typename std::make_unsigned<Int>::type {
  410|  2.21M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  368|  4.42M|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (368:37): [Folded - Ignored]
  |  |  |  Branch (368:37): [True: 2.21M, False: 0]
  |  |  ------------------
  ------------------
  411|  2.21M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  412|  2.21M|}
_ZN3fmt2v96detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  336|  18.0M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v917basic_string_viewIcE4sizeEv:
  476|  11.4M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  336|  2.21M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE4sizeEv:
  930|  2.21M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail6bufferIcEC2EPcmm:
  902|  2.21M|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt2v96detail6bufferIcE3setEPcm:
  908|  2.21M|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  909|  2.21M|    ptr_ = buf_data;
  910|  2.21M|    capacity_ = buf_capacity;
  911|  2.21M|  }
_ZN3fmt2v96detail13ignore_unusedIJbEEEvDpRKT_:
  336|    554|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE8capacityEv:
  933|    928|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt2v96detail6bufferIcE4dataEv:
  936|  2.21M|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt2v917basic_string_viewIcE5beginEv:
  478|  4.42M|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt2v917basic_string_viewIcE3endEv:
  479|  4.42M|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKc:
  459|  1.85M|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt2v96detail10locale_refC2Ev:
 1730|  4.06M|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1297|  2.21M|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt2v99monostateC2Ev:
  319|  2.21M|  constexpr monostate() {}
_ZN3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1991|  2.21M|      : desc_(desc), values_(values) {}
_ZNK3fmt2v917basic_string_viewIcE4dataEv:
  473|  4.78M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKcm:
  444|  4.78M|      : data_(s), size_(count) {}
_ZN3fmt2v96detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  409|  15.8M|    typename std::make_unsigned<Int>::type {
  410|  15.8M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  368|  31.6M|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (368:37): [Folded - Ignored]
  |  |  |  Branch (368:37): [True: 15.8M, False: 0]
  |  |  ------------------
  ------------------
  411|  15.8M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  412|  15.8M|}
_ZN3fmt2v96detail6bufferIcE11try_reserveEm:
  955|  6.64M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  956|  6.64M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (956:9): [True: 554, False: 6.63M]
  ------------------
  957|  6.64M|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 2029|  2.21M|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 2030|  2.21M|    format_arg arg;
 2031|  2.21M|    if (!is_packed()) {
  ------------------
  |  Branch (2031:9): [True: 0, False: 2.21M]
  ------------------
 2032|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (2032:11): [True: 0, False: 0]
  ------------------
 2033|      0|      return arg;
 2034|      0|    }
 2035|  2.21M|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (2035:9): [True: 0, False: 2.21M]
  ------------------
 2036|  2.21M|    arg.type_ = type(id);
 2037|  2.21M|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (2037:9): [True: 0, False: 2.21M]
  ------------------
 2038|  2.21M|    arg.value_ = values_[id];
 2039|  2.21M|    return arg;
 2040|  2.21M|  }
_ZN3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1618|  2.21M|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1976|  2.21M|  constexpr auto is_packed() const -> bool {
 1977|  2.21M|    return (desc_ & detail::is_unpacked_bit) == 0;
 1978|  2.21M|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1983|  2.21M|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1984|  2.21M|    int shift = index * detail::packed_arg_bits;
 1985|  2.21M|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1986|  2.21M|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1987|  2.21M|  }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1620|  2.21M|  constexpr explicit operator bool() const noexcept {
 1621|  2.21M|    return type_ != detail::type::none_type;
 1622|  2.21M|  }
_ZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  858|  6.64M|    -> Container& {
  859|  6.64M|  using base = std::back_insert_iterator<Container>;
  860|  6.64M|  struct accessor : base {
  861|  6.64M|    accessor(base b) : base(b) {}
  862|  6.64M|    using base::container;
  863|  6.64M|  };
  864|  6.64M|  return *accessor(it).container;
  865|  6.64M|}
_ZZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  861|  6.64M|    accessor(base b) : base(b) {}
_ZNK3fmt2v96detail6fill_tIcE4sizeEv:
 2107|  2.21M|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt2v96detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1683|  6.64M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1684|  6.64M|  get_container(out).append(begin, end);
 1685|  6.64M|  return out;
 1686|  6.64M|}
_ZN3fmt2v912format_specsIcEC2Ev:
 2158|  2.21M|        localized(false) {}
_ZN3fmt2v926basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  697|  2.21M|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1827|  2.21M|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE3outEv:
 1842|  6.64M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2586|  2.21M|    basic_string_view<Char> format_str, Handler&& handler) {
 2587|       |  // Workaround a name-lookup bug in MSVC's modules implementation.
 2588|  2.21M|  using detail::find;
 2589|       |
 2590|  2.21M|  auto begin = format_str.data();
 2591|  2.21M|  auto end = begin + format_str.size();
 2592|  2.21M|  if (end - begin < 32) {
  ------------------
  |  Branch (2592:7): [True: 1.02M, False: 1.18M]
  ------------------
 2593|       |    // Use a simple loop instead of memchr for small strings.
 2594|  1.02M|    const Char* p = begin;
 2595|  28.7M|    while (p != end) {
  ------------------
  |  Branch (2595:12): [True: 27.7M, False: 1.02M]
  ------------------
 2596|  27.7M|      auto c = *p++;
 2597|  27.7M|      if (c == '{') {
  ------------------
  |  Branch (2597:11): [True: 1.02M, False: 26.7M]
  ------------------
 2598|  1.02M|        handler.on_text(begin, p - 1);
 2599|  1.02M|        begin = p = parse_replacement_field(p - 1, end, handler);
 2600|  26.7M|      } else if (c == '}') {
  ------------------
  |  Branch (2600:18): [True: 0, False: 26.7M]
  ------------------
 2601|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2601:13): [True: 0, False: 0]
  |  Branch (2601:25): [True: 0, False: 0]
  ------------------
 2602|      0|          return handler.on_error("unmatched '}' in format string");
 2603|      0|        handler.on_text(begin, p);
 2604|      0|        begin = ++p;
 2605|      0|      }
 2606|  27.7M|    }
 2607|  1.02M|    handler.on_text(begin, end);
 2608|  1.02M|    return;
 2609|  1.02M|  }
 2610|  1.18M|  struct writer {
 2611|  1.18M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2612|  1.18M|      if (from == to) return;
 2613|  1.18M|      for (;;) {
 2614|  1.18M|        const Char* p = nullptr;
 2615|  1.18M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2616|  1.18M|          return handler_.on_text(from, to);
 2617|  1.18M|        ++p;
 2618|  1.18M|        if (p == to || *p != '}')
 2619|  1.18M|          return handler_.on_error("unmatched '}' in format string");
 2620|  1.18M|        handler_.on_text(from, p);
 2621|  1.18M|        from = p + 1;
 2622|  1.18M|      }
 2623|  1.18M|    }
 2624|  1.18M|    Handler& handler_;
 2625|  1.18M|  } write = {handler};
 2626|  2.37M|  while (begin != end) {
  ------------------
  |  Branch (2626:10): [True: 2.37M, False: 0]
  ------------------
 2627|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2628|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2629|  2.37M|    const Char* p = begin;
 2630|  2.37M|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2630:9): [True: 2.37M, False: 0]
  |  Branch (2630:26): [True: 1.18M, False: 1.18M]
  ------------------
 2631|  1.18M|      return write(begin, end);
 2632|  1.18M|    write(begin, p);
 2633|  1.18M|    begin = parse_replacement_field(p, end, handler);
 2634|  1.18M|  }
 2635|  1.18M|}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1845|  6.64M|  void advance_to(iterator it) {
 1846|  6.64M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1846:9): [Folded - Ignored]
  ------------------
 1847|  6.64M|  }
_ZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2549|  2.21M|                                           Handler&& handler) -> const Char* {
 2550|  2.21M|  struct id_adapter {
 2551|  2.21M|    Handler& handler;
 2552|  2.21M|    int arg_id;
 2553|       |
 2554|  2.21M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2555|  2.21M|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2556|  2.21M|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2557|  2.21M|      arg_id = handler.on_arg_id(id);
 2558|  2.21M|    }
 2559|  2.21M|  };
 2560|       |
 2561|  2.21M|  ++begin;
 2562|  2.21M|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2562:7): [True: 0, False: 2.21M]
  ------------------
 2563|  2.21M|  if (*begin == '}') {
  ------------------
  |  Branch (2563:7): [True: 0, False: 2.21M]
  ------------------
 2564|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2565|  2.21M|  } else if (*begin == '{') {
  ------------------
  |  Branch (2565:14): [True: 0, False: 2.21M]
  ------------------
 2566|      0|    handler.on_text(begin, begin + 1);
 2567|  2.21M|  } else {
 2568|  2.21M|    auto adapter = id_adapter{handler, 0};
 2569|  2.21M|    begin = parse_arg_id(begin, end, adapter);
 2570|  2.21M|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2570:14): [True: 2.21M, False: 0]
  ------------------
 2571|  2.21M|    if (c == '}') {
  ------------------
  |  Branch (2571:9): [True: 0, False: 2.21M]
  ------------------
 2572|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2573|  2.21M|    } else if (c == ':') {
  ------------------
  |  Branch (2573:16): [True: 2.21M, False: 0]
  ------------------
 2574|  2.21M|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2575|  2.21M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2575:11): [True: 0, False: 2.21M]
  |  Branch (2575:27): [True: 0, False: 2.21M]
  ------------------
 2576|      0|        return handler.on_error("unknown format specifier"), end;
 2577|  2.21M|    } else {
 2578|      0|      return handler.on_error("missing '}' in format string"), end;
 2579|      0|    }
 2580|  2.21M|  }
 2581|  2.21M|  return begin + 1;
 2582|  2.21M|}
_ZNK3fmt2v920basic_format_contextINS0_8appenderEcE3argEi:
 1829|  2.21M|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE6localeEv:
 1849|  2.21M|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt2v926basic_format_parse_contextIcE11next_arg_idEv:
  721|  2.21M|  FMT_CONSTEXPR auto next_arg_id() -> int {
  722|  2.21M|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (722:9): [True: 0, False: 2.21M]
  ------------------
  723|      0|      detail::throw_format_error(
  724|      0|          "cannot switch from manual to automatic argument indexing");
  725|      0|      return 0;
  726|      0|    }
  727|  2.21M|    int id = next_arg_id_++;
  728|  2.21M|    do_check_arg_id(id);
  729|  2.21M|    return id;
  730|  2.21M|  }
_ZN3fmt2v926basic_format_parse_contextIcE15do_check_arg_idEi:
  792|  2.21M|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
  793|       |  // Argument id is only checked at compile-time during parsing because
  794|       |  // formatting has its own validation.
  795|  2.21M|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (795:7): [Folded - Ignored]
  ------------------
  796|  2.21M|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (796:8): [Folded - Ignored]
  |  Branch (796:28): [Folded - Ignored]
  ------------------
  797|      0|    using context = detail::compile_parse_context<Char>;
  798|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (798:9): [True: 0, False: 0]
  ------------------
  799|      0|      detail::throw_format_error("argument not found");
  800|      0|  }
  801|  2.21M|}
_ZN3fmt2v96detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2314|  2.21M|                                           Handler&& handler) -> const Char* {
 2315|  2.21M|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  368|  2.21M|      ::fmt::detail::ignore_unused((condition), (message))
  ------------------
 2316|  2.21M|  Char c = *begin;
 2317|  2.21M|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2317:7): [True: 2.21M, False: 0]
  |  Branch (2317:19): [True: 0, False: 2.21M]
  ------------------
 2318|  2.21M|  handler.on_auto();
 2319|  2.21M|  return begin;
 2320|  2.21M|}
_ZZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2554|  2.21M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1624|  4.42M|  auto type() const -> detail::type { return type_; }
_ZN3fmt2v96detail7arg_refIcEC2Ev:
 2167|  4.42M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt2v96detail7arg_refIcE5valueC2Ei:
 2182|  4.42M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2384|  2.21M|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2385|  2.21M|  auto c = '\0';
 2386|  2.21M|  if (end - begin > 1) {
  ------------------
  |  Branch (2386:7): [True: 2.21M, False: 0]
  ------------------
 2387|  2.21M|    auto next = to_ascii(begin[1]);
 2388|  2.21M|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2388:9): [True: 2.21M, False: 0]
  ------------------
 2389|  2.21M|  } else {
 2390|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2390:9): [True: 0, False: 0]
  ------------------
 2391|      0|    c = to_ascii(*begin);
 2392|      0|  }
 2393|       |
 2394|  2.21M|  struct {
 2395|  2.21M|    state current_state = state::start;
 2396|  2.21M|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2397|  2.21M|      if (current_state >= s || !valid)
 2398|  2.21M|        throw_format_error("invalid format specifier");
 2399|  2.21M|      current_state = s;
 2400|  2.21M|    }
 2401|  2.21M|  } enter_state;
 2402|       |
 2403|  2.21M|  using pres = presentation_type;
 2404|  2.21M|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2405|  2.21M|  struct {
 2406|  2.21M|    const Char*& begin;
 2407|  2.21M|    dynamic_format_specs<Char>& specs;
 2408|  2.21M|    type arg_type;
 2409|       |
 2410|  2.21M|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2411|  2.21M|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
 2412|  2.21M|      specs.type = type;
 2413|  2.21M|      return begin + 1;
 2414|  2.21M|    }
 2415|  2.21M|  } parse_presentation_type{begin, specs, arg_type};
 2416|       |
 2417|  2.21M|  for (;;) {
 2418|  2.21M|    switch (c) {
 2419|      0|    case '<':
  ------------------
  |  Branch (2419:5): [True: 0, False: 2.21M]
  ------------------
 2420|      0|    case '>':
  ------------------
  |  Branch (2420:5): [True: 0, False: 2.21M]
  ------------------
 2421|      0|    case '^':
  ------------------
  |  Branch (2421:5): [True: 0, False: 2.21M]
  ------------------
 2422|      0|      enter_state(state::align);
 2423|      0|      specs.align = parse_align(c);
 2424|      0|      ++begin;
 2425|      0|      break;
 2426|      0|    case '+':
  ------------------
  |  Branch (2426:5): [True: 0, False: 2.21M]
  ------------------
 2427|      0|    case '-':
  ------------------
  |  Branch (2427:5): [True: 0, False: 2.21M]
  ------------------
 2428|      0|    case ' ':
  ------------------
  |  Branch (2428:5): [True: 0, False: 2.21M]
  ------------------
 2429|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2430|      0|      switch (c) {
  ------------------
  |  Branch (2430:15): [True: 0, False: 0]
  ------------------
 2431|      0|      case '+':
  ------------------
  |  Branch (2431:7): [True: 0, False: 0]
  ------------------
 2432|      0|        specs.sign = sign::plus;
 2433|      0|        break;
 2434|      0|      case '-':
  ------------------
  |  Branch (2434:7): [True: 0, False: 0]
  ------------------
 2435|      0|        specs.sign = sign::minus;
 2436|      0|        break;
 2437|      0|      case ' ':
  ------------------
  |  Branch (2437:7): [True: 0, False: 0]
  ------------------
 2438|      0|        specs.sign = sign::space;
 2439|      0|        break;
 2440|      0|      }
 2441|      0|      ++begin;
 2442|      0|      break;
 2443|      0|    case '#':
  ------------------
  |  Branch (2443:5): [True: 0, False: 2.21M]
  ------------------
 2444|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2445|      0|      specs.alt = true;
 2446|      0|      ++begin;
 2447|      0|      break;
 2448|      0|    case '0':
  ------------------
  |  Branch (2448:5): [True: 0, False: 2.21M]
  ------------------
 2449|      0|      enter_state(state::zero);
 2450|      0|      if (!is_arithmetic_type(arg_type))
  ------------------
  |  Branch (2450:11): [True: 0, False: 0]
  ------------------
 2451|      0|        throw_format_error("format specifier requires numeric argument");
 2452|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2452:11): [True: 0, False: 0]
  ------------------
 2453|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2454|      0|        specs.align = align::numeric;
 2455|      0|        specs.fill[0] = Char('0');
 2456|      0|      }
 2457|      0|      ++begin;
 2458|      0|      break;
 2459|      0|    case '1':
  ------------------
  |  Branch (2459:5): [True: 0, False: 2.21M]
  ------------------
 2460|      0|    case '2':
  ------------------
  |  Branch (2460:5): [True: 0, False: 2.21M]
  ------------------
 2461|      0|    case '3':
  ------------------
  |  Branch (2461:5): [True: 0, False: 2.21M]
  ------------------
 2462|      0|    case '4':
  ------------------
  |  Branch (2462:5): [True: 0, False: 2.21M]
  ------------------
 2463|      0|    case '5':
  ------------------
  |  Branch (2463:5): [True: 0, False: 2.21M]
  ------------------
 2464|      0|    case '6':
  ------------------
  |  Branch (2464:5): [True: 0, False: 2.21M]
  ------------------
 2465|      0|    case '7':
  ------------------
  |  Branch (2465:5): [True: 0, False: 2.21M]
  ------------------
 2466|      0|    case '8':
  ------------------
  |  Branch (2466:5): [True: 0, False: 2.21M]
  ------------------
 2467|      0|    case '9':
  ------------------
  |  Branch (2467:5): [True: 0, False: 2.21M]
  ------------------
 2468|      0|    case '{':
  ------------------
  |  Branch (2468:5): [True: 0, False: 2.21M]
  ------------------
 2469|      0|      enter_state(state::width);
 2470|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2471|      0|      break;
 2472|      0|    case '.':
  ------------------
  |  Branch (2472:5): [True: 0, False: 2.21M]
  ------------------
 2473|      0|      enter_state(state::precision,
 2474|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2475|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2476|      0|                              ctx);
 2477|      0|      break;
 2478|      0|    case 'L':
  ------------------
  |  Branch (2478:5): [True: 0, False: 2.21M]
  ------------------
 2479|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2480|      0|      specs.localized = true;
 2481|      0|      ++begin;
 2482|      0|      break;
 2483|      0|    case 'd':
  ------------------
  |  Branch (2483:5): [True: 0, False: 2.21M]
  ------------------
 2484|      0|      return parse_presentation_type(pres::dec, integral_set);
 2485|      0|    case 'o':
  ------------------
  |  Branch (2485:5): [True: 0, False: 2.21M]
  ------------------
 2486|      0|      return parse_presentation_type(pres::oct, integral_set);
 2487|      0|    case 'x':
  ------------------
  |  Branch (2487:5): [True: 0, False: 2.21M]
  ------------------
 2488|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2489|      0|    case 'X':
  ------------------
  |  Branch (2489:5): [True: 0, False: 2.21M]
  ------------------
 2490|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2491|      0|    case 'b':
  ------------------
  |  Branch (2491:5): [True: 0, False: 2.21M]
  ------------------
 2492|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2493|      0|    case 'B':
  ------------------
  |  Branch (2493:5): [True: 0, False: 2.21M]
  ------------------
 2494|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2495|      0|    case 'a':
  ------------------
  |  Branch (2495:5): [True: 0, False: 2.21M]
  ------------------
 2496|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2497|      0|    case 'A':
  ------------------
  |  Branch (2497:5): [True: 0, False: 2.21M]
  ------------------
 2498|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2499|      0|    case 'e':
  ------------------
  |  Branch (2499:5): [True: 0, False: 2.21M]
  ------------------
 2500|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2501|      0|    case 'E':
  ------------------
  |  Branch (2501:5): [True: 0, False: 2.21M]
  ------------------
 2502|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2503|      0|    case 'f':
  ------------------
  |  Branch (2503:5): [True: 0, False: 2.21M]
  ------------------
 2504|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2505|      0|    case 'F':
  ------------------
  |  Branch (2505:5): [True: 0, False: 2.21M]
  ------------------
 2506|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2507|      0|    case 'g':
  ------------------
  |  Branch (2507:5): [True: 0, False: 2.21M]
  ------------------
 2508|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2509|      0|    case 'G':
  ------------------
  |  Branch (2509:5): [True: 0, False: 2.21M]
  ------------------
 2510|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2511|      0|    case 'c':
  ------------------
  |  Branch (2511:5): [True: 0, False: 2.21M]
  ------------------
 2512|      0|      return parse_presentation_type(pres::chr, integral_set);
 2513|  2.21M|    case 's':
  ------------------
  |  Branch (2513:5): [True: 2.21M, False: 0]
  ------------------
 2514|  2.21M|      return parse_presentation_type(pres::string,
 2515|  2.21M|                                     bool_set | string_set | cstring_set);
 2516|      0|    case 'p':
  ------------------
  |  Branch (2516:5): [True: 0, False: 2.21M]
  ------------------
 2517|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2518|      0|    case '?':
  ------------------
  |  Branch (2518:5): [True: 0, False: 2.21M]
  ------------------
 2519|      0|      return parse_presentation_type(pres::debug,
 2520|      0|                                     char_set | string_set | cstring_set);
 2521|      0|    case '}':
  ------------------
  |  Branch (2521:5): [True: 0, False: 2.21M]
  ------------------
 2522|      0|      return begin;
 2523|      0|    default: {
  ------------------
  |  Branch (2523:5): [True: 0, False: 2.21M]
  ------------------
 2524|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2524:11): [True: 0, False: 0]
  ------------------
 2525|       |      // Parse fill and alignment.
 2526|      0|      auto fill_end = begin + code_point_length(begin);
 2527|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2527:11): [True: 0, False: 0]
  ------------------
 2528|      0|        throw_format_error("invalid format specifier");
 2529|      0|        return begin;
 2530|      0|      }
 2531|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2531:11): [True: 0, False: 0]
  ------------------
 2532|      0|        throw_format_error("invalid fill character '{'");
 2533|      0|        return begin;
 2534|      0|      }
 2535|      0|      auto align = parse_align(to_ascii(*fill_end));
 2536|      0|      enter_state(state::align, align != align::none);
 2537|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2538|      0|      specs.align = align;
 2539|      0|      begin = fill_end + 1;
 2540|      0|    }
 2541|  2.21M|    }
 2542|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2542:9): [True: 0, False: 0]
  ------------------
 2543|      0|    c = to_ascii(*begin);
 2544|      0|  }
 2545|  2.21M|}
_ZN3fmt2v96detail8to_asciiIcLi0EEEcT_:
 2201|  4.42M|constexpr auto to_ascii(Char c) -> char {
 2202|  4.42M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2202:10): [True: 4.42M, False: 0]
  ------------------
 2203|  4.42M|}
_ZN3fmt2v96detail11parse_alignEc:
 2267|  2.21M|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2268|  2.21M|  switch (c) {
  ------------------
  |  Branch (2268:11): [True: 2.21M, False: 0]
  ------------------
 2269|      0|  case '<':
  ------------------
  |  Branch (2269:3): [True: 0, False: 2.21M]
  ------------------
 2270|      0|    return align::left;
 2271|      0|  case '>':
  ------------------
  |  Branch (2271:3): [True: 0, False: 2.21M]
  ------------------
 2272|      0|    return align::right;
 2273|      0|  case '^':
  ------------------
  |  Branch (2273:3): [True: 0, False: 2.21M]
  ------------------
 2274|      0|    return align::center;
 2275|  2.21M|  }
 2276|  2.21M|  return align::none;
 2277|  2.21M|}
_ZN3fmt2v96detail2inENS1_4typeEi:
  643|  2.21M|constexpr auto in(type t, int set) -> bool {
  644|  2.21M|  return ((set >> static_cast<int>(t)) & 1) != 0;
  645|  2.21M|}
_ZZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2410|  2.21M|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2411|  2.21M|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
  ------------------
  |  Branch (2411:11): [True: 0, False: 2.21M]
  ------------------
 2412|  2.21M|      specs.type = type;
 2413|  2.21M|      return begin + 1;
 2414|  2.21M|    }
_ZN3fmt2v916visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1641|  2.21M|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1642|  2.21M|  switch (arg.type_) {
  ------------------
  |  Branch (1642:11): [True: 0, False: 2.21M]
  ------------------
 1643|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1643:3): [True: 0, False: 2.21M]
  ------------------
 1644|      0|    break;
 1645|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1645:3): [True: 0, False: 2.21M]
  ------------------
 1646|      0|    return vis(arg.value_.int_value);
 1647|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1647:3): [True: 0, False: 2.21M]
  ------------------
 1648|      0|    return vis(arg.value_.uint_value);
 1649|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1649:3): [True: 0, False: 2.21M]
  ------------------
 1650|      0|    return vis(arg.value_.long_long_value);
 1651|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1651:3): [True: 0, False: 2.21M]
  ------------------
 1652|      0|    return vis(arg.value_.ulong_long_value);
 1653|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1653:3): [True: 0, False: 2.21M]
  ------------------
 1654|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1655|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1655:3): [True: 0, False: 2.21M]
  ------------------
 1656|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1657|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1657:3): [True: 0, False: 2.21M]
  ------------------
 1658|      0|    return vis(arg.value_.bool_value);
 1659|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1659:3): [True: 0, False: 2.21M]
  ------------------
 1660|      0|    return vis(arg.value_.char_value);
 1661|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1661:3): [True: 0, False: 2.21M]
  ------------------
 1662|      0|    return vis(arg.value_.float_value);
 1663|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1663:3): [True: 0, False: 2.21M]
  ------------------
 1664|      0|    return vis(arg.value_.double_value);
 1665|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1665:3): [True: 0, False: 2.21M]
  ------------------
 1666|      0|    return vis(arg.value_.long_double_value);
 1667|  1.85M|  case detail::type::cstring_type:
  ------------------
  |  Branch (1667:3): [True: 1.85M, False: 360k]
  ------------------
 1668|  1.85M|    return vis(arg.value_.string.data);
 1669|   360k|  case detail::type::string_type:
  ------------------
  |  Branch (1669:3): [True: 360k, False: 1.85M]
  ------------------
 1670|   360k|    using sv = basic_string_view<typename Context::char_type>;
 1671|   360k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1672|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1672:3): [True: 0, False: 2.21M]
  ------------------
 1673|      0|    return vis(arg.value_.pointer);
 1674|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1674:3): [True: 0, False: 2.21M]
  ------------------
 1675|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1676|  2.21M|  }
 1677|      0|  return vis(monostate());
 1678|  2.21M|}
_ZN3fmt2v96detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2236|  4.74M|                              const char*& out) -> bool {
 2237|  4.74M|  out = static_cast<const char*>(
 2238|  4.74M|      std::memchr(first, value, to_unsigned(last - first)));
 2239|  4.74M|  return out != nullptr;
 2240|  4.74M|}
_ZZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2611|  2.37M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2612|  2.37M|      if (from == to) return;
  ------------------
  |  Branch (2612:11): [True: 0, False: 2.37M]
  ------------------
 2613|  2.37M|      for (;;) {
 2614|  2.37M|        const Char* p = nullptr;
 2615|  2.37M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2615:13): [True: 2.37M, False: 0]
  ------------------
 2616|  2.37M|          return handler_.on_text(from, to);
 2617|      0|        ++p;
 2618|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2618:13): [True: 0, False: 0]
  |  Branch (2618:24): [True: 0, False: 0]
  ------------------
 2619|      0|          return handler_.on_error("unmatched '}' in format string");
 2620|      0|        handler_.on_text(from, p);
 2621|      0|        from = p + 1;
 2622|      0|      }
 2623|  2.37M|    }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1313|   360k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1314|   360k|    string.data = val.data();
 1315|   360k|    string.size = val.size();
 1316|   360k|  }
_ZN3fmt2v96detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1441|  1.85M|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1442|  1.85M|    return val;
 1443|  1.85M|  }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1309|  1.85M|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1310|  1.85M|    string.data = val;
 1311|  1.85M|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1311:9): [Folded - Ignored]
  ------------------
 1312|  1.85M|  }
_ZNK3fmt2v96detail6bufferIcE4dataEv:
  939|  2.21M|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt2v97vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1447|  2.21M|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1448|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1449|       |  // can be better optimized in fmt::format anyway.
 1450|  2.21M|  auto buffer = memory_buffer();
 1451|  2.21M|  detail::vformat_to(buffer, fmt, args);
 1452|  2.21M|  return to_string(buffer);
 1453|  2.21M|}

_ZN3fmt2v96detail6bufferIcE6appendIcEEvPKT_S7_:
  842|  6.64M|void buffer<T>::append(const U* begin, const U* end) {
  843|  13.2M|  while (begin != end) {
  ------------------
  |  Branch (843:10): [True: 6.64M, False: 6.64M]
  ------------------
  844|  6.64M|    auto count = to_unsigned(end - begin);
  845|  6.64M|    try_reserve(size_ + count);
  846|  6.64M|    auto free_cap = capacity_ - size_;
  847|  6.64M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (847:9): [True: 0, False: 6.64M]
  ------------------
  848|  6.64M|    std::uninitialized_copy_n(begin, count, make_checked(ptr_ + size_, count));
  849|  6.64M|    size_ += count;
  850|  6.64M|    begin += count;
  851|  6.64M|  }
  852|  6.64M|}
_ZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4489|  2.21M|                typename vformat_args<Char>::type args, locale_ref loc) {
 4490|       |  // workaround for msvc bug regarding name-lookup in module
 4491|       |  // link names into function scope
 4492|  2.21M|  using detail::arg_formatter;
 4493|  2.21M|  using detail::buffer_appender;
 4494|  2.21M|  using detail::custom_formatter;
 4495|  2.21M|  using detail::default_arg_formatter;
 4496|  2.21M|  using detail::get_arg;
 4497|  2.21M|  using detail::locale_ref;
 4498|  2.21M|  using detail::parse_format_specs;
 4499|  2.21M|  using detail::to_unsigned;
 4500|  2.21M|  using detail::type;
 4501|  2.21M|  using detail::write;
 4502|  2.21M|  auto out = buffer_appender<Char>(buf);
 4503|  2.21M|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4503:7): [True: 0, False: 2.21M]
  |  Branch (4503:26): [True: 0, False: 0]
  ------------------
 4504|      0|    auto arg = args.get(0);
 4505|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4505:9): [True: 0, False: 0]
  ------------------
 4506|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4507|      0|    return;
 4508|      0|  }
 4509|       |
 4510|  2.21M|  struct format_handler : error_handler {
 4511|  2.21M|    basic_format_parse_context<Char> parse_context;
 4512|  2.21M|    buffer_context<Char> context;
 4513|       |
 4514|  2.21M|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4515|  2.21M|                   basic_format_args<buffer_context<Char>> p_args,
 4516|  2.21M|                   locale_ref p_loc)
 4517|  2.21M|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4518|       |
 4519|  2.21M|    void on_text(const Char* begin, const Char* end) {
 4520|  2.21M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4521|  2.21M|      context.advance_to(write<Char>(context.out(), text));
 4522|  2.21M|    }
 4523|       |
 4524|  2.21M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4525|  2.21M|      return parse_context.next_arg_id();
 4526|  2.21M|    }
 4527|  2.21M|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4528|  2.21M|      return parse_context.check_arg_id(id), id;
 4529|  2.21M|    }
 4530|  2.21M|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4531|  2.21M|      int arg_id = context.arg_id(id);
 4532|  2.21M|      if (arg_id < 0) on_error("argument not found");
 4533|  2.21M|      return arg_id;
 4534|  2.21M|    }
 4535|       |
 4536|  2.21M|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4537|  2.21M|      auto arg = get_arg(context, id);
 4538|  2.21M|      context.advance_to(visit_format_arg(
 4539|  2.21M|          default_arg_formatter<Char>{context.out(), context.args(),
 4540|  2.21M|                                      context.locale()},
 4541|  2.21M|          arg));
 4542|  2.21M|    }
 4543|       |
 4544|  2.21M|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4545|  2.21M|        -> const Char* {
 4546|  2.21M|      auto arg = get_arg(context, id);
 4547|  2.21M|      if (arg.type() == type::custom_type) {
 4548|  2.21M|        parse_context.advance_to(begin);
 4549|  2.21M|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4550|  2.21M|        return parse_context.begin();
 4551|  2.21M|      }
 4552|  2.21M|      auto specs = detail::dynamic_format_specs<Char>();
 4553|  2.21M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4554|  2.21M|      detail::handle_dynamic_spec<detail::width_checker>(
 4555|  2.21M|          specs.width, specs.width_ref, context);
 4556|  2.21M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4557|  2.21M|          specs.precision, specs.precision_ref, context);
 4558|  2.21M|      if (begin == end || *begin != '}')
 4559|  2.21M|        on_error("missing '}' in format string");
 4560|  2.21M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4561|  2.21M|      context.advance_to(visit_format_arg(f, arg));
 4562|  2.21M|      return begin;
 4563|  2.21M|    }
 4564|  2.21M|  };
 4565|  2.21M|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4566|  2.21M|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  911|  2.21M|      : alloc_(alloc) {
  912|  2.21M|    this->set(store_, SIZE);
  913|  2.21M|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (913:9): [Folded - Ignored]
  ------------------
  914|  2.21M|  }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  982|    554|    size_t size) {
  983|    554|  detail::abort_fuzzing_if(size > 5000);
  984|    554|  const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  985|    554|  size_t old_capacity = this->capacity();
  986|    554|  size_t new_capacity = old_capacity + old_capacity / 2;
  987|    554|  if (size > new_capacity)
  ------------------
  |  Branch (987:7): [True: 171, False: 383]
  ------------------
  988|    171|    new_capacity = size;
  989|    383|  else if (new_capacity > max_size)
  ------------------
  |  Branch (989:12): [True: 0, False: 383]
  ------------------
  990|      0|    new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (990:20): [True: 0, False: 0]
  ------------------
  991|    554|  T* old_data = this->data();
  992|    554|  T* new_data =
  993|    554|      std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  994|       |  // The following code doesn't throw, so the raw pointer above doesn't leak.
  995|    554|  std::uninitialized_copy(old_data, old_data + this->size(),
  996|    554|                          detail::make_checked(new_data, new_capacity));
  997|    554|  this->set(new_data, new_capacity);
  998|       |  // deallocate must not throw according to the standard, but even if it does,
  999|       |  // the buffer already uses the new storage and will deallocate it in
 1000|       |  // destructor.
 1001|    554|  if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (1001:7): [True: 180, False: 374]
  ------------------
 1002|    554|}
_ZN3fmt2v96detail16abort_fuzzing_ifEb:
  259|    554|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  260|    554|  ignore_unused(condition);
  261|       |#ifdef FMT_FUZZ
  262|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  263|       |#endif
  264|    554|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  915|  2.21M|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  897|  2.21M|  FMT_CONSTEXPR20 void deallocate() {
  898|  2.21M|    T* data = this->data();
  899|  2.21M|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (899:9): [True: 374, False: 2.21M]
  ------------------
  900|  2.21M|  }
_ZN3fmt2v96detail12make_checkedIcEEPT_S4_m:
  541|  6.64M|template <typename T> constexpr auto make_checked(T* p, size_t) -> T* {
  542|  6.64M|  return p;
  543|  6.64M|}
_ZN3fmt2v96detail7reserveINS0_8appenderEEERT_S5_m:
  569|  6.64M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  570|  6.64M|  return it;
  571|  6.64M|}
_ZN3fmt2v96detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  597|  6.64M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  598|  6.64M|  return it;
  599|  6.64M|}
_ZN3fmt2v96detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  626|  4.42M|                                                  OutputIt out) -> OutputIt {
  627|  4.42M|  return copy_str<OutChar>(begin, end, out);
  628|  4.42M|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3819|  4.42M|    -> OutputIt {
 3820|  4.42M|  auto it = reserve(out, value.size());
 3821|  4.42M|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3822|  4.42M|  return base_iterator(out, it);
 3823|  4.42M|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4519|  4.42M|    void on_text(const Char* begin, const Char* end) {
 4520|  4.42M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4521|  4.42M|      context.advance_to(write<Char>(context.out(), text));
 4522|  4.42M|    }
_ZN3fmt2v96detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEENT_10format_argERS6_T0_:
 4002|  2.21M|    typename Context::format_arg {
 4003|  2.21M|  auto arg = ctx.arg(id);
 4004|  2.21M|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (4004:7): [True: 0, False: 2.21M]
  ------------------
 4005|  2.21M|  return arg;
 4006|  2.21M|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4524|  2.21M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4525|  2.21M|      return parse_context.next_arg_id();
 4526|  2.21M|    }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4545|  2.21M|        -> const Char* {
 4546|  2.21M|      auto arg = get_arg(context, id);
 4547|  2.21M|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4547:11): [True: 0, False: 2.21M]
  ------------------
 4548|      0|        parse_context.advance_to(begin);
 4549|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4550|      0|        return parse_context.begin();
 4551|      0|      }
 4552|  2.21M|      auto specs = detail::dynamic_format_specs<Char>();
 4553|  2.21M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4554|  2.21M|      detail::handle_dynamic_spec<detail::width_checker>(
 4555|  2.21M|          specs.width, specs.width_ref, context);
 4556|  2.21M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4557|  2.21M|          specs.precision, specs.precision_ref, context);
 4558|  2.21M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4558:11): [True: 0, False: 2.21M]
  |  Branch (4558:27): [True: 0, False: 2.21M]
  ------------------
 4559|      0|        on_error("missing '}' in format string");
 4560|  2.21M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4561|  2.21M|      context.advance_to(visit_format_arg(f, arg));
 4562|  2.21M|      return begin;
 4563|  2.21M|    }
_ZN3fmt2v96detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 4011|  2.21M|                                       Context& ctx) {
 4012|  2.21M|  switch (ref.kind) {
  ------------------
  |  Branch (4012:11): [True: 0, False: 2.21M]
  ------------------
 4013|  2.21M|  case arg_id_kind::none:
  ------------------
  |  Branch (4013:3): [True: 2.21M, False: 0]
  ------------------
 4014|  2.21M|    break;
 4015|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4015:3): [True: 0, False: 2.21M]
  ------------------
 4016|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4017|      0|                                              ctx.error_handler());
 4018|      0|    break;
 4019|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4019:3): [True: 0, False: 2.21M]
  ------------------
 4020|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4021|      0|                                              ctx.error_handler());
 4022|      0|    break;
 4023|  2.21M|  }
 4024|  2.21M|}
_ZN3fmt2v96detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 4011|  2.21M|                                       Context& ctx) {
 4012|  2.21M|  switch (ref.kind) {
  ------------------
  |  Branch (4012:11): [True: 0, False: 2.21M]
  ------------------
 4013|  2.21M|  case arg_id_kind::none:
  ------------------
  |  Branch (4013:3): [True: 2.21M, False: 0]
  ------------------
 4014|  2.21M|    break;
 4015|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4015:3): [True: 0, False: 2.21M]
  ------------------
 4016|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4017|      0|                                              ctx.error_handler());
 4018|      0|    break;
 4019|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4019:3): [True: 0, False: 2.21M]
  ------------------
 4020|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4021|      0|                                              ctx.error_handler());
 4022|      0|    break;
 4023|  2.21M|  }
 4024|  2.21M|}
_ZN3fmt2v96detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3931|  1.85M|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3932|  1.85M|    return detail::write(out, value, specs, locale);
 3933|  1.85M|  }
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2359|  1.85M|    -> OutputIt {
 2360|  1.85M|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2360:10): [True: 1.85M, False: 0]
  ------------------
 2361|  1.85M|             ? write(out, basic_string_view<Char>(s), specs, {})
 2362|  1.85M|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2363|  1.85M|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2353|  2.21M|    -> OutputIt {
 2354|  2.21M|  return write(out, s, specs);
 2355|  2.21M|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2330|  2.21M|                         const format_specs<Char>& specs) -> OutputIt {
 2331|  2.21M|  auto data = s.data();
 2332|  2.21M|  auto size = s.size();
 2333|  2.21M|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2333:7): [True: 0, False: 2.21M]
  |  Branch (2333:31): [True: 0, False: 0]
  ------------------
 2334|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2335|  2.21M|  bool is_debug = specs.type == presentation_type::debug;
 2336|  2.21M|  size_t width = 0;
 2337|  2.21M|  if (specs.width != 0) {
  ------------------
  |  Branch (2337:7): [True: 0, False: 2.21M]
  ------------------
 2338|      0|    if (is_debug)
  ------------------
  |  Branch (2338:9): [True: 0, False: 0]
  ------------------
 2339|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2340|      0|    else
 2341|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2342|      0|  }
 2343|  2.21M|  return write_padded(out, specs, size, width,
 2344|  2.21M|                      [=](reserve_iterator<OutputIt> it) {
 2345|  2.21M|                        if (is_debug) return write_escaped_string(it, s);
 2346|  2.21M|                        return copy_str<Char>(data, data + size, it);
 2347|  2.21M|                      });
 2348|  2.21M|}
_ZN3fmt2v96detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1783|  2.21M|                                size_t size, size_t width, F&& f) -> OutputIt {
 1784|  2.21M|  static_assert(align == align::left || align == align::right, "");
 1785|  2.21M|  unsigned spec_width = to_unsigned(specs.width);
 1786|  2.21M|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1786:20): [True: 0, False: 2.21M]
  ------------------
 1787|       |  // Shifts are encoded as string literals because static constexpr is not
 1788|       |  // supported in constexpr functions.
 1789|  2.21M|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1789:18): [Folded - Ignored]
  ------------------
 1790|  2.21M|  size_t left_padding = padding >> shifts[specs.align];
 1791|  2.21M|  size_t right_padding = padding - left_padding;
 1792|  2.21M|  auto it = reserve(out, size + padding * specs.fill.size());
 1793|  2.21M|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1793:7): [True: 0, False: 2.21M]
  ------------------
 1794|  2.21M|  it = f(it);
 1795|  2.21M|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1795:7): [True: 0, False: 2.21M]
  ------------------
 1796|  2.21M|  return base_iterator(out, it);
 1797|  2.21M|}
_ZZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2344|  2.21M|                      [=](reserve_iterator<OutputIt> it) {
 2345|  2.21M|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2345:29): [True: 0, False: 2.21M]
  ------------------
 2346|  2.21M|                        return copy_str<Char>(data, data + size, it);
 2347|  2.21M|                      });
_ZN3fmt2v96detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3931|   360k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3932|   360k|    return detail::write(out, value, specs, locale);
 3933|   360k|  }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4517|  2.21M|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt2v99to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4479|  2.21M|    -> std::basic_string<Char> {
 4480|  2.21M|  auto size = buf.size();
 4481|  2.21M|  detail::assume(size < std::basic_string<Char>().max_size());
 4482|  2.21M|  return std::basic_string<Char>(buf.data(), size);
 4483|  2.21M|}
_ZN3fmt2v96detail6assumeEb:
  510|  2.21M|FMT_INLINE void assume(bool condition) {
  511|  2.21M|  (void)condition;
  512|  2.21M|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  513|  2.21M|  __builtin_assume(condition);
  514|  2.21M|#endif
  515|  2.21M|}

LLVMFuzzerTestOneInput:
   12|  23.2k|{
   13|  23.2k|    OpenAutoIt::disable_output();
   14|       |
   15|  23.2k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   16|       |
   17|  23.2k|    OpenAutoIt::ParseResult parse_result;
   18|       |
   19|  23.2k|    OpenAutoIt::Lexer lexer{parse_result, source};
   20|  23.2k|    lexer.ProcessAll();
   21|       |
   22|  23.2k|    OpenAutoIt::Parser parser;
   23|  23.2k|    parser.ParseDocument(parse_result);
   24|       |
   25|  23.2k|    const volatile phi::scope_ptr<OpenAutoIt::ASTDocument> doc{phi::move(parse_result.m_Document)};
   26|       |
   27|       |    // Ignore result
   28|  23.2k|    (void)doc;
   29|       |
   30|  23.2k|    return 0;
   31|  23.2k|}

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|   161k|        {
   20|   161k|            m_NodeType = ASTNodeType::BinaryExpression;
   21|   161k|        }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  52.1k|        {
   18|  52.1k|            m_NodeType = ASTNodeType::BooleanLiteral;
   19|  52.1k|        }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|  99.6k|        {
   20|  99.6k|            m_Statements.emplace_back(phi::move(child));
   21|  99.6k|        }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  6.61k|        {
   25|  6.61k|            m_Functions.emplace_back(phi::move(child));
   26|  6.61k|        }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|   672k|        {
   13|   672k|            switch (m_NodeType)
   14|   672k|            {
   15|   255k|                case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:17): [True: 255k, False: 416k]
  ------------------
   16|   255k|                case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:17): [True: 0, False: 672k]
  ------------------
   17|   297k|                case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:17): [True: 42.6k, False: 629k]
  ------------------
   18|   297k|                    return true;
   19|       |
   20|   374k|                default:
  ------------------
  |  Branch (20:17): [True: 374k, False: 297k]
  ------------------
   21|   374k|                    return false;
   22|   672k|            }
   23|   672k|        }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|   672k|        {
   17|   672k|            m_NodeType = ASTNodeType::ExpressionStatement;
   18|   672k|        }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  16.4k|        {
   17|  16.4k|            m_NodeType = ASTNodeType::FloatLiteral;
   18|  16.4k|        }

_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|   542k|        {
   21|   542k|            m_NodeType = ASTNodeType::FunctionCallExpression;
   22|   542k|        }
_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|   282k|        {
   26|   282k|            if (m_IsBuiltIn)
  ------------------
  |  Branch (26:17): [True: 6.28k, False: 275k]
  ------------------
   27|  6.28k|            {
   28|  6.28k|                return enum_name(m_BuiltInFunction);
   29|  6.28k|            }
   30|       |
   31|   275k|            return m_FunctionName;
   32|   282k|        }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  33.4k|        {
   25|  33.4k|            m_NodeType = ASTNodeType::IfStatement;
   26|  33.4k|        }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|   532k|        {
   17|   532k|            m_NodeType = ASTNodeType::IntegerLiteral;
   18|   532k|        }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|  32.7k|        {
   19|  32.7k|            m_NodeType = ASTNodeType::KeywordLiteral;
   20|  32.7k|            PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|  32.7k|        }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   64|  2.89M|        virtual ~ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   67|   374k|        {
   68|   374k|            PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   69|   374k|            PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   70|       |
   71|   374k|            return enum_name(m_NodeType);
   72|   374k|        }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   43|   374k|    {
   44|   374k|        switch (node_type)
   45|   374k|        {
   46|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   47|      0|    case ASTNodeType::name:                                                                        \
   48|      0|        return "AST" #name;
   49|       |
   50|      0|            OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   13|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   14|  53.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   47|  53.0k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 53.0k, False: 321k]
  |  |  |  |  ------------------
  |  |  |  |   48|  53.0k|        return "AST" #name;
  |  |  ------------------
  |  |   15|  53.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   47|  37.8k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 37.8k, False: 336k]
  |  |  |  |  ------------------
  |  |  |  |   48|  37.8k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  37.8k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   17|  10.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   47|  10.0k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 10.0k, False: 364k]
  |  |  |  |  ------------------
  |  |  |  |   48|  10.0k|        return "AST" #name;
  |  |  ------------------
  |  |   18|  10.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   20|   120k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   47|   120k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 120k, False: 253k]
  |  |  |  |  ------------------
  |  |  |  |   48|   120k|        return "AST" #name;
  |  |  ------------------
  |  |   21|   120k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   47|  25.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 25.1k, False: 349k]
  |  |  |  |  ------------------
  |  |  |  |   48|  25.1k|        return "AST" #name;
  |  |  ------------------
  |  |   22|   127k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   47|   127k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 127k, False: 246k]
  |  |  |  |  ------------------
  |  |  |  |   48|   127k|        return "AST" #name;
  |  |  ------------------
  |  |   23|   127k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   24|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   25|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   26|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   51|       |
   52|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   53|       |
   54|      0|            default:
  ------------------
  |  Branch (54:13): [True: 0, False: 374k]
  ------------------
   55|      0|                PHI_ASSERT_NOT_REACHED();
   56|   374k|        }
   57|   374k|    }
_ZN10OpenAutoIt7ASTNodeC2Ev:
   62|  2.89M|        ASTNode() = default;

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|   194k|        {
   15|   194k|            m_NodeType = ASTNodeType::StringLiteral;
   16|   194k|        }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|   338k|        {
   20|   338k|            m_NodeType = ASTNodeType::VariableAssignment;
   21|   338k|        }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|   154k|        {
   15|   154k|            m_NodeType = ASTNodeType::VariableExpression;
   16|   154k|        }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  67.7k|        {
   18|  67.7k|            m_NodeType = ASTNodeType::WhileStatement;
   19|  67.7k|        }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  2.49M|        {
   46|  2.49M|            Token token{kind,
   47|  2.49M|                        m_Source.substring_view(
   48|  2.49M|                                static_cast<typename phi::string_view::size_type::value_type>(
   49|  2.49M|                                        m_Iterator - m_Source.begin()),
   50|  2.49M|                                1u),
   51|  2.49M|                        m_LineNumber, m_Column};
   52|       |
   53|       |            // 1 character sized token
   54|  2.49M|            ++m_Column;
   55|       |
   56|  2.49M|            return token;
   57|  2.49M|        }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  3.97M|        {
   61|  3.97M|            Token token{kind, TokenText(token_begin), m_LineNumber, m_Column};
   62|       |
   63|       |            // Consume the amount of characters that make up our new token
   64|  3.97M|            m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  3.97M|            return token;
   67|  3.97M|        }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  6.27M|        {
   71|  6.27M|            return m_Source.substring_view(token_begin, m_Iterator);
   72|  6.27M|        }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   61|  2.89M|        {
   62|  2.89M|            switch (token_kind)
   63|  2.89M|            {
   64|  4.08k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (64:17): [True: 4.08k, False: 2.89M]
  ------------------
   65|  6.33k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (65:17): [True: 2.25k, False: 2.89M]
  ------------------
   66|  8.18k|                case TokenKind::KW_Not:
  ------------------
  |  Branch (66:17): [True: 1.85k, False: 2.89M]
  ------------------
   67|  8.18k|                    return true;
   68|       |
   69|  2.88M|                default:
  ------------------
  |  Branch (69:17): [True: 2.88M, False: 8.18k]
  ------------------
   70|  2.88M|                    return false;
   71|  2.89M|            }
   72|  2.89M|        }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   76|  1.31M|        {
   77|  1.31M|            switch (token_kind)
   78|  1.31M|            {
   79|    411|                case TokenKind::KW_And:
  ------------------
  |  Branch (79:17): [True: 411, False: 1.31M]
  ------------------
   80|    743|                case TokenKind::KW_Or:
  ------------------
  |  Branch (80:17): [True: 332, False: 1.31M]
  ------------------
   81|  86.6k|                case TokenKind::OP_Equals:
  ------------------
  |  Branch (81:17): [True: 85.9k, False: 1.22M]
  ------------------
   82|   126k|                case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (82:17): [True: 39.4k, False: 1.27M]
  ------------------
   83|   128k|                case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (83:17): [True: 2.88k, False: 1.30M]
  ------------------
   84|   131k|                case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (84:17): [True: 2.44k, False: 1.31M]
  ------------------
   85|   156k|                case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (85:17): [True: 25.0k, False: 1.28M]
  ------------------
   86|   174k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (86:17): [True: 18.1k, False: 1.29M]
  ------------------
   87|   182k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (87:17): [True: 8.11k, False: 1.30M]
  ------------------
   88|   188k|                case TokenKind::OP_Multiply:
  ------------------
  |  Branch (88:17): [True: 5.60k, False: 1.30M]
  ------------------
   89|   212k|                case TokenKind::OP_Divide:
  ------------------
  |  Branch (89:17): [True: 23.8k, False: 1.28M]
  ------------------
   90|   213k|                case TokenKind::OP_Raise:
  ------------------
  |  Branch (90:17): [True: 1.43k, False: 1.31M]
  ------------------
   91|   216k|                case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (91:17): [True: 2.40k, False: 1.31M]
  ------------------
   92|   216k|                case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (92:17): [True: 669, False: 1.31M]
  ------------------
   93|   227k|                case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (93:17): [True: 10.7k, False: 1.30M]
  ------------------
   94|   228k|                case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (94:17): [True: 589, False: 1.31M]
  ------------------
   95|   233k|                case TokenKind::OP_LessThan:
  ------------------
  |  Branch (95:17): [True: 5.12k, False: 1.30M]
  ------------------
   96|   234k|                case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (96:17): [True: 1.26k, False: 1.31M]
  ------------------
   97|   234k|                    return true;
   98|       |
   99|  1.07M|                default:
  ------------------
  |  Branch (99:17): [True: 1.07M, False: 234k]
  ------------------
  100|  1.07M|                    return false;
  101|  1.31M|            }
  102|  1.31M|        }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  123|  6.61k|        {
  124|  6.61k|            m_ParseResult->m_Document->AppendFunction(phi::move(function));
  125|  6.61k|        }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  116|  99.6k|        {
  117|  99.6k|            m_ParseResult->m_Document->AppendStatement(phi::move(statement));
  118|  99.6k|        }

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS2_7integerImEES9_:
   23|  6.47M|        {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   36|  29.5M|        {
   37|  29.5M|            return m_Kind;
   38|  29.5M|        }
_ZNK10OpenAutoIt5Token7GetTextEv:
   41|  4.16M|        {
   42|  4.16M|            return m_Text;
   43|  4.16M|        }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   68|  1.20M|        {
   69|  1.20M|            const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   70|       |
   71|  1.20M|            if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (71:17): [True: 19.1k, False: 1.18M]
  ------------------
   72|  1.20M|                underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (72:17): [True: 19.1k, False: 0]
  ------------------
   73|  19.1k|            {
   74|  19.1k|                return true;
   75|  19.1k|            }
   76|       |
   77|  1.18M|            return false;
   78|  1.20M|        }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
   81|   524k|        {
   82|   524k|            switch (m_Kind)
   83|   524k|            {
   84|  35.7k|                case TokenKind::KW_Default:
  ------------------
  |  Branch (84:17): [True: 35.7k, False: 488k]
  ------------------
   85|  65.5k|                case TokenKind::KW_Null:
  ------------------
  |  Branch (85:17): [True: 29.7k, False: 494k]
  ------------------
   86|  65.5k|                    return true;
   87|       |
   88|   459k|                default:
  ------------------
  |  Branch (88:17): [True: 459k, False: 65.5k]
  ------------------
   89|   459k|                    return false;
   90|   524k|            }
   91|   524k|        }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  679|  1.48M|    {
  680|  1.48M|        switch (token_kind)
  681|  1.48M|        {
  682|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  683|      0|    case TokenKind::name:                                                                          \
  684|      0|        return #name;
  685|       |
  686|      0|            OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  7.90k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  683|  7.90k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7.90k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  7.90k|        return #name;
  |  |  ------------------
  |  |   13|  54.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  683|  54.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 54.9k, False: 1.42M]
  |  |  |  |  ------------------
  |  |  |  |  684|  54.9k|        return #name;
  |  |  ------------------
  |  |   14|  54.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   15|  9.87k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  683|  9.87k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 9.87k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  9.87k|        return #name;
  |  |  ------------------
  |  |   16|  9.87k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  683|    175|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 175, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    175|        return #name;
  |  |  ------------------
  |  |   17|    175|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   18|   211k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|   211k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 211k, False: 1.27M]
  |  |  |  |  ------------------
  |  |  |  |  684|   211k|        return #name;
  |  |  ------------------
  |  |   19|   211k|    /* Literals */                                                                                 \
  |  |   20|   211k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  683|   188k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 188k, False: 1.29M]
  |  |  |  |  ------------------
  |  |  |  |  684|   188k|        return #name;
  |  |  ------------------
  |  |   21|   188k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  683|  10.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10.9k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  10.9k|        return #name;
  |  |  ------------------
  |  |   22|   133k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  683|   133k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 133k, False: 1.35M]
  |  |  |  |  ------------------
  |  |  |  |  684|   133k|        return #name;
  |  |  ------------------
  |  |   23|   133k|    /* Punctuation */                                                                              \
  |  |   24|   133k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  683|  23.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 23.4k, False: 1.46M]
  |  |  |  |  ------------------
  |  |  |  |  684|  23.4k|        return #name;
  |  |  ------------------
  |  |   25|  61.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  61.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 61.9k, False: 1.42M]
  |  |  |  |  ------------------
  |  |  |  |  684|  61.9k|        return #name;
  |  |  ------------------
  |  |   26|   138k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|   138k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 138k, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  684|   138k|        return #name;
  |  |  ------------------
  |  |   27|   138k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   28|  5.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  5.69k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.69k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.69k|        return #name;
  |  |  ------------------
  |  |   29|  9.07k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  9.07k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 9.07k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  9.07k|        return #name;
  |  |  ------------------
  |  |   30|  9.07k|    /* Macros */                                                                                   \
  |  |   31|  9.07k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  9.07k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   33|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   34|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   35|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   36|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   37|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   38|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   39|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |   40|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |   41|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   42|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   43|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   44|    656|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  683|    656|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 656, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    656|        return #name;
  |  |  ------------------
  |  |   45|    656|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   46|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   47|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   49|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |   50|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   51|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   52|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   53|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   54|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   55|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   56|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   59|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   60|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |   61|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   62|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |   63|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   67|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   68|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   70|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |   71|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   72|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |   73|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  683|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 32, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     32|        return #name;
  |  |  ------------------
  |  |   74|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   75|    174|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  683|    174|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 174, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    174|        return #name;
  |  |  ------------------
  |  |   76|    174|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   77|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   81|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |   82|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   83|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   84|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  683|     64|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 64, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     64|        return #name;
  |  |  ------------------
  |  |   85|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   86|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  683|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     28|        return #name;
  |  |  ------------------
  |  |   87|     76|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  683|     76|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 76, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     76|        return #name;
  |  |  ------------------
  |  |   88|     76|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   89|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   91|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   92|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  683|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 68, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     68|        return #name;
  |  |  ------------------
  |  |   93|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   95|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   96|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |   97|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   98|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  100|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  683|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     28|        return #name;
  |  |  ------------------
  |  |  101|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  102|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  683|     54|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 54, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     54|        return #name;
  |  |  ------------------
  |  |  103|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  105|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  106|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  107|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  108|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  109|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  110|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  111|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  683|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     24|        return #name;
  |  |  ------------------
  |  |  112|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  113|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  119|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  120|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  121|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  122|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  123|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  124|     92|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  683|     92|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 92, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     92|        return #name;
  |  |  ------------------
  |  |  125|     92|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  127|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  128|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  129|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  130|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  131|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  132|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  133|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  134|     34|    /* Preprocessor identifiers */                                                                 \
  |  |  135|     34|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|     34|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|  3.35k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  683|  3.35k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.35k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.35k|        return #name;
  |  |  ------------------
  |  |  138|  5.54k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  683|  5.54k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.54k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.54k|        return #name;
  |  |  ------------------
  |  |  139|  5.54k|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|  5.54k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  683|  1.14k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.14k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.14k|        return #name;
  |  |  ------------------
  |  |  141|  1.14k|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|  1.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  683|    301|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 301, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    301|        return #name;
  |  |  ------------------
  |  |  143|    301|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    644|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|    644|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 644, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    644|        return #name;
  |  |  ------------------
  |  |  145|    644|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|  1.04k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  683|  1.04k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.04k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.04k|        return #name;
  |  |  ------------------
  |  |  147|  1.04k|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|  1.04k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  683|    312|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 312, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    312|        return #name;
  |  |  ------------------
  |  |  149|    312|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    504|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  683|    504|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 504, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    504|        return #name;
  |  |  ------------------
  |  |  151|    504|    /* Keywords */                                                                                 \
  |  |  152|    504|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    504|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    504|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|  28.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  683|  28.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28.8k, False: 1.45M]
  |  |  |  |  ------------------
  |  |  |  |  684|  28.8k|        return #name;
  |  |  ------------------
  |  |  156|  28.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  683|  16.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16.5k, False: 1.46M]
  |  |  |  |  ------------------
  |  |  |  |  684|  16.5k|        return #name;
  |  |  ------------------
  |  |  157|  16.5k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  16.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  161|      7|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|  13.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  683|  13.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13.1k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  13.1k|        return #name;
  |  |  ------------------
  |  |  163|  13.1k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|  13.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  165|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  166|    212|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  683|    212|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 212, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    212|        return #name;
  |  |  ------------------
  |  |  167|    212|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |  168|     40|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|    590|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  683|    590|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 590, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    590|        return #name;
  |  |  ------------------
  |  |  170|    590|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  171|     12|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  173|      7|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  175|     26|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  683|     41|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 41, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     41|        return #name;
  |  |  ------------------
  |  |  179|    242|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  683|    242|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 242, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    242|        return #name;
  |  |  ------------------
  |  |  180|    242|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  181|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  182|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|    616|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  683|    616|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 616, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    616|        return #name;
  |  |  ------------------
  |  |  184|    616|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  20.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  683|  20.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 20.3k, False: 1.46M]
  |  |  |  |  ------------------
  |  |  |  |  684|  20.3k|        return #name;
  |  |  ------------------
  |  |  186|  20.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  187|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  188|  4.10k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  683|  4.10k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.10k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.10k|        return #name;
  |  |  ------------------
  |  |  189|  4.10k|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  4.10k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  683|    839|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 839, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    839|        return #name;
  |  |  ------------------
  |  |  191|  11.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  683|  11.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11.2k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  11.2k|        return #name;
  |  |  ------------------
  |  |  192|  11.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  683|  7.87k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7.87k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  7.87k|        return #name;
  |  |  ------------------
  |  |  193|  7.87k|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|  7.87k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  683|  7.64k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7.64k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  7.64k|        return #name;
  |  |  ------------------
  |  |  195|  8.49k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  683|  8.49k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.49k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.49k|        return #name;
  |  |  ------------------
  |  |  196|  8.49k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|  13.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  683|  13.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13.3k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  13.3k|        return #name;
  |  |  ------------------
  |  |  198|  13.3k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|  13.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  200|      4|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  683|     48|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 48, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     48|        return #name;
  |  |  ------------------
  |  |  202|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  203|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  683|     37|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 37, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     37|        return #name;
  |  |  ------------------
  |  |  206|     37|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  208|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|    697|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  683|    697|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 697, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    697|        return #name;
  |  |  ------------------
  |  |  213|  12.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|  12.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12.4k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  12.4k|        return #name;
  |  |  ------------------
  |  |  214|  12.4k|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|  12.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  216|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  219|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  220|  3.32k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  683|  3.32k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.32k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.32k|        return #name;
  |  |  ------------------
  |  |  221|  3.32k|    /* Operator */                                                                                 \
  |  |  222|  3.32k|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|   155k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)                                                     \
  |  |  ------------------
  |  |  |  |  683|   155k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 155k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  684|   155k|        return #name;
  |  |  ------------------
  |  |  224|   155k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)                                                 \
  |  |  ------------------
  |  |  |  |  683|  37.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 37.0k, False: 1.44M]
  |  |  |  |  ------------------
  |  |  |  |  684|  37.0k|        return #name;
  |  |  ------------------
  |  |  225|  37.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)                                                \
  |  |  ------------------
  |  |  |  |  683|  1.55k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.55k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.55k|        return #name;
  |  |  ------------------
  |  |  226|  1.55k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)                                             \
  |  |  ------------------
  |  |  |  |  683|    425|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 425, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    425|        return #name;
  |  |  ------------------
  |  |  227|  16.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|  16.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16.8k, False: 1.46M]
  |  |  |  |  ------------------
  |  |  |  |  684|  16.8k|        return #name;
  |  |  ------------------
  |  |  228|  16.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)                                                \
  |  |  ------------------
  |  |  |  |  683|  8.87k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.87k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.87k|        return #name;
  |  |  ------------------
  |  |  229|  8.87k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals)                                          \
  |  |  ------------------
  |  |  |  |  683|     62|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 62, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     62|        return #name;
  |  |  ------------------
  |  |  230|  7.51k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)                                                       \
  |  |  ------------------
  |  |  |  |  683|  7.51k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7.51k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  7.51k|        return #name;
  |  |  ------------------
  |  |  231|  7.51k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)                                                      \
  |  |  ------------------
  |  |  |  |  683|  3.59k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.59k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.59k|        return #name;
  |  |  ------------------
  |  |  232|  7.75k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)                                                   \
  |  |  ------------------
  |  |  |  |  683|  7.75k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7.75k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  7.75k|        return #name;
  |  |  ------------------
  |  |  233|  79.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)                                                     \
  |  |  ------------------
  |  |  |  |  683|  79.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 79.7k, False: 1.40M]
  |  |  |  |  ------------------
  |  |  |  |  684|  79.7k|        return #name;
  |  |  ------------------
  |  |  234|  79.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)                                                      \
  |  |  ------------------
  |  |  |  |  683|  16.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16.5k, False: 1.46M]
  |  |  |  |  ------------------
  |  |  |  |  684|  16.5k|        return #name;
  |  |  ------------------
  |  |  235|  16.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|  8.37k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.37k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.37k|        return #name;
  |  |  ------------------
  |  |  236|  8.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)                                                   \
  |  |  ------------------
  |  |  |  |  683|  2.64k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.64k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.64k|        return #name;
  |  |  ------------------
  |  |  237|  64.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)                                                \
  |  |  ------------------
  |  |  |  |  683|  64.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 64.8k, False: 1.41M]
  |  |  |  |  ------------------
  |  |  |  |  684|  64.8k|        return #name;
  |  |  ------------------
  |  |  238|  64.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)                                           \
  |  |  ------------------
  |  |  |  |  683|    249|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 249, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    249|        return #name;
  |  |  ------------------
  |  |  239|  14.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)                                                   \
  |  |  ------------------
  |  |  |  |  683|  14.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14.1k, False: 1.47M]
  |  |  |  |  ------------------
  |  |  |  |  684|  14.1k|        return #name;
  |  |  ------------------
  |  |  240|  14.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)                                              \
  |  |  ------------------
  |  |  |  |  683|    239|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 239, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    239|        return #name;
  |  |  ------------------
  |  |  241|  3.95k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)                                                  \
  |  |  ------------------
  |  |  |  |  683|  3.95k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.95k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.95k|        return #name;
  |  |  ------------------
  |  |  242|  24.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)                                                \
  |  |  ------------------
  |  |  |  |  683|  24.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24.2k, False: 1.46M]
  |  |  |  |  ------------------
  |  |  |  |  684|  24.2k|        return #name;
  |  |  ------------------
  |  |  243|  24.2k|    /* Built-in Functions */                                                                       \
  |  |  244|  24.2k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  24.2k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  24.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  683|    618|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 618, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    618|        return #name;
  |  |  ------------------
  |  |  247|    618|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  248|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  249|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  250|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  251|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  254|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  255|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  683|     35|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 35, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     35|        return #name;
  |  |  ------------------
  |  |  256|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  257|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  261|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     24|        return #name;
  |  |  ------------------
  |  |  262|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  263|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  264|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  265|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  267|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  268|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  270|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  271|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  683|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 30, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     30|        return #name;
  |  |  ------------------
  |  |  272|  1.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  683|  1.14k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.14k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.14k|        return #name;
  |  |  ------------------
  |  |  273|  1.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  683|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 38, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     38|        return #name;
  |  |  ------------------
  |  |  274|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  683|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 19, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     19|        return #name;
  |  |  ------------------
  |  |  275|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  276|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  277|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  279|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  280|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  288|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  295|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  296|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  297|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  683|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 19, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     19|        return #name;
  |  |  ------------------
  |  |  298|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  683|     36|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 36, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     36|        return #name;
  |  |  ------------------
  |  |  299|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  300|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  301|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  302|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  304|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  305|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  307|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  683|     64|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 64, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     64|        return #name;
  |  |  ------------------
  |  |  308|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  309|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  310|    414|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|    414|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 414, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    414|        return #name;
  |  |  ------------------
  |  |  311|    414|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  312|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  313|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  314|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  315|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  316|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  320|     63|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  683|     63|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 63, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     63|        return #name;
  |  |  ------------------
  |  |  321|     63|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  323|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  324|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  327|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  328|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  329|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  330|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  331|    209|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  683|    209|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 209, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    209|        return #name;
  |  |  ------------------
  |  |  332|    209|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  333|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  334|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  335|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 68, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     68|        return #name;
  |  |  ------------------
  |  |  336|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  337|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  338|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  340|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  341|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  343|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  344|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  345|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  346|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  347|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  348|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  352|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  683|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     24|        return #name;
  |  |  ------------------
  |  |  353|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  357|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  358|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  359|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  361|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  362|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  363|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  364|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  365|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  366|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  367|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  368|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |  369|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  370|     93|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  683|     93|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 93, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     93|        return #name;
  |  |  ------------------
  |  |  371|     93|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  373|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  374|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  683|     36|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 36, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     36|        return #name;
  |  |  ------------------
  |  |  375|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  379|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  380|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  383|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  384|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  385|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  386|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  397|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  398|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  400|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  683|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 38, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     38|        return #name;
  |  |  ------------------
  |  |  401|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  402|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  403|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  404|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  406|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  407|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  417|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  418|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  420|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  421|    182|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  683|    182|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 182, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    182|        return #name;
  |  |  ------------------
  |  |  422|    182|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  426|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  427|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  428|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  430|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  431|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  432|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  433|    104|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  683|    104|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 104, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    104|        return #name;
  |  |  ------------------
  |  |  434|    104|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  435|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  436|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  437|    150|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  683|    150|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 150, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    150|        return #name;
  |  |  ------------------
  |  |  438|    150|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  440|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  683|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 30, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     30|        return #name;
  |  |  ------------------
  |  |  441|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  443|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  444|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  445|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  446|    110|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  683|    110|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 110, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    110|        return #name;
  |  |  ------------------
  |  |  447|    110|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  448|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 23, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     23|        return #name;
  |  |  ------------------
  |  |  449|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  450|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  451|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  452|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  453|    548|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|    548|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 548, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    548|        return #name;
  |  |  ------------------
  |  |  454|    548|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|    207|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 207, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    207|        return #name;
  |  |  ------------------
  |  |  455|    207|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  456|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  462|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  463|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  683|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 38, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     38|        return #name;
  |  |  ------------------
  |  |  464|    168|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  683|    168|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 168, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    168|        return #name;
  |  |  ------------------
  |  |  465|    168|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  466|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  467|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  468|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  470|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  471|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  472|     49|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  683|     49|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 49, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     49|        return #name;
  |  |  ------------------
  |  |  473|     61|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  683|     61|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 61, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     61|        return #name;
  |  |  ------------------
  |  |  474|     61|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  475|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  476|     71|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  683|     71|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 71, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     71|        return #name;
  |  |  ------------------
  |  |  477|     71|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  478|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  479|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  480|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  482|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  483|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  485|     63|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  683|     63|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 63, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     63|        return #name;
  |  |  ------------------
  |  |  486|     63|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  488|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  489|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  491|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  492|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  493|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  494|     57|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  683|     57|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 57, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     57|        return #name;
  |  |  ------------------
  |  |  495|     57|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  496|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  497|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  498|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  683|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 68, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     68|        return #name;
  |  |  ------------------
  |  |  499|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  500|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  501|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  502|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  503|  1.78k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  683|  1.78k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.78k, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.78k|        return #name;
  |  |  ------------------
  |  |  504|  1.78k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  505|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  507|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  508|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  509|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  510|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  511|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  683|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 42, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     42|        return #name;
  |  |  ------------------
  |  |  512|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  517|    789|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  683|    789|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 789, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    789|        return #name;
  |  |  ------------------
  |  |  518|    789|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  519|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  522|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  523|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  524|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  525|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  683|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 27, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     27|        return #name;
  |  |  ------------------
  |  |  526|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  528|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  529|     47|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  683|     47|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 47, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     47|        return #name;
  |  |  ------------------
  |  |  530|     47|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  533|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  534|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  536|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  537|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  538|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  539|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  540|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  541|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  542|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  543|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  683|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 30, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     30|        return #name;
  |  |  ------------------
  |  |  544|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  545|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  548|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  549|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  550|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  683|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 68, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     68|        return #name;
  |  |  ------------------
  |  |  551|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  552|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  553|    150|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  683|    150|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 150, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    150|        return #name;
  |  |  ------------------
  |  |  554|    150|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  555|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  556|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  562|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  563|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  566|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  567|    212|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|    212|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 212, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    212|        return #name;
  |  |  ------------------
  |  |  568|    212|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  569|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  570|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  578|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  579|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  580|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  582|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  583|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  683|     35|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 35, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     35|        return #name;
  |  |  ------------------
  |  |  584|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  585|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  586|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  588|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  589|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  590|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 30, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     30|        return #name;
  |  |  ------------------
  |  |  591|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  596|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  597|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  600|     44|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  683|     44|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 44, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     44|        return #name;
  |  |  ------------------
  |  |  601|     44|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  603|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  604|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  605|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  683|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 27, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     27|        return #name;
  |  |  ------------------
  |  |  606|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  611|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  612|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  613|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  615|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  616|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  618|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  619|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |  620|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  621|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  622|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  623|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  624|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  627|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  628|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  683|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 32, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     32|        return #name;
  |  |  ------------------
  |  |  629|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  631|    107|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  683|    107|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 107, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|    107|        return #name;
  |  |  ------------------
  |  |  632|    107|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  633|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  635|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     24|        return #name;
  |  |  ------------------
  |  |  636|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  638|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  639|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  643|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  644|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|     72|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 72, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     72|        return #name;
  |  |  ------------------
  |  |  645|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  646|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  647|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  648|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  683|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|     13|        return #name;
  |  |  ------------------
  |  |  649|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 1.48M]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  ------------------
  687|       |
  688|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  689|       |
  690|      0|            default:
  ------------------
  |  Branch (690:13): [True: 0, False: 1.48M]
  ------------------
  691|      0|                PHI_ASSERT_NOT_REACHED();
  692|  1.48M|        }
  693|  1.48M|    }

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  6.47M|        {
   21|       |#if defined(PHI_DEBUG)
   22|       |            PHI_ASSERT(!m_Finialized);
   23|       |#endif
   24|       |
   25|  6.47M|            m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  6.47M|        }

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  157|  47.3k|{
  158|  47.3k|    static constexpr auto map =
  159|  47.3k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  160|  47.3k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  161|       |
  162|  47.3k|    std::string str{token.begin(), token.end()};
  163|  47.3k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  164|       |
  165|  47.3k|    return map.at(phi::string_view(str.c_str(), str.size()));
  166|  47.3k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  183|  34.1k|{
  184|  34.1k|    static constexpr auto map =
  185|  34.1k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  186|  34.1k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  187|       |
  188|  34.1k|    std::string str{token.begin(), token.end()};
  189|  34.1k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  190|       |
  191|  34.1k|    return map.at(phi::string_view(str.c_str(), str.size()));
  192|  34.1k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  660|  1.64M|{
  661|  1.64M|    static constexpr auto keyword_map =
  662|  1.64M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  663|  1.64M|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  664|  1.64M|    static constexpr auto builtin_map =
  665|  1.64M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  666|  1.64M|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  667|       |
  668|  1.64M|    std::string str{token.begin(), token.end()};
  669|  1.64M|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  670|       |
  671|  1.64M|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  672|       |
  673|  1.64M|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  674|  1.64M|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (674:9): [True: 921k, False: 718k]
  ------------------
  675|   921k|    {
  676|   921k|        return builtin_map.at(string);
  677|   921k|    }
  678|       |
  679|   718k|    return keyword;
  680|  1.64M|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  706|   611k|{
  707|   611k|    static constexpr auto map =
  708|   611k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  709|   611k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  710|       |
  711|   611k|    return map.at(token);
  712|   611k|}
_ZN10OpenAutoIt5LexerC2ERNS_11ParseResultEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  783|  23.2k|    {}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  803|  24.7M|    {
  804|  24.7M|        return m_Iterator == m_Source.end();
  805|  24.7M|    }
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  813|  6.47M|    {
  814|  8.57M|        while (!IsFinished())
  ------------------
  |  Branch (814:16): [True: 8.56M, False: 4.44k]
  ------------------
  815|  8.56M|        {
  816|  8.56M|            char current_character = *m_Iterator;
  817|       |
  818|       |            /* Embedded null character */
  819|       |
  820|  8.56M|            if (current_character == '\0')
  ------------------
  |  Branch (820:17): [True: 496k, False: 8.07M]
  ------------------
  821|   496k|            {
  822|   496k|                m_ParseResult.m_Warnings.emplace_back(
  823|   496k|                        ParseWarning::EmbeddedNullCharacter(m_LineNumber, m_Column));
  824|       |
  825|   496k|                SkipCurrentCharacter();
  826|   496k|            }
  827|       |
  828|       |            /* Multiline comments */
  829|       |
  830|  8.07M|            else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (830:22): [True: 1.70k, False: 8.06M]
  ------------------
  831|  1.70k|            {
  832|  1.70k|                iterator       begin_of_multiline_comment            = m_Iterator;
  833|  1.70k|                const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  834|  1.70k|                const phi::u64 beginning_column_of_multiline_comment = m_Column;
  835|       |
  836|  12.4k|                while (!IsFinished())
  ------------------
  |  Branch (836:24): [True: 12.3k, False: 126]
  ------------------
  837|  12.3k|                {
  838|  12.3k|                    current_character = *m_Iterator;
  839|       |
  840|       |                    // Check for end comment multiline
  841|  12.3k|                    if (current_character == '#')
  ------------------
  |  Branch (841:25): [True: 5.10k, False: 7.20k]
  ------------------
  842|  5.10k|                    {
  843|  5.10k|                        iterator begin_of_token = m_Iterator;
  844|  5.10k|                        ConsumeCurrentCharacter();
  845|       |
  846|  44.9k|                        while (!IsFinished())
  ------------------
  |  Branch (846:32): [True: 44.8k, False: 69]
  ------------------
  847|  44.8k|                        {
  848|  44.8k|                            current_character = *m_Iterator;
  849|       |
  850|  44.8k|                            if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (850:33): [True: 39.8k, False: 5.03k]
  ------------------
  851|  39.8k|                            {
  852|  39.8k|                                ConsumeCurrentCharacter();
  853|  39.8k|                                continue;
  854|  39.8k|                            }
  855|       |
  856|  5.03k|                            break;
  857|  44.8k|                        }
  858|       |
  859|  5.10k|                        const TokenKind pre_processor_token_kind =
  860|  5.10k|                                lookup_pre_processor(TokenText(begin_of_token));
  861|       |
  862|  5.10k|                        if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (862:29): [True: 1.58k, False: 3.52k]
  ------------------
  863|  1.58k|                        {
  864|  1.58k|                            m_InsideMultiLineComment = false;
  865|       |
  866|       |                            // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  867|  1.58k|                            m_Iterator -= TokenText(begin_of_token).length().unsafe();
  868|       |
  869|  1.58k|                            Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  870|  1.58k|                                        beginning_line_of_multiline_comment,
  871|  1.58k|                                        beginning_column_of_multiline_comment};
  872|       |
  873|  1.58k|                            return token;
  874|  1.58k|                        }
  875|  5.10k|                    }
  876|  7.20k|                    else if (current_character == '\n')
  ------------------
  |  Branch (876:30): [True: 1.13k, False: 6.06k]
  ------------------
  877|  1.13k|                    {
  878|  1.13k|                        ConsumeCurrentCharacter();
  879|  1.13k|                        AdvanceToNextLine();
  880|  1.13k|                    }
  881|  6.06k|                    else
  882|  6.06k|                    {
  883|       |                        // Otherwise simply consume the character
  884|  6.06k|                        ConsumeCurrentCharacter();
  885|  6.06k|                        m_Column += 1u;
  886|  6.06k|                    }
  887|  12.3k|                }
  888|  1.70k|            }
  889|       |
  890|       |            /* Skip characters */
  891|       |
  892|  8.06M|            else if (is_skip_character(current_character))
  ------------------
  |  Branch (892:22): [True: 497k, False: 7.57M]
  ------------------
  893|   497k|            {
  894|   497k|                SkipCurrentCharacter();
  895|   497k|            }
  896|       |
  897|       |            /* New Lines */
  898|       |
  899|  7.57M|            else if (current_character == '\n')
  ------------------
  |  Branch (899:22): [True: 609k, False: 6.96M]
  ------------------
  900|   609k|            {
  901|   609k|                Token new_line_token = ConstructToken(TokenKind::NewLine);
  902|       |
  903|   609k|                ConsumeCurrentCharacter();
  904|   609k|                AdvanceToNextLine();
  905|       |
  906|   609k|                return new_line_token;
  907|   609k|            }
  908|       |
  909|       |            /* Comment */
  910|       |
  911|  6.96M|            else if (current_character == ';')
  ------------------
  |  Branch (911:22): [True: 37.6k, False: 6.92M]
  ------------------
  912|  37.6k|            {
  913|  37.6k|                iterator begin_of_token = m_Iterator;
  914|  37.6k|                ConsumeCurrentCharacter();
  915|       |
  916|   151k|                while (!IsFinished())
  ------------------
  |  Branch (916:24): [True: 151k, False: 582]
  ------------------
  917|   151k|                {
  918|   151k|                    current_character = *m_Iterator;
  919|       |
  920|   151k|                    if (current_character != '\n')
  ------------------
  |  Branch (920:25): [True: 114k, False: 37.0k]
  ------------------
  921|   114k|                    {
  922|   114k|                        ConsumeCurrentCharacter();
  923|   114k|                        continue;
  924|   114k|                    }
  925|       |
  926|  37.0k|                    break;
  927|   151k|                }
  928|       |
  929|  37.6k|                return ConstructToken(TokenKind::Comment, begin_of_token);
  930|  37.6k|            }
  931|       |
  932|       |            /* Macros */
  933|       |
  934|  6.92M|            else if (current_character == '@')
  ------------------
  |  Branch (934:22): [True: 47.3k, False: 6.87M]
  ------------------
  935|  47.3k|            {
  936|  47.3k|                iterator begin_of_token = m_Iterator;
  937|  47.3k|                ConsumeCurrentCharacter();
  938|       |
  939|   211k|                while (!IsFinished())
  ------------------
  |  Branch (939:24): [True: 210k, False: 437]
  ------------------
  940|   210k|                {
  941|   210k|                    current_character = *m_Iterator;
  942|       |
  943|   210k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (943:25): [True: 163k, False: 46.8k]
  ------------------
  944|   163k|                    {
  945|   163k|                        ConsumeCurrentCharacter();
  946|   163k|                        continue;
  947|   163k|                    }
  948|       |
  949|  46.8k|                    break;
  950|   210k|                }
  951|       |
  952|       |                // Emit token
  953|  47.3k|                return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  954|  47.3k|            }
  955|       |
  956|       |            /* Variable identifier */
  957|       |
  958|  6.87M|            else if (current_character == '$')
  ------------------
  |  Branch (958:22): [True: 608k, False: 6.26M]
  ------------------
  959|   608k|            {
  960|   608k|                iterator     begin_of_token = m_Iterator;
  961|   608k|                phi::boolean parsed_something{false};
  962|   608k|                ConsumeCurrentCharacter();
  963|       |
  964|  1.40M|                while (!IsFinished())
  ------------------
  |  Branch (964:24): [True: 1.40M, False: 2.99k]
  ------------------
  965|  1.40M|                {
  966|  1.40M|                    current_character = *m_Iterator;
  967|       |
  968|  1.40M|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (968:25): [True: 797k, False: 605k]
  ------------------
  969|   797k|                    {
  970|   797k|                        ConsumeCurrentCharacter();
  971|   797k|                        parsed_something = true;
  972|   797k|                        continue;
  973|   797k|                    }
  974|       |
  975|   605k|                    break;
  976|  1.40M|                }
  977|       |
  978|       |                // Ensure that '$' is not a valid variable identifier
  979|   608k|                if (!parsed_something)
  ------------------
  |  Branch (979:21): [True: 32.4k, False: 575k]
  ------------------
  980|  32.4k|                {
  981|  32.4k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
  982|  32.4k|                }
  983|       |
  984|       |                // Emit Token
  985|   575k|                return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  986|   608k|            }
  987|       |
  988|       |            /* PreProcessor directive */
  989|       |
  990|  6.26M|            else if (current_character == '#')
  ------------------
  |  Branch (990:22): [True: 29.0k, False: 6.23M]
  ------------------
  991|  29.0k|            {
  992|  29.0k|                iterator begin_of_token = m_Iterator;
  993|  29.0k|                ConsumeCurrentCharacter();
  994|       |
  995|   256k|                while (!IsFinished())
  ------------------
  |  Branch (995:24): [True: 256k, False: 455]
  ------------------
  996|   256k|                {
  997|   256k|                    current_character = *m_Iterator;
  998|       |
  999|   256k|                    if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (999:25): [True: 227k, False: 28.6k]
  ------------------
 1000|   227k|                    {
 1001|   227k|                        ConsumeCurrentCharacter();
 1002|   227k|                        continue;
 1003|   227k|                    }
 1004|       |
 1005|  28.6k|                    break;
 1006|   256k|                }
 1007|       |
 1008|       |                // Check for start of multiline comment
 1009|  29.0k|                const TokenKind pre_processor_token_kind =
 1010|  29.0k|                        lookup_pre_processor(TokenText(begin_of_token));
 1011|       |
 1012|  29.0k|                if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (1012:21): [True: 1.70k, False: 27.3k]
  ------------------
 1013|  1.70k|                {
 1014|  1.70k|                    m_InsideMultiLineComment = true;
 1015|  1.70k|                }
 1016|       |
 1017|  29.0k|                return ConstructToken(pre_processor_token_kind, begin_of_token);
 1018|  29.0k|            }
 1019|       |
 1020|       |            /* SingleQuoteStringLiteral */
 1021|       |
 1022|  6.23M|            else if (current_character == '\'')
  ------------------
  |  Branch (1022:22): [True: 224k, False: 6.01M]
  ------------------
 1023|   224k|            {
 1024|   224k|                iterator     begin_of_token = m_Iterator;
 1025|   224k|                phi::boolean did_terminate  = false;
 1026|   224k|                ConsumeCurrentCharacter();
 1027|       |
 1028|   512k|                while (!IsFinished())
  ------------------
  |  Branch (1028:24): [True: 511k, False: 794]
  ------------------
 1029|   511k|                {
 1030|   511k|                    current_character = *m_Iterator;
 1031|   511k|                    ConsumeCurrentCharacter();
 1032|       |
 1033|   511k|                    if (current_character == '\'')
  ------------------
  |  Branch (1033:25): [True: 223k, False: 287k]
  ------------------
 1034|   223k|                    {
 1035|   223k|                        did_terminate = true;
 1036|   223k|                        break;
 1037|   223k|                    }
 1038|   511k|                }
 1039|       |
 1040|   224k|                if (did_terminate)
  ------------------
  |  Branch (1040:21): [True: 223k, False: 794]
  ------------------
 1041|   223k|                {
 1042|   223k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1043|   223k|                }
 1044|       |
 1045|       |                // TODO: Warn unterminated string literal
 1046|   224k|            }
 1047|       |
 1048|       |            /* DoubleQuoteStringLiteral */
 1049|       |
 1050|  6.01M|            else if (current_character == '\"')
  ------------------
  |  Branch (1050:22): [True: 87.3k, False: 5.92M]
  ------------------
 1051|  87.3k|            {
 1052|  87.3k|                iterator     begin_of_token = m_Iterator;
 1053|  87.3k|                phi::boolean did_terminate  = false;
 1054|  87.3k|                ConsumeCurrentCharacter();
 1055|       |
 1056|   112k|                while (!IsFinished())
  ------------------
  |  Branch (1056:24): [True: 111k, False: 325]
  ------------------
 1057|   111k|                {
 1058|   111k|                    current_character = *m_Iterator;
 1059|   111k|                    ConsumeCurrentCharacter();
 1060|       |
 1061|   111k|                    if (current_character == '\"')
  ------------------
  |  Branch (1061:25): [True: 87.0k, False: 24.8k]
  ------------------
 1062|  87.0k|                    {
 1063|  87.0k|                        did_terminate = true;
 1064|  87.0k|                        break;
 1065|  87.0k|                    }
 1066|   111k|                }
 1067|       |
 1068|  87.3k|                if (did_terminate)
  ------------------
  |  Branch (1068:21): [True: 87.0k, False: 325]
  ------------------
 1069|  87.0k|                {
 1070|  87.0k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1071|  87.0k|                }
 1072|  87.3k|            }
 1073|       |
 1074|       |            /* Number Literals - IntegerLiteral/FloatLiteral */
 1075|       |
 1076|  5.92M|            else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1076:22): [True: 686k, False: 5.24M]
  |  Branch (1076:22): [True: 722k, False: 5.20M]
  |  Branch (1076:58): [True: 36.4k, False: 5.20M]
  ------------------
 1077|   722k|            {
 1078|   722k|                const phi::boolean start_with_zero{current_character == '0'};
 1079|   722k|                phi::boolean       parsing_hex{false};
 1080|   722k|                phi::boolean       parsing_float{current_character == '.'};
 1081|       |
 1082|   722k|                iterator begin_of_token = m_Iterator;
 1083|   722k|                ConsumeCurrentCharacter();
 1084|       |
 1085|   899k|                while (!IsFinished())
  ------------------
  |  Branch (1085:24): [True: 896k, False: 2.18k]
  ------------------
 1086|   896k|                {
 1087|   896k|                    current_character = *m_Iterator;
 1088|       |
 1089|       |                    // Is the second character
 1090|   896k|                    if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1090:25): [True: 721k, False: 175k]
  |  Branch (1090:62): [True: 192k, False: 528k]
  ------------------
 1091|   192k|                    {
 1092|       |                        // Hex character
 1093|   192k|                        if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1093:29): [True: 27.7k, False: 165k]
  |  Branch (1093:57): [True: 22.1k, False: 143k]
  ------------------
 1094|  49.8k|                        {
 1095|  49.8k|                            parsing_hex = true;
 1096|  49.8k|                            ConsumeCurrentCharacter();
 1097|  49.8k|                            continue;
 1098|  49.8k|                        }
 1099|   192k|                    }
 1100|       |
 1101|       |                    // Actually parsing
 1102|   846k|                    if (parsing_hex)
  ------------------
  |  Branch (1102:25): [True: 91.6k, False: 755k]
  ------------------
 1103|  91.6k|                    {
 1104|  91.6k|                        if (parsing_float)
  ------------------
  |  Branch (1104:29): [True: 0, False: 91.6k]
  ------------------
 1105|      0|                        {
 1106|       |                            // TODO: Error hexliteral not allowed for floats
 1107|      0|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1108|      0|                        }
 1109|       |
 1110|  91.6k|                        if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1110:29): [True: 42.1k, False: 49.5k]
  ------------------
 1111|  42.1k|                        {
 1112|  42.1k|                            ConsumeCurrentCharacter();
 1113|  42.1k|                            continue;
 1114|  42.1k|                        }
 1115|  91.6k|                    }
 1116|   755k|                    else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1116:30): [True: 83.6k, False: 671k]
  ------------------
 1117|  83.6k|                    {
 1118|  83.6k|                        ConsumeCurrentCharacter();
 1119|  83.6k|                        continue;
 1120|  83.6k|                    }
 1121|       |                    // Literal dot
 1122|   671k|                    else if (current_character == '.')
  ------------------
  |  Branch (1122:30): [True: 2.96k, False: 668k]
  ------------------
 1123|  2.96k|                    {
 1124|  2.96k|                        if (parsing_float)
  ------------------
  |  Branch (1124:29): [True: 2.29k, False: 669]
  ------------------
 1125|  2.29k|                        {
 1126|       |                            // TODO: Error more than one dot in float literal
 1127|  2.29k|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1128|  2.29k|                        }
 1129|       |
 1130|    669|                        parsing_float = true;
 1131|    669|                        ConsumeCurrentCharacter();
 1132|    669|                        continue;
 1133|  2.96k|                    }
 1134|       |
 1135|   718k|                    break;
 1136|   846k|                }
 1137|       |
 1138|   720k|                if (parsing_float)
  ------------------
  |  Branch (1138:21): [True: 34.8k, False: 685k]
  ------------------
 1139|  34.8k|                {
 1140|       |                    // Were not allowed to end with a dot
 1141|       |                    // TODO: This is very hacky and looks nasty
 1142|  34.8k|                    if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1142:25): [True: 10.2k, False: 24.6k]
  ------------------
 1143|  10.2k|                    {
 1144|       |                        // TODO: Prober error
 1145|  10.2k|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1146|  10.2k|                    }
 1147|       |
 1148|  24.6k|                    return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1149|  34.8k|                }
 1150|       |
 1151|   685k|                return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1152|   720k|            }
 1153|       |
 1154|       |            /* Operators */
 1155|       |
 1156|  5.20M|            else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1156:22): [True: 576k, False: 4.62M]
  ------------------
 1157|   576k|            {
 1158|   576k|                iterator begin_of_token = m_Iterator;
 1159|   576k|                ConsumeCurrentCharacter();
 1160|       |
 1161|   576k|                if (!IsFinished())
  ------------------
  |  Branch (1161:21): [True: 575k, False: 1.11k]
  ------------------
 1162|   575k|                {
 1163|   575k|                    if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1163:25): [True: 121k, False: 454k]
  |  Branch (1163:48): [True: 18.2k, False: 435k]
  |  Branch (1163:74): [True: 2.43k, False: 15.8k]
  ------------------
 1164|   123k|                    {
 1165|       |                        // We have an actual two part operator
 1166|   123k|                        ConsumeCurrentCharacter();
 1167|   123k|                    }
 1168|   575k|                }
 1169|       |
 1170|   576k|                return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1171|   576k|            }
 1172|       |
 1173|  4.62M|            else if (is_single_operator(current_character))
  ------------------
  |  Branch (1173:22): [True: 34.9k, False: 4.59M]
  ------------------
 1174|  34.9k|            {
 1175|  34.9k|                Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1176|       |
 1177|  34.9k|                ConsumeCurrentCharacter();
 1178|       |
 1179|  34.9k|                return token;
 1180|  34.9k|            }
 1181|       |
 1182|       |            /* Punctioation */
 1183|       |
 1184|  4.59M|            else if (current_character == ',')
  ------------------
  |  Branch (1184:22): [True: 34.2k, False: 4.55M]
  ------------------
 1185|  34.2k|            {
 1186|  34.2k|                Token token = ConstructToken(TokenKind::Comma);
 1187|       |
 1188|  34.2k|                ConsumeCurrentCharacter();
 1189|       |
 1190|  34.2k|                return token;
 1191|  34.2k|            }
 1192|       |
 1193|  4.55M|            else if (current_character == '(')
  ------------------
  |  Branch (1193:22): [True: 1.32M, False: 3.23M]
  ------------------
 1194|  1.32M|            {
 1195|  1.32M|                Token token = ConstructToken(TokenKind::LParen);
 1196|       |
 1197|  1.32M|                ConsumeCurrentCharacter();
 1198|       |
 1199|  1.32M|                return token;
 1200|  1.32M|            }
 1201|       |
 1202|  3.23M|            else if (current_character == ')')
  ------------------
  |  Branch (1202:22): [True: 479k, False: 2.75M]
  ------------------
 1203|   479k|            {
 1204|   479k|                Token token = ConstructToken(TokenKind::RParen);
 1205|       |
 1206|   479k|                ConsumeCurrentCharacter();
 1207|       |
 1208|   479k|                return token;
 1209|   479k|            }
 1210|       |
 1211|  2.75M|            else if (current_character == '.')
  ------------------
  |  Branch (1211:22): [True: 0, False: 2.75M]
  ------------------
 1212|      0|            {
 1213|      0|                Token token = ConstructToken(TokenKind::Dot);
 1214|       |
 1215|      0|                ConsumeCurrentCharacter();
 1216|       |
 1217|      0|                return token;
 1218|      0|            }
 1219|       |
 1220|  2.75M|            else if (current_character == '[')
  ------------------
  |  Branch (1220:22): [True: 5.01k, False: 2.74M]
  ------------------
 1221|  5.01k|            {
 1222|  5.01k|                Token token = ConstructToken(TokenKind::LSquare);
 1223|       |
 1224|  5.01k|                ConsumeCurrentCharacter();
 1225|       |
 1226|  5.01k|                return token;
 1227|  5.01k|            }
 1228|       |
 1229|  2.74M|            else if (current_character == ']')
  ------------------
  |  Branch (1229:22): [True: 9.80k, False: 2.73M]
  ------------------
 1230|  9.80k|            {
 1231|  9.80k|                Token token = ConstructToken(TokenKind::RSquare);
 1232|       |
 1233|  9.80k|                ConsumeCurrentCharacter();
 1234|       |
 1235|  9.80k|                return token;
 1236|  9.80k|            }
 1237|       |
 1238|       |            /* Identifier */
 1239|       |
 1240|  2.73M|            else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1240:22): [True: 1.64M, False: 1.09M]
  ------------------
 1241|  1.64M|            {
 1242|  1.64M|                iterator begin_of_token = m_Iterator;
 1243|  1.64M|                ConsumeCurrentCharacter();
 1244|       |
 1245|  5.45M|                while (!IsFinished())
  ------------------
  |  Branch (1245:24): [True: 5.44M, False: 6.84k]
  ------------------
 1246|  5.44M|                {
 1247|  5.44M|                    current_character = *m_Iterator;
 1248|       |
 1249|  5.44M|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1249:25): [True: 3.81M, False: 1.63M]
  ------------------
 1250|  3.81M|                    {
 1251|  3.81M|                        ConsumeCurrentCharacter();
 1252|  3.81M|                        continue;
 1253|  3.81M|                    }
 1254|       |
 1255|  1.63M|                    break;
 1256|  5.44M|                }
 1257|       |
 1258|  1.64M|                return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1259|  1.64M|            }
 1260|       |
 1261|       |            /* Unknown/Unexpected character */
 1262|       |
 1263|  1.09M|            else
 1264|  1.09M|            {
 1265|       |                // TODO: Warn unexpected character encountered
 1266|  1.09M|                SkipCurrentCharacter();
 1267|  1.09M|            }
 1268|  8.56M|        }
 1269|       |
 1270|  4.44k|        return {};
 1271|  6.47M|    }
_ZN10OpenAutoIt5Lexer10ProcessAllEv:
 1274|  23.2k|    {
 1275|  23.2k|        TokenStream& stream = m_ParseResult.m_TokenStream;
 1276|       |
 1277|  6.50M|        while (!IsFinished())
  ------------------
  |  Branch (1277:16): [True: 6.47M, False: 23.2k]
  ------------------
 1278|  6.47M|        {
 1279|  6.47M|            phi::optional<Token> maybe_token = GetNextToken();
 1280|       |
 1281|  6.47M|            if (maybe_token.has_value())
  ------------------
  |  Branch (1281:17): [True: 6.47M, False: 4.44k]
  ------------------
 1282|  6.47M|            {
 1283|  6.47M|                stream.emplace_back(maybe_token.value());
 1284|  6.47M|            }
 1285|  6.47M|        }
 1286|       |
 1287|  23.2k|        stream.finalize();
 1288|  23.2k|    }
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1298|  14.6M|    {
 1299|  14.6M|        ++m_Iterator;
 1300|  14.6M|    }
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1303|   610k|    {
 1304|   610k|        ++m_LineNumber;
 1305|   610k|        m_Column = 1u;
 1306|   610k|    }
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1309|  2.09M|    {
 1310|  2.09M|        ConsumeCurrentCharacter();
 1311|  2.09M|        ++m_Column;
 1312|  2.09M|    }
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   34|  47.3k|    {
   35|  47.3k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  47.3k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  47.3k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 1.12k, False: 46.2k]
  ------------------
   39|  1.12k|        {
   40|  1.12k|            return itr->second;
   41|  1.12k|        }
   42|       |
   43|  46.2k|        return m_Default;
   44|  47.3k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  4.75M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   34|  34.1k|    {
   35|  34.1k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  34.1k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  34.1k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 11.6k, False: 22.5k]
  ------------------
   39|  11.6k|        {
   40|  11.6k|            return itr->second;
   41|  11.6k|        }
   42|       |
   43|  22.5k|        return m_Default;
   44|  34.1k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   278k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   34|   921k|    {
   35|   921k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|   921k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|   921k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 8.05k, False: 913k]
  ------------------
   39|  8.05k|        {
   40|  8.05k|            return itr->second;
   41|  8.05k|        }
   42|       |
   43|   913k|        return m_Default;
   44|   921k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   370M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   34|  1.64M|    {
   35|  1.64M|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  1.64M|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  1.64M|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 718k, False: 921k]
  ------------------
   39|   718k|        {
   40|   718k|            return itr->second;
   41|   718k|        }
   42|       |
   43|   921k|        return m_Default;
   44|  1.64M|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  56.8M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   34|   611k|    {
   35|   611k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|   611k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|   611k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 611k, False: 0]
  ------------------
   39|   611k|        {
   40|   611k|            return itr->second;
   41|   611k|        }
   42|       |
   43|      0|        return m_Default;
   44|   611k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  3.60M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  735|   301k|{
  736|   301k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (736:12): [True: 262k, False: 38.3k]
  |  Branch (736:40): [True: 4.72k, False: 33.6k]
  ------------------
  737|   301k|}
_Z17is_skip_characterc:
  715|  8.06M|{
  716|  8.06M|    switch (c)
  717|  8.06M|    {
  718|   463k|        case ' ':
  ------------------
  |  Branch (718:9): [True: 463k, False: 7.60M]
  ------------------
  719|   466k|        case '\v':
  ------------------
  |  Branch (719:9): [True: 3.65k, False: 8.06M]
  ------------------
  720|   477k|        case '\t':
  ------------------
  |  Branch (720:9): [True: 10.6k, False: 8.05M]
  ------------------
  721|   492k|        case '\b':
  ------------------
  |  Branch (721:9): [True: 14.9k, False: 8.05M]
  ------------------
  722|   497k|        case '\f':
  ------------------
  |  Branch (722:9): [True: 4.95k, False: 8.06M]
  ------------------
  723|   497k|            return true;
  724|  7.57M|        default:
  ------------------
  |  Branch (724:9): [True: 7.57M, False: 497k]
  ------------------
  725|  7.57M|            return false;
  726|  8.06M|    }
  727|  8.06M|}
_Z24is_valid_identifier_charc:
  730|  9.80M|{
  731|  9.80M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (731:12): [True: 6.40M, False: 3.40M]
  |  Branch (731:40): [True: 16.2k, False: 3.38M]
  ------------------
  732|  9.80M|}
_Z20is_two_part_operatorc:
  740|  5.20M|{
  741|  5.20M|    switch (c)
  742|  5.20M|    {
  743|   273k|        case '=':
  ------------------
  |  Branch (743:9): [True: 273k, False: 4.93M]
  ------------------
  744|   363k|        case '+':
  ------------------
  |  Branch (744:9): [True: 89.1k, False: 5.11M]
  ------------------
  745|   380k|        case '-':
  ------------------
  |  Branch (745:9): [True: 17.0k, False: 5.18M]
  ------------------
  746|   394k|        case '*':
  ------------------
  |  Branch (746:9): [True: 14.1k, False: 5.19M]
  ------------------
  747|   499k|        case '/':
  ------------------
  |  Branch (747:9): [True: 104k, False: 5.09M]
  ------------------
  748|   509k|        case '&':
  ------------------
  |  Branch (748:9): [True: 10.2k, False: 5.19M]
  ------------------
  749|   529k|        case '<':
  ------------------
  |  Branch (749:9): [True: 19.7k, False: 5.18M]
  ------------------
  750|   576k|        case '>':
  ------------------
  |  Branch (750:9): [True: 47.5k, False: 5.15M]
  ------------------
  751|   576k|            return true;
  752|       |
  753|  4.62M|        default:
  ------------------
  |  Branch (753:9): [True: 4.62M, False: 576k]
  ------------------
  754|  4.62M|            return false;
  755|  5.20M|    }
  756|  5.20M|}
_Z18is_single_operatorc:
  759|  4.62M|{
  760|  4.62M|    switch (c)
  761|  4.62M|    {
  762|  11.2k|        case '^':
  ------------------
  |  Branch (762:9): [True: 11.2k, False: 4.61M]
  ------------------
  763|  18.4k|        case '?':
  ------------------
  |  Branch (763:9): [True: 7.22k, False: 4.62M]
  ------------------
  764|  34.9k|        case ':':
  ------------------
  |  Branch (764:9): [True: 16.5k, False: 4.61M]
  ------------------
  765|  34.9k|            return true;
  766|       |
  767|  4.59M|        default:
  ------------------
  |  Branch (767:9): [True: 4.59M, False: 34.9k]
  ------------------
  768|  4.59M|            return false;
  769|  4.62M|    }
  770|  4.62M|}

_ZN10OpenAutoIt12ParseWarning21EmbeddedNullCharacterEN3phi7integerImEES3_:
   12|   496k|    {
   13|   496k|        ParseWarning warn;
   14|       |
   15|   496k|        warn.m_Type = ParseWarningType::EmbeddedNullCharacter;
   16|       |
   17|   496k|        warn.m_LocationBegin.line_number = line;
   18|   496k|        warn.m_LocationBegin.column      = column;
   19|       |
   20|   496k|        warn.m_LocationEnd.line_number = line;
   21|   496k|        warn.m_LocationEnd.column      = column;
   22|       |
   23|   496k|        return warn;
   24|   496k|    }

_ZN10OpenAutoIt6ParserC2Ev:
  127|  23.2k|    Parser::Parser() noexcept = default;
_ZN10OpenAutoIt6Parser13ParseDocumentERNS_11ParseResultE:
  130|  23.2k|    {
  131|  23.2k|        m_ParseResult = &parse_result;
  132|  23.2k|        m_TokenStream = &parse_result.m_TokenStream;
  133|       |
  134|  23.2k|        m_ParseResult->m_Document = phi::make_not_null_scope<ASTDocument>();
  135|       |
  136|  1.63M|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (136:16): [True: 1.60M, False: 23.2k]
  ------------------
  137|  1.60M|        {
  138|  1.60M|            const Token& token = CurrentToken();
  139|       |
  140|       |            // Parse global function definition
  141|  1.60M|            switch (token.GetTokenKind())
  142|  1.60M|            {
  143|  75.5k|                case TokenKind::KW_Func: {
  ------------------
  |  Branch (143:17): [True: 75.5k, False: 1.53M]
  ------------------
  144|  75.5k|                    ConsumeCurrent();
  145|       |
  146|  75.5k|                    auto function_definition = ParseFunctionDefinition();
  147|  75.5k|                    if (!function_definition)
  ------------------
  |  Branch (147:25): [True: 68.9k, False: 6.61k]
  ------------------
  148|  68.9k|                    {
  149|  68.9k|                        err("ERR: Failed to parse function definition!\n");
  150|  68.9k|                        continue;
  151|  68.9k|                    }
  152|       |
  153|  6.61k|                    AppendFunctionToDocument(function_definition.release_not_null());
  154|  6.61k|                    break;
  155|  75.5k|                }
  156|       |
  157|  3.15k|                case TokenKind::Comment:
  ------------------
  |  Branch (157:17): [True: 3.15k, False: 1.60M]
  ------------------
  158|  88.4k|                case TokenKind::NewLine: {
  ------------------
  |  Branch (158:17): [True: 85.2k, False: 1.52M]
  ------------------
  159|       |                    // Simply ignore and consume newlines and comments
  160|  88.4k|                    ConsumeCurrent();
  161|  88.4k|                    break;
  162|  3.15k|                }
  163|  49.1k|                case TokenKind::NotAToken: {
  ------------------
  |  Branch (163:17): [True: 49.1k, False: 1.55M]
  ------------------
  164|  49.1k|                    err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  165|  49.1k|                                    std::string_view(token.GetText())));
  166|  49.1k|                    ConsumeCurrent();
  167|  49.1k|                    break;
  168|  3.15k|                }
  169|       |
  170|  1.39M|                default: {
  ------------------
  |  Branch (170:17): [True: 1.39M, False: 213k]
  ------------------
  171|  1.39M|                    auto statement = ParseStatement();
  172|  1.39M|                    if (!statement)
  ------------------
  |  Branch (172:25): [True: 1.29M, False: 99.6k]
  ------------------
  173|  1.29M|                    {
  174|       |                        // TODO: Proper error reporting
  175|  1.29M|                        err("ERR: Failed to parse statement!\n");
  176|       |
  177|  1.29M|                        if (m_TokenStream->has_more())
  ------------------
  |  Branch (177:29): [True: 1.28M, False: 11.7k]
  ------------------
  178|  1.28M|                        {
  179|       |                            // Swallow the bad token
  180|  1.28M|                            ConsumeCurrent();
  181|  1.28M|                        }
  182|  1.29M|                        continue;
  183|  1.29M|                    }
  184|       |
  185|  99.6k|                    AppendStatementToDocument(statement.release_not_null());
  186|  99.6k|                }
  187|  1.60M|            }
  188|  1.60M|        }
  189|  23.2k|    }
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  192|  16.5M|    {
  193|  16.5M|        PHI_ASSERT(m_TokenStream->has_more());
  194|       |
  195|  16.5M|        return m_TokenStream->look_ahead();
  196|  16.5M|    }
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  199|  5.55M|    {
  200|  5.55M|        m_TokenStream->consume();
  201|  5.55M|    }
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  204|   594k|    {
  205|   619k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (205:16): [True: 615k, False: 3.71k]
  ------------------
  206|   615k|        {
  207|   615k|            switch (CurrentToken().GetTokenKind())
  208|   615k|            {
  209|  25.4k|                case TokenKind::Comment:
  ------------------
  |  Branch (209:17): [True: 25.4k, False: 590k]
  ------------------
  210|  25.4k|                    ConsumeCurrent();
  211|  25.4k|                    break;
  212|       |
  213|   590k|                default:
  ------------------
  |  Branch (213:17): [True: 590k, False: 25.4k]
  ------------------
  214|   590k|                    return;
  215|   615k|            }
  216|   615k|        }
  217|   594k|    }
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  220|  2.07M|    {
  221|  2.07M|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (221:16): [True: 2.07M, False: 759]
  ------------------
  222|  2.07M|        {
  223|  2.07M|            switch (CurrentToken().GetTokenKind())
  224|  2.07M|            {
  225|  5.29k|                case TokenKind::NewLine:
  ------------------
  |  Branch (225:17): [True: 5.29k, False: 2.07M]
  ------------------
  226|  5.32k|                case TokenKind::Comment:
  ------------------
  |  Branch (226:17): [True: 32, False: 2.07M]
  ------------------
  227|  5.32k|                    ConsumeCurrent();
  228|  5.32k|                    break;
  229|       |
  230|  2.07M|                default:
  ------------------
  |  Branch (230:17): [True: 2.07M, False: 5.32k]
  ------------------
  231|  2.07M|                    return;
  232|  2.07M|            }
  233|  2.07M|        }
  234|  2.07M|    }
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  237|  1.14M|    {
  238|       |        // Do we even have more tokens?
  239|  1.14M|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (239:13): [True: 1.44k, False: 1.13M]
  ------------------
  240|  1.44k|        {
  241|  1.44k|            return {};
  242|  1.44k|        }
  243|       |
  244|  1.13M|        const Token& token = CurrentToken();
  245|       |
  246|       |        // Is this the correct token kind
  247|  1.13M|        if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (247:13): [True: 291k, False: 847k]
  ------------------
  248|   291k|        {
  249|   291k|            return {};
  250|   291k|        }
  251|       |
  252|   847k|        ConsumeCurrent();
  253|   847k|        return token;
  254|  1.13M|    }
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  257|  75.5k|    {
  258|       |        // Next we MUST parse the function name
  259|  75.5k|        auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  260|  75.5k|        if (!function_name_token)
  ------------------
  |  Branch (260:13): [True: 3.44k, False: 72.0k]
  ------------------
  261|  3.44k|        {
  262|  3.44k|            err("Expected identifier for function name");
  263|  3.44k|            return {};
  264|  3.44k|        }
  265|       |
  266|  72.0k|        auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  267|  72.0k|        function_definition->m_FunctionName = function_name_token->GetText();
  268|       |
  269|       |        // Next we MUST parse an opening parenthesis (LParen)
  270|  72.0k|        if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (270:13): [True: 8.92k, False: 63.1k]
  ------------------
  271|  8.92k|        {
  272|  8.92k|            err("Expected opening parenthesis");
  273|  8.92k|            return {};
  274|  8.92k|        }
  275|       |
  276|       |        // Next we parse the function parameter declarations until right parenthesis (RParen)
  277|  74.6k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (277:16): [True: 74.5k, False: 38]
  |  Branch (277:16): [True: 32.6k, False: 41.9k]
  |  Branch (277:45): [True: 32.6k, False: 41.9k]
  ------------------
  278|  32.6k|        {
  279|  32.6k|            phi::optional<FunctionParameter> function_paremeter_optional =
  280|  32.6k|                    ParseFunctionParameterDefinition();
  281|  32.6k|            if (!function_paremeter_optional)
  ------------------
  |  Branch (281:17): [True: 21.1k, False: 11.4k]
  ------------------
  282|  21.1k|            {
  283|       |                // TODO: Proper error reporting
  284|  21.1k|                return {};
  285|  21.1k|            }
  286|  11.4k|            FunctionParameter& function_paremeter = function_paremeter_optional.value();
  287|       |
  288|  11.4k|            function_definition->m_Parameters.emplace_back(phi::move(function_paremeter));
  289|       |
  290|       |            // Parse comma
  291|  11.4k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (291:17): [True: 11.4k, False: 0]
  |  Branch (291:17): [True: 2.98k, False: 8.48k]
  |  Branch (291:46): [True: 2.98k, False: 8.48k]
  ------------------
  292|  2.98k|            {
  293|  2.98k|                ConsumeCurrent();
  294|  2.98k|            }
  295|  11.4k|        }
  296|       |
  297|       |        // Next we MUST parse a right parenthesis (RParen)
  298|  41.9k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (298:13): [True: 38, False: 41.9k]
  ------------------
  299|     38|        {
  300|       |            // TODO: Proper error
  301|     38|            return {};
  302|     38|        }
  303|       |
  304|       |        // Next we MUST parse a new line
  305|  41.9k|        if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (305:13): [True: 5.40k, False: 36.5k]
  ------------------
  306|  5.40k|        {
  307|       |            // TODO: Proper error
  308|  5.40k|            return {};
  309|  5.40k|        }
  310|       |
  311|       |        // Next parse Statements until EndFunc
  312|   117k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (312:16): [True: 116k, False: 297]
  |  Branch (312:16): [True: 110k, False: 6.90k]
  |  Branch (312:45): [True: 110k, False: 6.61k]
  ------------------
  313|   110k|        {
  314|   110k|            auto statement = ParseStatement();
  315|   110k|            if (!statement)
  ------------------
  |  Branch (315:17): [True: 29.6k, False: 80.6k]
  ------------------
  316|  29.6k|            {
  317|  29.6k|                err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  318|  29.6k|                                std::string_view(function_definition->m_FunctionName)));
  319|       |                // TODO: Report proper error
  320|  29.6k|                return {};
  321|  29.6k|            }
  322|       |
  323|  80.6k|            function_definition->m_FunctionBody.emplace_back(
  324|  80.6k|                    phi::move(statement.release_not_null()));
  325|       |
  326|  80.6k|            ConsumeNewLineAndComments();
  327|  80.6k|        }
  328|       |
  329|       |        // Next we MUST parse EndFunc
  330|  6.90k|        if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (330:13): [True: 297, False: 6.61k]
  ------------------
  331|    297|        {
  332|       |            // TODO: Proper error
  333|    297|            return {};
  334|    297|        }
  335|       |
  336|  6.61k|        return phi::move(function_definition);
  337|  6.90k|    }
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  340|  32.6k|    {
  341|       |        // TODO: This entire function requres more error checks
  342|  32.6k|        FunctionParameter parameter;
  343|       |
  344|   116k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (344:16): [True: 116k, False: 63]
  ------------------
  345|   116k|        {
  346|   116k|            const Token& token = CurrentToken();
  347|       |
  348|   116k|            switch (token.GetTokenKind())
  349|   116k|            {
  350|  48.1k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (350:17): [True: 48.1k, False: 68.3k]
  ------------------
  351|  48.1k|                    parameter.name = token.GetText().substring_view(1u);
  352|  48.1k|                    ConsumeCurrent();
  353|  48.1k|                    break;
  354|      0|                }
  355|  1.82k|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (355:17): [True: 1.82k, False: 114k]
  ------------------
  356|  1.82k|                    parameter.as_const = true;
  357|  1.82k|                    ConsumeCurrent();
  358|  1.82k|                    break;
  359|      0|                }
  360|    217|                case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (360:17): [True: 217, False: 116k]
  ------------------
  361|    217|                    parameter.by_ref = true;
  362|    217|                    ConsumeCurrent();
  363|    217|                    break;
  364|      0|                }
  365|  38.9k|                case TokenKind::OP_Equals: {
  ------------------
  |  Branch (365:17): [True: 38.9k, False: 77.5k]
  ------------------
  366|  38.9k|                    if (parameter.name.is_empty())
  ------------------
  |  Branch (366:25): [True: 1.09k, False: 37.8k]
  ------------------
  367|  1.09k|                    {
  368|       |                        // TODO: PROPER ERROR
  369|  1.09k|                        return {};
  370|  1.09k|                    }
  371|       |
  372|       |                    // Consume the '='
  373|  37.8k|                    ConsumeCurrent();
  374|       |
  375|       |                    // Default value is an expression
  376|  37.8k|                    auto default_expression = ParseExpression();
  377|  37.8k|                    if (!default_expression)
  ------------------
  |  Branch (377:25): [True: 4.10k, False: 33.7k]
  ------------------
  378|  4.10k|                    {
  379|       |                        // TODO: Report error
  380|  4.10k|                        return {};
  381|  4.10k|                    }
  382|       |
  383|       |                    // For default values we artificially create a variable assignment
  384|  33.7k|                    auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  385|       |
  386|  33.7k|                    default_var_assignment->m_Scope        = VariableScope::Auto;
  387|  33.7k|                    default_var_assignment->m_VariableName = parameter.name;
  388|  33.7k|                    default_var_assignment->m_InitialValueExpression =
  389|  33.7k|                            phi::move(default_expression);
  390|       |
  391|  33.7k|                    parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  392|  33.7k|                    break;
  393|  37.8k|                }
  394|  2.98k|                case TokenKind::Comma:
  ------------------
  |  Branch (394:17): [True: 2.98k, False: 113k]
  ------------------
  395|  11.4k|                case TokenKind::RParen: {
  ------------------
  |  Branch (395:17): [True: 8.48k, False: 107k]
  ------------------
  396|  11.4k|                    return phi::move(parameter);
  397|  2.98k|                }
  398|  15.9k|                default: {
  ------------------
  |  Branch (398:17): [True: 15.9k, False: 100k]
  ------------------
  399|       |                    // TODO: Report error
  400|  15.9k|                    return {};
  401|  2.98k|                }
  402|   116k|            }
  403|   116k|        }
  404|       |
  405|       |        // TODO: Report error unexpected EOF
  406|     63|        return {};
  407|  32.6k|    }
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  410|  1.80M|    {
  411|  1.80M|        ConsumeNewLineAndComments();
  412|       |
  413|  1.80M|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (413:13): [True: 9, False: 1.80M]
  ------------------
  414|      9|        {
  415|       |            // TODO: Report proper error
  416|      9|            return {};
  417|      9|        }
  418|       |
  419|  1.80M|        phi::scope_ptr<ASTStatement> ret_statement;
  420|       |
  421|       |        // Loop until we parse something or there is nothing left to parse
  422|  1.80M|        const Token& token = CurrentToken();
  423|  1.80M|        switch (token.GetTokenKind())
  424|  1.80M|        {
  425|       |            // Variable assignment
  426|  7.73k|            case TokenKind::KW_Const:
  ------------------
  |  Branch (426:13): [True: 7.73k, False: 1.79M]
  ------------------
  427|  9.85k|            case TokenKind::KW_Local:
  ------------------
  |  Branch (427:13): [True: 2.11k, False: 1.80M]
  ------------------
  428|  20.8k|            case TokenKind::KW_Global:
  ------------------
  |  Branch (428:13): [True: 10.9k, False: 1.79M]
  ------------------
  429|  27.5k|            case TokenKind::KW_Static:
  ------------------
  |  Branch (429:13): [True: 6.76k, False: 1.79M]
  ------------------
  430|   305k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (430:13): [True: 277k, False: 1.52M]
  ------------------
  431|   305k|                ret_statement = ParseVariableAssignment();
  432|   305k|                if (!ret_statement)
  ------------------
  |  Branch (432:21): [True: 38.2k, False: 266k]
  ------------------
  433|  38.2k|                {
  434|  38.2k|                    err("ERR: Failed to parse variable assignment!\n");
  435|  38.2k|                    return {};
  436|  38.2k|                }
  437|   266k|                break;
  438|   305k|            }
  439|       |
  440|       |            // If Statement
  441|   266k|            case TokenKind::KW_If: {
  ------------------
  |  Branch (441:13): [True: 97.1k, False: 1.70M]
  ------------------
  442|  97.1k|                ret_statement = ParseIfStatement();
  443|  97.1k|                if (!ret_statement)
  ------------------
  |  Branch (443:21): [True: 86.1k, False: 10.9k]
  ------------------
  444|  86.1k|                {
  445|  86.1k|                    err("ERR: Failed to parse if statement!\n");
  446|  86.1k|                    return {};
  447|  86.1k|                }
  448|  10.9k|                break;
  449|  97.1k|            }
  450|       |
  451|       |            // While statement
  452|  74.8k|            case TokenKind::KW_While: {
  ------------------
  |  Branch (452:13): [True: 74.8k, False: 1.72M]
  ------------------
  453|  74.8k|                ret_statement = ParseWhileStatement();
  454|  74.8k|                if (!ret_statement)
  ------------------
  |  Branch (454:21): [True: 56.4k, False: 18.4k]
  ------------------
  455|  56.4k|                {
  456|  56.4k|                    err("ERR: Failed to parse while statement!\n");
  457|  56.4k|                    return {};
  458|  56.4k|                }
  459|  18.4k|                break;
  460|  74.8k|            }
  461|       |
  462|  1.32M|            default: {
  ------------------
  |  Branch (462:13): [True: 1.32M, False: 477k]
  ------------------
  463|       |                // Try to parse ExpressionStatement
  464|  1.32M|                ret_statement = ParseExpressionStatement();
  465|  1.32M|                if (!ret_statement)
  ------------------
  |  Branch (465:21): [True: 1.02M, False: 297k]
  ------------------
  466|  1.02M|                {
  467|  1.02M|                    err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  468|  1.02M|                                    enum_name(token.GetTokenKind())));
  469|  1.02M|                    return {};
  470|  1.02M|                }
  471|   297k|                break;
  472|  1.32M|            }
  473|  1.80M|        }
  474|       |
  475|   594k|        ConsumeComments();
  476|       |
  477|   594k|        if (m_TokenStream->has_more() && !MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (477:13): [True: 590k, False: 3.71k]
  |  Branch (477:13): [True: 205k, False: 389k]
  |  Branch (477:42): [True: 205k, False: 385k]
  ------------------
  478|   205k|        {
  479|   205k|            err("Requires newline after statement\n");
  480|   205k|            return {};
  481|   205k|        }
  482|       |
  483|   389k|        return phi::move(ret_statement);
  484|   594k|    }
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  487|  74.8k|    {
  488|  74.8k|        const Token& token = CurrentToken();
  489|  74.8k|        if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (489:13): [True: 0, False: 74.8k]
  ------------------
  490|      0|        {
  491|       |            // TODO: Proper error
  492|      0|            return {};
  493|      0|        }
  494|  74.8k|        ConsumeCurrent();
  495|       |
  496|       |        // Next we MUST parse an Expression
  497|  74.8k|        auto while_condition_expression = ParseExpression();
  498|  74.8k|        if (!while_condition_expression)
  ------------------
  |  Branch (498:13): [True: 7.10k, False: 67.7k]
  ------------------
  499|  7.10k|        {
  500|       |            // TODO: Proper error
  501|  7.10k|            return {};
  502|  7.10k|        }
  503|       |
  504|  67.7k|        auto while_statement =
  505|  67.7k|                phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  506|       |
  507|       |        // Parse statements until KW_WEnd
  508|   185k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (508:16): [True: 184k, False: 722]
  |  Branch (508:16): [True: 165k, False: 19.1k]
  |  Branch (508:45): [True: 165k, False: 18.4k]
  ------------------
  509|   165k|        {
  510|       |            // Skip NewLines and comments
  511|   165k|            if (CurrentToken().GetTokenKind() == TokenKind::NewLine ||
  ------------------
  |  Branch (511:17): [True: 14.9k, False: 151k]
  ------------------
  512|   165k|                CurrentToken().GetTokenKind() == TokenKind::Comment)
  ------------------
  |  Branch (512:17): [True: 9.02k, False: 141k]
  ------------------
  513|  23.9k|            {
  514|  23.9k|                ConsumeCurrent();
  515|  23.9k|                continue;
  516|  23.9k|            }
  517|       |
  518|       |            // Parse statements
  519|   141k|            auto statement = ParseStatement();
  520|   141k|            if (!statement)
  ------------------
  |  Branch (520:17): [True: 48.6k, False: 93.3k]
  ------------------
  521|  48.6k|            {
  522|       |                // TODO: Propeer error
  523|  48.6k|                return {};
  524|  48.6k|            }
  525|       |
  526|  93.3k|            while_statement->m_Statements.emplace_back(statement.release_not_null());
  527|  93.3k|        }
  528|       |
  529|  19.1k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (529:13): [True: 722, False: 18.4k]
  ------------------
  530|    722|        {
  531|       |            // TODO: Proper error
  532|    722|            return {};
  533|    722|        }
  534|       |
  535|       |        // Next token MUST be KW_Wend
  536|  18.4k|        const Token& wend_token = CurrentToken();
  537|  18.4k|        if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (537:13): [True: 0, False: 18.4k]
  ------------------
  538|      0|        {
  539|       |            // TODO: Proper error
  540|      0|            return {};
  541|      0|        }
  542|  18.4k|        ConsumeCurrent();
  543|       |
  544|  18.4k|        return phi::move(while_statement);
  545|  18.4k|    }
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  548|   305k|    {
  549|   305k|        auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  550|       |
  551|   305k|        phi::boolean parsed_identifier = false;
  552|       |        // Parse all specifiers until we hit a VariableIdentifier
  553|   610k|        while (m_TokenStream->has_more() && !parsed_identifier)
  ------------------
  |  Branch (553:16): [True: 608k, False: 1.79k]
  |  Branch (553:16): [True: 332k, False: 277k]
  |  Branch (553:45): [True: 332k, False: 275k]
  ------------------
  554|   332k|        {
  555|   332k|            const Token& current_token = CurrentToken();
  556|   332k|            ConsumeCurrent();
  557|       |
  558|   332k|            switch (current_token.GetTokenKind())
  559|   332k|            {
  560|  11.7k|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (560:17): [True: 11.7k, False: 320k]
  ------------------
  561|  11.7k|                    if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (561:25): [True: 3.98k, False: 7.73k]
  ------------------
  562|  3.98k|                    {
  563|       |                        // TODO: Error more than one const specifier
  564|  3.98k|                        err("ERR: More than one const specifier given\n");
  565|  3.98k|                        return {};
  566|  3.98k|                    }
  567|  7.73k|                    variable_declaration->m_IsConst = true;
  568|  7.73k|                    break;
  569|  11.7k|                }
  570|       |
  571|  12.1k|                case TokenKind::KW_Static: {
  ------------------
  |  Branch (571:17): [True: 12.1k, False: 320k]
  ------------------
  572|  12.1k|                    if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (572:25): [True: 5.41k, False: 6.76k]
  ------------------
  573|  5.41k|                    {
  574|       |                        // TODO: Error more than one static specifier
  575|  5.41k|                        err("ERR: More than one static specifier given\n");
  576|  5.41k|                        return {};
  577|  5.41k|                    }
  578|  6.76k|                    variable_declaration->m_IsStatic = true;
  579|  6.76k|                    break;
  580|  12.1k|                }
  581|       |
  582|  19.8k|                case TokenKind::KW_Global: {
  ------------------
  |  Branch (582:17): [True: 19.8k, False: 312k]
  ------------------
  583|  19.8k|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (583:25): [True: 8.86k, False: 10.9k]
  ------------------
  584|  8.86k|                    {
  585|       |                        // TODO: Error more than one scope specifier
  586|  8.86k|                        err("ERR: More than one scope specifier given\n");
  587|  8.86k|                        return {};
  588|  8.86k|                    }
  589|  10.9k|                    variable_declaration->m_Scope = VariableScope::Global;
  590|  10.9k|                    break;
  591|  19.8k|                }
  592|       |
  593|  3.89k|                case TokenKind::KW_Local: {
  ------------------
  |  Branch (593:17): [True: 3.89k, False: 328k]
  ------------------
  594|  3.89k|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (594:25): [True: 1.78k, False: 2.11k]
  ------------------
  595|  1.78k|                    {
  596|       |                        // TODO: Error more than one scope specifier
  597|  1.78k|                        err("ERR: More than one scope specifier given\n");
  598|  1.78k|                        return {};
  599|  1.78k|                    }
  600|  2.11k|                    variable_declaration->m_Scope = VariableScope::Local;
  601|  2.11k|                    break;
  602|  3.89k|                }
  603|       |
  604|   277k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (604:17): [True: 277k, False: 55.0k]
  ------------------
  605|       |                    // VariableIdentifiers begin with a '$'
  606|       |                    // Like: $MyVariable
  607|       |                    // So for the name we ignore the very first character
  608|   277k|                    PHI_ASSERT(current_token.GetText().length() > 1u);
  609|   277k|                    variable_declaration->m_VariableName =
  610|   277k|                            current_token.GetText().substring_view(1u);
  611|       |
  612|   277k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  613|   277k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  614|       |
  615|   277k|                    parsed_identifier = true;
  616|   277k|                    break;
  617|  3.89k|                }
  618|       |
  619|  7.43k|                default: {
  ------------------
  |  Branch (619:17): [True: 7.43k, False: 325k]
  ------------------
  620|       |                    // TODO: Error unexpected token
  621|  7.43k|                    return {};
  622|  3.89k|                }
  623|   332k|            }
  624|   332k|        }
  625|       |
  626|   277k|        if (!parsed_identifier)
  ------------------
  |  Branch (626:13): [True: 48, False: 277k]
  ------------------
  627|     48|        {
  628|       |            // TODO: Error variable declaration ends before the VariableIdentifier
  629|     48|            err("ERR: Missing variable identifier!\n");
  630|     48|            return {};
  631|     48|        }
  632|       |
  633|       |        // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  634|   277k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (634:13): [True: 1.74k, False: 275k]
  ------------------
  635|  1.74k|        {
  636|  1.74k|            return variable_declaration;
  637|  1.74k|        }
  638|       |
  639|       |        // Check for equals
  640|   275k|        const Token& next_token = CurrentToken();
  641|       |
  642|   275k|        if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (642:13): [True: 36.0k, False: 239k]
  ------------------
  643|  36.0k|        {
  644|  36.0k|            ConsumeCurrent();
  645|       |
  646|       |            // Now me MUST parse an expression
  647|  36.0k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
  648|  36.0k|            if (!expression)
  ------------------
  |  Branch (648:17): [True: 10.6k, False: 25.3k]
  ------------------
  649|  10.6k|            {
  650|       |                // TODO: Error failed to parse a valid expression
  651|  10.6k|                err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  652|  10.6k|                return {};
  653|  10.6k|            }
  654|       |
  655|  25.3k|            variable_declaration->m_InitialValueExpression = phi::move(expression);
  656|  25.3k|        }
  657|       |
  658|   265k|        return variable_declaration;
  659|   275k|    }
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  662|  1.32M|    {
  663|  1.32M|        auto expression = ParseExpression();
  664|  1.32M|        if (!expression)
  ------------------
  |  Branch (664:13): [True: 653k, False: 672k]
  ------------------
  665|   653k|        {
  666|   653k|            return {};
  667|   653k|        }
  668|       |
  669|   672k|        auto expression_statement =
  670|   672k|                phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  671|       |
  672|   672k|        if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (672:13): [True: 374k, False: 297k]
  ------------------
  673|   374k|        {
  674|   374k|            err(fmt::format("Expression {:s} is not valid as an statement\n",
  675|   374k|                            expression_statement->m_Expression->Name()));
  676|   374k|            return {};
  677|   374k|        }
  678|       |
  679|   297k|        return phi::move(expression_statement);
  680|   672k|    }
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  683|  97.1k|    {
  684|  97.1k|        if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (684:13): [True: 0, False: 97.1k]
  ------------------
  685|      0|        {
  686|      0|            return {};
  687|      0|        }
  688|       |
  689|       |        // Next me MUST parse an expression
  690|  97.1k|        auto if_condition = ParseExpression();
  691|  97.1k|        if (!if_condition)
  ------------------
  |  Branch (691:13): [True: 8.17k, False: 88.9k]
  ------------------
  692|  8.17k|        {
  693|  8.17k|            err("ERR: failed to parse expression!\n");
  694|       |
  695|  8.17k|            return {};
  696|  8.17k|        }
  697|       |
  698|       |        // Next we MUST parse Then
  699|  88.9k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (699:13): [True: 14.4k, False: 74.5k]
  ------------------
  700|  14.4k|        {
  701|  14.4k|            err("ERR: Missing then!\n");
  702|       |
  703|  14.4k|            return {};
  704|  14.4k|        }
  705|       |
  706|  74.5k|        ConsumeNewLineAndComments();
  707|       |
  708|  74.5k|        IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  709|       |
  710|       |        // Next parse statements until we hit and EndIf, ElseIf or Else
  711|   190k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (711:16): [True: 189k, False: 487]
  |  Branch (711:16): [True: 156k, False: 33.4k]
  |  Branch (711:45): [True: 178k, False: 10.9k]
  ------------------
  712|   190k|               CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (712:16): [True: 168k, False: 10.1k]
  ------------------
  713|   190k|               CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (713:16): [True: 156k, False: 11.8k]
  ------------------
  714|   156k|        {
  715|   156k|            auto statement = ParseStatement();
  716|   156k|            if (!statement)
  ------------------
  |  Branch (716:17): [True: 41.0k, False: 115k]
  ------------------
  717|  41.0k|            {
  718|  41.0k|                err("ERR: Failed to parse statement inside of IF\n");
  719|  41.0k|                return {};
  720|  41.0k|            }
  721|       |
  722|   115k|            if_case.body.emplace_back(statement.release_not_null());
  723|       |
  724|   115k|            ConsumeNewLineAndComments();
  725|   115k|        }
  726|       |
  727|  33.4k|        auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
  728|       |
  729|       |        // TODO: Handle ElseIf, Else
  730|       |
  731|  33.4k|        if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (731:13): [True: 22.5k, False: 10.9k]
  ------------------
  732|  22.5k|        {
  733|  22.5k|            err("ERR: Missing EndIf!\n");
  734|       |            // TODO: Proper Error
  735|  22.5k|            return {};
  736|  22.5k|        }
  737|       |
  738|  10.9k|        return phi::move(if_statement);
  739|  33.4k|    }
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
  742|   533k|    {
  743|   533k|        const Token& token = CurrentToken();
  744|   533k|        if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (744:13): [True: 0, False: 533k]
  ------------------
  745|      0|        {
  746|      0|            return {};
  747|      0|        }
  748|       |
  749|   533k|        if (token.GetText().length() > 18u)
  ------------------
  |  Branch (749:13): [True: 1.05k, False: 532k]
  ------------------
  750|  1.05k|        {
  751|       |            // TODO: Better check and proper error
  752|  1.05k|            return {};
  753|  1.05k|        }
  754|       |
  755|   532k|        phi::int64_t value{0};
  756|   532k|        phi::boolean parsing_hex{false};
  757|  1.17M|        for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (757:36): [True: 639k, False: 532k]
  ------------------
  758|   639k|        {
  759|   639k|            char character = token.GetText().at(index);
  760|       |
  761|       |            // Checking the second character
  762|   639k|            if (index == 1u)
  ------------------
  |  Branch (762:17): [True: 63.0k, False: 576k]
  ------------------
  763|  63.0k|            {
  764|  63.0k|                if (character == 'x' || character == 'X')
  ------------------
  |  Branch (764:21): [True: 17.0k, False: 46.0k]
  |  Branch (764:41): [True: 18.6k, False: 27.3k]
  ------------------
  765|  35.7k|                {
  766|  35.7k|                    parsing_hex = true;
  767|  35.7k|                    continue;
  768|  35.7k|                }
  769|  63.0k|            }
  770|       |
  771|   603k|            if (parsing_hex)
  ------------------
  |  Branch (771:17): [True: 38.5k, False: 564k]
  ------------------
  772|  38.5k|            {
  773|  38.5k|                PHI_ASSERT(phi::is_hex_digit(character));
  774|       |
  775|  38.5k|                value <<= 4;
  776|  38.5k|                value |= phi::hex_digit_value(character).unsafe();
  777|  38.5k|            }
  778|   564k|            else
  779|   564k|            {
  780|   564k|                PHI_ASSERT(character >= '0' && character <= '9');
  781|       |
  782|   564k|                value *= 10;
  783|   564k|                value += (character - '0');
  784|   564k|            }
  785|   603k|        }
  786|       |
  787|   532k|        ConsumeCurrent();
  788|   532k|        return phi::make_scope<ASTIntegerLiteral>(value);
  789|   533k|    }
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
  792|   194k|    {
  793|   194k|        const Token& token = CurrentToken();
  794|   194k|        if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (794:13): [True: 0, False: 194k]
  ------------------
  795|      0|        {
  796|      0|            return {};
  797|      0|        }
  798|   194k|        ConsumeCurrent();
  799|       |
  800|   194k|        auto string_literal = phi::make_scope<ASTStringLiteral>();
  801|       |
  802|   194k|        const phi::usize length = token.GetText().length();
  803|       |        // Trim the trailing and leading "
  804|   194k|        string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
  805|       |
  806|   194k|        return phi::move(string_literal);
  807|   194k|    }
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
  810|  2.67M|    {
  811|  2.67M|        phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
  812|  2.67M|        if (!lhs_expression)
  ------------------
  |  Branch (812:13): [True: 1.54M, False: 1.13M]
  ------------------
  813|  1.54M|        {
  814|  1.54M|            return {};
  815|  1.54M|        }
  816|       |
  817|  1.13M|        return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
  818|  2.67M|    }
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
  821|  2.89M|    {
  822|  2.89M|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (822:13): [True: 1.16k, False: 2.89M]
  ------------------
  823|  1.16k|        {
  824|       |            // TODO: Proper error
  825|  1.16k|            return {};
  826|  1.16k|        }
  827|       |
  828|  2.89M|        const Token& token = CurrentToken();
  829|  2.89M|        if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (829:13): [True: 8.18k, False: 2.88M]
  ------------------
  830|  8.18k|        {
  831|  8.18k|            const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
  832|  8.18k|            PHI_UNUSED_VARIABLE(op_precedence);
  833|  8.18k|            ConsumeCurrent();
  834|       |
  835|       |            // TODO: Implement me
  836|  8.18k|        }
  837|  2.88M|        else if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (837:18): [True: 919k, False: 1.96M]
  ------------------
  838|   919k|        {
  839|       |            // Consume the LParen
  840|   919k|            m_TokenStream->consume();
  841|       |
  842|   919k|            phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
  843|   919k|            if (!paren_expression)
  ------------------
  |  Branch (843:17): [True: 860k, False: 59.2k]
  ------------------
  844|   860k|            {
  845|       |                // TODO: Proper error
  846|   860k|                return {};
  847|   860k|            }
  848|       |
  849|  59.2k|            return phi::move(paren_expression);
  850|   919k|        }
  851|  1.96M|        else if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (851:18): [True: 533k, False: 1.43M]
  ------------------
  852|   533k|        {
  853|   533k|            phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
  854|   533k|            if (!int_literal)
  ------------------
  |  Branch (854:17): [True: 1.05k, False: 532k]
  ------------------
  855|  1.05k|            {
  856|       |                // TODO: Error failed to parse integer literal
  857|  1.05k|                return {};
  858|  1.05k|            }
  859|       |
  860|   532k|            return phi::move(int_literal);
  861|   533k|        }
  862|  1.43M|        else if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (862:18): [True: 194k, False: 1.24M]
  ------------------
  863|   194k|        {
  864|   194k|            auto string_literal_expression = ParseStringLiteral();
  865|   194k|            if (!string_literal_expression)
  ------------------
  |  Branch (865:17): [True: 0, False: 194k]
  ------------------
  866|      0|            {
  867|       |                // TODO: Proper error
  868|      0|                return {};
  869|      0|            }
  870|       |
  871|   194k|            return phi::move(string_literal_expression);
  872|   194k|        }
  873|       |
  874|       |        // Boolean literal
  875|  1.24M|        else if (token.GetTokenKind() == TokenKind::KW_True ||
  ------------------
  |  Branch (875:18): [True: 21.4k, False: 1.21M]
  ------------------
  876|  1.24M|                 token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (876:18): [True: 30.7k, False: 1.18M]
  ------------------
  877|  52.1k|        {
  878|  52.1k|            auto boolean_literal = ParseBooleanLiteral();
  879|  52.1k|            if (!boolean_literal)
  ------------------
  |  Branch (879:17): [True: 0, False: 52.1k]
  ------------------
  880|      0|            {
  881|       |                // TODO: Proper error
  882|      0|                return {};
  883|      0|            }
  884|       |
  885|  52.1k|            return phi::move(boolean_literal);
  886|  52.1k|        }
  887|       |
  888|       |        // Function call expression
  889|  1.18M|        else if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (889:18): [True: 536k, False: 652k]
  |  Branch (889:18): [True: 542k, False: 646k]
  |  Branch (889:75): [True: 6.39k, False: 646k]
  ------------------
  890|   542k|        {
  891|   542k|            auto function_call_expression = ParseFunctionCallExpression();
  892|   542k|            if (!function_call_expression)
  ------------------
  |  Branch (892:17): [True: 282k, False: 260k]
  ------------------
  893|   282k|            {
  894|       |                // TODO: Proper error
  895|   282k|                err("ERR: Failed to parse function call expression!\n");
  896|   282k|                return {};
  897|   282k|            }
  898|       |
  899|   260k|            return phi::move(function_call_expression);
  900|   542k|        }
  901|       |        // Variable expression
  902|   646k|        else if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (902:18): [True: 154k, False: 491k]
  ------------------
  903|   154k|        {
  904|   154k|            auto variable_expression = ParseVariableExpression();
  905|   154k|            if (!variable_expression)
  ------------------
  |  Branch (905:17): [True: 0, False: 154k]
  ------------------
  906|      0|            {
  907|       |                // TODO: Proper error
  908|      0|                err("ERR: Failed to parse Variable expression\n");
  909|      0|                return {};
  910|      0|            }
  911|       |
  912|   154k|            return phi::move(variable_expression);
  913|   154k|        }
  914|       |        // Keyword literal
  915|   491k|        else if (token.IsKeywordLiteral())
  ------------------
  |  Branch (915:18): [True: 32.7k, False: 459k]
  ------------------
  916|  32.7k|        {
  917|  32.7k|            auto keyword_literal = ParseKeywordLiteral();
  918|  32.7k|            if (!keyword_literal)
  ------------------
  |  Branch (918:17): [True: 0, False: 32.7k]
  ------------------
  919|      0|            {
  920|       |                // TODO: Proper error
  921|      0|                err("ERR: Failed to parse keyword literal expression!\n");
  922|      0|                return {};
  923|      0|            }
  924|       |
  925|  32.7k|            return phi::move(keyword_literal);
  926|  32.7k|        }
  927|       |        // Float literal
  928|   459k|        else if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (928:18): [True: 16.4k, False: 442k]
  ------------------
  929|  16.4k|        {
  930|  16.4k|            auto float_literal = ParseFloatLiteral();
  931|  16.4k|            if (!float_literal)
  ------------------
  |  Branch (931:17): [True: 0, False: 16.4k]
  ------------------
  932|      0|            {
  933|       |                // TODO: Proper error
  934|      0|                err("ERR: Failed to parse float literal expression!\n");
  935|      0|                return {};
  936|      0|            }
  937|       |
  938|  16.4k|            return phi::move(float_literal);
  939|  16.4k|        }
  940|       |
  941|       |        // TODO: Error Unexpected token
  942|   450k|        err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
  943|   450k|                        enum_name(token.GetTokenKind())));
  944|   450k|        return {};
  945|  2.89M|    }
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
  949|  1.15M|    {
  950|  1.31M|        while (true)
  ------------------
  |  Branch (950:16): [Folded - Ignored]
  ------------------
  951|  1.31M|        {
  952|  1.31M|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (952:17): [True: 4.30k, False: 1.31M]
  ------------------
  953|  4.30k|            {
  954|  4.30k|                return phi::move(lhs);
  955|  4.30k|            }
  956|       |
  957|  1.31M|            const Token& operator_token = CurrentToken();
  958|  1.31M|            if (!IsBinaryOperator(operator_token.GetTokenKind()))
  ------------------
  |  Branch (958:17): [True: 1.07M, False: 234k]
  ------------------
  959|  1.07M|            {
  960|       |                // If its not a binary operator just return the lhs expression
  961|  1.07M|                return phi::move(lhs);
  962|  1.07M|            }
  963|   234k|            int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
  964|   234k|            ConsumeCurrent();
  965|       |
  966|   234k|            if (token_precedence < precedence)
  ------------------
  |  Branch (966:17): [True: 13.1k, False: 221k]
  ------------------
  967|  13.1k|            {
  968|  13.1k|                return phi::move(lhs);
  969|  13.1k|            }
  970|       |
  971|       |            // This must be an binary expression
  972|   221k|            phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
  973|   221k|            if (!rhs_expression)
  ------------------
  |  Branch (973:17): [True: 49.6k, False: 171k]
  ------------------
  974|  49.6k|            {
  975|       |                // TODO: Proper error
  976|  49.6k|                return {};
  977|  49.6k|            }
  978|       |
  979|       |            // Nothing left to parse so directly return from here
  980|   171k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (980:17): [True: 956, False: 170k]
  ------------------
  981|    956|            {
  982|    956|                return phi::make_not_null_scope<ASTBinaryExpression>(
  983|    956|                        phi::move(lhs), operator_token.GetTokenKind(),
  984|    956|                        rhs_expression.release_not_null());
  985|    956|            }
  986|       |
  987|       |            // If BinOp binds less tightly with RHS than the operator after RHS, let
  988|       |            // the pending operator take RHS as its LHS.
  989|   170k|            const Token& next_token      = CurrentToken();
  990|   170k|            int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
  991|       |
  992|   170k|            if (token_precedence < next_precedence)
  ------------------
  |  Branch (992:17): [True: 24.9k, False: 145k]
  ------------------
  993|  24.9k|            {
  994|  24.9k|                rhs_expression =
  995|  24.9k|                        ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
  996|  24.9k|                if (!rhs_expression)
  ------------------
  |  Branch (996:21): [True: 9.96k, False: 14.9k]
  ------------------
  997|  9.96k|                {
  998|       |                    // TODO: Proper error
  999|  9.96k|                    return {};
 1000|  9.96k|                }
 1001|  24.9k|            }
 1002|       |
 1003|       |            // Merge LHS/RHS.
 1004|   160k|            lhs = phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1005|   160k|                                                                operator_token.GetTokenKind(),
 1006|   160k|                                                                rhs_expression.release_not_null());
 1007|   160k|        }
 1008|  1.15M|    }
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
 1011|   542k|    {
 1012|       |        // Parse the function name
 1013|   542k|        const Token& function_identifier_token = CurrentToken();
 1014|   542k|        if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1014:13): [True: 6.39k, False: 536k]
  |  Branch (1014:13): [True: 0, False: 542k]
  ------------------
 1015|   542k|            !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1015:13): [True: 0, False: 6.39k]
  ------------------
 1016|      0|        {
 1017|      0|            return {};
 1018|      0|        }
 1019|   542k|        ConsumeCurrent();
 1020|       |
 1021|   542k|        phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1022|   542k|                phi::make_scope<ASTFunctionCallExpression>();
 1023|   542k|        if (!function_call_expression)
  ------------------
  |  Branch (1023:13): [True: 0, False: 542k]
  ------------------
 1024|      0|        {
 1025|       |            // TODO: Proper error
 1026|      0|            return {};
 1027|      0|        }
 1028|       |
 1029|   542k|        if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1029:13): [True: 6.39k, False: 536k]
  ------------------
 1030|  6.39k|        {
 1031|  6.39k|            function_call_expression->m_IsBuiltIn       = true;
 1032|  6.39k|            function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
 1033|  6.39k|        }
 1034|   536k|        else
 1035|   536k|        {
 1036|   536k|            const phi::string_view function_name = function_identifier_token.GetText();
 1037|       |
 1038|   536k|            function_call_expression->m_IsBuiltIn    = false;
 1039|   536k|            function_call_expression->m_FunctionName = function_name;
 1040|   536k|        }
 1041|       |
 1042|       |        // TODO: These 2 checks should be combined
 1043|       |        // Now me MUST parse an LParen
 1044|   542k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1044:13): [True: 3.56k, False: 539k]
  ------------------
 1045|  3.56k|        {
 1046|       |            // TODO: Give proper error
 1047|  3.56k|            err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1048|  3.56k|                            std::string_view{function_call_expression->FunctionName()}));
 1049|  3.56k|            return {};
 1050|  3.56k|        }
 1051|       |
 1052|   539k|        const Token& left_paren_token = CurrentToken();
 1053|   539k|        ConsumeCurrent();
 1054|   539k|        if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1054:13): [True: 221k, False: 317k]
  ------------------
 1055|   221k|        {
 1056|       |            // TODO: Give error
 1057|   221k|            err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1058|   221k|                            std::string_view{function_call_expression->FunctionName()}));
 1059|   221k|            return {};
 1060|   221k|        }
 1061|       |
 1062|       |        // Now parse all the arguments (which are expressions) separated by commas or nothing
 1063|   317k|        function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1064|       |
 1065|       |        // Finally we MUST parse an RParen
 1066|   317k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1066:13): [True: 23.1k, False: 294k]
  ------------------
 1067|  23.1k|        {
 1068|  23.1k|            err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1069|  23.1k|                            std::string_view{function_call_expression->FunctionName()}));
 1070|       |            // TODO: Give proper error
 1071|  23.1k|            return {};
 1072|  23.1k|        }
 1073|       |
 1074|   294k|        const Token& right_paren_token = CurrentToken();
 1075|   294k|        ConsumeCurrent();
 1076|   294k|        if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1076:13): [True: 33.4k, False: 260k]
  ------------------
 1077|  33.4k|        {
 1078|  33.4k|            err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1079|  33.4k|                            std::string_view{function_call_expression->FunctionName()}));
 1080|       |            // TODO: Give Error
 1081|  33.4k|            return {};
 1082|  33.4k|        }
 1083|       |
 1084|       |        // Return result
 1085|   260k|        return function_call_expression;
 1086|   294k|    }
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1090|   317k|    {
 1091|   317k|        std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1092|       |
 1093|   419k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1093:16): [True: 418k, False: 801]
  |  Branch (1093:16): [True: 185k, False: 233k]
  |  Branch (1093:45): [True: 185k, False: 232k]
  ------------------
 1094|   185k|        {
 1095|       |            // Parse the expression
 1096|   185k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1097|   185k|            if (!expression)
  ------------------
  |  Branch (1097:17): [True: 84.1k, False: 101k]
  ------------------
 1098|  84.1k|            {
 1099|  84.1k|                err("ERR: While parsing expression for function call arguments\n");
 1100|       |                // TODO: Give Prober error
 1101|  84.1k|                arguments.clear();
 1102|  84.1k|                return arguments;
 1103|  84.1k|            }
 1104|       |
 1105|       |            // Add argument to parameters
 1106|   101k|            arguments.emplace_back(expression.release_not_null());
 1107|       |
 1108|       |            // Next Token MUST be a comma followed by another expression or RParen
 1109|   101k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1109:17): [True: 101k, False: 561]
  |  Branch (1109:17): [True: 271, False: 101k]
  |  Branch (1109:46): [True: 271, False: 101k]
  ------------------
 1110|    271|            {
 1111|    271|                ConsumeCurrent();
 1112|    271|            }
 1113|   101k|        }
 1114|       |
 1115|   233k|        return arguments;
 1116|   317k|    }
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1119|   154k|    {
 1120|   154k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1120:13): [True: 0, False: 154k]
  ------------------
 1121|      0|        {
 1122|       |            // TODO: Proper error
 1123|      0|            return {};
 1124|      0|        }
 1125|       |
 1126|   154k|        const Token& token = CurrentToken();
 1127|   154k|        if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1127:13): [True: 0, False: 154k]
  ------------------
 1128|      0|        {
 1129|       |            // TODO error
 1130|      0|            return {};
 1131|      0|        }
 1132|       |
 1133|   154k|        auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1134|   154k|        variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1135|       |
 1136|   154k|        ConsumeCurrent();
 1137|       |
 1138|   154k|        return phi::move(variable_expression);
 1139|   154k|    }
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1154|   919k|    {
 1155|       |        // NOTE: Me MUST have consumed the LParen before this
 1156|       |
 1157|   919k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1158|   919k|        if (!expression)
  ------------------
  |  Branch (1158:13): [True: 827k, False: 91.8k]
  ------------------
 1159|   827k|        {
 1160|       |            // TODO: Proper error
 1161|   827k|            return {};
 1162|   827k|        }
 1163|       |
 1164|  91.8k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1164:13): [True: 32.6k, False: 59.2k]
  ------------------
 1165|  32.6k|        {
 1166|       |            // TODO: Proper error expected closing paren
 1167|  32.6k|            return {};
 1168|  32.6k|        }
 1169|       |
 1170|  59.2k|        return phi::move(expression);
 1171|  91.8k|    }
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1174|  52.1k|    {
 1175|  52.1k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1175:13): [True: 0, False: 52.1k]
  ------------------
 1176|      0|        {
 1177|       |            // TODO: Proper error
 1178|      0|            return {};
 1179|      0|        }
 1180|       |
 1181|       |        // BooleanLiteral is either KW_True or KW_False
 1182|  52.1k|        const Token& token = CurrentToken();
 1183|  52.1k|        if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1183:13): [True: 21.4k, False: 30.7k]
  ------------------
 1184|  21.4k|        {
 1185|  21.4k|            ConsumeCurrent();
 1186|  21.4k|            return phi::make_scope<ASTBooleanLiteral>(true);
 1187|  21.4k|        }
 1188|       |
 1189|  30.7k|        if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1189:13): [True: 30.7k, False: 0]
  ------------------
 1190|  30.7k|        {
 1191|  30.7k|            ConsumeCurrent();
 1192|  30.7k|            return phi::make_scope<ASTBooleanLiteral>(false);
 1193|  30.7k|        }
 1194|       |
 1195|       |        // TODO: Proper error
 1196|      0|        return {};
 1197|  30.7k|    }
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1200|  32.7k|    {
 1201|  32.7k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1201:13): [True: 0, False: 32.7k]
  ------------------
 1202|      0|        {
 1203|       |            // TODO: Proper error
 1204|      0|            return {};
 1205|      0|        }
 1206|       |
 1207|  32.7k|        const Token& token = CurrentToken();
 1208|  32.7k|        if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1208:13): [True: 32.7k, False: 0]
  ------------------
 1209|  32.7k|        {
 1210|  32.7k|            ConsumeCurrent();
 1211|  32.7k|            return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1212|  32.7k|        }
 1213|       |
 1214|       |        // TODO: Proper error
 1215|      0|        return {};
 1216|  32.7k|    }
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1219|  16.4k|    {
 1220|  16.4k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1220:13): [True: 0, False: 16.4k]
  ------------------
 1221|      0|        {
 1222|       |            // TODO: Proper error
 1223|      0|            return {};
 1224|      0|        }
 1225|       |
 1226|  16.4k|        const Token& token = CurrentToken();
 1227|  16.4k|        if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1227:13): [True: 16.4k, False: 0]
  ------------------
 1228|  16.4k|        {
 1229|  16.4k|            ConsumeCurrent();
 1230|       |
 1231|  16.4k|            char*    ptr   = nullptr;
 1232|  16.4k|            phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1233|       |
 1234|  16.4k|            return phi::make_scope<ASTFloatLiteral>(value);
 1235|  16.4k|        }
 1236|       |
 1237|       |        // TODO: Proper error
 1238|      0|        return {};
 1239|  16.4k|    }
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   70|   413k|        {
   71|   413k|            int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   72|       |            //PHI_ASSERT(precedence != 0);
   73|       |
   74|   413k|            return precedence;
   75|   413k|        }

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  23.2k|    {
   31|       |#if defined(PHI_DEBUG)
   32|       |        PHI_ASSERT(!m_Finialized);
   33|       |#endif
   34|       |
   35|  23.2k|        m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |        m_Finialized = true;
   38|       |#endif
   39|  23.2k|    }
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   69|  33.3M|    {
   70|       |#if defined(PHI_DEBUG)
   71|       |        PHI_ASSERT(m_Finialized);
   72|       |#endif
   73|       |
   74|  33.3M|        return m_Index < m_Tokens.size();
   75|  33.3M|    }
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   78|  23.0M|    {
   79|       |#if defined(PHI_DEBUG)
   80|       |        PHI_ASSERT(m_Finialized);
   81|       |#endif
   82|       |
   83|  23.0M|        return m_Index >= m_Tokens.size();
   84|  23.0M|    }
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   87|  16.5M|    {
   88|  16.5M|        PHI_ASSERT(!reached_end());
   89|       |#if defined(PHI_DEBUG)
   90|       |        PHI_ASSERT(m_Finialized);
   91|       |#endif
   92|       |
   93|  16.5M|        return m_Tokens[m_Index.unsafe()];
   94|  16.5M|    }
_ZN10OpenAutoIt11TokenStream7consumeEv:
   97|  6.47M|    {
   98|  6.47M|        PHI_ASSERT(!reached_end());
   99|       |#if defined(PHI_DEBUG)
  100|       |        PHI_ASSERT(m_Finialized);
  101|       |#endif
  102|       |
  103|  6.47M|        m_Index += 1u;
  104|  6.47M|    }

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  4.45M|    {
  100|  4.45M|        if (output_enabled)
  ------------------
  |  Branch (100:13): [True: 0, False: 4.45M]
  ------------------
  101|      0|        {
  102|      0|            std::cerr << data;
  103|      0|        }
  104|  4.45M|    }
_ZN10OpenAutoIt14disable_outputEv:
  107|  23.2k|    {
  108|  23.2k|        output_enabled = false;
  109|  23.2k|    }

