_ZN3fmt2v96detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  407|   194k|    typename std::make_unsigned<Int>::type {
  408|   194k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  366|   388k|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (366:37): [Folded - Ignored]
  |  |  |  Branch (366:37): [True: 194k, False: 0]
  |  |  ------------------
  ------------------
  409|   194k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  410|   194k|}
_ZN3fmt2v96detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  334|  1.59M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v917basic_string_viewIcE4sizeEv:
  474|  1.01M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  334|   194k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE4sizeEv:
  928|   194k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail6bufferIcEC2EPcmm:
  900|   194k|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt2v96detail6bufferIcE3setEPcm:
  906|   194k|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  907|   194k|    ptr_ = buf_data;
  908|   194k|    capacity_ = buf_capacity;
  909|   194k|  }
_ZN3fmt2v96detail13ignore_unusedIJbEEEvDpRKT_:
  334|    192|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE8capacityEv:
  931|    310|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt2v96detail6bufferIcE4dataEv:
  934|   194k|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt2v917basic_string_viewIcE5beginEv:
  476|   388k|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt2v917basic_string_viewIcE3endEv:
  477|   388k|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKc:
  457|   147k|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt2v96detail10locale_refC2Ev:
 1728|   341k|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1295|   194k|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt2v99monostateC2Ev:
  317|   194k|  constexpr monostate() {}
_ZN3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1989|   194k|      : desc_(desc), values_(values) {}
_ZNK3fmt2v917basic_string_viewIcE4dataEv:
  471|   435k|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKcm:
  442|   435k|      : data_(s), size_(count) {}
_ZN3fmt2v96detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  407|  1.40M|    typename std::make_unsigned<Int>::type {
  408|  1.40M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  366|  2.81M|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (366:37): [Folded - Ignored]
  |  |  |  Branch (366:37): [True: 1.40M, False: 0]
  |  |  ------------------
  ------------------
  409|  1.40M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  410|  1.40M|}
_ZN3fmt2v96detail6bufferIcE11try_reserveEm:
  953|   582k|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  954|   582k|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (954:9): [True: 192, False: 582k]
  ------------------
  955|   582k|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 2027|   194k|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 2028|   194k|    format_arg arg;
 2029|   194k|    if (!is_packed()) {
  ------------------
  |  Branch (2029:9): [True: 0, False: 194k]
  ------------------
 2030|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (2030:11): [True: 0, False: 0]
  ------------------
 2031|      0|      return arg;
 2032|      0|    }
 2033|   194k|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (2033:9): [True: 0, False: 194k]
  ------------------
 2034|   194k|    arg.type_ = type(id);
 2035|   194k|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (2035:9): [True: 0, False: 194k]
  ------------------
 2036|   194k|    arg.value_ = values_[id];
 2037|   194k|    return arg;
 2038|   194k|  }
_ZN3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1616|   194k|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1974|   194k|  constexpr auto is_packed() const -> bool {
 1975|   194k|    return (desc_ & detail::is_unpacked_bit) == 0;
 1976|   194k|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1981|   194k|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1982|   194k|    int shift = index * detail::packed_arg_bits;
 1983|   194k|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1984|   194k|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1985|   194k|  }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1618|   194k|  constexpr explicit operator bool() const noexcept {
 1619|   194k|    return type_ != detail::type::none_type;
 1620|   194k|  }
_ZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  856|   582k|    -> Container& {
  857|   582k|  using base = std::back_insert_iterator<Container>;
  858|   582k|  struct accessor : base {
  859|   582k|    accessor(base b) : base(b) {}
  860|   582k|    using base::container;
  861|   582k|  };
  862|   582k|  return *accessor(it).container;
  863|   582k|}
_ZZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  859|   582k|    accessor(base b) : base(b) {}
_ZNK3fmt2v96detail6fill_tIcE4sizeEv:
 2105|   194k|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt2v96detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1681|   582k|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1682|   582k|  get_container(out).append(begin, end);
 1683|   582k|  return out;
 1684|   582k|}
_ZN3fmt2v912format_specsIcEC2Ev:
 2156|   194k|        localized(false) {}
_ZN3fmt2v926basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  695|   194k|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1825|   194k|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE3outEv:
 1840|   582k|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2584|   194k|    basic_string_view<Char> format_str, Handler&& handler) {
 2585|       |  // Workaround a name-lookup bug in MSVC's modules implementation.
 2586|   194k|  using detail::find;
 2587|       |
 2588|   194k|  auto begin = format_str.data();
 2589|   194k|  auto end = begin + format_str.size();
 2590|   194k|  if (end - begin < 32) {
  ------------------
  |  Branch (2590:7): [True: 85.3k, False: 108k]
  ------------------
 2591|       |    // Use a simple loop instead of memchr for small strings.
 2592|  85.3k|    const Char* p = begin;
 2593|  2.39M|    while (p != end) {
  ------------------
  |  Branch (2593:12): [True: 2.30M, False: 85.3k]
  ------------------
 2594|  2.30M|      auto c = *p++;
 2595|  2.30M|      if (c == '{') {
  ------------------
  |  Branch (2595:11): [True: 85.3k, False: 2.21M]
  ------------------
 2596|  85.3k|        handler.on_text(begin, p - 1);
 2597|  85.3k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2598|  2.21M|      } else if (c == '}') {
  ------------------
  |  Branch (2598:18): [True: 0, False: 2.21M]
  ------------------
 2599|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2599:13): [True: 0, False: 0]
  |  Branch (2599:25): [True: 0, False: 0]
  ------------------
 2600|      0|          return handler.on_error("unmatched '}' in format string");
 2601|      0|        handler.on_text(begin, p);
 2602|      0|        begin = ++p;
 2603|      0|      }
 2604|  2.30M|    }
 2605|  85.3k|    handler.on_text(begin, end);
 2606|  85.3k|    return;
 2607|  85.3k|  }
 2608|   108k|  struct writer {
 2609|   108k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2610|   108k|      if (from == to) return;
 2611|   108k|      for (;;) {
 2612|   108k|        const Char* p = nullptr;
 2613|   108k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2614|   108k|          return handler_.on_text(from, to);
 2615|   108k|        ++p;
 2616|   108k|        if (p == to || *p != '}')
 2617|   108k|          return handler_.on_error("unmatched '}' in format string");
 2618|   108k|        handler_.on_text(from, p);
 2619|   108k|        from = p + 1;
 2620|   108k|      }
 2621|   108k|    }
 2622|   108k|    Handler& handler_;
 2623|   108k|  } write = {handler};
 2624|   217k|  while (begin != end) {
  ------------------
  |  Branch (2624:10): [True: 217k, False: 0]
  ------------------
 2625|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2626|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2627|   217k|    const Char* p = begin;
 2628|   217k|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2628:9): [True: 217k, False: 0]
  |  Branch (2628:26): [True: 108k, False: 108k]
  ------------------
 2629|   108k|      return write(begin, end);
 2630|   108k|    write(begin, p);
 2631|   108k|    begin = parse_replacement_field(p, end, handler);
 2632|   108k|  }
 2633|   108k|}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1843|   582k|  void advance_to(iterator it) {
 1844|   582k|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1844:9): [Folded - Ignored]
  ------------------
 1845|   582k|  }
_ZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2547|   194k|                                           Handler&& handler) -> const Char* {
 2548|   194k|  struct id_adapter {
 2549|   194k|    Handler& handler;
 2550|   194k|    int arg_id;
 2551|       |
 2552|   194k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2553|   194k|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2554|   194k|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2555|   194k|      arg_id = handler.on_arg_id(id);
 2556|   194k|    }
 2557|   194k|  };
 2558|       |
 2559|   194k|  ++begin;
 2560|   194k|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2560:7): [True: 0, False: 194k]
  ------------------
 2561|   194k|  if (*begin == '}') {
  ------------------
  |  Branch (2561:7): [True: 0, False: 194k]
  ------------------
 2562|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2563|   194k|  } else if (*begin == '{') {
  ------------------
  |  Branch (2563:14): [True: 0, False: 194k]
  ------------------
 2564|      0|    handler.on_text(begin, begin + 1);
 2565|   194k|  } else {
 2566|   194k|    auto adapter = id_adapter{handler, 0};
 2567|   194k|    begin = parse_arg_id(begin, end, adapter);
 2568|   194k|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2568:14): [True: 194k, False: 0]
  ------------------
 2569|   194k|    if (c == '}') {
  ------------------
  |  Branch (2569:9): [True: 0, False: 194k]
  ------------------
 2570|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2571|   194k|    } else if (c == ':') {
  ------------------
  |  Branch (2571:16): [True: 194k, False: 0]
  ------------------
 2572|   194k|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2573|   194k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2573:11): [True: 0, False: 194k]
  |  Branch (2573:27): [True: 0, False: 194k]
  ------------------
 2574|      0|        return handler.on_error("unknown format specifier"), end;
 2575|   194k|    } else {
 2576|      0|      return handler.on_error("missing '}' in format string"), end;
 2577|      0|    }
 2578|   194k|  }
 2579|   194k|  return begin + 1;
 2580|   194k|}
_ZNK3fmt2v920basic_format_contextINS0_8appenderEcE3argEi:
 1827|   194k|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE6localeEv:
 1847|   194k|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt2v926basic_format_parse_contextIcE11next_arg_idEv:
  719|   194k|  FMT_CONSTEXPR auto next_arg_id() -> int {
  720|   194k|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (720:9): [True: 0, False: 194k]
  ------------------
  721|      0|      detail::throw_format_error(
  722|      0|          "cannot switch from manual to automatic argument indexing");
  723|      0|      return 0;
  724|      0|    }
  725|   194k|    int id = next_arg_id_++;
  726|   194k|    do_check_arg_id(id);
  727|   194k|    return id;
  728|   194k|  }
_ZN3fmt2v926basic_format_parse_contextIcE15do_check_arg_idEi:
  790|   194k|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
  791|       |  // Argument id is only checked at compile-time during parsing because
  792|       |  // formatting has its own validation.
  793|   194k|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (793:7): [Folded - Ignored]
  ------------------
  794|   194k|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (794:8): [Folded - Ignored]
  |  Branch (794:28): [Folded - Ignored]
  ------------------
  795|      0|    using context = detail::compile_parse_context<Char>;
  796|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (796:9): [True: 0, False: 0]
  ------------------
  797|      0|      detail::throw_format_error("argument not found");
  798|      0|  }
  799|   194k|}
_ZN3fmt2v96detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2312|   194k|                                           Handler&& handler) -> const Char* {
 2313|   194k|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  366|   194k|      ::fmt::detail::ignore_unused((condition), (message))
  ------------------
 2314|   194k|  Char c = *begin;
 2315|   194k|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2315:7): [True: 194k, False: 0]
  |  Branch (2315:19): [True: 0, False: 194k]
  ------------------
 2316|   194k|  handler.on_auto();
 2317|   194k|  return begin;
 2318|   194k|}
_ZZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2552|   194k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1622|   388k|  auto type() const -> detail::type { return type_; }
_ZN3fmt2v96detail7arg_refIcEC2Ev:
 2165|   388k|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt2v96detail7arg_refIcE5valueC2Ei:
 2180|   388k|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2382|   194k|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2383|   194k|  auto c = '\0';
 2384|   194k|  if (end - begin > 1) {
  ------------------
  |  Branch (2384:7): [True: 194k, False: 0]
  ------------------
 2385|   194k|    auto next = to_ascii(begin[1]);
 2386|   194k|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2386:9): [True: 194k, False: 0]
  ------------------
 2387|   194k|  } else {
 2388|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2388:9): [True: 0, False: 0]
  ------------------
 2389|      0|    c = to_ascii(*begin);
 2390|      0|  }
 2391|       |
 2392|   194k|  struct {
 2393|   194k|    state current_state = state::start;
 2394|   194k|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2395|   194k|      if (current_state >= s || !valid)
 2396|   194k|        throw_format_error("invalid format specifier");
 2397|   194k|      current_state = s;
 2398|   194k|    }
 2399|   194k|  } enter_state;
 2400|       |
 2401|   194k|  using pres = presentation_type;
 2402|   194k|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2403|   194k|  struct {
 2404|   194k|    const Char*& begin;
 2405|   194k|    dynamic_format_specs<Char>& specs;
 2406|   194k|    type arg_type;
 2407|       |
 2408|   194k|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2409|   194k|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
 2410|   194k|      specs.type = type;
 2411|   194k|      return begin + 1;
 2412|   194k|    }
 2413|   194k|  } parse_presentation_type{begin, specs, arg_type};
 2414|       |
 2415|   194k|  for (;;) {
 2416|   194k|    switch (c) {
 2417|      0|    case '<':
  ------------------
  |  Branch (2417:5): [True: 0, False: 194k]
  ------------------
 2418|      0|    case '>':
  ------------------
  |  Branch (2418:5): [True: 0, False: 194k]
  ------------------
 2419|      0|    case '^':
  ------------------
  |  Branch (2419:5): [True: 0, False: 194k]
  ------------------
 2420|      0|      enter_state(state::align);
 2421|      0|      specs.align = parse_align(c);
 2422|      0|      ++begin;
 2423|      0|      break;
 2424|      0|    case '+':
  ------------------
  |  Branch (2424:5): [True: 0, False: 194k]
  ------------------
 2425|      0|    case '-':
  ------------------
  |  Branch (2425:5): [True: 0, False: 194k]
  ------------------
 2426|      0|    case ' ':
  ------------------
  |  Branch (2426:5): [True: 0, False: 194k]
  ------------------
 2427|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2428|      0|      switch (c) {
  ------------------
  |  Branch (2428:15): [True: 0, False: 0]
  ------------------
 2429|      0|      case '+':
  ------------------
  |  Branch (2429:7): [True: 0, False: 0]
  ------------------
 2430|      0|        specs.sign = sign::plus;
 2431|      0|        break;
 2432|      0|      case '-':
  ------------------
  |  Branch (2432:7): [True: 0, False: 0]
  ------------------
 2433|      0|        specs.sign = sign::minus;
 2434|      0|        break;
 2435|      0|      case ' ':
  ------------------
  |  Branch (2435:7): [True: 0, False: 0]
  ------------------
 2436|      0|        specs.sign = sign::space;
 2437|      0|        break;
 2438|      0|      }
 2439|      0|      ++begin;
 2440|      0|      break;
 2441|      0|    case '#':
  ------------------
  |  Branch (2441:5): [True: 0, False: 194k]
  ------------------
 2442|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2443|      0|      specs.alt = true;
 2444|      0|      ++begin;
 2445|      0|      break;
 2446|      0|    case '0':
  ------------------
  |  Branch (2446:5): [True: 0, False: 194k]
  ------------------
 2447|      0|      enter_state(state::zero);
 2448|      0|      if (!is_arithmetic_type(arg_type))
  ------------------
  |  Branch (2448:11): [True: 0, False: 0]
  ------------------
 2449|      0|        throw_format_error("format specifier requires numeric argument");
 2450|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2450:11): [True: 0, False: 0]
  ------------------
 2451|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2452|      0|        specs.align = align::numeric;
 2453|      0|        specs.fill[0] = Char('0');
 2454|      0|      }
 2455|      0|      ++begin;
 2456|      0|      break;
 2457|      0|    case '1':
  ------------------
  |  Branch (2457:5): [True: 0, False: 194k]
  ------------------
 2458|      0|    case '2':
  ------------------
  |  Branch (2458:5): [True: 0, False: 194k]
  ------------------
 2459|      0|    case '3':
  ------------------
  |  Branch (2459:5): [True: 0, False: 194k]
  ------------------
 2460|      0|    case '4':
  ------------------
  |  Branch (2460:5): [True: 0, False: 194k]
  ------------------
 2461|      0|    case '5':
  ------------------
  |  Branch (2461:5): [True: 0, False: 194k]
  ------------------
 2462|      0|    case '6':
  ------------------
  |  Branch (2462:5): [True: 0, False: 194k]
  ------------------
 2463|      0|    case '7':
  ------------------
  |  Branch (2463:5): [True: 0, False: 194k]
  ------------------
 2464|      0|    case '8':
  ------------------
  |  Branch (2464:5): [True: 0, False: 194k]
  ------------------
 2465|      0|    case '9':
  ------------------
  |  Branch (2465:5): [True: 0, False: 194k]
  ------------------
 2466|      0|    case '{':
  ------------------
  |  Branch (2466:5): [True: 0, False: 194k]
  ------------------
 2467|      0|      enter_state(state::width);
 2468|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2469|      0|      break;
 2470|      0|    case '.':
  ------------------
  |  Branch (2470:5): [True: 0, False: 194k]
  ------------------
 2471|      0|      enter_state(state::precision,
 2472|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2473|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2474|      0|                              ctx);
 2475|      0|      break;
 2476|      0|    case 'L':
  ------------------
  |  Branch (2476:5): [True: 0, False: 194k]
  ------------------
 2477|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2478|      0|      specs.localized = true;
 2479|      0|      ++begin;
 2480|      0|      break;
 2481|      0|    case 'd':
  ------------------
  |  Branch (2481:5): [True: 0, False: 194k]
  ------------------
 2482|      0|      return parse_presentation_type(pres::dec, integral_set);
 2483|      0|    case 'o':
  ------------------
  |  Branch (2483:5): [True: 0, False: 194k]
  ------------------
 2484|      0|      return parse_presentation_type(pres::oct, integral_set);
 2485|      0|    case 'x':
  ------------------
  |  Branch (2485:5): [True: 0, False: 194k]
  ------------------
 2486|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2487|      0|    case 'X':
  ------------------
  |  Branch (2487:5): [True: 0, False: 194k]
  ------------------
 2488|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2489|      0|    case 'b':
  ------------------
  |  Branch (2489:5): [True: 0, False: 194k]
  ------------------
 2490|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2491|      0|    case 'B':
  ------------------
  |  Branch (2491:5): [True: 0, False: 194k]
  ------------------
 2492|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2493|      0|    case 'a':
  ------------------
  |  Branch (2493:5): [True: 0, False: 194k]
  ------------------
 2494|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2495|      0|    case 'A':
  ------------------
  |  Branch (2495:5): [True: 0, False: 194k]
  ------------------
 2496|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2497|      0|    case 'e':
  ------------------
  |  Branch (2497:5): [True: 0, False: 194k]
  ------------------
 2498|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2499|      0|    case 'E':
  ------------------
  |  Branch (2499:5): [True: 0, False: 194k]
  ------------------
 2500|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2501|      0|    case 'f':
  ------------------
  |  Branch (2501:5): [True: 0, False: 194k]
  ------------------
 2502|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2503|      0|    case 'F':
  ------------------
  |  Branch (2503:5): [True: 0, False: 194k]
  ------------------
 2504|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2505|      0|    case 'g':
  ------------------
  |  Branch (2505:5): [True: 0, False: 194k]
  ------------------
 2506|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2507|      0|    case 'G':
  ------------------
  |  Branch (2507:5): [True: 0, False: 194k]
  ------------------
 2508|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2509|      0|    case 'c':
  ------------------
  |  Branch (2509:5): [True: 0, False: 194k]
  ------------------
 2510|      0|      return parse_presentation_type(pres::chr, integral_set);
 2511|   194k|    case 's':
  ------------------
  |  Branch (2511:5): [True: 194k, False: 0]
  ------------------
 2512|   194k|      return parse_presentation_type(pres::string,
 2513|   194k|                                     bool_set | string_set | cstring_set);
 2514|      0|    case 'p':
  ------------------
  |  Branch (2514:5): [True: 0, False: 194k]
  ------------------
 2515|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2516|      0|    case '?':
  ------------------
  |  Branch (2516:5): [True: 0, False: 194k]
  ------------------
 2517|      0|      return parse_presentation_type(pres::debug,
 2518|      0|                                     char_set | string_set | cstring_set);
 2519|      0|    case '}':
  ------------------
  |  Branch (2519:5): [True: 0, False: 194k]
  ------------------
 2520|      0|      return begin;
 2521|      0|    default: {
  ------------------
  |  Branch (2521:5): [True: 0, False: 194k]
  ------------------
 2522|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2522:11): [True: 0, False: 0]
  ------------------
 2523|       |      // Parse fill and alignment.
 2524|      0|      auto fill_end = begin + code_point_length(begin);
 2525|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2525:11): [True: 0, False: 0]
  ------------------
 2526|      0|        throw_format_error("invalid format specifier");
 2527|      0|        return begin;
 2528|      0|      }
 2529|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2529:11): [True: 0, False: 0]
  ------------------
 2530|      0|        throw_format_error("invalid fill character '{'");
 2531|      0|        return begin;
 2532|      0|      }
 2533|      0|      auto align = parse_align(to_ascii(*fill_end));
 2534|      0|      enter_state(state::align, align != align::none);
 2535|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2536|      0|      specs.align = align;
 2537|      0|      begin = fill_end + 1;
 2538|      0|    }
 2539|   194k|    }
 2540|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2540:9): [True: 0, False: 0]
  ------------------
 2541|      0|    c = to_ascii(*begin);
 2542|      0|  }
 2543|   194k|}
_ZN3fmt2v96detail8to_asciiIcLi0EEEcT_:
 2199|   388k|constexpr auto to_ascii(Char c) -> char {
 2200|   388k|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2200:10): [True: 388k, False: 0]
  ------------------
 2201|   388k|}
_ZN3fmt2v96detail11parse_alignEc:
 2265|   194k|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2266|   194k|  switch (c) {
  ------------------
  |  Branch (2266:11): [True: 194k, False: 0]
  ------------------
 2267|      0|  case '<':
  ------------------
  |  Branch (2267:3): [True: 0, False: 194k]
  ------------------
 2268|      0|    return align::left;
 2269|      0|  case '>':
  ------------------
  |  Branch (2269:3): [True: 0, False: 194k]
  ------------------
 2270|      0|    return align::right;
 2271|      0|  case '^':
  ------------------
  |  Branch (2271:3): [True: 0, False: 194k]
  ------------------
 2272|      0|    return align::center;
 2273|   194k|  }
 2274|   194k|  return align::none;
 2275|   194k|}
_ZN3fmt2v96detail2inENS1_4typeEi:
  641|   194k|constexpr auto in(type t, int set) -> bool {
  642|   194k|  return ((set >> static_cast<int>(t)) & 1) != 0;
  643|   194k|}
_ZZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2408|   194k|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2409|   194k|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
  ------------------
  |  Branch (2409:11): [True: 0, False: 194k]
  ------------------
 2410|   194k|      specs.type = type;
 2411|   194k|      return begin + 1;
 2412|   194k|    }
_ZN3fmt2v916visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1639|   194k|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1640|   194k|  switch (arg.type_) {
  ------------------
  |  Branch (1640:11): [True: 0, False: 194k]
  ------------------
 1641|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1641:3): [True: 0, False: 194k]
  ------------------
 1642|      0|    break;
 1643|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1643:3): [True: 0, False: 194k]
  ------------------
 1644|      0|    return vis(arg.value_.int_value);
 1645|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1645:3): [True: 0, False: 194k]
  ------------------
 1646|      0|    return vis(arg.value_.uint_value);
 1647|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1647:3): [True: 0, False: 194k]
  ------------------
 1648|      0|    return vis(arg.value_.long_long_value);
 1649|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1649:3): [True: 0, False: 194k]
  ------------------
 1650|      0|    return vis(arg.value_.ulong_long_value);
 1651|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1651:3): [True: 0, False: 194k]
  ------------------
 1652|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1653|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1653:3): [True: 0, False: 194k]
  ------------------
 1654|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1655|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1655:3): [True: 0, False: 194k]
  ------------------
 1656|      0|    return vis(arg.value_.bool_value);
 1657|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1657:3): [True: 0, False: 194k]
  ------------------
 1658|      0|    return vis(arg.value_.char_value);
 1659|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1659:3): [True: 0, False: 194k]
  ------------------
 1660|      0|    return vis(arg.value_.float_value);
 1661|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1661:3): [True: 0, False: 194k]
  ------------------
 1662|      0|    return vis(arg.value_.double_value);
 1663|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1663:3): [True: 0, False: 194k]
  ------------------
 1664|      0|    return vis(arg.value_.long_double_value);
 1665|   147k|  case detail::type::cstring_type:
  ------------------
  |  Branch (1665:3): [True: 147k, False: 46.7k]
  ------------------
 1666|   147k|    return vis(arg.value_.string.data);
 1667|  46.7k|  case detail::type::string_type:
  ------------------
  |  Branch (1667:3): [True: 46.7k, False: 147k]
  ------------------
 1668|  46.7k|    using sv = basic_string_view<typename Context::char_type>;
 1669|  46.7k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1670|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1670:3): [True: 0, False: 194k]
  ------------------
 1671|      0|    return vis(arg.value_.pointer);
 1672|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1672:3): [True: 0, False: 194k]
  ------------------
 1673|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1674|   194k|  }
 1675|      0|  return vis(monostate());
 1676|   194k|}
_ZN3fmt2v96detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2234|   434k|                              const char*& out) -> bool {
 2235|   434k|  out = static_cast<const char*>(
 2236|   434k|      std::memchr(first, value, to_unsigned(last - first)));
 2237|   434k|  return out != nullptr;
 2238|   434k|}
_ZZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2609|   217k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2610|   217k|      if (from == to) return;
  ------------------
  |  Branch (2610:11): [True: 0, False: 217k]
  ------------------
 2611|   217k|      for (;;) {
 2612|   217k|        const Char* p = nullptr;
 2613|   217k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2613:13): [True: 217k, False: 0]
  ------------------
 2614|   217k|          return handler_.on_text(from, to);
 2615|      0|        ++p;
 2616|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2616:13): [True: 0, False: 0]
  |  Branch (2616:24): [True: 0, False: 0]
  ------------------
 2617|      0|          return handler_.on_error("unmatched '}' in format string");
 2618|      0|        handler_.on_text(from, p);
 2619|      0|        from = p + 1;
 2620|      0|      }
 2621|   217k|    }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1311|  46.7k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1312|  46.7k|    string.data = val.data();
 1313|  46.7k|    string.size = val.size();
 1314|  46.7k|  }
_ZN3fmt2v96detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1439|   147k|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1440|   147k|    return val;
 1441|   147k|  }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1307|   147k|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1308|   147k|    string.data = val;
 1309|   147k|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1309:9): [Folded - Ignored]
  ------------------
 1310|   147k|  }
_ZNK3fmt2v96detail6bufferIcE4dataEv:
  937|   194k|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt2v97vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1447|   194k|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1448|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1449|       |  // can be better optimized in fmt::format anyway.
 1450|   194k|  auto buffer = memory_buffer();
 1451|   194k|  detail::vformat_to(buffer, fmt, args);
 1452|   194k|  return to_string(buffer);
 1453|   194k|}

_ZN3fmt2v96detail6bufferIcE6appendIcEEvPKT_S7_:
  842|   582k|void buffer<T>::append(const U* begin, const U* end) {
  843|  1.16M|  while (begin != end) {
  ------------------
  |  Branch (843:10): [True: 582k, False: 582k]
  ------------------
  844|   582k|    auto count = to_unsigned(end - begin);
  845|   582k|    try_reserve(size_ + count);
  846|   582k|    auto free_cap = capacity_ - size_;
  847|   582k|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (847:9): [True: 0, False: 582k]
  ------------------
  848|   582k|    std::uninitialized_copy_n(begin, count, make_checked(ptr_ + size_, count));
  849|   582k|    size_ += count;
  850|   582k|    begin += count;
  851|   582k|  }
  852|   582k|}
_ZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4489|   194k|                typename vformat_args<Char>::type args, locale_ref loc) {
 4490|       |  // workaround for msvc bug regarding name-lookup in module
 4491|       |  // link names into function scope
 4492|   194k|  using detail::arg_formatter;
 4493|   194k|  using detail::buffer_appender;
 4494|   194k|  using detail::custom_formatter;
 4495|   194k|  using detail::default_arg_formatter;
 4496|   194k|  using detail::get_arg;
 4497|   194k|  using detail::locale_ref;
 4498|   194k|  using detail::parse_format_specs;
 4499|   194k|  using detail::to_unsigned;
 4500|   194k|  using detail::type;
 4501|   194k|  using detail::write;
 4502|   194k|  auto out = buffer_appender<Char>(buf);
 4503|   194k|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4503:7): [True: 0, False: 194k]
  |  Branch (4503:26): [True: 0, False: 0]
  ------------------
 4504|      0|    auto arg = args.get(0);
 4505|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4505:9): [True: 0, False: 0]
  ------------------
 4506|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4507|      0|    return;
 4508|      0|  }
 4509|       |
 4510|   194k|  struct format_handler : error_handler {
 4511|   194k|    basic_format_parse_context<Char> parse_context;
 4512|   194k|    buffer_context<Char> context;
 4513|       |
 4514|   194k|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4515|   194k|                   basic_format_args<buffer_context<Char>> p_args,
 4516|   194k|                   locale_ref p_loc)
 4517|   194k|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4518|       |
 4519|   194k|    void on_text(const Char* begin, const Char* end) {
 4520|   194k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4521|   194k|      context.advance_to(write<Char>(context.out(), text));
 4522|   194k|    }
 4523|       |
 4524|   194k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4525|   194k|      return parse_context.next_arg_id();
 4526|   194k|    }
 4527|   194k|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4528|   194k|      return parse_context.check_arg_id(id), id;
 4529|   194k|    }
 4530|   194k|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4531|   194k|      int arg_id = context.arg_id(id);
 4532|   194k|      if (arg_id < 0) on_error("argument not found");
 4533|   194k|      return arg_id;
 4534|   194k|    }
 4535|       |
 4536|   194k|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4537|   194k|      auto arg = get_arg(context, id);
 4538|   194k|      context.advance_to(visit_format_arg(
 4539|   194k|          default_arg_formatter<Char>{context.out(), context.args(),
 4540|   194k|                                      context.locale()},
 4541|   194k|          arg));
 4542|   194k|    }
 4543|       |
 4544|   194k|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4545|   194k|        -> const Char* {
 4546|   194k|      auto arg = get_arg(context, id);
 4547|   194k|      if (arg.type() == type::custom_type) {
 4548|   194k|        parse_context.advance_to(begin);
 4549|   194k|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4550|   194k|        return parse_context.begin();
 4551|   194k|      }
 4552|   194k|      auto specs = detail::dynamic_format_specs<Char>();
 4553|   194k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4554|   194k|      detail::handle_dynamic_spec<detail::width_checker>(
 4555|   194k|          specs.width, specs.width_ref, context);
 4556|   194k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4557|   194k|          specs.precision, specs.precision_ref, context);
 4558|   194k|      if (begin == end || *begin != '}')
 4559|   194k|        on_error("missing '}' in format string");
 4560|   194k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4561|   194k|      context.advance_to(visit_format_arg(f, arg));
 4562|   194k|      return begin;
 4563|   194k|    }
 4564|   194k|  };
 4565|   194k|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4566|   194k|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  911|   194k|      : alloc_(alloc) {
  912|   194k|    this->set(store_, SIZE);
  913|   194k|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (913:9): [Folded - Ignored]
  ------------------
  914|   194k|  }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  982|    192|    size_t size) {
  983|    192|  detail::abort_fuzzing_if(size > 5000);
  984|    192|  const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  985|    192|  size_t old_capacity = this->capacity();
  986|    192|  size_t new_capacity = old_capacity + old_capacity / 2;
  987|    192|  if (size > new_capacity)
  ------------------
  |  Branch (987:7): [True: 65, False: 127]
  ------------------
  988|     65|    new_capacity = size;
  989|    127|  else if (new_capacity > max_size)
  ------------------
  |  Branch (989:12): [True: 0, False: 127]
  ------------------
  990|      0|    new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (990:20): [True: 0, False: 0]
  ------------------
  991|    192|  T* old_data = this->data();
  992|    192|  T* new_data =
  993|    192|      std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  994|       |  // The following code doesn't throw, so the raw pointer above doesn't leak.
  995|    192|  std::uninitialized_copy(old_data, old_data + this->size(),
  996|    192|                          detail::make_checked(new_data, new_capacity));
  997|    192|  this->set(new_data, new_capacity);
  998|       |  // deallocate must not throw according to the standard, but even if it does,
  999|       |  // the buffer already uses the new storage and will deallocate it in
 1000|       |  // destructor.
 1001|    192|  if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (1001:7): [True: 74, False: 118]
  ------------------
 1002|    192|}
_ZN3fmt2v96detail16abort_fuzzing_ifEb:
  259|    192|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  260|    192|  ignore_unused(condition);
  261|       |#ifdef FMT_FUZZ
  262|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  263|       |#endif
  264|    192|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  915|   194k|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  897|   194k|  FMT_CONSTEXPR20 void deallocate() {
  898|   194k|    T* data = this->data();
  899|   194k|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (899:9): [True: 118, False: 193k]
  ------------------
  900|   194k|  }
_ZN3fmt2v96detail12make_checkedIcEEPT_S4_m:
  541|   582k|template <typename T> constexpr auto make_checked(T* p, size_t) -> T* {
  542|   582k|  return p;
  543|   582k|}
_ZN3fmt2v96detail7reserveINS0_8appenderEEERT_S5_m:
  569|   582k|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  570|   582k|  return it;
  571|   582k|}
_ZN3fmt2v96detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  597|   582k|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  598|   582k|  return it;
  599|   582k|}
_ZN3fmt2v96detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  626|   388k|                                                  OutputIt out) -> OutputIt {
  627|   388k|  return copy_str<OutChar>(begin, end, out);
  628|   388k|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3819|   388k|    -> OutputIt {
 3820|   388k|  auto it = reserve(out, value.size());
 3821|   388k|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3822|   388k|  return base_iterator(out, it);
 3823|   388k|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4519|   388k|    void on_text(const Char* begin, const Char* end) {
 4520|   388k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4521|   388k|      context.advance_to(write<Char>(context.out(), text));
 4522|   388k|    }
_ZN3fmt2v96detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEENT_10format_argERS6_T0_:
 4002|   194k|    typename Context::format_arg {
 4003|   194k|  auto arg = ctx.arg(id);
 4004|   194k|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (4004:7): [True: 0, False: 194k]
  ------------------
 4005|   194k|  return arg;
 4006|   194k|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4524|   194k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4525|   194k|      return parse_context.next_arg_id();
 4526|   194k|    }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4545|   194k|        -> const Char* {
 4546|   194k|      auto arg = get_arg(context, id);
 4547|   194k|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4547:11): [True: 0, False: 194k]
  ------------------
 4548|      0|        parse_context.advance_to(begin);
 4549|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4550|      0|        return parse_context.begin();
 4551|      0|      }
 4552|   194k|      auto specs = detail::dynamic_format_specs<Char>();
 4553|   194k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4554|   194k|      detail::handle_dynamic_spec<detail::width_checker>(
 4555|   194k|          specs.width, specs.width_ref, context);
 4556|   194k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4557|   194k|          specs.precision, specs.precision_ref, context);
 4558|   194k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4558:11): [True: 0, False: 194k]
  |  Branch (4558:27): [True: 0, False: 194k]
  ------------------
 4559|      0|        on_error("missing '}' in format string");
 4560|   194k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4561|   194k|      context.advance_to(visit_format_arg(f, arg));
 4562|   194k|      return begin;
 4563|   194k|    }
_ZN3fmt2v96detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 4011|   194k|                                       Context& ctx) {
 4012|   194k|  switch (ref.kind) {
  ------------------
  |  Branch (4012:11): [True: 0, False: 194k]
  ------------------
 4013|   194k|  case arg_id_kind::none:
  ------------------
  |  Branch (4013:3): [True: 194k, False: 0]
  ------------------
 4014|   194k|    break;
 4015|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4015:3): [True: 0, False: 194k]
  ------------------
 4016|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4017|      0|                                              ctx.error_handler());
 4018|      0|    break;
 4019|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4019:3): [True: 0, False: 194k]
  ------------------
 4020|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4021|      0|                                              ctx.error_handler());
 4022|      0|    break;
 4023|   194k|  }
 4024|   194k|}
_ZN3fmt2v96detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 4011|   194k|                                       Context& ctx) {
 4012|   194k|  switch (ref.kind) {
  ------------------
  |  Branch (4012:11): [True: 0, False: 194k]
  ------------------
 4013|   194k|  case arg_id_kind::none:
  ------------------
  |  Branch (4013:3): [True: 194k, False: 0]
  ------------------
 4014|   194k|    break;
 4015|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4015:3): [True: 0, False: 194k]
  ------------------
 4016|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4017|      0|                                              ctx.error_handler());
 4018|      0|    break;
 4019|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4019:3): [True: 0, False: 194k]
  ------------------
 4020|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4021|      0|                                              ctx.error_handler());
 4022|      0|    break;
 4023|   194k|  }
 4024|   194k|}
_ZN3fmt2v96detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3931|   147k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3932|   147k|    return detail::write(out, value, specs, locale);
 3933|   147k|  }
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2359|   147k|    -> OutputIt {
 2360|   147k|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2360:10): [True: 147k, False: 0]
  ------------------
 2361|   147k|             ? write(out, basic_string_view<Char>(s), specs, {})
 2362|   147k|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2363|   147k|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2353|   194k|    -> OutputIt {
 2354|   194k|  return write(out, s, specs);
 2355|   194k|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2330|   194k|                         const format_specs<Char>& specs) -> OutputIt {
 2331|   194k|  auto data = s.data();
 2332|   194k|  auto size = s.size();
 2333|   194k|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2333:7): [True: 0, False: 194k]
  |  Branch (2333:31): [True: 0, False: 0]
  ------------------
 2334|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2335|   194k|  bool is_debug = specs.type == presentation_type::debug;
 2336|   194k|  size_t width = 0;
 2337|   194k|  if (specs.width != 0) {
  ------------------
  |  Branch (2337:7): [True: 0, False: 194k]
  ------------------
 2338|      0|    if (is_debug)
  ------------------
  |  Branch (2338:9): [True: 0, False: 0]
  ------------------
 2339|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2340|      0|    else
 2341|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2342|      0|  }
 2343|   194k|  return write_padded(out, specs, size, width,
 2344|   194k|                      [=](reserve_iterator<OutputIt> it) {
 2345|   194k|                        if (is_debug) return write_escaped_string(it, s);
 2346|   194k|                        return copy_str<Char>(data, data + size, it);
 2347|   194k|                      });
 2348|   194k|}
_ZN3fmt2v96detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1783|   194k|                                size_t size, size_t width, F&& f) -> OutputIt {
 1784|   194k|  static_assert(align == align::left || align == align::right, "");
 1785|   194k|  unsigned spec_width = to_unsigned(specs.width);
 1786|   194k|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1786:20): [True: 0, False: 194k]
  ------------------
 1787|       |  // Shifts are encoded as string literals because static constexpr is not
 1788|       |  // supported in constexpr functions.
 1789|   194k|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1789:18): [Folded - Ignored]
  ------------------
 1790|   194k|  size_t left_padding = padding >> shifts[specs.align];
 1791|   194k|  size_t right_padding = padding - left_padding;
 1792|   194k|  auto it = reserve(out, size + padding * specs.fill.size());
 1793|   194k|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1793:7): [True: 0, False: 194k]
  ------------------
 1794|   194k|  it = f(it);
 1795|   194k|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1795:7): [True: 0, False: 194k]
  ------------------
 1796|   194k|  return base_iterator(out, it);
 1797|   194k|}
_ZZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2344|   194k|                      [=](reserve_iterator<OutputIt> it) {
 2345|   194k|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2345:29): [True: 0, False: 194k]
  ------------------
 2346|   194k|                        return copy_str<Char>(data, data + size, it);
 2347|   194k|                      });
_ZN3fmt2v96detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3931|  46.7k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3932|  46.7k|    return detail::write(out, value, specs, locale);
 3933|  46.7k|  }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4517|   194k|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt2v99to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4479|   194k|    -> std::basic_string<Char> {
 4480|   194k|  auto size = buf.size();
 4481|   194k|  detail::assume(size < std::basic_string<Char>().max_size());
 4482|   194k|  return std::basic_string<Char>(buf.data(), size);
 4483|   194k|}
_ZN3fmt2v96detail6assumeEb:
  510|   194k|FMT_INLINE void assume(bool condition) {
  511|   194k|  (void)condition;
  512|   194k|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  513|   194k|  __builtin_assume(condition);
  514|   194k|#endif
  515|   194k|}

LLVMFuzzerTestOneInput:
   12|  4.96k|{
   13|  4.96k|    OpenAutoIt::disable_output();
   14|       |
   15|  4.96k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   16|       |
   17|  4.96k|    OpenAutoIt::ParseResult parse_result;
   18|       |
   19|  4.96k|    OpenAutoIt::Lexer lexer{parse_result, source};
   20|  4.96k|    lexer.ProcessAll();
   21|       |
   22|  4.96k|    OpenAutoIt::Parser parser;
   23|  4.96k|    parser.ParseDocument(parse_result);
   24|       |
   25|  4.96k|    const volatile phi::scope_ptr<OpenAutoIt::ASTDocument> doc{phi::move(parse_result.m_Document)};
   26|       |
   27|       |    // Ignore result
   28|  4.96k|    (void)doc;
   29|       |
   30|  4.96k|    return 0;
   31|  4.96k|}

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  19.3k|        {
   20|  19.3k|            m_NodeType = ASTNodeType::BinaryExpression;
   21|  19.3k|        }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|    517|        {
   18|    517|            m_NodeType = ASTNodeType::BooleanLiteral;
   19|    517|        }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   18|  91.1k|        {
   19|  91.1k|            m_Statements.emplace_back(phi::move(child));
   20|  91.1k|        }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   23|    785|        {
   24|    785|            m_Functions.emplace_back(phi::move(child));
   25|    785|        }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|  61.6k|        {
   17|  61.6k|            m_NodeType = ASTNodeType::ExpressionStatement;
   18|  61.6k|        }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  6.05k|        {
   17|  6.05k|            m_NodeType = ASTNodeType::FloatLiteral;
   18|  6.05k|        }

_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|  45.4k|        {
   21|  45.4k|            m_NodeType = ASTNodeType::FunctionCallExpression;
   22|  45.4k|        }
_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|  38.0k|        {
   26|  38.0k|            if (m_IsBuiltIn)
  ------------------
  |  Branch (26:17): [True: 1.46k, False: 36.5k]
  ------------------
   27|  1.46k|            {
   28|  1.46k|                return enum_name(m_BuiltInFunction);
   29|  1.46k|            }
   30|       |
   31|  36.5k|            return m_FunctionName;
   32|  38.0k|        }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  5.17k|        {
   25|  5.17k|            m_NodeType = ASTNodeType::IfStatement;
   26|  5.17k|        }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|  75.0k|        {
   17|  75.0k|            m_NodeType = ASTNodeType::IntegerLiteral;
   18|  75.0k|        }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|  4.97k|        {
   19|  4.97k|            m_NodeType = ASTNodeType::KeywordLiteral;
   20|  4.97k|            PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|  4.97k|        }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   64|   392k|        virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   62|   392k|        ASTNode() = default;

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  23.2k|        {
   15|  23.2k|            m_NodeType = ASTNodeType::StringLiteral;
   16|  23.2k|        }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|  73.5k|        {
   20|  73.5k|            m_NodeType = ASTNodeType::VariableAssignment;
   21|  73.5k|        }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|  42.7k|        {
   15|  42.7k|            m_NodeType = ASTNodeType::VariableExpression;
   16|  42.7k|        }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  13.6k|        {
   18|  13.6k|            m_NodeType = ASTNodeType::WhileStatement;
   19|  13.6k|        }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|   592k|        {
   46|   592k|            Token token{kind,
   47|   592k|                        m_Source.substring_view(
   48|   592k|                                static_cast<typename phi::string_view::size_type::value_type>(
   49|   592k|                                        m_Iterator - m_Source.begin()),
   50|   592k|                                1u),
   51|   592k|                        m_LineNumber, m_Column};
   52|       |
   53|       |            // 1 character sized token
   54|   592k|            ++m_Column;
   55|       |
   56|   592k|            return token;
   57|   592k|        }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|   513k|        {
   61|   513k|            Token token{kind, TokenText(token_begin), m_LineNumber, m_Column};
   62|       |
   63|       |            // Consume the amount of characters that make up our new token
   64|   513k|            m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|   513k|            return token;
   67|   513k|        }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|   776k|        {
   71|   776k|            return m_Source.substring_view(token_begin, m_Iterator);
   72|   776k|        }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   61|   732k|        {
   62|   732k|            switch (token_kind)
   63|   732k|            {
   64|    469|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (64:17): [True: 469, False: 732k]
  ------------------
   65|  1.63k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (65:17): [True: 1.17k, False: 731k]
  ------------------
   66|  1.83k|                case TokenKind::KW_Not:
  ------------------
  |  Branch (66:17): [True: 194, False: 732k]
  ------------------
   67|  1.83k|                    return true;
   68|       |
   69|   730k|                default:
  ------------------
  |  Branch (69:17): [True: 730k, False: 1.83k]
  ------------------
   70|   730k|                    return false;
   71|   732k|            }
   72|   732k|        }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   76|   166k|        {
   77|   166k|            switch (token_kind)
   78|   166k|            {
   79|    194|                case TokenKind::KW_And:
  ------------------
  |  Branch (79:17): [True: 194, False: 166k]
  ------------------
   80|    524|                case TokenKind::KW_Or:
  ------------------
  |  Branch (80:17): [True: 330, False: 166k]
  ------------------
   81|  11.6k|                case TokenKind::OP_Equals:
  ------------------
  |  Branch (81:17): [True: 11.1k, False: 155k]
  ------------------
   82|  12.0k|                case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (82:17): [True: 330, False: 166k]
  ------------------
   83|  12.9k|                case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (83:17): [True: 968, False: 165k]
  ------------------
   84|  13.3k|                case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (84:17): [True: 331, False: 166k]
  ------------------
   85|  13.5k|                case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (85:17): [True: 221, False: 166k]
  ------------------
   86|  14.5k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (86:17): [True: 1.01k, False: 165k]
  ------------------
   87|  15.2k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (87:17): [True: 680, False: 166k]
  ------------------
   88|  19.0k|                case TokenKind::OP_Multiply:
  ------------------
  |  Branch (88:17): [True: 3.77k, False: 162k]
  ------------------
   89|  20.6k|                case TokenKind::OP_Divide:
  ------------------
  |  Branch (89:17): [True: 1.68k, False: 165k]
  ------------------
   90|  21.0k|                case TokenKind::OP_Raise:
  ------------------
  |  Branch (90:17): [True: 398, False: 166k]
  ------------------
   91|  21.5k|                case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (91:17): [True: 465, False: 166k]
  ------------------
   92|  23.2k|                case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (92:17): [True: 1.72k, False: 165k]
  ------------------
   93|  24.9k|                case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (93:17): [True: 1.65k, False: 165k]
  ------------------
   94|  25.1k|                case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (94:17): [True: 242, False: 166k]
  ------------------
   95|  27.3k|                case TokenKind::OP_LessThan:
  ------------------
  |  Branch (95:17): [True: 2.14k, False: 164k]
  ------------------
   96|  27.6k|                case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (96:17): [True: 369, False: 166k]
  ------------------
   97|  27.6k|                    return true;
   98|       |
   99|   139k|                default:
  ------------------
  |  Branch (99:17): [True: 139k, False: 27.6k]
  ------------------
  100|   139k|                    return false;
  101|   166k|            }
  102|   166k|        }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  121|    785|        {
  122|    785|            m_ParseResult->m_Document->AppendFunction(phi::move(function));
  123|    785|        }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  114|  91.1k|        {
  115|  91.1k|            m_ParseResult->m_Document->AppendStatement(phi::move(statement));
  116|  91.1k|        }

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS2_7integerImEES9_:
   23|  1.10M|        {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   36|  5.03M|        {
   37|  5.03M|            return m_Kind;
   38|  5.03M|        }
_ZNK10OpenAutoIt5Token7GetTextEv:
   41|   615k|        {
   42|   615k|            return m_Text;
   43|   615k|        }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   68|   162k|        {
   69|   162k|            const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   70|       |
   71|   162k|            if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (71:17): [True: 4.40k, False: 157k]
  ------------------
   72|   162k|                underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (72:17): [True: 4.40k, False: 0]
  ------------------
   73|  4.40k|            {
   74|  4.40k|                return true;
   75|  4.40k|            }
   76|       |
   77|   157k|            return false;
   78|   162k|        }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
   81|  76.1k|        {
   82|  76.1k|            switch (m_Kind)
   83|  76.1k|            {
   84|  1.43k|                case TokenKind::KW_Default:
  ------------------
  |  Branch (84:17): [True: 1.43k, False: 74.6k]
  ------------------
   85|  9.94k|                case TokenKind::KW_Null:
  ------------------
  |  Branch (85:17): [True: 8.50k, False: 67.5k]
  ------------------
   86|  9.94k|                    return true;
   87|       |
   88|  66.1k|                default:
  ------------------
  |  Branch (88:17): [True: 66.1k, False: 9.94k]
  ------------------
   89|  66.1k|                    return false;
   90|  76.1k|            }
   91|  76.1k|        }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  679|   148k|    {
  680|   148k|        switch (token_kind)
  681|   148k|        {
  682|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  683|      0|    case TokenKind::name:                                                                          \
  684|      0|        return #name;
  685|       |
  686|      0|            OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|    733|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  683|    733|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 733, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    733|        return #name;
  |  |  ------------------
  |  |   13|  23.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  683|  23.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 23.9k, False: 124k]
  |  |  |  |  ------------------
  |  |  |  |  684|  23.9k|        return #name;
  |  |  ------------------
  |  |   14|  23.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   15|    355|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  683|    355|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 355, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    355|        return #name;
  |  |  ------------------
  |  |   16|    355|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   17|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   18|  22.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|  22.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22.7k, False: 126k]
  |  |  |  |  ------------------
  |  |  |  |  684|  22.7k|        return #name;
  |  |  ------------------
  |  |   19|  22.7k|    /* Literals */                                                                                 \
  |  |   20|  22.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  683|  1.90k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.90k, False: 146k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.90k|        return #name;
  |  |  ------------------
  |  |   21|  1.90k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |   22|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |   23|      5|    /* Punctuation */                                                                              \
  |  |   24|  1.99k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  683|  1.99k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.99k, False: 146k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.99k|        return #name;
  |  |  ------------------
  |  |   25|  8.61k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  8.61k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.61k, False: 140k]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.61k|        return #name;
  |  |  ------------------
  |  |   26|  29.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  29.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 29.8k, False: 118k]
  |  |  |  |  ------------------
  |  |  |  |  684|  29.8k|        return #name;
  |  |  ------------------
  |  |   27|  29.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   28|  2.18k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  2.18k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.18k, False: 146k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.18k|        return #name;
  |  |  ------------------
  |  |   29|  2.18k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  1.03k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.03k, False: 147k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.03k|        return #name;
  |  |  ------------------
  |  |   30|  1.03k|    /* Macros */                                                                                   \
  |  |   31|  1.03k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  1.03k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   33|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   34|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |   35|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   36|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   37|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   38|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   40|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   41|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   42|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   43|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   44|    388|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  683|    388|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 388, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    388|        return #name;
  |  |  ------------------
  |  |   45|    388|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   46|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |   47|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   49|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   51|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   52|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   53|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   54|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   55|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   56|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   59|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   60|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   66|     74|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  683|     74|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 74, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     74|        return #name;
  |  |  ------------------
  |  |   67|     74|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   70|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   74|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   75|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   76|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   77|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   81|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   82|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   83|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   84|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   86|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   87|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   88|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   89|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   91|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   92|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   93|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   96|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   97|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   98|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  100|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  101|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  103|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  105|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  106|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  107|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  108|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  109|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  111|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  112|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  113|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  122|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  123|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  124|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  125|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  126|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  127|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  128|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  129|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  130|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  131|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  132|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  133|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|  1.96k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  683|  1.96k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.96k, False: 146k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.96k|        return #name;
  |  |  ------------------
  |  |  138|  2.57k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  683|  2.57k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.57k, False: 146k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.57k|        return #name;
  |  |  ------------------
  |  |  139|  2.57k|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|  2.57k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  683|    450|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 450, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    450|        return #name;
  |  |  ------------------
  |  |  141|    450|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|    450|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  683|    172|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 172, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    172|        return #name;
  |  |  ------------------
  |  |  143|    172|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    596|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|    596|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 596, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    596|        return #name;
  |  |  ------------------
  |  |  145|    596|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|    898|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  683|    898|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 898, False: 147k]
  |  |  |  |  ------------------
  |  |  |  |  684|    898|        return #name;
  |  |  ------------------
  |  |  147|    898|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    898|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  683|    452|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 452, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    452|        return #name;
  |  |  ------------------
  |  |  149|    452|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    620|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  683|    620|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 620, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    620|        return #name;
  |  |  ------------------
  |  |  151|    620|    /* Keywords */                                                                                 \
  |  |  152|    620|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    620|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    620|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|    620|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  156|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  157|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|     70|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  683|     70|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 70, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     70|        return #name;
  |  |  ------------------
  |  |  161|     70|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|     70|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  163|      4|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|     51|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  683|     51|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 51, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     51|        return #name;
  |  |  ------------------
  |  |  165|     51|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  166|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  167|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  168|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  170|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  171|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  683|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     13|        return #name;
  |  |  ------------------
  |  |  173|     13|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  175|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  177|      6|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  179|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  180|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  181|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  182|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |  184|     40|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  6.67k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  683|  6.67k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6.67k, False: 142k]
  |  |  |  |  ------------------
  |  |  |  |  684|  6.67k|        return #name;
  |  |  ------------------
  |  |  186|  6.67k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  187|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  188|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |  189|     40|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  683|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 9, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      9|        return #name;
  |  |  ------------------
  |  |  191|  2.20k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  683|  2.20k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.20k, False: 146k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.20k|        return #name;
  |  |  ------------------
  |  |  192|  2.20k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  683|    229|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 229, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    229|        return #name;
  |  |  ------------------
  |  |  193|    229|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|    229|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  195|     60|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  683|     60|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 60, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     60|        return #name;
  |  |  ------------------
  |  |  196|     60|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|     60|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  198|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  200|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  202|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  203|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  206|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  208|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  683|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 15, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     15|        return #name;
  |  |  ------------------
  |  |  213|  5.74k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|  5.74k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.74k, False: 143k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.74k|        return #name;
  |  |  ------------------
  |  |  214|  5.74k|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|  5.74k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  216|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  219|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  220|    388|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  683|    388|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 388, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    388|        return #name;
  |  |  ------------------
  |  |  221|    388|    /* Operator */                                                                                 \
  |  |  222|    388|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  9.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)                                                     \
  |  |  ------------------
  |  |  |  |  683|  9.29k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 9.29k, False: 139k]
  |  |  |  |  ------------------
  |  |  |  |  684|  9.29k|        return #name;
  |  |  ------------------
  |  |  224|  9.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  225|    531|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)                                                \
  |  |  ------------------
  |  |  |  |  683|    531|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 531, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    531|        return #name;
  |  |  ------------------
  |  |  226|    531|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)                                             \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  227|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  228|    729|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)                                                \
  |  |  ------------------
  |  |  |  |  683|    729|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 729, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    729|        return #name;
  |  |  ------------------
  |  |  229|    729|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals)                                          \
  |  |  ------------------
  |  |  |  |  683|    160|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 160, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    160|        return #name;
  |  |  ------------------
  |  |  230|    926|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)                                                       \
  |  |  ------------------
  |  |  |  |  683|    926|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 926, False: 147k]
  |  |  |  |  ------------------
  |  |  |  |  684|    926|        return #name;
  |  |  ------------------
  |  |  231|  2.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)                                                      \
  |  |  ------------------
  |  |  |  |  683|  2.14k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.14k, False: 146k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.14k|        return #name;
  |  |  ------------------
  |  |  232|  2.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)                                                   \
  |  |  ------------------
  |  |  |  |  683|  1.29k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.29k, False: 147k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.29k|        return #name;
  |  |  ------------------
  |  |  233|  1.68k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)                                                     \
  |  |  ------------------
  |  |  |  |  683|  1.68k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.68k, False: 147k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.68k|        return #name;
  |  |  ------------------
  |  |  234|  1.68k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)                                                      \
  |  |  ------------------
  |  |  |  |  683|  1.66k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.66k, False: 147k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.66k|        return #name;
  |  |  ------------------
  |  |  235|  3.19k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|  3.19k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.19k, False: 145k]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.19k|        return #name;
  |  |  ------------------
  |  |  236|  3.19k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)                                                   \
  |  |  ------------------
  |  |  |  |  683|    234|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 234, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    234|        return #name;
  |  |  ------------------
  |  |  237|  1.41k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)                                                \
  |  |  ------------------
  |  |  |  |  683|  1.41k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.41k, False: 147k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.41k|        return #name;
  |  |  ------------------
  |  |  238|  1.41k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)                                           \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  239|  2.19k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)                                                   \
  |  |  ------------------
  |  |  |  |  683|  2.19k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.19k, False: 146k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.19k|        return #name;
  |  |  ------------------
  |  |  240|  2.19k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)                                              \
  |  |  ------------------
  |  |  |  |  683|    158|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 158, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    158|        return #name;
  |  |  ------------------
  |  |  241|  1.65k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)                                                  \
  |  |  ------------------
  |  |  |  |  683|  1.65k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.65k, False: 147k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.65k|        return #name;
  |  |  ------------------
  |  |  242|  2.26k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)                                                \
  |  |  ------------------
  |  |  |  |  683|  2.26k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.26k, False: 146k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.26k|        return #name;
  |  |  ------------------
  |  |  243|  2.26k|    /* Built-in Functions */                                                                       \
  |  |  244|  2.26k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  2.26k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  2.26k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  683|    422|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 422, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    422|        return #name;
  |  |  ------------------
  |  |  247|    422|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  248|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  249|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  250|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  251|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  254|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  255|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  256|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  257|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  261|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 15, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     15|        return #name;
  |  |  ------------------
  |  |  262|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  263|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  264|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  265|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  270|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  271|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  272|    252|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  683|    252|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 252, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    252|        return #name;
  |  |  ------------------
  |  |  273|    252|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  274|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  683|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 17, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     17|        return #name;
  |  |  ------------------
  |  |  275|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  276|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  279|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  280|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  288|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  297|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  298|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  299|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  300|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  301|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  302|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  307|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  308|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  309|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  312|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  313|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  314|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  315|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  316|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  320|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  321|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  322|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  323|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  327|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  328|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  329|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  330|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  331|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  332|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  333|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  334|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  335|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|     66|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 66, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     66|        return #name;
  |  |  ------------------
  |  |  336|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  337|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  338|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  340|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  341|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  343|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  344|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  345|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  346|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  347|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  348|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  352|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  357|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  358|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  359|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  361|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  362|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  363|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  364|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  365|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  366|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  367|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  368|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  369|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  370|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  371|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  372|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  373|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  374|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  384|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  385|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  402|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  403|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  404|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  417|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  418|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  421|     76|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  683|     76|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 76, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     76|        return #name;
  |  |  ------------------
  |  |  422|     76|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  428|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  430|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  435|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  436|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  437|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  438|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  439|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  440|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  441|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  444|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  445|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  448|     33|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|     33|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 33, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     33|        return #name;
  |  |  ------------------
  |  |  449|     33|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  450|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  451|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  452|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  453|     80|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|     80|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 80, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     80|        return #name;
  |  |  ------------------
  |  |  454|     80|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  455|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  462|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  463|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  466|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  468|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  470|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  471|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  472|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  473|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  474|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  477|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  479|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  480|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  482|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  483|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  485|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  683|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 42, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     42|        return #name;
  |  |  ------------------
  |  |  486|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  487|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  488|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  489|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  491|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  492|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  494|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  495|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  496|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  497|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  498|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  683|     36|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 36, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     36|        return #name;
  |  |  ------------------
  |  |  499|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  500|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  503|    245|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  683|    245|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 245, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    245|        return #name;
  |  |  ------------------
  |  |  504|    245|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  505|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  507|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  508|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  509|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  510|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  511|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  512|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  517|    126|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  683|    126|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 126, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    126|        return #name;
  |  |  ------------------
  |  |  518|    126|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  519|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  522|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  523|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  525|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  526|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  529|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  530|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  533|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  536|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  537|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  538|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  539|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  540|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  541|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  542|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  543|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  544|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  548|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  549|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  550|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |  551|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  553|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  554|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  562|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  563|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  565|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  566|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  567|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  569|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  570|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  579|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  580|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  583|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  584|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  585|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  588|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  589|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  590|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  596|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  597|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  600|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  601|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  603|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  604|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  611|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  612|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  613|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  615|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  616|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  618|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  619|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  620|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  621|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  622|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  628|    146|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  683|    146|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 146, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|    146|        return #name;
  |  |  ------------------
  |  |  629|    146|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  631|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  632|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  633|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  635|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  636|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  638|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  639|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  645|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  646|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  647|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  649|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 148k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  ------------------
  687|       |
  688|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  689|       |
  690|      0|            default:
  ------------------
  |  Branch (690:13): [True: 0, False: 148k]
  ------------------
  691|      0|                PHI_ASSERT_NOT_REACHED();
  692|   148k|        }
  693|   148k|    }

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  1.10M|        {
   21|       |#if defined(PHI_DEBUG)
   22|       |            PHI_ASSERT(!m_Finialized);
   23|       |#endif
   24|       |
   25|  1.10M|            m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  1.10M|        }

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  157|  4.00k|{
  158|  4.00k|    static constexpr auto map =
  159|  4.00k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  160|  4.00k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  161|       |
  162|  4.00k|    std::string str{token.begin(), token.end()};
  163|  4.00k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  164|       |
  165|  4.00k|    return map.at(phi::string_view(str.c_str(), str.size()));
  166|  4.00k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  183|  14.0k|{
  184|  14.0k|    static constexpr auto map =
  185|  14.0k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  186|  14.0k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  187|       |
  188|  14.0k|    std::string str{token.begin(), token.end()};
  189|  14.0k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  190|       |
  191|  14.0k|    return map.at(phi::string_view(str.c_str(), str.size()));
  192|  14.0k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  660|   161k|{
  661|   161k|    static constexpr auto keyword_map =
  662|   161k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  663|   161k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  664|   161k|    static constexpr auto builtin_map =
  665|   161k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  666|   161k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  667|       |
  668|   161k|    std::string str{token.begin(), token.end()};
  669|   161k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  670|       |
  671|   161k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  672|       |
  673|   161k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  674|   161k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (674:9): [True: 77.0k, False: 84.5k]
  ------------------
  675|  77.0k|    {
  676|  77.0k|        return builtin_map.at(string);
  677|  77.0k|    }
  678|       |
  679|  84.5k|    return keyword;
  680|   161k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  706|  85.1k|{
  707|  85.1k|    static constexpr auto map =
  708|  85.1k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  709|  85.1k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  710|       |
  711|  85.1k|    return map.at(token);
  712|  85.1k|}
_ZN10OpenAutoIt5LexerC2ERNS_11ParseResultEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  783|  4.96k|    {}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  803|  3.78M|    {
  804|  3.78M|        return m_Iterator == m_Source.end();
  805|  3.78M|    }
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  813|  1.10M|    {
  814|  1.28M|        while (!IsFinished())
  ------------------
  |  Branch (814:16): [True: 1.28M, False: 790]
  ------------------
  815|  1.28M|        {
  816|  1.28M|            char current_character = *m_Iterator;
  817|       |
  818|       |            /* Embedded null character */
  819|       |
  820|  1.28M|            if (current_character == '\0')
  ------------------
  |  Branch (820:17): [True: 44.8k, False: 1.23M]
  ------------------
  821|  44.8k|            {
  822|  44.8k|                m_ParseResult.m_Warnings.emplace_back(
  823|  44.8k|                        ParseWarning::EmbeddedNullCharacter(m_LineNumber, m_Column));
  824|       |
  825|  44.8k|                SkipCurrentCharacter();
  826|  44.8k|            }
  827|       |
  828|       |            /* Multiline comments */
  829|       |
  830|  1.23M|            else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (830:22): [True: 994, False: 1.23M]
  ------------------
  831|    994|            {
  832|    994|                iterator       begin_of_multiline_comment            = m_Iterator;
  833|    994|                const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  834|    994|                const phi::u64 beginning_column_of_multiline_comment = m_Column;
  835|       |
  836|  5.64k|                while (!IsFinished())
  ------------------
  |  Branch (836:24): [True: 5.57k, False: 73]
  ------------------
  837|  5.57k|                {
  838|  5.57k|                    current_character = *m_Iterator;
  839|       |
  840|       |                    // Check for end comment multiline
  841|  5.57k|                    if (current_character == '#')
  ------------------
  |  Branch (841:25): [True: 2.36k, False: 3.20k]
  ------------------
  842|  2.36k|                    {
  843|  2.36k|                        iterator begin_of_token = m_Iterator;
  844|  2.36k|                        ConsumeCurrentCharacter();
  845|       |
  846|  18.0k|                        while (!IsFinished())
  ------------------
  |  Branch (846:32): [True: 17.9k, False: 56]
  ------------------
  847|  17.9k|                        {
  848|  17.9k|                            current_character = *m_Iterator;
  849|       |
  850|  17.9k|                            if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (850:33): [True: 15.6k, False: 2.31k]
  ------------------
  851|  15.6k|                            {
  852|  15.6k|                                ConsumeCurrentCharacter();
  853|  15.6k|                                continue;
  854|  15.6k|                            }
  855|       |
  856|  2.31k|                            break;
  857|  17.9k|                        }
  858|       |
  859|  2.36k|                        const TokenKind pre_processor_token_kind =
  860|  2.36k|                                lookup_pre_processor(TokenText(begin_of_token));
  861|       |
  862|  2.36k|                        if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (862:29): [True: 921, False: 1.44k]
  ------------------
  863|    921|                        {
  864|    921|                            m_InsideMultiLineComment = false;
  865|       |
  866|       |                            // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  867|    921|                            m_Iterator -= TokenText(begin_of_token).length().unsafe();
  868|       |
  869|    921|                            Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  870|    921|                                        beginning_line_of_multiline_comment,
  871|    921|                                        beginning_column_of_multiline_comment};
  872|       |
  873|    921|                            return token;
  874|    921|                        }
  875|  2.36k|                    }
  876|  3.20k|                    else if (current_character == '\n')
  ------------------
  |  Branch (876:30): [True: 503, False: 2.69k]
  ------------------
  877|    503|                    {
  878|    503|                        ConsumeCurrentCharacter();
  879|    503|                        AdvanceToNextLine();
  880|    503|                    }
  881|  2.69k|                    else
  882|  2.69k|                    {
  883|       |                        // Otherwise simply consume the character
  884|  2.69k|                        ConsumeCurrentCharacter();
  885|  2.69k|                        m_Column += 1u;
  886|  2.69k|                    }
  887|  5.57k|                }
  888|    994|            }
  889|       |
  890|       |            /* Skip characters */
  891|       |
  892|  1.23M|            else if (is_skip_character(current_character))
  ------------------
  |  Branch (892:22): [True: 48.2k, False: 1.18M]
  ------------------
  893|  48.2k|            {
  894|  48.2k|                SkipCurrentCharacter();
  895|  48.2k|            }
  896|       |
  897|       |            /* New Lines */
  898|       |
  899|  1.18M|            else if (current_character == '\n')
  ------------------
  |  Branch (899:22): [True: 29.2k, False: 1.15M]
  ------------------
  900|  29.2k|            {
  901|  29.2k|                Token new_line_token = ConstructToken(TokenKind::NewLine);
  902|       |
  903|  29.2k|                ConsumeCurrentCharacter();
  904|  29.2k|                AdvanceToNextLine();
  905|       |
  906|  29.2k|                return new_line_token;
  907|  29.2k|            }
  908|       |
  909|       |            /* Comment */
  910|       |
  911|  1.15M|            else if (current_character == ';')
  ------------------
  |  Branch (911:22): [True: 502, False: 1.15M]
  ------------------
  912|    502|            {
  913|    502|                iterator begin_of_token = m_Iterator;
  914|    502|                ConsumeCurrentCharacter();
  915|       |
  916|    798|                while (!IsFinished())
  ------------------
  |  Branch (916:24): [True: 759, False: 39]
  ------------------
  917|    759|                {
  918|    759|                    current_character = *m_Iterator;
  919|       |
  920|    759|                    if (current_character != '\n')
  ------------------
  |  Branch (920:25): [True: 296, False: 463]
  ------------------
  921|    296|                    {
  922|    296|                        ConsumeCurrentCharacter();
  923|    296|                        continue;
  924|    296|                    }
  925|       |
  926|    463|                    break;
  927|    759|                }
  928|       |
  929|    502|                return ConstructToken(TokenKind::Comment, begin_of_token);
  930|    502|            }
  931|       |
  932|       |            /* Macros */
  933|       |
  934|  1.15M|            else if (current_character == '@')
  ------------------
  |  Branch (934:22): [True: 4.00k, False: 1.15M]
  ------------------
  935|  4.00k|            {
  936|  4.00k|                iterator begin_of_token = m_Iterator;
  937|  4.00k|                ConsumeCurrentCharacter();
  938|       |
  939|  48.0k|                while (!IsFinished())
  ------------------
  |  Branch (939:24): [True: 47.8k, False: 138]
  ------------------
  940|  47.8k|                {
  941|  47.8k|                    current_character = *m_Iterator;
  942|       |
  943|  47.8k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (943:25): [True: 44.0k, False: 3.86k]
  ------------------
  944|  44.0k|                    {
  945|  44.0k|                        ConsumeCurrentCharacter();
  946|  44.0k|                        continue;
  947|  44.0k|                    }
  948|       |
  949|  3.86k|                    break;
  950|  47.8k|                }
  951|       |
  952|       |                // Emit token
  953|  4.00k|                return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  954|  4.00k|            }
  955|       |
  956|       |            /* Variable identifier */
  957|       |
  958|  1.15M|            else if (current_character == '$')
  ------------------
  |  Branch (958:22): [True: 132k, False: 1.02M]
  ------------------
  959|   132k|            {
  960|   132k|                iterator     begin_of_token = m_Iterator;
  961|   132k|                phi::boolean parsed_something{false};
  962|   132k|                ConsumeCurrentCharacter();
  963|       |
  964|   313k|                while (!IsFinished())
  ------------------
  |  Branch (964:24): [True: 313k, False: 713]
  ------------------
  965|   313k|                {
  966|   313k|                    current_character = *m_Iterator;
  967|       |
  968|   313k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (968:25): [True: 181k, False: 132k]
  ------------------
  969|   181k|                    {
  970|   181k|                        ConsumeCurrentCharacter();
  971|   181k|                        parsed_something = true;
  972|   181k|                        continue;
  973|   181k|                    }
  974|       |
  975|   132k|                    break;
  976|   313k|                }
  977|       |
  978|       |                // Ensure that '$' is not a valid variable identifier
  979|   132k|                if (!parsed_something)
  ------------------
  |  Branch (979:21): [True: 10.1k, False: 122k]
  ------------------
  980|  10.1k|                {
  981|  10.1k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
  982|  10.1k|                }
  983|       |
  984|       |                // Emit Token
  985|   122k|                return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  986|   132k|            }
  987|       |
  988|       |            /* PreProcessor directive */
  989|       |
  990|  1.02M|            else if (current_character == '#')
  ------------------
  |  Branch (990:22): [True: 11.6k, False: 1.01M]
  ------------------
  991|  11.6k|            {
  992|  11.6k|                iterator begin_of_token = m_Iterator;
  993|  11.6k|                ConsumeCurrentCharacter();
  994|       |
  995|   137k|                while (!IsFinished())
  ------------------
  |  Branch (995:24): [True: 137k, False: 236]
  ------------------
  996|   137k|                {
  997|   137k|                    current_character = *m_Iterator;
  998|       |
  999|   137k|                    if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (999:25): [True: 126k, False: 11.4k]
  ------------------
 1000|   126k|                    {
 1001|   126k|                        ConsumeCurrentCharacter();
 1002|   126k|                        continue;
 1003|   126k|                    }
 1004|       |
 1005|  11.4k|                    break;
 1006|   137k|                }
 1007|       |
 1008|       |                // Check for start of multiline comment
 1009|  11.6k|                const TokenKind pre_processor_token_kind =
 1010|  11.6k|                        lookup_pre_processor(TokenText(begin_of_token));
 1011|       |
 1012|  11.6k|                if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (1012:21): [True: 997, False: 10.6k]
  ------------------
 1013|    997|                {
 1014|    997|                    m_InsideMultiLineComment = true;
 1015|    997|                }
 1016|       |
 1017|  11.6k|                return ConstructToken(pre_processor_token_kind, begin_of_token);
 1018|  11.6k|            }
 1019|       |
 1020|       |            /* SingleQuoteStringLiteral */
 1021|       |
 1022|  1.01M|            else if (current_character == '\'')
  ------------------
  |  Branch (1022:22): [True: 4.12k, False: 1.00M]
  ------------------
 1023|  4.12k|            {
 1024|  4.12k|                iterator     begin_of_token = m_Iterator;
 1025|  4.12k|                phi::boolean did_terminate  = false;
 1026|  4.12k|                ConsumeCurrentCharacter();
 1027|       |
 1028|  4.41k|                while (!IsFinished())
  ------------------
  |  Branch (1028:24): [True: 4.39k, False: 13]
  ------------------
 1029|  4.39k|                {
 1030|  4.39k|                    current_character = *m_Iterator;
 1031|  4.39k|                    ConsumeCurrentCharacter();
 1032|       |
 1033|  4.39k|                    if (current_character == '\'')
  ------------------
  |  Branch (1033:25): [True: 4.11k, False: 286]
  ------------------
 1034|  4.11k|                    {
 1035|  4.11k|                        did_terminate = true;
 1036|  4.11k|                        break;
 1037|  4.11k|                    }
 1038|  4.39k|                }
 1039|       |
 1040|  4.12k|                if (did_terminate)
  ------------------
  |  Branch (1040:21): [True: 4.11k, False: 13]
  ------------------
 1041|  4.11k|                {
 1042|  4.11k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1043|  4.11k|                }
 1044|       |
 1045|       |                // TODO: Warn unterminated string literal
 1046|  4.12k|            }
 1047|       |
 1048|       |            /* DoubleQuoteStringLiteral */
 1049|       |
 1050|  1.00M|            else if (current_character == '\"')
  ------------------
  |  Branch (1050:22): [True: 27.5k, False: 978k]
  ------------------
 1051|  27.5k|            {
 1052|  27.5k|                iterator     begin_of_token = m_Iterator;
 1053|  27.5k|                phi::boolean did_terminate  = false;
 1054|  27.5k|                ConsumeCurrentCharacter();
 1055|       |
 1056|  38.7k|                while (!IsFinished())
  ------------------
  |  Branch (1056:24): [True: 38.5k, False: 121]
  ------------------
 1057|  38.5k|                {
 1058|  38.5k|                    current_character = *m_Iterator;
 1059|  38.5k|                    ConsumeCurrentCharacter();
 1060|       |
 1061|  38.5k|                    if (current_character == '\"')
  ------------------
  |  Branch (1061:25): [True: 27.3k, False: 11.2k]
  ------------------
 1062|  27.3k|                    {
 1063|  27.3k|                        did_terminate = true;
 1064|  27.3k|                        break;
 1065|  27.3k|                    }
 1066|  38.5k|                }
 1067|       |
 1068|  27.5k|                if (did_terminate)
  ------------------
  |  Branch (1068:21): [True: 27.3k, False: 121]
  ------------------
 1069|  27.3k|                {
 1070|  27.3k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1071|  27.3k|                }
 1072|  27.5k|            }
 1073|       |
 1074|       |            /* Number Literals - IntegerLiteral/FloatLiteral */
 1075|       |
 1076|   978k|            else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1076:22): [True: 80.3k, False: 898k]
  |  Branch (1076:22): [True: 89.8k, False: 888k]
  |  Branch (1076:58): [True: 9.46k, False: 888k]
  ------------------
 1077|  89.8k|            {
 1078|  89.8k|                const phi::boolean start_with_zero{current_character == '0'};
 1079|  89.8k|                phi::boolean       parsing_hex{false};
 1080|  89.8k|                phi::boolean       parsing_float{current_character == '.'};
 1081|       |
 1082|  89.8k|                iterator begin_of_token = m_Iterator;
 1083|  89.8k|                ConsumeCurrentCharacter();
 1084|       |
 1085|   112k|                while (!IsFinished())
  ------------------
  |  Branch (1085:24): [True: 112k, False: 398]
  ------------------
 1086|   112k|                {
 1087|   112k|                    current_character = *m_Iterator;
 1088|       |
 1089|       |                    // Is the second character
 1090|   112k|                    if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1090:25): [True: 89.5k, False: 22.7k]
  |  Branch (1090:62): [True: 17.0k, False: 72.4k]
  ------------------
 1091|  17.0k|                    {
 1092|       |                        // Hex character
 1093|  17.0k|                        if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1093:29): [True: 251, False: 16.8k]
  |  Branch (1093:57): [True: 1.71k, False: 15.1k]
  ------------------
 1094|  1.96k|                        {
 1095|  1.96k|                            parsing_hex = true;
 1096|  1.96k|                            ConsumeCurrentCharacter();
 1097|  1.96k|                            continue;
 1098|  1.96k|                        }
 1099|  17.0k|                    }
 1100|       |
 1101|       |                    // Actually parsing
 1102|   110k|                    if (parsing_hex)
  ------------------
  |  Branch (1102:25): [True: 3.83k, False: 106k]
  ------------------
 1103|  3.83k|                    {
 1104|  3.83k|                        if (parsing_float)
  ------------------
  |  Branch (1104:29): [True: 0, False: 3.83k]
  ------------------
 1105|      0|                        {
 1106|       |                            // TODO: Error hexliteral not allowed for floats
 1107|      0|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1108|      0|                        }
 1109|       |
 1110|  3.83k|                        if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1110:29): [True: 1.91k, False: 1.92k]
  ------------------
 1111|  1.91k|                        {
 1112|  1.91k|                            ConsumeCurrentCharacter();
 1113|  1.91k|                            continue;
 1114|  1.91k|                        }
 1115|  3.83k|                    }
 1116|   106k|                    else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1116:30): [True: 18.5k, False: 87.9k]
  ------------------
 1117|  18.5k|                    {
 1118|  18.5k|                        ConsumeCurrentCharacter();
 1119|  18.5k|                        continue;
 1120|  18.5k|                    }
 1121|       |                    // Literal dot
 1122|  87.9k|                    else if (current_character == '.')
  ------------------
  |  Branch (1122:30): [True: 880, False: 87.0k]
  ------------------
 1123|    880|                    {
 1124|    880|                        if (parsing_float)
  ------------------
  |  Branch (1124:29): [True: 473, False: 407]
  ------------------
 1125|    473|                        {
 1126|       |                            // TODO: Error more than one dot in float literal
 1127|    473|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1128|    473|                        }
 1129|       |
 1130|    407|                        parsing_float = true;
 1131|    407|                        ConsumeCurrentCharacter();
 1132|    407|                        continue;
 1133|    880|                    }
 1134|       |
 1135|  88.9k|                    break;
 1136|   110k|                }
 1137|       |
 1138|  89.3k|                if (parsing_float)
  ------------------
  |  Branch (1138:21): [True: 9.39k, False: 79.9k]
  ------------------
 1139|  9.39k|                {
 1140|       |                    // Were not allowed to end with a dot
 1141|       |                    // TODO: This is very hacky and looks nasty
 1142|  9.39k|                    if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1142:25): [True: 3.23k, False: 6.15k]
  ------------------
 1143|  3.23k|                    {
 1144|       |                        // TODO: Prober error
 1145|  3.23k|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1146|  3.23k|                    }
 1147|       |
 1148|  6.15k|                    return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1149|  9.39k|                }
 1150|       |
 1151|  79.9k|                return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1152|  89.3k|            }
 1153|       |
 1154|       |            /* Operators */
 1155|       |
 1156|   888k|            else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1156:22): [True: 81.3k, False: 807k]
  ------------------
 1157|  81.3k|            {
 1158|  81.3k|                iterator begin_of_token = m_Iterator;
 1159|  81.3k|                ConsumeCurrentCharacter();
 1160|       |
 1161|  81.3k|                if (!IsFinished())
  ------------------
  |  Branch (1161:21): [True: 81.0k, False: 313]
  ------------------
 1162|  81.0k|                {
 1163|  81.0k|                    if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1163:25): [True: 5.50k, False: 75.5k]
  |  Branch (1163:48): [True: 5.85k, False: 69.7k]
  |  Branch (1163:74): [True: 1.88k, False: 3.97k]
  ------------------
 1164|  7.38k|                    {
 1165|       |                        // We have an actual two part operator
 1166|  7.38k|                        ConsumeCurrentCharacter();
 1167|  7.38k|                    }
 1168|  81.0k|                }
 1169|       |
 1170|  81.3k|                return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1171|  81.3k|            }
 1172|       |
 1173|   807k|            else if (is_single_operator(current_character))
  ------------------
  |  Branch (1173:22): [True: 3.77k, False: 803k]
  ------------------
 1174|  3.77k|            {
 1175|  3.77k|                Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1176|       |
 1177|  3.77k|                ConsumeCurrentCharacter();
 1178|       |
 1179|  3.77k|                return token;
 1180|  3.77k|            }
 1181|       |
 1182|       |            /* Punctioation */
 1183|       |
 1184|   803k|            else if (current_character == ',')
  ------------------
  |  Branch (1184:22): [True: 3.38k, False: 800k]
  ------------------
 1185|  3.38k|            {
 1186|  3.38k|                Token token = ConstructToken(TokenKind::Comma);
 1187|       |
 1188|  3.38k|                ConsumeCurrentCharacter();
 1189|       |
 1190|  3.38k|                return token;
 1191|  3.38k|            }
 1192|       |
 1193|   800k|            else if (current_character == '(')
  ------------------
  |  Branch (1193:22): [True: 511k, False: 288k]
  ------------------
 1194|   511k|            {
 1195|   511k|                Token token = ConstructToken(TokenKind::LParen);
 1196|       |
 1197|   511k|                ConsumeCurrentCharacter();
 1198|       |
 1199|   511k|                return token;
 1200|   511k|            }
 1201|       |
 1202|   288k|            else if (current_character == ')')
  ------------------
  |  Branch (1202:22): [True: 42.4k, False: 246k]
  ------------------
 1203|  42.4k|            {
 1204|  42.4k|                Token token = ConstructToken(TokenKind::RParen);
 1205|       |
 1206|  42.4k|                ConsumeCurrentCharacter();
 1207|       |
 1208|  42.4k|                return token;
 1209|  42.4k|            }
 1210|       |
 1211|   246k|            else if (current_character == '.')
  ------------------
  |  Branch (1211:22): [True: 0, False: 246k]
  ------------------
 1212|      0|            {
 1213|      0|                Token token = ConstructToken(TokenKind::Dot);
 1214|       |
 1215|      0|                ConsumeCurrentCharacter();
 1216|       |
 1217|      0|                return token;
 1218|      0|            }
 1219|       |
 1220|   246k|            else if (current_character == '[')
  ------------------
  |  Branch (1220:22): [True: 1.43k, False: 244k]
  ------------------
 1221|  1.43k|            {
 1222|  1.43k|                Token token = ConstructToken(TokenKind::LSquare);
 1223|       |
 1224|  1.43k|                ConsumeCurrentCharacter();
 1225|       |
 1226|  1.43k|                return token;
 1227|  1.43k|            }
 1228|       |
 1229|   244k|            else if (current_character == ']')
  ------------------
  |  Branch (1229:22): [True: 765, False: 244k]
  ------------------
 1230|    765|            {
 1231|    765|                Token token = ConstructToken(TokenKind::RSquare);
 1232|       |
 1233|    765|                ConsumeCurrentCharacter();
 1234|       |
 1235|    765|                return token;
 1236|    765|            }
 1237|       |
 1238|       |            /* Identifier */
 1239|       |
 1240|   244k|            else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1240:22): [True: 161k, False: 82.5k]
  ------------------
 1241|   161k|            {
 1242|   161k|                iterator begin_of_token = m_Iterator;
 1243|   161k|                ConsumeCurrentCharacter();
 1244|       |
 1245|   630k|                while (!IsFinished())
  ------------------
  |  Branch (1245:24): [True: 628k, False: 1.35k]
  ------------------
 1246|   628k|                {
 1247|   628k|                    current_character = *m_Iterator;
 1248|       |
 1249|   628k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1249:25): [True: 468k, False: 160k]
  ------------------
 1250|   468k|                    {
 1251|   468k|                        ConsumeCurrentCharacter();
 1252|   468k|                        continue;
 1253|   468k|                    }
 1254|       |
 1255|   160k|                    break;
 1256|   628k|                }
 1257|       |
 1258|   161k|                return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1259|   161k|            }
 1260|       |
 1261|       |            /* Unknown/Unexpected character */
 1262|       |
 1263|  82.5k|            else
 1264|  82.5k|            {
 1265|       |                // TODO: Warn unexpected character encountered
 1266|  82.5k|                SkipCurrentCharacter();
 1267|  82.5k|            }
 1268|  1.28M|        }
 1269|       |
 1270|    790|        return {};
 1271|  1.10M|    }
_ZN10OpenAutoIt5Lexer10ProcessAllEv:
 1274|  4.96k|    {
 1275|  4.96k|        TokenStream& stream = m_ParseResult.m_TokenStream;
 1276|       |
 1277|  1.11M|        while (!IsFinished())
  ------------------
  |  Branch (1277:16): [True: 1.10M, False: 4.96k]
  ------------------
 1278|  1.10M|        {
 1279|  1.10M|            phi::optional<Token> maybe_token = GetNextToken();
 1280|       |
 1281|  1.10M|            if (maybe_token.has_value())
  ------------------
  |  Branch (1281:17): [True: 1.10M, False: 790]
  ------------------
 1282|  1.10M|            {
 1283|  1.10M|                stream.emplace_back(maybe_token.value());
 1284|  1.10M|            }
 1285|  1.10M|        }
 1286|       |
 1287|  4.96k|        stream.finalize();
 1288|  4.96k|    }
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1298|  2.19M|    {
 1299|  2.19M|        ++m_Iterator;
 1300|  2.19M|    }
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1303|  29.7k|    {
 1304|  29.7k|        ++m_LineNumber;
 1305|  29.7k|        m_Column = 1u;
 1306|  29.7k|    }
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1309|   175k|    {
 1310|   175k|        ConsumeCurrentCharacter();
 1311|   175k|        ++m_Column;
 1312|   175k|    }
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   34|  4.00k|    {
   35|  4.00k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  4.00k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  4.00k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 269, False: 3.73k]
  ------------------
   39|    269|        {
   40|    269|            return itr->second;
   41|    269|        }
   42|       |
   43|  3.73k|        return m_Default;
   44|  4.00k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   386k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   34|  14.0k|    {
   35|  14.0k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  14.0k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  14.0k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 6.13k, False: 7.90k]
  ------------------
   39|  6.13k|        {
   40|  6.13k|            return itr->second;
   41|  6.13k|        }
   42|       |
   43|  7.90k|        return m_Default;
   44|  14.0k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   110k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   34|  77.0k|    {
   35|  77.0k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  77.0k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  77.0k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 1.53k, False: 75.5k]
  ------------------
   39|  1.53k|        {
   40|  1.53k|            return itr->second;
   41|  1.53k|        }
   42|       |
   43|  75.5k|        return m_Default;
   44|  77.0k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  30.7M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   34|   161k|    {
   35|   161k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|   161k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|   161k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 84.5k, False: 77.0k]
  ------------------
   39|  84.5k|        {
   40|  84.5k|            return itr->second;
   41|  84.5k|        }
   42|       |
   43|  77.0k|        return m_Default;
   44|   161k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  5.65M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   34|  85.1k|    {
   35|  85.1k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  85.1k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  85.1k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 85.1k, False: 0]
  ------------------
   39|  85.1k|        {
   40|  85.1k|            return itr->second;
   41|  85.1k|        }
   42|       |
   43|      0|        return m_Default;
   44|  85.1k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   425k|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  735|   155k|{
  736|   155k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (736:12): [True: 140k, False: 15.2k]
  |  Branch (736:40): [True: 1.55k, False: 13.7k]
  ------------------
  737|   155k|}
_Z17is_skip_characterc:
  715|  1.23M|{
  716|  1.23M|    switch (c)
  717|  1.23M|    {
  718|  44.5k|        case ' ':
  ------------------
  |  Branch (718:9): [True: 44.5k, False: 1.19M]
  ------------------
  719|  45.3k|        case '\v':
  ------------------
  |  Branch (719:9): [True: 876, False: 1.23M]
  ------------------
  720|  45.7k|        case '\t':
  ------------------
  |  Branch (720:9): [True: 310, False: 1.23M]
  ------------------
  721|  46.2k|        case '\b':
  ------------------
  |  Branch (721:9): [True: 541, False: 1.23M]
  ------------------
  722|  48.2k|        case '\f':
  ------------------
  |  Branch (722:9): [True: 1.99k, False: 1.23M]
  ------------------
  723|  48.2k|            return true;
  724|  1.18M|        default:
  ------------------
  |  Branch (724:9): [True: 1.18M, False: 48.2k]
  ------------------
  725|  1.18M|            return false;
  726|  1.23M|    }
  727|  1.23M|}
_Z24is_valid_identifier_charc:
  730|  1.23M|{
  731|  1.23M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (731:12): [True: 852k, False: 381k]
  |  Branch (731:40): [True: 2.57k, False: 378k]
  ------------------
  732|  1.23M|}
_Z20is_two_part_operatorc:
  740|   888k|{
  741|   888k|    switch (c)
  742|   888k|    {
  743|  56.9k|        case '=':
  ------------------
  |  Branch (743:9): [True: 56.9k, False: 832k]
  ------------------
  744|  59.2k|        case '+':
  ------------------
  |  Branch (744:9): [True: 2.33k, False: 886k]
  ------------------
  745|  63.0k|        case '-':
  ------------------
  |  Branch (745:9): [True: 3.83k, False: 885k]
  ------------------
  746|  68.2k|        case '*':
  ------------------
  |  Branch (746:9): [True: 5.13k, False: 883k]
  ------------------
  747|  71.3k|        case '/':
  ------------------
  |  Branch (747:9): [True: 3.10k, False: 885k]
  ------------------
  748|  72.0k|        case '&':
  ------------------
  |  Branch (748:9): [True: 752, False: 888k]
  ------------------
  749|  78.4k|        case '<':
  ------------------
  |  Branch (749:9): [True: 6.39k, False: 882k]
  ------------------
  750|  81.3k|        case '>':
  ------------------
  |  Branch (750:9): [True: 2.93k, False: 886k]
  ------------------
  751|  81.3k|            return true;
  752|       |
  753|   807k|        default:
  ------------------
  |  Branch (753:9): [True: 807k, False: 81.3k]
  ------------------
  754|   807k|            return false;
  755|   888k|    }
  756|   888k|}
_Z18is_single_operatorc:
  759|   807k|{
  760|   807k|    switch (c)
  761|   807k|    {
  762|  1.51k|        case '^':
  ------------------
  |  Branch (762:9): [True: 1.51k, False: 806k]
  ------------------
  763|  2.50k|        case '?':
  ------------------
  |  Branch (763:9): [True: 985, False: 806k]
  ------------------
  764|  3.77k|        case ':':
  ------------------
  |  Branch (764:9): [True: 1.27k, False: 806k]
  ------------------
  765|  3.77k|            return true;
  766|       |
  767|   803k|        default:
  ------------------
  |  Branch (767:9): [True: 803k, False: 3.77k]
  ------------------
  768|   803k|            return false;
  769|   807k|    }
  770|   807k|}

_ZN10OpenAutoIt12ParseWarning21EmbeddedNullCharacterEN3phi7integerImEES3_:
   12|  44.8k|    {
   13|  44.8k|        ParseWarning warn;
   14|       |
   15|  44.8k|        warn.m_Type = ParseWarningType::EmbeddedNullCharacter;
   16|       |
   17|  44.8k|        warn.m_LocationBegin.line_number = line;
   18|  44.8k|        warn.m_LocationBegin.column      = column;
   19|       |
   20|  44.8k|        warn.m_LocationEnd.line_number = line;
   21|  44.8k|        warn.m_LocationEnd.column      = column;
   22|       |
   23|  44.8k|        return warn;
   24|  44.8k|    }

_ZN10OpenAutoIt6ParserC2Ev:
  126|  4.96k|    Parser::Parser() noexcept = default;
_ZN10OpenAutoIt6Parser13ParseDocumentERNS_11ParseResultE:
  129|  4.96k|    {
  130|  4.96k|        m_ParseResult = &parse_result;
  131|  4.96k|        m_TokenStream = &parse_result.m_TokenStream;
  132|       |
  133|  4.96k|        m_ParseResult->m_Document = phi::make_not_null_scope<ASTDocument>();
  134|       |
  135|   226k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (135:16): [True: 221k, False: 4.96k]
  ------------------
  136|   221k|        {
  137|   221k|            const Token& token = CurrentToken();
  138|       |
  139|       |            // Parse global function definition
  140|   221k|            if (token.GetTokenKind() == TokenKind::KW_Func)
  ------------------
  |  Branch (140:17): [True: 17.6k, False: 203k]
  ------------------
  141|  17.6k|            {
  142|  17.6k|                auto function_definition = ParseFunctionDefinition();
  143|  17.6k|                if (!function_definition)
  ------------------
  |  Branch (143:21): [True: 16.8k, False: 785]
  ------------------
  144|  16.8k|                {
  145|  16.8k|                    err("ERR: Failed to parse function definition!\n");
  146|  16.8k|                    continue;
  147|  16.8k|                }
  148|       |
  149|    785|                AppendFunctionToDocument(function_definition.release_not_null());
  150|    785|            }
  151|   203k|            else if (token.GetTokenKind() == TokenKind::NewLine ||
  ------------------
  |  Branch (151:22): [True: 13.5k, False: 189k]
  ------------------
  152|   203k|                     token.GetTokenKind() == TokenKind::Comment)
  ------------------
  |  Branch (152:22): [True: 1.18k, False: 188k]
  ------------------
  153|  14.7k|            {
  154|       |                // Simply ignore and consume newlines and comments
  155|  14.7k|                ConsumeCurrent();
  156|  14.7k|            }
  157|   188k|            else if (token.GetTokenKind() == TokenKind::NotAToken)
  ------------------
  |  Branch (157:22): [True: 8.44k, False: 180k]
  ------------------
  158|  8.44k|            {
  159|  8.44k|                err("ERR: Unexpected NotAToken!\n");
  160|  8.44k|                ConsumeCurrent();
  161|  8.44k|                continue;
  162|  8.44k|            }
  163|   180k|            else
  164|   180k|            {
  165|   180k|                auto statement = ParseStatement();
  166|   180k|                if (!statement)
  ------------------
  |  Branch (166:21): [True: 89.1k, False: 91.1k]
  ------------------
  167|  89.1k|                {
  168|       |                    // TODO: Proper error reporting
  169|  89.1k|                    err("ERR: Failed to parse statement!\n");
  170|       |
  171|  89.1k|                    if (m_TokenStream->has_more())
  ------------------
  |  Branch (171:25): [True: 86.6k, False: 2.47k]
  ------------------
  172|  86.6k|                    {
  173|       |                        // Swallow the bad token
  174|  86.6k|                        ConsumeCurrent();
  175|  86.6k|                    }
  176|  89.1k|                    continue;
  177|  89.1k|                }
  178|       |
  179|  91.1k|                AppendStatementToDocument(statement.release_not_null());
  180|  91.1k|            }
  181|   221k|        }
  182|  4.96k|    }
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  185|  2.42M|    {
  186|  2.42M|        PHI_ASSERT(m_TokenStream->has_more());
  187|       |
  188|  2.42M|        return m_TokenStream->look_ahead();
  189|  2.42M|    }
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  192|   634k|    {
  193|   634k|        m_TokenStream->consume();
  194|   634k|    }
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  197|   268k|    {
  198|   271k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (198:16): [True: 271k, False: 134]
  ------------------
  199|   271k|        {
  200|   271k|            switch (CurrentToken().GetTokenKind())
  201|   271k|            {
  202|  2.51k|                case TokenKind::NewLine:
  ------------------
  |  Branch (202:17): [True: 2.51k, False: 268k]
  ------------------
  203|  2.52k|                case TokenKind::Comment:
  ------------------
  |  Branch (203:17): [True: 14, False: 271k]
  ------------------
  204|  2.52k|                    ConsumeCurrent();
  205|  2.52k|                    break;
  206|       |
  207|   268k|                default:
  ------------------
  |  Branch (207:17): [True: 268k, False: 2.52k]
  ------------------
  208|   268k|                    return;
  209|   271k|            }
  210|   271k|        }
  211|   268k|    }
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  214|  96.0k|    {
  215|       |        // Do we even have more tokens?
  216|  96.0k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (216:13): [True: 349, False: 95.7k]
  ------------------
  217|    349|        {
  218|    349|            return false;
  219|    349|        }
  220|       |
  221|       |        // Is is the correct token kind
  222|  95.7k|        if (CurrentToken().GetTokenKind() != kind)
  ------------------
  |  Branch (222:13): [True: 10.9k, False: 84.7k]
  ------------------
  223|  10.9k|        {
  224|  10.9k|            return false;
  225|  10.9k|        }
  226|       |
  227|  84.7k|        ConsumeCurrent();
  228|  84.7k|        return true;
  229|  95.7k|    }
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  232|  17.6k|    {
  233|  17.6k|        if (!MustParse(TokenKind::KW_Func))
  ------------------
  |  Branch (233:13): [True: 0, False: 17.6k]
  ------------------
  234|      0|        {
  235|       |            // TODO: Proper Error
  236|      0|            return {};
  237|      0|        }
  238|       |
  239|       |        // Next we MUST parse the function name
  240|  17.6k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (240:13): [True: 19, False: 17.6k]
  ------------------
  241|     19|        {
  242|     19|            return {};
  243|     19|        }
  244|  17.6k|        const Token& function_name_token = CurrentToken();
  245|  17.6k|        if (function_name_token.GetTokenKind() != TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (245:13): [True: 1.17k, False: 16.4k]
  ------------------
  246|  1.17k|        {
  247|       |            // TODO: Proper error
  248|  1.17k|            return {};
  249|  1.17k|        }
  250|  16.4k|        ConsumeCurrent();
  251|       |
  252|  16.4k|        auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  253|  16.4k|        function_definition->m_FunctionName = function_name_token.GetText();
  254|       |
  255|       |        // Next we MUST parse an opening parenthesis (LParen)
  256|  16.4k|        if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (256:13): [True: 1.13k, False: 15.3k]
  ------------------
  257|  1.13k|        {
  258|       |            // TODO: Proper error
  259|  1.13k|            return {};
  260|  1.13k|        }
  261|       |
  262|       |        // Next we parse the function parameter declarations until right parenthesis (RParen)
  263|  18.0k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (263:16): [True: 17.9k, False: 30]
  |  Branch (263:16): [True: 6.61k, False: 11.3k]
  |  Branch (263:45): [True: 6.61k, False: 11.3k]
  ------------------
  264|  6.61k|        {
  265|  6.61k|            phi::optional<FunctionParameter> function_paremeter_optional =
  266|  6.61k|                    ParseFunctionParameterDefinition();
  267|  6.61k|            if (!function_paremeter_optional)
  ------------------
  |  Branch (267:17): [True: 3.93k, False: 2.68k]
  ------------------
  268|  3.93k|            {
  269|       |                // TODO: Proper error reporting
  270|  3.93k|                return {};
  271|  3.93k|            }
  272|  2.68k|            FunctionParameter& function_paremeter = function_paremeter_optional.value();
  273|       |
  274|  2.68k|            function_definition->m_Parameters.emplace_back(phi::move(function_paremeter));
  275|       |
  276|       |            // Parse comma
  277|  2.68k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (277:17): [True: 2.68k, False: 0]
  |  Branch (277:17): [True: 1.40k, False: 1.27k]
  |  Branch (277:46): [True: 1.40k, False: 1.27k]
  ------------------
  278|  1.40k|            {
  279|  1.40k|                ConsumeCurrent();
  280|  1.40k|            }
  281|  2.68k|        }
  282|       |
  283|       |        // Next we MUST parse a right parenthesis (RParen)
  284|  11.3k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (284:13): [True: 30, False: 11.3k]
  ------------------
  285|     30|        {
  286|       |            // TODO: Proper error
  287|     30|            return {};
  288|     30|        }
  289|       |
  290|       |        // Next we MUST parse a new line
  291|  11.3k|        if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (291:13): [True: 1.79k, False: 9.56k]
  ------------------
  292|  1.79k|        {
  293|       |            // TODO: Proper error
  294|  1.79k|            return {};
  295|  1.79k|        }
  296|       |
  297|       |        // Next parse Statements until EndFunc
  298|  20.4k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (298:16): [True: 20.4k, False: 43]
  |  Branch (298:16): [True: 19.6k, False: 828]
  |  Branch (298:45): [True: 19.6k, False: 785]
  ------------------
  299|  19.6k|        {
  300|  19.6k|            auto statement = ParseStatement();
  301|  19.6k|            if (!statement)
  ------------------
  |  Branch (301:17): [True: 8.73k, False: 10.9k]
  ------------------
  302|  8.73k|            {
  303|  8.73k|                err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  304|  8.73k|                                std::string_view(function_definition->m_FunctionName)));
  305|       |                // TODO: Report proper error
  306|  8.73k|                return {};
  307|  8.73k|            }
  308|       |
  309|  10.9k|            function_definition->m_FunctionBody.emplace_back(
  310|  10.9k|                    phi::move(statement.release_not_null()));
  311|       |
  312|  10.9k|            ConsumeNewLineAndComments();
  313|  10.9k|        }
  314|       |
  315|       |        // Next we MUST parse EndFunc
  316|    828|        if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (316:13): [True: 43, False: 785]
  ------------------
  317|     43|        {
  318|       |            // TODO: Proper error
  319|     43|            return {};
  320|     43|        }
  321|       |
  322|    785|        return phi::move(function_definition);
  323|    828|    }
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  326|  6.61k|    {
  327|       |        // TODO: This entire function requres more error checks
  328|  6.61k|        FunctionParameter parameter;
  329|       |
  330|  20.1k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (330:16): [True: 20.1k, False: 54]
  ------------------
  331|  20.1k|        {
  332|  20.1k|            const Token& token = CurrentToken();
  333|       |
  334|  20.1k|            switch (token.GetTokenKind())
  335|  20.1k|            {
  336|  8.03k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (336:17): [True: 8.03k, False: 12.1k]
  ------------------
  337|  8.03k|                    parameter.name = token.GetText().substring_view(1u);
  338|  8.03k|                    ConsumeCurrent();
  339|  8.03k|                    break;
  340|      0|                }
  341|    358|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (341:17): [True: 358, False: 19.7k]
  ------------------
  342|    358|                    parameter.as_const = true;
  343|    358|                    ConsumeCurrent();
  344|    358|                    break;
  345|      0|                }
  346|     66|                case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (346:17): [True: 66, False: 20.0k]
  ------------------
  347|     66|                    parameter.by_ref = true;
  348|     66|                    ConsumeCurrent();
  349|     66|                    break;
  350|      0|                }
  351|  6.72k|                case TokenKind::OP_Equals: {
  ------------------
  |  Branch (351:17): [True: 6.72k, False: 13.4k]
  ------------------
  352|  6.72k|                    if (parameter.name.is_empty())
  ------------------
  |  Branch (352:25): [True: 204, False: 6.52k]
  ------------------
  353|    204|                    {
  354|       |                        // TODO: PROPER ERROR
  355|    204|                        return {};
  356|    204|                    }
  357|       |
  358|       |                    // Consume the '='
  359|  6.52k|                    ConsumeCurrent();
  360|       |
  361|       |                    // Default value is an expression
  362|  6.52k|                    auto default_expression = ParseExpression();
  363|  6.52k|                    if (!default_expression)
  ------------------
  |  Branch (363:25): [True: 1.41k, False: 5.11k]
  ------------------
  364|  1.41k|                    {
  365|       |                        // TODO: Report error
  366|  1.41k|                        return {};
  367|  1.41k|                    }
  368|       |
  369|       |                    // For default values we artificially create a variable assignment
  370|  5.11k|                    auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  371|       |
  372|  5.11k|                    default_var_assignment->m_Scope        = VariableScope::Auto;
  373|  5.11k|                    default_var_assignment->m_VariableName = parameter.name;
  374|  5.11k|                    default_var_assignment->m_InitialValueExpression =
  375|  5.11k|                            phi::move(default_expression);
  376|       |
  377|  5.11k|                    parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  378|  5.11k|                    break;
  379|  6.52k|                }
  380|  1.40k|                case TokenKind::Comma:
  ------------------
  |  Branch (380:17): [True: 1.40k, False: 18.7k]
  ------------------
  381|  2.68k|                case TokenKind::RParen: {
  ------------------
  |  Branch (381:17): [True: 1.27k, False: 18.8k]
  ------------------
  382|  2.68k|                    return phi::move(parameter);
  383|  1.40k|                }
  384|  2.26k|                default: {
  ------------------
  |  Branch (384:17): [True: 2.26k, False: 17.8k]
  ------------------
  385|       |                    // TODO: Report error
  386|  2.26k|                    return {};
  387|  1.40k|                }
  388|  20.1k|            }
  389|  20.1k|        }
  390|       |
  391|       |        // TODO: Report error unexpected EOF
  392|     54|        return {};
  393|  6.61k|    }
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  396|   242k|    {
  397|   242k|        ConsumeNewLineAndComments();
  398|       |
  399|   242k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (399:13): [True: 10, False: 242k]
  ------------------
  400|     10|        {
  401|       |            // TODO: Report proper error
  402|     10|            return {};
  403|     10|        }
  404|       |
  405|       |        // Loop until we parse something or there is nothing left to parse
  406|   242k|        const Token& token = CurrentToken();
  407|   242k|        switch (token.GetTokenKind())
  408|   242k|        {
  409|       |            // Variable assignment
  410|  1.76k|            case TokenKind::KW_Const:
  ------------------
  |  Branch (410:13): [True: 1.76k, False: 240k]
  ------------------
  411|  2.48k|            case TokenKind::KW_Local:
  ------------------
  |  Branch (411:13): [True: 723, False: 241k]
  ------------------
  412|  2.88k|            case TokenKind::KW_Global:
  ------------------
  |  Branch (412:13): [True: 394, False: 241k]
  ------------------
  413|  3.34k|            case TokenKind::KW_Static:
  ------------------
  |  Branch (413:13): [True: 461, False: 241k]
  ------------------
  414|  68.4k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (414:13): [True: 65.1k, False: 177k]
  ------------------
  415|  68.4k|                auto variable_declaration = ParseVariableAssignment();
  416|  68.4k|                if (!variable_declaration)
  ------------------
  |  Branch (416:21): [True: 5.39k, False: 63.0k]
  ------------------
  417|  5.39k|                {
  418|  5.39k|                    err("ERR: Failed to parse variable assignment!\n");
  419|  5.39k|                    break;
  420|  5.39k|                }
  421|       |
  422|  63.0k|                return phi::move(variable_declaration);
  423|  68.4k|            }
  424|       |
  425|       |            // If Statement
  426|  11.8k|            case TokenKind::KW_If: {
  ------------------
  |  Branch (426:13): [True: 11.8k, False: 230k]
  ------------------
  427|  11.8k|                auto if_statement = ParseIfStatement();
  428|  11.8k|                if (!if_statement)
  ------------------
  |  Branch (428:21): [True: 8.02k, False: 3.80k]
  ------------------
  429|  8.02k|                {
  430|  8.02k|                    err("ERR: Failed to parse if statement!\n");
  431|  8.02k|                    break;
  432|  8.02k|                }
  433|       |
  434|  3.80k|                return phi::move(if_statement);
  435|  11.8k|            }
  436|       |
  437|       |            // While statement
  438|  14.9k|            case TokenKind::KW_While: {
  ------------------
  |  Branch (438:13): [True: 14.9k, False: 227k]
  ------------------
  439|  14.9k|                auto while_statement = ParseWhileStatement();
  440|  14.9k|                if (!while_statement)
  ------------------
  |  Branch (440:21): [True: 10.0k, False: 4.89k]
  ------------------
  441|  10.0k|                {
  442|  10.0k|                    err("ERR: Failed to parse while statement!\n");
  443|  10.0k|                    break;
  444|  10.0k|                }
  445|       |
  446|  4.89k|                return phi::move(while_statement);
  447|  14.9k|            }
  448|       |
  449|   147k|            default: {
  ------------------
  |  Branch (449:13): [True: 147k, False: 95.2k]
  ------------------
  450|       |                // Try to parse ExpressionStatement
  451|   147k|                auto expression_statement = ParseExpressionStatement();
  452|   147k|                if (!expression_statement)
  ------------------
  |  Branch (452:21): [True: 85.3k, False: 61.6k]
  ------------------
  453|  85.3k|                {
  454|  85.3k|                    err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  455|  85.3k|                                    enum_name(token.GetTokenKind())));
  456|  85.3k|                    return {};
  457|  85.3k|                }
  458|       |
  459|  61.6k|                return phi::move(expression_statement);
  460|   147k|            }
  461|   242k|        }
  462|       |
  463|       |        // TODO: Proper error reporting
  464|  23.4k|        return {};
  465|   242k|    }
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  468|  14.9k|    {
  469|  14.9k|        const Token& token = CurrentToken();
  470|  14.9k|        if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (470:13): [True: 0, False: 14.9k]
  ------------------
  471|      0|        {
  472|       |            // TODO: Proper error
  473|      0|            return {};
  474|      0|        }
  475|  14.9k|        ConsumeCurrent();
  476|       |
  477|       |        // Next we MUST parse an Expression
  478|  14.9k|        auto while_condition_expression = ParseExpression();
  479|  14.9k|        if (!while_condition_expression)
  ------------------
  |  Branch (479:13): [True: 1.24k, False: 13.6k]
  ------------------
  480|  1.24k|        {
  481|       |            // TODO: Proper error
  482|  1.24k|            return {};
  483|  1.24k|        }
  484|       |
  485|  13.6k|        auto while_statement =
  486|  13.6k|                phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  487|       |
  488|       |        // Parse statements until KW_WEnd
  489|  37.5k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (489:16): [True: 37.4k, False: 162]
  |  Branch (489:16): [True: 32.5k, False: 5.05k]
  |  Branch (489:45): [True: 32.5k, False: 4.89k]
  ------------------
  490|  32.5k|        {
  491|       |            // Skip NewLines and comments
  492|  32.5k|            if (CurrentToken().GetTokenKind() == TokenKind::NewLine ||
  ------------------
  |  Branch (492:17): [True: 550, False: 31.9k]
  ------------------
  493|  32.5k|                CurrentToken().GetTokenKind() == TokenKind::Comment)
  ------------------
  |  Branch (493:17): [True: 196, False: 31.7k]
  ------------------
  494|    746|            {
  495|    746|                ConsumeCurrent();
  496|    746|                continue;
  497|    746|            }
  498|       |
  499|       |            // Parse statements
  500|  31.7k|            auto statement = ParseStatement();
  501|  31.7k|            if (!statement)
  ------------------
  |  Branch (501:17): [True: 8.63k, False: 23.1k]
  ------------------
  502|  8.63k|            {
  503|       |                // TODO: Propeer error
  504|  8.63k|                return {};
  505|  8.63k|            }
  506|       |
  507|  23.1k|            while_statement->m_Statements.emplace_back(statement.release_not_null());
  508|  23.1k|        }
  509|       |
  510|  5.05k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (510:13): [True: 162, False: 4.89k]
  ------------------
  511|    162|        {
  512|       |            // TODO: Proper error
  513|    162|            return {};
  514|    162|        }
  515|       |
  516|       |        // Next token MUST be KW_Wend
  517|  4.89k|        const Token& wend_token = CurrentToken();
  518|  4.89k|        if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (518:13): [True: 0, False: 4.89k]
  ------------------
  519|      0|        {
  520|       |            // TODO: Proper error
  521|      0|            return {};
  522|      0|        }
  523|  4.89k|        ConsumeCurrent();
  524|       |
  525|  4.89k|        return phi::move(while_statement);
  526|  4.89k|    }
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  529|  68.4k|    {
  530|  68.4k|        auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  531|       |
  532|  68.4k|        phi::boolean parsed_identifier = false;
  533|       |        // Parse all specifiers until we hit a VariableIdentifier
  534|   137k|        while (m_TokenStream->has_more() && !parsed_identifier)
  ------------------
  |  Branch (534:16): [True: 136k, False: 301]
  |  Branch (534:16): [True: 71.8k, False: 65.2k]
  |  Branch (534:45): [True: 71.8k, False: 64.9k]
  ------------------
  535|  71.8k|        {
  536|  71.8k|            const Token& current_token = CurrentToken();
  537|  71.8k|            ConsumeCurrent();
  538|       |
  539|  71.8k|            switch (current_token.GetTokenKind())
  540|  71.8k|            {
  541|  2.88k|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (541:17): [True: 2.88k, False: 68.9k]
  ------------------
  542|  2.88k|                    if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (542:25): [True: 1.12k, False: 1.76k]
  ------------------
  543|  1.12k|                    {
  544|       |                        // TODO: Error more than one const specifier
  545|  1.12k|                        err("ERR: More than one const specifier given\n");
  546|  1.12k|                        return {};
  547|  1.12k|                    }
  548|  1.76k|                    variable_declaration->m_IsConst = true;
  549|  1.76k|                    break;
  550|  2.88k|                }
  551|       |
  552|    719|                case TokenKind::KW_Static: {
  ------------------
  |  Branch (552:17): [True: 719, False: 71.0k]
  ------------------
  553|    719|                    if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (553:25): [True: 258, False: 461]
  ------------------
  554|    258|                    {
  555|       |                        // TODO: Error more than one static specifier
  556|    258|                        err("ERR: More than one static specifier given\n");
  557|    258|                        return {};
  558|    258|                    }
  559|    461|                    variable_declaration->m_IsStatic = true;
  560|    461|                    break;
  561|    719|                }
  562|       |
  563|    620|                case TokenKind::KW_Global: {
  ------------------
  |  Branch (563:17): [True: 620, False: 71.1k]
  ------------------
  564|    620|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (564:25): [True: 226, False: 394]
  ------------------
  565|    226|                    {
  566|       |                        // TODO: Error more than one scope specifier
  567|    226|                        err("ERR: More than one scope specifier given\n");
  568|    226|                        return {};
  569|    226|                    }
  570|    394|                    variable_declaration->m_Scope = VariableScope::Global;
  571|    394|                    break;
  572|    620|                }
  573|       |
  574|  1.17k|                case TokenKind::KW_Local: {
  ------------------
  |  Branch (574:17): [True: 1.17k, False: 70.6k]
  ------------------
  575|  1.17k|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (575:25): [True: 450, False: 723]
  ------------------
  576|    450|                    {
  577|       |                        // TODO: Error more than one scope specifier
  578|    450|                        err("ERR: More than one scope specifier given\n");
  579|    450|                        return {};
  580|    450|                    }
  581|    723|                    variable_declaration->m_Scope = VariableScope::Local;
  582|    723|                    break;
  583|  1.17k|                }
  584|       |
  585|  65.2k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (585:17): [True: 65.2k, False: 6.59k]
  ------------------
  586|       |                    // VariableIdentifiers begin with a '$'
  587|       |                    // Like: $MyVariable
  588|       |                    // So for the name we ignore the very first character
  589|  65.2k|                    PHI_ASSERT(current_token.GetText().length() > 1u);
  590|  65.2k|                    variable_declaration->m_VariableName =
  591|  65.2k|                            current_token.GetText().substring_view(1u);
  592|       |
  593|  65.2k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  594|  65.2k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  595|       |
  596|  65.2k|                    parsed_identifier = true;
  597|  65.2k|                    break;
  598|  1.17k|                }
  599|       |
  600|  1.19k|                default: {
  ------------------
  |  Branch (600:17): [True: 1.19k, False: 70.6k]
  ------------------
  601|       |                    // TODO: Error unexpected token
  602|  1.19k|                    return {};
  603|  1.17k|                }
  604|  71.8k|            }
  605|  71.8k|        }
  606|       |
  607|  65.2k|        if (!parsed_identifier)
  ------------------
  |  Branch (607:13): [True: 14, False: 65.2k]
  ------------------
  608|     14|        {
  609|       |            // TODO: Error variable declaration ends before the VariableIdentifier
  610|     14|            err("ERR: Missing variable identifier!\n");
  611|     14|            return {};
  612|     14|        }
  613|       |
  614|       |        // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  615|  65.2k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (615:13): [True: 287, False: 64.9k]
  ------------------
  616|    287|        {
  617|    287|            return variable_declaration;
  618|    287|        }
  619|       |
  620|       |        // Check for equals
  621|  64.9k|        const Token& next_token = CurrentToken();
  622|       |
  623|  64.9k|        if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (623:13): [True: 28.7k, False: 36.1k]
  ------------------
  624|  28.7k|        {
  625|  28.7k|            ConsumeCurrent();
  626|       |
  627|       |            // Now me MUST parse an expression
  628|  28.7k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
  629|  28.7k|            if (!expression)
  ------------------
  |  Branch (629:17): [True: 2.13k, False: 26.6k]
  ------------------
  630|  2.13k|            {
  631|       |                // TODO: Error failed to parse a valid expression
  632|  2.13k|                err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  633|  2.13k|                return {};
  634|  2.13k|            }
  635|       |
  636|  26.6k|            variable_declaration->m_InitialValueExpression = phi::move(expression);
  637|  26.6k|        }
  638|       |
  639|  62.7k|        return variable_declaration;
  640|  64.9k|    }
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  643|   147k|    {
  644|   147k|        auto expression = ParseExpression();
  645|   147k|        if (!expression)
  ------------------
  |  Branch (645:13): [True: 85.3k, False: 61.6k]
  ------------------
  646|  85.3k|        {
  647|  85.3k|            return {};
  648|  85.3k|        }
  649|       |
  650|  61.6k|        auto expression_statement =
  651|  61.6k|                phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  652|       |
  653|       |        // TODO: Afterwards we surely should parse a NewLine or EOF
  654|       |
  655|       |        // TODO: Make sure the expression is valid for an expression statement!
  656|       |
  657|  61.6k|        return phi::move(expression_statement);
  658|   147k|    }
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  661|  11.8k|    {
  662|  11.8k|        if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (662:13): [True: 0, False: 11.8k]
  ------------------
  663|      0|        {
  664|      0|            return {};
  665|      0|        }
  666|       |
  667|       |        // Next me MUST parse an expression
  668|  11.8k|        auto if_condition = ParseExpression();
  669|  11.8k|        if (!if_condition)
  ------------------
  |  Branch (669:13): [True: 1.29k, False: 10.5k]
  ------------------
  670|  1.29k|        {
  671|  1.29k|            err("ERR: failed to parse expression!\n");
  672|       |
  673|  1.29k|            return {};
  674|  1.29k|        }
  675|       |
  676|       |        // Next we MUST parse Then
  677|  10.5k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (677:13): [True: 3.01k, False: 7.50k]
  ------------------
  678|  3.01k|        {
  679|  3.01k|            err("ERR: Missing then!\n");
  680|       |
  681|  3.01k|            return {};
  682|  3.01k|        }
  683|       |
  684|  7.50k|        ConsumeNewLineAndComments();
  685|       |
  686|  7.50k|        IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  687|       |
  688|       |        // Next parse statements until we hit and EndIf, ElseIf or Else
  689|  15.7k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (689:16): [True: 15.7k, False: 82]
  |  Branch (689:16): [True: 10.6k, False: 5.17k]
  |  Branch (689:45): [True: 11.9k, False: 3.80k]
  ------------------
  690|  15.7k|               CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (690:16): [True: 10.8k, False: 1.06k]
  ------------------
  691|  15.7k|               CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (691:16): [True: 10.6k, False: 226]
  ------------------
  692|  10.6k|        {
  693|  10.6k|            auto statement = ParseStatement();
  694|  10.6k|            if (!statement)
  ------------------
  |  Branch (694:17): [True: 2.33k, False: 8.27k]
  ------------------
  695|  2.33k|            {
  696|  2.33k|                err("ERR: Failed to parse statement inside of IF\n");
  697|  2.33k|                return {};
  698|  2.33k|            }
  699|       |
  700|  8.27k|            if_case.body.emplace_back(statement.release_not_null());
  701|       |
  702|  8.27k|            ConsumeNewLineAndComments();
  703|  8.27k|        }
  704|       |
  705|  5.17k|        auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
  706|       |
  707|       |        // TODO: Handle ElseIf, Else
  708|       |
  709|  5.17k|        if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (709:13): [True: 1.36k, False: 3.80k]
  ------------------
  710|  1.36k|        {
  711|  1.36k|            err("ERR: Missing EndIf!\n");
  712|       |            // TODO: Proper Error
  713|  1.36k|            return {};
  714|  1.36k|        }
  715|       |
  716|  3.80k|        return phi::move(if_statement);
  717|  5.17k|    }
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
  720|  75.2k|    {
  721|  75.2k|        const Token& token = CurrentToken();
  722|  75.2k|        if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (722:13): [True: 0, False: 75.2k]
  ------------------
  723|      0|        {
  724|      0|            return {};
  725|      0|        }
  726|       |
  727|  75.2k|        if (token.GetText().length() > 18u)
  ------------------
  |  Branch (727:13): [True: 206, False: 75.0k]
  ------------------
  728|    206|        {
  729|       |            // TODO: Better check and proper error
  730|    206|            return {};
  731|    206|        }
  732|       |
  733|  75.0k|        phi::int64_t value{0};
  734|  75.0k|        phi::boolean parsing_hex{false};
  735|   160k|        for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (735:36): [True: 85.3k, False: 75.0k]
  ------------------
  736|  85.3k|        {
  737|  85.3k|            char character = token.GetText().at(index);
  738|       |
  739|       |            // Checking the second character
  740|  85.3k|            if (index == 1u)
  ------------------
  |  Branch (740:17): [True: 8.14k, False: 77.2k]
  ------------------
  741|  8.14k|            {
  742|  8.14k|                if (character == 'x' || character == 'X')
  ------------------
  |  Branch (742:21): [True: 247, False: 7.89k]
  |  Branch (742:41): [True: 1.66k, False: 6.23k]
  ------------------
  743|  1.91k|                {
  744|  1.91k|                    parsing_hex = true;
  745|  1.91k|                    continue;
  746|  1.91k|                }
  747|  8.14k|            }
  748|       |
  749|  83.4k|            if (parsing_hex)
  ------------------
  |  Branch (749:17): [True: 1.23k, False: 82.2k]
  ------------------
  750|  1.23k|            {
  751|  1.23k|                PHI_ASSERT(phi::is_hex_digit(character));
  752|       |
  753|  1.23k|                value <<= 4;
  754|  1.23k|                value |= phi::hex_digit_value(character).unsafe();
  755|  1.23k|            }
  756|  82.2k|            else
  757|  82.2k|            {
  758|  82.2k|                PHI_ASSERT(character >= '0' && character <= '9');
  759|       |
  760|  82.2k|                value *= 10;
  761|  82.2k|                value += (character - '0');
  762|  82.2k|            }
  763|  83.4k|        }
  764|       |
  765|  75.0k|        ConsumeCurrent();
  766|  75.0k|        return phi::make_scope<ASTIntegerLiteral>(value);
  767|  75.2k|    }
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
  770|  23.2k|    {
  771|  23.2k|        const Token& token = CurrentToken();
  772|  23.2k|        if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (772:13): [True: 0, False: 23.2k]
  ------------------
  773|      0|        {
  774|      0|            return {};
  775|      0|        }
  776|  23.2k|        ConsumeCurrent();
  777|       |
  778|  23.2k|        auto string_literal = phi::make_scope<ASTStringLiteral>();
  779|       |
  780|  23.2k|        const phi::usize length = token.GetText().length();
  781|       |        // Trim the trailing and leading "
  782|  23.2k|        string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
  783|       |
  784|  23.2k|        return phi::move(string_literal);
  785|  23.2k|    }
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
  788|   705k|    {
  789|   705k|        phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
  790|   705k|        if (!lhs_expression)
  ------------------
  |  Branch (790:13): [True: 558k, False: 147k]
  ------------------
  791|   558k|        {
  792|   558k|            return {};
  793|   558k|        }
  794|       |
  795|   147k|        return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
  796|   705k|    }
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
  799|   733k|    {
  800|   733k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (800:13): [True: 440, False: 732k]
  ------------------
  801|    440|        {
  802|       |            // TODO: Proper error
  803|    440|            return {};
  804|    440|        }
  805|       |
  806|   732k|        const Token& token = CurrentToken();
  807|   732k|        if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (807:13): [True: 1.83k, False: 730k]
  ------------------
  808|  1.83k|        {
  809|  1.83k|            const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
  810|  1.83k|            PHI_UNUSED_VARIABLE(op_precedence);
  811|  1.83k|            ConsumeCurrent();
  812|       |
  813|       |            // TODO: Implement me
  814|  1.83k|        }
  815|   730k|        else if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (815:18): [True: 472k, False: 258k]
  ------------------
  816|   472k|        {
  817|       |            // Consume the LParen
  818|   472k|            m_TokenStream->consume();
  819|       |
  820|   472k|            phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
  821|   472k|            if (!paren_expression)
  ------------------
  |  Branch (821:17): [True: 465k, False: 6.89k]
  ------------------
  822|   465k|            {
  823|       |                // TODO: Proper error
  824|   465k|                return {};
  825|   465k|            }
  826|       |
  827|  6.89k|            return phi::move(paren_expression);
  828|   472k|        }
  829|   258k|        else if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (829:18): [True: 75.2k, False: 183k]
  ------------------
  830|  75.2k|        {
  831|  75.2k|            phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
  832|  75.2k|            if (!int_literal)
  ------------------
  |  Branch (832:17): [True: 206, False: 75.0k]
  ------------------
  833|    206|            {
  834|       |                // TODO: Error failed to parse integer literal
  835|    206|                return {};
  836|    206|            }
  837|       |
  838|  75.0k|            return phi::move(int_literal);
  839|  75.2k|        }
  840|   183k|        else if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (840:18): [True: 23.2k, False: 159k]
  ------------------
  841|  23.2k|        {
  842|  23.2k|            auto string_literal_expression = ParseStringLiteral();
  843|  23.2k|            if (!string_literal_expression)
  ------------------
  |  Branch (843:17): [True: 0, False: 23.2k]
  ------------------
  844|      0|            {
  845|       |                // TODO: Proper error
  846|      0|                return {};
  847|      0|            }
  848|       |
  849|  23.2k|            return phi::move(string_literal_expression);
  850|  23.2k|        }
  851|       |
  852|       |        // Boolean literal
  853|   159k|        else if (token.GetTokenKind() == TokenKind::KW_True ||
  ------------------
  |  Branch (853:18): [True: 195, False: 159k]
  ------------------
  854|   159k|                 token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (854:18): [True: 322, False: 159k]
  ------------------
  855|    517|        {
  856|    517|            auto boolean_literal = ParseBooleanLiteral();
  857|    517|            if (!boolean_literal)
  ------------------
  |  Branch (857:17): [True: 0, False: 517]
  ------------------
  858|      0|            {
  859|       |                // TODO: Proper error
  860|      0|                return {};
  861|      0|            }
  862|       |
  863|    517|            return phi::move(boolean_literal);
  864|    517|        }
  865|       |
  866|       |        // Function call expression
  867|   159k|        else if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (867:18): [True: 43.9k, False: 115k]
  |  Branch (867:18): [True: 45.4k, False: 113k]
  |  Branch (867:75): [True: 1.46k, False: 113k]
  ------------------
  868|  45.4k|        {
  869|  45.4k|            auto function_call_expression = ParseFunctionCallExpression();
  870|  45.4k|            if (!function_call_expression)
  ------------------
  |  Branch (870:17): [True: 38.0k, False: 7.36k]
  ------------------
  871|  38.0k|            {
  872|       |                // TODO: Proper error
  873|  38.0k|                err("ERR: Failed to parse function call expression!\n");
  874|  38.0k|                return {};
  875|  38.0k|            }
  876|       |
  877|  7.36k|            return phi::move(function_call_expression);
  878|  45.4k|        }
  879|       |        // Variable expression
  880|   113k|        else if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (880:18): [True: 42.7k, False: 71.1k]
  ------------------
  881|  42.7k|        {
  882|  42.7k|            auto variable_expression = ParseVariableExpression();
  883|  42.7k|            if (!variable_expression)
  ------------------
  |  Branch (883:17): [True: 0, False: 42.7k]
  ------------------
  884|      0|            {
  885|       |                // TODO: Proper error
  886|      0|                err("ERR: Failed to parse Variable expression\n");
  887|      0|                return {};
  888|      0|            }
  889|       |
  890|  42.7k|            return phi::move(variable_expression);
  891|  42.7k|        }
  892|       |        // Keyword literal
  893|  71.1k|        else if (token.IsKeywordLiteral())
  ------------------
  |  Branch (893:18): [True: 4.97k, False: 66.1k]
  ------------------
  894|  4.97k|        {
  895|  4.97k|            auto keyword_literal = ParseKeywordliteral();
  896|  4.97k|            if (!keyword_literal)
  ------------------
  |  Branch (896:17): [True: 0, False: 4.97k]
  ------------------
  897|      0|            {
  898|       |                // TODO: Proper error
  899|      0|                err("ERR: Failed to parse keyword literal expression!\n");
  900|      0|                return {};
  901|      0|            }
  902|       |
  903|  4.97k|            return phi::move(keyword_literal);
  904|  4.97k|        }
  905|       |        // Float literal
  906|  66.1k|        else if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (906:18): [True: 6.05k, False: 60.1k]
  ------------------
  907|  6.05k|        {
  908|  6.05k|            auto float_literal = ParseFloatLiteral();
  909|  6.05k|            if (!float_literal)
  ------------------
  |  Branch (909:17): [True: 0, False: 6.05k]
  ------------------
  910|      0|            {
  911|       |                // TODO: Proper error
  912|      0|                err("ERR: Failed to parse float literal expression!\n");
  913|      0|                return {};
  914|      0|            }
  915|       |
  916|  6.05k|            return phi::move(float_literal);
  917|  6.05k|        }
  918|       |
  919|       |        // TODO: Error Unexpected token
  920|  61.9k|        err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
  921|  61.9k|                        enum_name(token.GetTokenKind())));
  922|  61.9k|        return {};
  923|   732k|    }
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
  927|   148k|    {
  928|   167k|        while (true)
  ------------------
  |  Branch (928:16): [Folded - Ignored]
  ------------------
  929|   167k|        {
  930|   167k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (930:17): [True: 876, False: 166k]
  ------------------
  931|    876|            {
  932|    876|                return phi::move(lhs);
  933|    876|            }
  934|       |
  935|   166k|            const Token& operator_token = CurrentToken();
  936|   166k|            if (!IsBinaryOperator(operator_token.GetTokenKind()))
  ------------------
  |  Branch (936:17): [True: 139k, False: 27.6k]
  ------------------
  937|   139k|            {
  938|       |                // If its not a binary operator just return the lhs expression
  939|   139k|                return phi::move(lhs);
  940|   139k|            }
  941|  27.6k|            int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
  942|  27.6k|            ConsumeCurrent();
  943|       |
  944|  27.6k|            if (token_precedence < precedence)
  ------------------
  |  Branch (944:17): [True: 460, False: 27.2k]
  ------------------
  945|    460|            {
  946|    460|                return phi::move(lhs);
  947|    460|            }
  948|       |
  949|       |            // This must be an binary expression
  950|  27.2k|            phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
  951|  27.2k|            if (!rhs_expression)
  ------------------
  |  Branch (951:17): [True: 7.33k, False: 19.8k]
  ------------------
  952|  7.33k|            {
  953|       |                // TODO: Proper error
  954|  7.33k|                return {};
  955|  7.33k|            }
  956|       |
  957|       |            // Nothing left to parse so directly return from here
  958|  19.8k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (958:17): [True: 93, False: 19.7k]
  ------------------
  959|     93|            {
  960|     93|                return phi::make_not_null_scope<ASTBinaryExpression>(
  961|     93|                        phi::move(lhs), operator_token.GetTokenKind(),
  962|     93|                        rhs_expression.release_not_null());
  963|     93|            }
  964|       |
  965|       |            // If BinOp binds less tightly with RHS than the operator after RHS, let
  966|       |            // the pending operator take RHS as its LHS.
  967|  19.7k|            const Token& next_token      = CurrentToken();
  968|  19.7k|            int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
  969|       |
  970|  19.7k|            if (token_precedence < next_precedence)
  ------------------
  |  Branch (970:17): [True: 1.40k, False: 18.3k]
  ------------------
  971|  1.40k|            {
  972|  1.40k|                rhs_expression =
  973|  1.40k|                        ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
  974|  1.40k|                if (!rhs_expression)
  ------------------
  |  Branch (974:21): [True: 587, False: 822]
  ------------------
  975|    587|                {
  976|       |                    // TODO: Proper error
  977|    587|                    return {};
  978|    587|                }
  979|  1.40k|            }
  980|       |
  981|       |            // Merge LHS/RHS.
  982|  19.2k|            lhs = phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
  983|  19.2k|                                                                operator_token.GetTokenKind(),
  984|  19.2k|                                                                rhs_expression.release_not_null());
  985|  19.2k|        }
  986|   148k|    }
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
  989|  45.4k|    {
  990|       |        // Parse the function name
  991|  45.4k|        const Token& function_identifier_token = CurrentToken();
  992|  45.4k|        if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (992:13): [True: 1.46k, False: 43.9k]
  |  Branch (992:13): [True: 0, False: 45.4k]
  ------------------
  993|  45.4k|            !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (993:13): [True: 0, False: 1.46k]
  ------------------
  994|      0|        {
  995|      0|            return {};
  996|      0|        }
  997|  45.4k|        ConsumeCurrent();
  998|       |
  999|  45.4k|        phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1000|  45.4k|                phi::make_scope<ASTFunctionCallExpression>();
 1001|  45.4k|        if (!function_call_expression)
  ------------------
  |  Branch (1001:13): [True: 0, False: 45.4k]
  ------------------
 1002|      0|        {
 1003|       |            // TODO: Proper error
 1004|      0|            return {};
 1005|      0|        }
 1006|       |
 1007|  45.4k|        if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1007:13): [True: 1.46k, False: 43.9k]
  ------------------
 1008|  1.46k|        {
 1009|  1.46k|            function_call_expression->m_IsBuiltIn       = true;
 1010|  1.46k|            function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
 1011|  1.46k|        }
 1012|  43.9k|        else
 1013|  43.9k|        {
 1014|  43.9k|            const phi::string_view function_name = function_identifier_token.GetText();
 1015|       |
 1016|  43.9k|            function_call_expression->m_IsBuiltIn    = false;
 1017|  43.9k|            function_call_expression->m_FunctionName = function_name;
 1018|  43.9k|        }
 1019|       |
 1020|       |        // TODO: These 2 checks should be combined
 1021|       |        // Now me MUST parse an LParen
 1022|  45.4k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1022:13): [True: 1.05k, False: 44.3k]
  ------------------
 1023|  1.05k|        {
 1024|       |            // TODO: Give proper error
 1025|  1.05k|            err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1026|  1.05k|                            std::string_view{function_call_expression->FunctionName()}));
 1027|  1.05k|            return {};
 1028|  1.05k|        }
 1029|       |
 1030|  44.3k|        const Token& left_paren_token = CurrentToken();
 1031|  44.3k|        ConsumeCurrent();
 1032|  44.3k|        if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1032:13): [True: 24.2k, False: 20.1k]
  ------------------
 1033|  24.2k|        {
 1034|       |            // TODO: Give error
 1035|  24.2k|            err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1036|  24.2k|                            std::string_view{function_call_expression->FunctionName()}));
 1037|  24.2k|            return {};
 1038|  24.2k|        }
 1039|       |
 1040|       |        // Now parse all the arguments (which are expressions) separated by commas or nothing
 1041|  20.1k|        function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1042|       |
 1043|       |        // Finally we MUST parse an RParen
 1044|  20.1k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1044:13): [True: 8.96k, False: 11.1k]
  ------------------
 1045|  8.96k|        {
 1046|  8.96k|            err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1047|  8.96k|                            std::string_view{function_call_expression->FunctionName()}));
 1048|       |            // TODO: Give proper error
 1049|  8.96k|            return {};
 1050|  8.96k|        }
 1051|       |
 1052|  11.1k|        const Token& right_paren_token = CurrentToken();
 1053|  11.1k|        ConsumeCurrent();
 1054|  11.1k|        if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1054:13): [True: 3.80k, False: 7.36k]
  ------------------
 1055|  3.80k|        {
 1056|  3.80k|            err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1057|  3.80k|                            std::string_view{function_call_expression->FunctionName()}));
 1058|       |            // TODO: Give Error
 1059|  3.80k|            return {};
 1060|  3.80k|        }
 1061|       |
 1062|       |        // Return result
 1063|  7.36k|        return function_call_expression;
 1064|  11.1k|    }
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1068|  20.1k|    {
 1069|  20.1k|        std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1070|       |
 1071|  31.3k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1071:16): [True: 31.2k, False: 160]
  |  Branch (1071:16): [True: 24.3k, False: 7.00k]
  |  Branch (1071:45): [True: 24.3k, False: 6.84k]
  ------------------
 1072|  24.3k|        {
 1073|       |            // Parse the expression
 1074|  24.3k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1075|  24.3k|            if (!expression)
  ------------------
  |  Branch (1075:17): [True: 13.1k, False: 11.2k]
  ------------------
 1076|  13.1k|            {
 1077|  13.1k|                err("ERR: While parsing expression for function call arguments\n");
 1078|       |                // TODO: Give Prober error
 1079|  13.1k|                arguments.clear();
 1080|  13.1k|                return arguments;
 1081|  13.1k|            }
 1082|       |
 1083|       |            // Add argument to parameters
 1084|  11.2k|            arguments.emplace_back(expression.release_not_null());
 1085|       |
 1086|       |            // Next Token MUST be a comma followed by another expression or RParen
 1087|  11.2k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1087:17): [True: 11.1k, False: 107]
  |  Branch (1087:17): [True: 204, False: 11.0k]
  |  Branch (1087:46): [True: 204, False: 10.9k]
  ------------------
 1088|    204|            {
 1089|    204|                ConsumeCurrent();
 1090|    204|            }
 1091|  11.2k|        }
 1092|       |
 1093|  7.00k|        return arguments;
 1094|  20.1k|    }
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1097|  42.7k|    {
 1098|  42.7k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1098:13): [True: 0, False: 42.7k]
  ------------------
 1099|      0|        {
 1100|       |            // TODO: Proper error
 1101|      0|            return {};
 1102|      0|        }
 1103|       |
 1104|  42.7k|        const Token& token = CurrentToken();
 1105|  42.7k|        if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1105:13): [True: 0, False: 42.7k]
  ------------------
 1106|      0|        {
 1107|       |            // TODO error
 1108|      0|            return {};
 1109|      0|        }
 1110|       |
 1111|  42.7k|        auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1112|  42.7k|        variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1113|       |
 1114|  42.7k|        ConsumeCurrent();
 1115|       |
 1116|  42.7k|        return phi::move(variable_expression);
 1117|  42.7k|    }
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1132|   472k|    {
 1133|       |        // NOTE: Me MUST have consumed the LParen before this
 1134|       |
 1135|   472k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1136|   472k|        if (!expression)
  ------------------
  |  Branch (1136:13): [True: 461k, False: 10.8k]
  ------------------
 1137|   461k|        {
 1138|       |            // TODO: Proper error
 1139|   461k|            return {};
 1140|   461k|        }
 1141|       |
 1142|  10.8k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1142:13): [True: 3.94k, False: 6.89k]
  ------------------
 1143|  3.94k|        {
 1144|       |            // TODO: Proper error expected closing paren
 1145|  3.94k|            return {};
 1146|  3.94k|        }
 1147|       |
 1148|  6.89k|        return phi::move(expression);
 1149|  10.8k|    }
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1152|    517|    {
 1153|    517|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1153:13): [True: 0, False: 517]
  ------------------
 1154|      0|        {
 1155|       |            // TODO: Proper error
 1156|      0|            return {};
 1157|      0|        }
 1158|       |
 1159|       |        // BooleanLiteral is either KW_True or KW_False
 1160|    517|        const Token& token = CurrentToken();
 1161|    517|        if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1161:13): [True: 195, False: 322]
  ------------------
 1162|    195|        {
 1163|    195|            ConsumeCurrent();
 1164|    195|            return phi::make_scope<ASTBooleanLiteral>(true);
 1165|    195|        }
 1166|       |
 1167|    322|        if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1167:13): [True: 322, False: 0]
  ------------------
 1168|    322|        {
 1169|    322|            ConsumeCurrent();
 1170|    322|            return phi::make_scope<ASTBooleanLiteral>(false);
 1171|    322|        }
 1172|       |
 1173|       |        // TODO: Proper error
 1174|      0|        return {};
 1175|    322|    }
_ZN10OpenAutoIt6Parser19ParseKeywordliteralEv:
 1178|  4.97k|    {
 1179|  4.97k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1179:13): [True: 0, False: 4.97k]
  ------------------
 1180|      0|        {
 1181|       |            // TODO: Proper error
 1182|      0|            return {};
 1183|      0|        }
 1184|       |
 1185|  4.97k|        const Token& token = CurrentToken();
 1186|  4.97k|        if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1186:13): [True: 4.97k, False: 0]
  ------------------
 1187|  4.97k|        {
 1188|  4.97k|            ConsumeCurrent();
 1189|  4.97k|            return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1190|  4.97k|        }
 1191|       |
 1192|       |        // TODO: Proper error
 1193|      0|        return {};
 1194|  4.97k|    }
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1197|  6.05k|    {
 1198|  6.05k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1198:13): [True: 0, False: 6.05k]
  ------------------
 1199|      0|        {
 1200|       |            // TODO: Proper error
 1201|      0|            return {};
 1202|      0|        }
 1203|       |
 1204|  6.05k|        const Token& token = CurrentToken();
 1205|  6.05k|        if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1205:13): [True: 6.05k, False: 0]
  ------------------
 1206|  6.05k|        {
 1207|  6.05k|            ConsumeCurrent();
 1208|       |
 1209|  6.05k|            char*    ptr   = nullptr;
 1210|  6.05k|            phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1211|       |
 1212|  6.05k|            return phi::make_scope<ASTFloatLiteral>(value);
 1213|  6.05k|        }
 1214|       |
 1215|       |        // TODO: Proper error
 1216|      0|        return {};
 1217|  6.05k|    }
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   69|  49.3k|        {
   70|  49.3k|            int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   71|       |            //PHI_ASSERT(precedence != 0);
   72|       |
   73|  49.3k|            return precedence;
   74|  49.3k|        }

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  4.96k|    {
   31|       |#if defined(PHI_DEBUG)
   32|       |        PHI_ASSERT(!m_Finialized);
   33|       |#endif
   34|       |
   35|  4.96k|        m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |        m_Finialized = true;
   38|       |#endif
   39|  4.96k|    }
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   69|  4.76M|    {
   70|       |#if defined(PHI_DEBUG)
   71|       |        PHI_ASSERT(m_Finialized);
   72|       |#endif
   73|       |
   74|  4.76M|        return m_Index < m_Tokens.size();
   75|  4.76M|    }
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   78|  3.52M|    {
   79|       |#if defined(PHI_DEBUG)
   80|       |        PHI_ASSERT(m_Finialized);
   81|       |#endif
   82|       |
   83|  3.52M|        return m_Index >= m_Tokens.size();
   84|  3.52M|    }
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   87|  2.42M|    {
   88|  2.42M|        PHI_ASSERT(!reached_end());
   89|       |#if defined(PHI_DEBUG)
   90|       |        PHI_ASSERT(m_Finialized);
   91|       |#endif
   92|       |
   93|  2.42M|        return m_Tokens[m_Index.unsafe()];
   94|  2.42M|    }
_ZN10OpenAutoIt11TokenStream7consumeEv:
   97|  1.10M|    {
   98|  1.10M|        PHI_ASSERT(!reached_end());
   99|       |#if defined(PHI_DEBUG)
  100|       |        PHI_ASSERT(m_Finialized);
  101|       |#endif
  102|       |
  103|  1.10M|        m_Index += 1u;
  104|  1.10M|    }

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
  101|   395k|    {
  102|   395k|        if (output_enabled)
  ------------------
  |  Branch (102:13): [True: 0, False: 395k]
  ------------------
  103|      0|        {
  104|      0|            std::cerr << data;
  105|      0|        }
  106|   395k|    }
_ZN10OpenAutoIt14disable_outputEv:
  109|  4.96k|    {
  110|  4.96k|        output_enabled = false;
  111|  4.96k|    }

