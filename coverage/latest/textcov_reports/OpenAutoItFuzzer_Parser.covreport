_ZN3fmt3v106detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  374|  6.13M|    typename std::make_unsigned<Int>::type {
  375|  6.13M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  333|  12.2M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (333:35): [Folded - Ignored]
  |  |  |  Branch (333:35): [True: 6.13M, False: 0]
  |  |  ------------------
  ------------------
  376|  6.13M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  377|  6.13M|}
_ZN3fmt3v106detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  301|  50.0M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v1017basic_string_viewIcE4sizeEv:
  442|  34.4M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  301|  6.13M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE4sizeEv:
  834|  7.06M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail6bufferIcEC2EPcmm:
  806|  7.06M|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt3v106detail6bufferIcE3setEPcm:
  812|  7.06M|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  813|  7.06M|    ptr_ = buf_data;
  814|  7.06M|    capacity_ = buf_capacity;
  815|  7.06M|  }
_ZN3fmt3v106detail13ignore_unusedIJbEEEvDpRKT_:
  301|    381|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE8capacityEv:
  837|    691|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt3v106detail6bufferIcE4dataEv:
  840|  7.06M|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt3v1017basic_string_viewIcE5beginEv:
  444|  13.1M|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt3v1017basic_string_viewIcE3endEv:
  445|  13.1M|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKc:
  425|  6.53M|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt3v106detail10locale_refC2Ev:
 1533|  12.2M|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZNK3fmt3v1019basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2725|   927k|  FMT_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt3v1016make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJEEENS0_16format_arg_storeIT_JDpNSt3__19remove_cvINS7_16remove_referenceIT0_E4typeEE4typeEEEEDpRSA_:
 1814|   927k|    -> format_arg_store<Context, remove_cvref_t<T>...> {
 1815|   927k|  return {args...};
 1816|   927k|}
_ZN3fmt3v1016format_arg_storeINS0_20basic_format_contextINS0_8appenderEcEEJEEC2IJEEEDpRT_:
 1797|   927k|        data_{detail::make_arg<is_packed, Context>(args)...} {
 1798|   927k|    if (detail::const_check(num_named_args != 0))
  ------------------
  |  Branch (1798:9): [Folded - Ignored]
  ------------------
 1799|      0|      detail::init_named_args(data_.named_args(), 0, 0, args...);
 1800|   927k|  }
_ZN3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EEC2IJEEEDpRKT_:
 1166|   927k|  FMT_CONSTEXPR FMT_INLINE arg_data(const U&... init) : args_{init...} {}
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1259|  7.06M|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt3v109monostateC2Ev:
  276|  7.06M|  constexpr monostate() {}
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2IJEEERKNS0_16format_arg_storeIS4_JDpT_EEE:
 1898|   927k|                          store.data_.args()) {}
_ZNK3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE4argsEv:
 1167|   927k|  FMT_CONSTEXPR FMT_INLINE auto args() const -> const T* { return args_; }
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1882|  7.06M|      : desc_(desc), values_(values) {}
_ZNK3fmt3v1017basic_string_viewIcE4dataEv:
  439|  14.1M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKcm:
  410|  14.1M|      : data_(s), size_(count) {}
_ZN3fmt3v106detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  374|  43.9M|    typename std::make_unsigned<Int>::type {
  375|  43.9M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  333|  87.8M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (333:35): [Folded - Ignored]
  |  |  |  Branch (333:35): [True: 43.9M, False: 0]
  |  |  ------------------
  ------------------
  376|  43.9M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  377|  43.9M|}
_ZN3fmt3v106detail6bufferIcE11try_reserveEm:
  859|  18.8M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  860|  18.8M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (860:9): [True: 381, False: 18.8M]
  ------------------
  861|  18.8M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 1920|  6.13M|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1921|  6.13M|    format_arg arg;
 1922|  6.13M|    if (!is_packed()) {
  ------------------
  |  Branch (1922:9): [True: 0, False: 6.13M]
  ------------------
 1923|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1923:11): [True: 0, False: 0]
  ------------------
 1924|      0|      return arg;
 1925|      0|    }
 1926|  6.13M|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1926:9): [True: 0, False: 6.13M]
  ------------------
 1927|  6.13M|    arg.type_ = type(id);
 1928|  6.13M|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1928:9): [True: 0, False: 6.13M]
  ------------------
 1929|  6.13M|    arg.value_ = values_[id];
 1930|  6.13M|    return arg;
 1931|  6.13M|  }
_ZN3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1631|  6.13M|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1867|  6.13M|  constexpr auto is_packed() const -> bool {
 1868|  6.13M|    return (desc_ & detail::is_unpacked_bit) == 0;
 1869|  6.13M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1874|  6.13M|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1875|  6.13M|    int shift = index * detail::packed_arg_bits;
 1876|  6.13M|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1877|  6.13M|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1878|  6.13M|  }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1633|  6.13M|  constexpr explicit operator bool() const noexcept {
 1634|  6.13M|    return type_ != detail::type::none_type;
 1635|  6.13M|  }
_ZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  762|  19.3M|    -> Container& {
  763|  19.3M|  using base = std::back_insert_iterator<Container>;
  764|  19.3M|  struct accessor : base {
  765|  19.3M|    accessor(base b) : base(b) {}
  766|  19.3M|    using base::container;
  767|  19.3M|  };
  768|  19.3M|  return *accessor(it).container;
  769|  19.3M|}
_ZZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  765|  19.3M|    accessor(base b) : base(b) {}
_ZNK3fmt3v106detail6fill_tIcE4sizeEv:
 1998|  6.13M|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt3v106detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1487|  19.3M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1488|  19.3M|  get_container(out).append(begin, end);
 1489|  19.3M|  return out;
 1490|  19.3M|}
_ZN3fmt3v1012format_specsIcEC2Ev:
 2048|  6.13M|        localized(false) {}
_ZN3fmt3v1026basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  665|  7.06M|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1720|  7.06M|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE3outEv:
 1735|  19.3M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2468|  7.06M|    basic_string_view<Char> format_str, Handler&& handler) {
 2469|  7.06M|  auto begin = format_str.data();
 2470|  7.06M|  auto end = begin + format_str.size();
 2471|  7.06M|  if (end - begin < 32) {
  ------------------
  |  Branch (2471:7): [True: 4.10M, False: 2.96M]
  ------------------
 2472|       |    // Use a simple loop instead of memchr for small strings.
 2473|  4.10M|    const Char* p = begin;
 2474|   102M|    while (p != end) {
  ------------------
  |  Branch (2474:12): [True: 98.4M, False: 4.10M]
  ------------------
 2475|  98.4M|      auto c = *p++;
 2476|  98.4M|      if (c == '{') {
  ------------------
  |  Branch (2476:11): [True: 3.17M, False: 95.2M]
  ------------------
 2477|  3.17M|        handler.on_text(begin, p - 1);
 2478|  3.17M|        begin = p = parse_replacement_field(p - 1, end, handler);
 2479|  95.2M|      } else if (c == '}') {
  ------------------
  |  Branch (2479:18): [True: 0, False: 95.2M]
  ------------------
 2480|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2480:13): [True: 0, False: 0]
  |  Branch (2480:25): [True: 0, False: 0]
  ------------------
 2481|      0|          return handler.on_error("unmatched '}' in format string");
 2482|      0|        handler.on_text(begin, p);
 2483|      0|        begin = ++p;
 2484|      0|      }
 2485|  98.4M|    }
 2486|  4.10M|    handler.on_text(begin, end);
 2487|  4.10M|    return;
 2488|  4.10M|  }
 2489|  2.96M|  struct writer {
 2490|  2.96M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2491|  2.96M|      if (from == to) return;
 2492|  2.96M|      for (;;) {
 2493|  2.96M|        const Char* p = nullptr;
 2494|  2.96M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2495|  2.96M|          return handler_.on_text(from, to);
 2496|  2.96M|        ++p;
 2497|  2.96M|        if (p == to || *p != '}')
 2498|  2.96M|          return handler_.on_error("unmatched '}' in format string");
 2499|  2.96M|        handler_.on_text(from, p);
 2500|  2.96M|        from = p + 1;
 2501|  2.96M|      }
 2502|  2.96M|    }
 2503|  2.96M|    Handler& handler_;
 2504|  2.96M|  } write = {handler};
 2505|  5.92M|  while (begin != end) {
  ------------------
  |  Branch (2505:10): [True: 5.92M, False: 9]
  ------------------
 2506|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2507|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2508|  5.92M|    const Char* p = begin;
 2509|  5.92M|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2509:9): [True: 5.92M, False: 0]
  |  Branch (2509:26): [True: 2.96M, False: 2.96M]
  ------------------
 2510|  2.96M|      return write(begin, end);
 2511|  2.96M|    write(begin, p);
 2512|  2.96M|    begin = parse_replacement_field(p, end, handler);
 2513|  2.96M|  }
 2514|  2.96M|}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1738|  19.3M|  void advance_to(iterator it) {
 1739|  19.3M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1739:9): [Folded - Ignored]
  ------------------
 1740|  19.3M|  }
_ZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2431|  6.13M|                                           Handler&& handler) -> const Char* {
 2432|  6.13M|  struct id_adapter {
 2433|  6.13M|    Handler& handler;
 2434|  6.13M|    int arg_id;
 2435|       |
 2436|  6.13M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2437|  6.13M|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2438|  6.13M|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2439|  6.13M|      arg_id = handler.on_arg_id(id);
 2440|  6.13M|    }
 2441|  6.13M|  };
 2442|       |
 2443|  6.13M|  ++begin;
 2444|  6.13M|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2444:7): [True: 0, False: 6.13M]
  ------------------
 2445|  6.13M|  if (*begin == '}') {
  ------------------
  |  Branch (2445:7): [True: 0, False: 6.13M]
  ------------------
 2446|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2447|  6.13M|  } else if (*begin == '{') {
  ------------------
  |  Branch (2447:14): [True: 0, False: 6.13M]
  ------------------
 2448|      0|    handler.on_text(begin, begin + 1);
 2449|  6.13M|  } else {
 2450|  6.13M|    auto adapter = id_adapter{handler, 0};
 2451|  6.13M|    begin = parse_arg_id(begin, end, adapter);
 2452|  6.13M|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2452:14): [True: 6.13M, False: 0]
  ------------------
 2453|  6.13M|    if (c == '}') {
  ------------------
  |  Branch (2453:9): [True: 0, False: 6.13M]
  ------------------
 2454|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2455|  6.13M|    } else if (c == ':') {
  ------------------
  |  Branch (2455:16): [True: 6.13M, False: 0]
  ------------------
 2456|  6.13M|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2457|  6.13M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2457:11): [True: 0, False: 6.13M]
  |  Branch (2457:27): [True: 0, False: 6.13M]
  ------------------
 2458|      0|        return handler.on_error("unknown format specifier"), end;
 2459|  6.13M|    } else {
 2460|      0|      return handler.on_error("missing '}' in format string"), end;
 2461|      0|    }
 2462|  6.13M|  }
 2463|  6.13M|  return begin + 1;
 2464|  6.13M|}
_ZNK3fmt3v1020basic_format_contextINS0_8appenderEcE3argEi:
 1722|  6.13M|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE6localeEv:
 1742|  6.13M|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt3v1026basic_format_parse_contextIcE11next_arg_idEv:
  689|  6.13M|  FMT_CONSTEXPR auto next_arg_id() -> int {
  690|  6.13M|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (690:9): [True: 0, False: 6.13M]
  ------------------
  691|      0|      detail::throw_format_error(
  692|      0|          "cannot switch from manual to automatic argument indexing");
  693|      0|      return 0;
  694|      0|    }
  695|  6.13M|    int id = next_arg_id_++;
  696|  6.13M|    do_check_arg_id(id);
  697|  6.13M|    return id;
  698|  6.13M|  }
_ZN3fmt3v1026basic_format_parse_contextIcE15do_check_arg_idEi:
 1038|  6.13M|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
 1039|       |  // Argument id is only checked at compile-time during parsing because
 1040|       |  // formatting has its own validation.
 1041|  6.13M|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (1041:7): [Folded - Ignored]
  ------------------
 1042|  6.13M|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (1042:8): [Folded - Ignored]
  |  Branch (1042:28): [Folded - Ignored]
  ------------------
 1043|      0|    using context = detail::compile_parse_context<Char>;
 1044|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (1044:9): [True: 0, False: 0]
  ------------------
 1045|      0|      detail::throw_format_error("argument not found");
 1046|      0|  }
 1047|  6.13M|}
_ZN3fmt3v106detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2196|  6.13M|                                           Handler&& handler) -> const Char* {
 2197|  6.13M|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  333|  6.13M|      fmt::detail::ignore_unused((condition), (message))
  ------------------
 2198|  6.13M|  Char c = *begin;
 2199|  6.13M|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2199:7): [True: 6.13M, False: 0]
  |  Branch (2199:19): [True: 0, False: 6.13M]
  ------------------
 2200|  6.13M|  handler.on_auto();
 2201|  6.13M|  return begin;
 2202|  6.13M|}
_ZZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2436|  6.13M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1637|  12.2M|  auto type() const -> detail::type { return type_; }
_ZN3fmt3v106detail7arg_refIcEC2Ev:
 2057|  12.2M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt3v106detail7arg_refIcE5valueC2Ei:
 2072|  12.2M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2266|  6.13M|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2267|  6.13M|  auto c = '\0';
 2268|  6.13M|  if (end - begin > 1) {
  ------------------
  |  Branch (2268:7): [True: 6.13M, False: 0]
  ------------------
 2269|  6.13M|    auto next = to_ascii(begin[1]);
 2270|  6.13M|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2270:9): [True: 6.13M, False: 0]
  ------------------
 2271|  6.13M|  } else {
 2272|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2272:9): [True: 0, False: 0]
  ------------------
 2273|      0|    c = to_ascii(*begin);
 2274|      0|  }
 2275|       |
 2276|  6.13M|  struct {
 2277|  6.13M|    state current_state = state::start;
 2278|  6.13M|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2279|  6.13M|      if (current_state >= s || !valid)
 2280|  6.13M|        throw_format_error("invalid format specifier");
 2281|  6.13M|      current_state = s;
 2282|  6.13M|    }
 2283|  6.13M|  } enter_state;
 2284|       |
 2285|  6.13M|  using pres = presentation_type;
 2286|  6.13M|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2287|  6.13M|  struct {
 2288|  6.13M|    const Char*& begin;
 2289|  6.13M|    dynamic_format_specs<Char>& specs;
 2290|  6.13M|    type arg_type;
 2291|       |
 2292|  6.13M|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2293|  6.13M|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
 2294|  6.13M|      specs.type = type;
 2295|  6.13M|      return begin + 1;
 2296|  6.13M|    }
 2297|  6.13M|  } parse_presentation_type{begin, specs, arg_type};
 2298|       |
 2299|  6.13M|  for (;;) {
 2300|  6.13M|    switch (c) {
 2301|      0|    case '<':
  ------------------
  |  Branch (2301:5): [True: 0, False: 6.13M]
  ------------------
 2302|      0|    case '>':
  ------------------
  |  Branch (2302:5): [True: 0, False: 6.13M]
  ------------------
 2303|      0|    case '^':
  ------------------
  |  Branch (2303:5): [True: 0, False: 6.13M]
  ------------------
 2304|      0|      enter_state(state::align);
 2305|      0|      specs.align = parse_align(c);
 2306|      0|      ++begin;
 2307|      0|      break;
 2308|      0|    case '+':
  ------------------
  |  Branch (2308:5): [True: 0, False: 6.13M]
  ------------------
 2309|      0|    case '-':
  ------------------
  |  Branch (2309:5): [True: 0, False: 6.13M]
  ------------------
 2310|      0|    case ' ':
  ------------------
  |  Branch (2310:5): [True: 0, False: 6.13M]
  ------------------
 2311|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2312|      0|      switch (c) {
  ------------------
  |  Branch (2312:15): [True: 0, False: 0]
  ------------------
 2313|      0|      case '+':
  ------------------
  |  Branch (2313:7): [True: 0, False: 0]
  ------------------
 2314|      0|        specs.sign = sign::plus;
 2315|      0|        break;
 2316|      0|      case '-':
  ------------------
  |  Branch (2316:7): [True: 0, False: 0]
  ------------------
 2317|      0|        specs.sign = sign::minus;
 2318|      0|        break;
 2319|      0|      case ' ':
  ------------------
  |  Branch (2319:7): [True: 0, False: 0]
  ------------------
 2320|      0|        specs.sign = sign::space;
 2321|      0|        break;
 2322|      0|      }
 2323|      0|      ++begin;
 2324|      0|      break;
 2325|      0|    case '#':
  ------------------
  |  Branch (2325:5): [True: 0, False: 6.13M]
  ------------------
 2326|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2327|      0|      specs.alt = true;
 2328|      0|      ++begin;
 2329|      0|      break;
 2330|      0|    case '0':
  ------------------
  |  Branch (2330:5): [True: 0, False: 6.13M]
  ------------------
 2331|      0|      enter_state(state::zero);
 2332|      0|      if (!is_arithmetic_type(arg_type))
  ------------------
  |  Branch (2332:11): [True: 0, False: 0]
  ------------------
 2333|      0|        throw_format_error("format specifier requires numeric argument");
 2334|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2334:11): [True: 0, False: 0]
  ------------------
 2335|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2336|      0|        specs.align = align::numeric;
 2337|      0|        specs.fill[0] = Char('0');
 2338|      0|      }
 2339|      0|      ++begin;
 2340|      0|      break;
 2341|      0|    case '1':
  ------------------
  |  Branch (2341:5): [True: 0, False: 6.13M]
  ------------------
 2342|      0|    case '2':
  ------------------
  |  Branch (2342:5): [True: 0, False: 6.13M]
  ------------------
 2343|      0|    case '3':
  ------------------
  |  Branch (2343:5): [True: 0, False: 6.13M]
  ------------------
 2344|      0|    case '4':
  ------------------
  |  Branch (2344:5): [True: 0, False: 6.13M]
  ------------------
 2345|      0|    case '5':
  ------------------
  |  Branch (2345:5): [True: 0, False: 6.13M]
  ------------------
 2346|      0|    case '6':
  ------------------
  |  Branch (2346:5): [True: 0, False: 6.13M]
  ------------------
 2347|      0|    case '7':
  ------------------
  |  Branch (2347:5): [True: 0, False: 6.13M]
  ------------------
 2348|      0|    case '8':
  ------------------
  |  Branch (2348:5): [True: 0, False: 6.13M]
  ------------------
 2349|      0|    case '9':
  ------------------
  |  Branch (2349:5): [True: 0, False: 6.13M]
  ------------------
 2350|      0|    case '{':
  ------------------
  |  Branch (2350:5): [True: 0, False: 6.13M]
  ------------------
 2351|      0|      enter_state(state::width);
 2352|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2353|      0|      break;
 2354|      0|    case '.':
  ------------------
  |  Branch (2354:5): [True: 0, False: 6.13M]
  ------------------
 2355|      0|      enter_state(state::precision,
 2356|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2357|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2358|      0|                              ctx);
 2359|      0|      break;
 2360|      0|    case 'L':
  ------------------
  |  Branch (2360:5): [True: 0, False: 6.13M]
  ------------------
 2361|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2362|      0|      specs.localized = true;
 2363|      0|      ++begin;
 2364|      0|      break;
 2365|      0|    case 'd':
  ------------------
  |  Branch (2365:5): [True: 0, False: 6.13M]
  ------------------
 2366|      0|      return parse_presentation_type(pres::dec, integral_set);
 2367|      0|    case 'o':
  ------------------
  |  Branch (2367:5): [True: 0, False: 6.13M]
  ------------------
 2368|      0|      return parse_presentation_type(pres::oct, integral_set);
 2369|      0|    case 'x':
  ------------------
  |  Branch (2369:5): [True: 0, False: 6.13M]
  ------------------
 2370|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2371|      0|    case 'X':
  ------------------
  |  Branch (2371:5): [True: 0, False: 6.13M]
  ------------------
 2372|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2373|      0|    case 'b':
  ------------------
  |  Branch (2373:5): [True: 0, False: 6.13M]
  ------------------
 2374|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2375|      0|    case 'B':
  ------------------
  |  Branch (2375:5): [True: 0, False: 6.13M]
  ------------------
 2376|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2377|      0|    case 'a':
  ------------------
  |  Branch (2377:5): [True: 0, False: 6.13M]
  ------------------
 2378|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2379|      0|    case 'A':
  ------------------
  |  Branch (2379:5): [True: 0, False: 6.13M]
  ------------------
 2380|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2381|      0|    case 'e':
  ------------------
  |  Branch (2381:5): [True: 0, False: 6.13M]
  ------------------
 2382|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2383|      0|    case 'E':
  ------------------
  |  Branch (2383:5): [True: 0, False: 6.13M]
  ------------------
 2384|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2385|      0|    case 'f':
  ------------------
  |  Branch (2385:5): [True: 0, False: 6.13M]
  ------------------
 2386|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2387|      0|    case 'F':
  ------------------
  |  Branch (2387:5): [True: 0, False: 6.13M]
  ------------------
 2388|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2389|      0|    case 'g':
  ------------------
  |  Branch (2389:5): [True: 0, False: 6.13M]
  ------------------
 2390|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2391|      0|    case 'G':
  ------------------
  |  Branch (2391:5): [True: 0, False: 6.13M]
  ------------------
 2392|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2393|      0|    case 'c':
  ------------------
  |  Branch (2393:5): [True: 0, False: 6.13M]
  ------------------
 2394|      0|      return parse_presentation_type(pres::chr, integral_set);
 2395|  6.13M|    case 's':
  ------------------
  |  Branch (2395:5): [True: 6.13M, False: 0]
  ------------------
 2396|  6.13M|      return parse_presentation_type(pres::string,
 2397|  6.13M|                                     bool_set | string_set | cstring_set);
 2398|      0|    case 'p':
  ------------------
  |  Branch (2398:5): [True: 0, False: 6.13M]
  ------------------
 2399|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2400|      0|    case '?':
  ------------------
  |  Branch (2400:5): [True: 0, False: 6.13M]
  ------------------
 2401|      0|      return parse_presentation_type(pres::debug,
 2402|      0|                                     char_set | string_set | cstring_set);
 2403|      0|    case '}':
  ------------------
  |  Branch (2403:5): [True: 0, False: 6.13M]
  ------------------
 2404|      0|      return begin;
 2405|      0|    default: {
  ------------------
  |  Branch (2405:5): [True: 0, False: 6.13M]
  ------------------
 2406|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2406:11): [True: 0, False: 0]
  ------------------
 2407|       |      // Parse fill and alignment.
 2408|      0|      auto fill_end = begin + code_point_length(begin);
 2409|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2409:11): [True: 0, False: 0]
  ------------------
 2410|      0|        throw_format_error("invalid format specifier");
 2411|      0|        return begin;
 2412|      0|      }
 2413|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2413:11): [True: 0, False: 0]
  ------------------
 2414|      0|        throw_format_error("invalid fill character '{'");
 2415|      0|        return begin;
 2416|      0|      }
 2417|      0|      auto align = parse_align(to_ascii(*fill_end));
 2418|      0|      enter_state(state::align, align != align::none);
 2419|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2420|      0|      specs.align = align;
 2421|      0|      begin = fill_end + 1;
 2422|      0|    }
 2423|  6.13M|    }
 2424|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2424:9): [True: 0, False: 0]
  ------------------
 2425|      0|    c = to_ascii(*begin);
 2426|      0|  }
 2427|  6.13M|}
_ZN3fmt3v106detail8to_asciiIcLi0EEEcT_:
 2091|  12.2M|constexpr auto to_ascii(Char c) -> char {
 2092|  12.2M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2092:10): [True: 12.2M, False: 0]
  ------------------
 2093|  12.2M|}
_ZN3fmt3v106detail11parse_alignEc:
 2149|  6.13M|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2150|  6.13M|  switch (c) {
  ------------------
  |  Branch (2150:11): [True: 6.13M, False: 0]
  ------------------
 2151|      0|  case '<':
  ------------------
  |  Branch (2151:3): [True: 0, False: 6.13M]
  ------------------
 2152|      0|    return align::left;
 2153|      0|  case '>':
  ------------------
  |  Branch (2153:3): [True: 0, False: 6.13M]
  ------------------
 2154|      0|    return align::right;
 2155|      0|  case '^':
  ------------------
  |  Branch (2155:3): [True: 0, False: 6.13M]
  ------------------
 2156|      0|    return align::center;
 2157|  6.13M|  }
 2158|  6.13M|  return align::none;
 2159|  6.13M|}
_ZN3fmt3v106detail2inENS1_4typeEi:
  610|  6.13M|constexpr auto in(type t, int set) -> bool {
  611|  6.13M|  return ((set >> static_cast<int>(t)) & 1) != 0;
  612|  6.13M|}
_ZZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2292|  6.13M|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2293|  6.13M|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
  ------------------
  |  Branch (2293:11): [True: 0, False: 6.13M]
  ------------------
 2294|  6.13M|      specs.type = type;
 2295|  6.13M|      return begin + 1;
 2296|  6.13M|    }
_ZN3fmt3v1016visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1655|  6.13M|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1656|  6.13M|  switch (arg.type_) {
  ------------------
  |  Branch (1656:11): [True: 0, False: 6.13M]
  ------------------
 1657|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1657:3): [True: 0, False: 6.13M]
  ------------------
 1658|      0|    break;
 1659|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1659:3): [True: 0, False: 6.13M]
  ------------------
 1660|      0|    return vis(arg.value_.int_value);
 1661|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1661:3): [True: 0, False: 6.13M]
  ------------------
 1662|      0|    return vis(arg.value_.uint_value);
 1663|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1663:3): [True: 0, False: 6.13M]
  ------------------
 1664|      0|    return vis(arg.value_.long_long_value);
 1665|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1665:3): [True: 0, False: 6.13M]
  ------------------
 1666|      0|    return vis(arg.value_.ulong_long_value);
 1667|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1667:3): [True: 0, False: 6.13M]
  ------------------
 1668|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1669|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1669:3): [True: 0, False: 6.13M]
  ------------------
 1670|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1671|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1671:3): [True: 0, False: 6.13M]
  ------------------
 1672|      0|    return vis(arg.value_.bool_value);
 1673|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1673:3): [True: 0, False: 6.13M]
  ------------------
 1674|      0|    return vis(arg.value_.char_value);
 1675|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1675:3): [True: 0, False: 6.13M]
  ------------------
 1676|      0|    return vis(arg.value_.float_value);
 1677|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1677:3): [True: 0, False: 6.13M]
  ------------------
 1678|      0|    return vis(arg.value_.double_value);
 1679|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1679:3): [True: 0, False: 6.13M]
  ------------------
 1680|      0|    return vis(arg.value_.long_double_value);
 1681|  5.16M|  case detail::type::cstring_type:
  ------------------
  |  Branch (1681:3): [True: 5.16M, False: 966k]
  ------------------
 1682|  5.16M|    return vis(arg.value_.string.data);
 1683|   966k|  case detail::type::string_type:
  ------------------
  |  Branch (1683:3): [True: 966k, False: 5.16M]
  ------------------
 1684|   966k|    using sv = basic_string_view<typename Context::char_type>;
 1685|   966k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1686|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1686:3): [True: 0, False: 6.13M]
  ------------------
 1687|      0|    return vis(arg.value_.pointer);
 1688|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1688:3): [True: 0, False: 6.13M]
  ------------------
 1689|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1690|  6.13M|  }
 1691|      0|  return vis(monostate());
 1692|  6.13M|}
_ZN3fmt3v106detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2118|  11.8M|                              const char*& out) -> bool {
 2119|  11.8M|  out = static_cast<const char*>(
 2120|  11.8M|      std::memchr(first, value, to_unsigned(last - first)));
 2121|  11.8M|  return out != nullptr;
 2122|  11.8M|}
_ZZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2490|  5.92M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2491|  5.92M|      if (from == to) return;
  ------------------
  |  Branch (2491:11): [True: 0, False: 5.92M]
  ------------------
 2492|  5.92M|      for (;;) {
 2493|  5.92M|        const Char* p = nullptr;
 2494|  5.92M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2494:13): [True: 5.92M, False: 0]
  ------------------
 2495|  5.92M|          return handler_.on_text(from, to);
 2496|      0|        ++p;
 2497|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2497:13): [True: 0, False: 0]
  |  Branch (2497:24): [True: 0, False: 0]
  ------------------
 2498|      0|          return handler_.on_error("unmatched '}' in format string");
 2499|      0|        handler_.on_text(from, p);
 2500|      0|        from = p + 1;
 2501|      0|      }
 2502|  5.92M|    }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1275|   966k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1276|   966k|    string.data = val.data();
 1277|   966k|    string.size = val.size();
 1278|   966k|  }
_ZN3fmt3v106detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1389|  5.16M|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1390|  5.16M|    return val;
 1391|  5.16M|  }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1271|  5.16M|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1272|  5.16M|    string.data = val;
 1273|  5.16M|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1273:9): [Folded - Ignored]
  ------------------
 1274|  5.16M|  }
_ZNK3fmt3v106detail6bufferIcE4dataEv:
  843|  7.06M|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt3v107vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1420|  7.06M|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1421|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1422|       |  // can be better optimized in fmt::format anyway.
 1423|  7.06M|  auto buffer = memory_buffer();
 1424|  7.06M|  detail::vformat_to(buffer, fmt, args);
 1425|  7.06M|  return to_string(buffer);
 1426|  7.06M|}

_ZN3fmt3v106detail6bufferIcE6appendIcEEvPKT_S7_:
  884|  19.3M|void buffer<T>::append(const U* begin, const U* end) {
  885|  38.2M|  while (begin != end) {
  ------------------
  |  Branch (885:10): [True: 18.8M, False: 19.3M]
  ------------------
  886|  18.8M|    auto count = to_unsigned(end - begin);
  887|  18.8M|    try_reserve(size_ + count);
  888|  18.8M|    auto free_cap = capacity_ - size_;
  889|  18.8M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (889:9): [True: 0, False: 18.8M]
  ------------------
  890|  18.8M|    std::uninitialized_copy_n(begin, count, make_checked(ptr_ + size_, count));
  891|  18.8M|    size_ += count;
  892|  18.8M|    begin += count;
  893|  18.8M|  }
  894|  19.3M|}
_ZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4281|  7.06M|                typename vformat_args<Char>::type args, locale_ref loc) {
 4282|  7.06M|  auto out = buffer_appender<Char>(buf);
 4283|  7.06M|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4283:7): [True: 0, False: 7.06M]
  |  Branch (4283:26): [True: 0, False: 0]
  ------------------
 4284|      0|    auto arg = args.get(0);
 4285|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4285:9): [True: 0, False: 0]
  ------------------
 4286|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4287|      0|    return;
 4288|      0|  }
 4289|       |
 4290|  7.06M|  struct format_handler : error_handler {
 4291|  7.06M|    basic_format_parse_context<Char> parse_context;
 4292|  7.06M|    buffer_context<Char> context;
 4293|       |
 4294|  7.06M|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4295|  7.06M|                   basic_format_args<buffer_context<Char>> p_args,
 4296|  7.06M|                   locale_ref p_loc)
 4297|  7.06M|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4298|       |
 4299|  7.06M|    void on_text(const Char* begin, const Char* end) {
 4300|  7.06M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4301|  7.06M|      context.advance_to(write<Char>(context.out(), text));
 4302|  7.06M|    }
 4303|       |
 4304|  7.06M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4305|  7.06M|      return parse_context.next_arg_id();
 4306|  7.06M|    }
 4307|  7.06M|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4308|  7.06M|      return parse_context.check_arg_id(id), id;
 4309|  7.06M|    }
 4310|  7.06M|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4311|  7.06M|      int arg_id = context.arg_id(id);
 4312|  7.06M|      if (arg_id < 0) on_error("argument not found");
 4313|  7.06M|      return arg_id;
 4314|  7.06M|    }
 4315|       |
 4316|  7.06M|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4317|  7.06M|      auto arg = get_arg(context, id);
 4318|  7.06M|      context.advance_to(visit_format_arg(
 4319|  7.06M|          default_arg_formatter<Char>{context.out(), context.args(),
 4320|  7.06M|                                      context.locale()},
 4321|  7.06M|          arg));
 4322|  7.06M|    }
 4323|       |
 4324|  7.06M|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4325|  7.06M|        -> const Char* {
 4326|  7.06M|      auto arg = get_arg(context, id);
 4327|  7.06M|      if (arg.type() == type::custom_type) {
 4328|  7.06M|        parse_context.advance_to(begin);
 4329|  7.06M|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4330|  7.06M|        return parse_context.begin();
 4331|  7.06M|      }
 4332|  7.06M|      auto specs = detail::dynamic_format_specs<Char>();
 4333|  7.06M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4334|  7.06M|      detail::handle_dynamic_spec<detail::width_checker>(
 4335|  7.06M|          specs.width, specs.width_ref, context);
 4336|  7.06M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4337|  7.06M|          specs.precision, specs.precision_ref, context);
 4338|  7.06M|      if (begin == end || *begin != '}')
 4339|  7.06M|        on_error("missing '}' in format string");
 4340|  7.06M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4341|  7.06M|      context.advance_to(visit_format_arg(f, arg));
 4342|  7.06M|      return begin;
 4343|  7.06M|    }
 4344|  7.06M|  };
 4345|  7.06M|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4346|  7.06M|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  975|  7.06M|      : alloc_(alloc) {
  976|  7.06M|    this->set(store_, SIZE);
  977|  7.06M|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (977:9): [Folded - Ignored]
  ------------------
  978|  7.06M|  }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  945|    381|  FMT_CONSTEXPR20 void grow(size_t size) override {
  946|    381|    detail::abort_fuzzing_if(size > 5000);
  947|    381|    const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  948|    381|    size_t old_capacity = this->capacity();
  949|    381|    size_t new_capacity = old_capacity + old_capacity / 2;
  950|    381|    if (size > new_capacity)
  ------------------
  |  Branch (950:9): [True: 63, False: 318]
  ------------------
  951|     63|      new_capacity = size;
  952|    318|    else if (new_capacity > max_size)
  ------------------
  |  Branch (952:14): [True: 0, False: 318]
  ------------------
  953|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (953:22): [True: 0, False: 0]
  ------------------
  954|    381|    T* old_data = this->data();
  955|    381|    T* new_data =
  956|    381|        std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  957|       |    // Suppress a bogus -Wstringop-overflow in gcc 13.1 (#3481).
  958|    381|    FMT_ASSERT(this->size() <= new_capacity, "");
  ------------------
  |  |  333|    381|      fmt::detail::ignore_unused((condition), (message))
  ------------------
  959|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  960|    381|    std::uninitialized_copy(old_data, old_data + this->size(),
  961|    381|                            detail::make_checked(new_data, new_capacity));
  962|    381|    this->set(new_data, new_capacity);
  963|       |    // deallocate must not throw according to the standard, but even if it does,
  964|       |    // the buffer already uses the new storage and will deallocate it in
  965|       |    // destructor.
  966|    381|    if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (966:9): [True: 71, False: 310]
  ------------------
  967|    381|  }
_ZN3fmt3v106detail16abort_fuzzing_ifEb:
  290|    381|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  291|    381|  ignore_unused(condition);
  292|       |#ifdef FMT_FUZZ
  293|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  294|       |#endif
  295|    381|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  979|  7.06M|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  939|  7.06M|  FMT_CONSTEXPR20 void deallocate() {
  940|  7.06M|    T* data = this->data();
  941|  7.06M|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (941:9): [True: 310, False: 7.06M]
  ------------------
  942|  7.06M|  }
_ZN3fmt3v106detail12make_checkedIcEEPT_S4_m:
  572|  18.8M|template <typename T> constexpr auto make_checked(T* p, size_t) -> T* {
  573|  18.8M|  return p;
  574|  18.8M|}
_ZN3fmt3v106detail7reserveINS0_8appenderEEERT_S5_m:
  600|  19.3M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  601|  19.3M|  return it;
  602|  19.3M|}
_ZN3fmt3v106detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  628|  19.3M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  629|  19.3M|  return it;
  630|  19.3M|}
_ZN3fmt3v106detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  657|  13.1M|                                                  OutputIt out) -> OutputIt {
  658|  13.1M|  return copy_str<OutChar>(begin, end, out);
  659|  13.1M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3650|  13.1M|    -> OutputIt {
 3651|  13.1M|  auto it = reserve(out, value.size());
 3652|  13.1M|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3653|  13.1M|  return base_iterator(out, it);
 3654|  13.1M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4299|  13.1M|    void on_text(const Char* begin, const Char* end) {
 4300|  13.1M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4301|  13.1M|      context.advance_to(write<Char>(context.out(), text));
 4302|  13.1M|    }
_ZN3fmt3v106detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEEDTcldtfp_3argfp0_EERT_T0_:
 3828|  6.13M|FMT_CONSTEXPR auto get_arg(Context& ctx, ID id) -> decltype(ctx.arg(id)) {
 3829|  6.13M|  auto arg = ctx.arg(id);
 3830|  6.13M|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3830:7): [True: 0, False: 6.13M]
  ------------------
 3831|  6.13M|  return arg;
 3832|  6.13M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4304|  6.13M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4305|  6.13M|      return parse_context.next_arg_id();
 4306|  6.13M|    }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4325|  6.13M|        -> const Char* {
 4326|  6.13M|      auto arg = get_arg(context, id);
 4327|  6.13M|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4327:11): [True: 0, False: 6.13M]
  ------------------
 4328|      0|        parse_context.advance_to(begin);
 4329|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4330|      0|        return parse_context.begin();
 4331|      0|      }
 4332|  6.13M|      auto specs = detail::dynamic_format_specs<Char>();
 4333|  6.13M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4334|  6.13M|      detail::handle_dynamic_spec<detail::width_checker>(
 4335|  6.13M|          specs.width, specs.width_ref, context);
 4336|  6.13M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4337|  6.13M|          specs.precision, specs.precision_ref, context);
 4338|  6.13M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4338:11): [True: 0, False: 6.13M]
  |  Branch (4338:27): [True: 0, False: 6.13M]
  ------------------
 4339|      0|        on_error("missing '}' in format string");
 4340|  6.13M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4341|  6.13M|      context.advance_to(visit_format_arg(f, arg));
 4342|  6.13M|      return begin;
 4343|  6.13M|    }
_ZN3fmt3v106detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3837|  6.13M|                                       Context& ctx) {
 3838|  6.13M|  switch (ref.kind) {
  ------------------
  |  Branch (3838:11): [True: 0, False: 6.13M]
  ------------------
 3839|  6.13M|  case arg_id_kind::none:
  ------------------
  |  Branch (3839:3): [True: 6.13M, False: 0]
  ------------------
 3840|  6.13M|    break;
 3841|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3841:3): [True: 0, False: 6.13M]
  ------------------
 3842|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3843|      0|                                              ctx.error_handler());
 3844|      0|    break;
 3845|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3845:3): [True: 0, False: 6.13M]
  ------------------
 3846|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3847|      0|                                              ctx.error_handler());
 3848|      0|    break;
 3849|  6.13M|  }
 3850|  6.13M|}
_ZN3fmt3v106detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3837|  6.13M|                                       Context& ctx) {
 3838|  6.13M|  switch (ref.kind) {
  ------------------
  |  Branch (3838:11): [True: 0, False: 6.13M]
  ------------------
 3839|  6.13M|  case arg_id_kind::none:
  ------------------
  |  Branch (3839:3): [True: 6.13M, False: 0]
  ------------------
 3840|  6.13M|    break;
 3841|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3841:3): [True: 0, False: 6.13M]
  ------------------
 3842|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3843|      0|                                              ctx.error_handler());
 3844|      0|    break;
 3845|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3845:3): [True: 0, False: 6.13M]
  ------------------
 3846|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3847|      0|                                              ctx.error_handler());
 3848|      0|    break;
 3849|  6.13M|  }
 3850|  6.13M|}
_ZN3fmt3v106detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3758|  5.16M|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3759|  5.16M|    return detail::write(out, value, specs, locale);
 3760|  5.16M|  }
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2369|  5.16M|    -> OutputIt {
 2370|  5.16M|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2370:10): [True: 5.16M, False: 0]
  ------------------
 2371|  5.16M|             ? write(out, basic_string_view<Char>(s), specs, {})
 2372|  5.16M|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2373|  5.16M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2363|  6.13M|    -> OutputIt {
 2364|  6.13M|  return write(out, s, specs);
 2365|  6.13M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2340|  6.13M|                         const format_specs<Char>& specs) -> OutputIt {
 2341|  6.13M|  auto data = s.data();
 2342|  6.13M|  auto size = s.size();
 2343|  6.13M|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2343:7): [True: 0, False: 6.13M]
  |  Branch (2343:31): [True: 0, False: 0]
  ------------------
 2344|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2345|  6.13M|  bool is_debug = specs.type == presentation_type::debug;
 2346|  6.13M|  size_t width = 0;
 2347|  6.13M|  if (specs.width != 0) {
  ------------------
  |  Branch (2347:7): [True: 0, False: 6.13M]
  ------------------
 2348|      0|    if (is_debug)
  ------------------
  |  Branch (2348:9): [True: 0, False: 0]
  ------------------
 2349|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2350|      0|    else
 2351|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2352|      0|  }
 2353|  6.13M|  return write_padded(out, specs, size, width,
 2354|  6.13M|                      [=](reserve_iterator<OutputIt> it) {
 2355|  6.13M|                        if (is_debug) return write_escaped_string(it, s);
 2356|  6.13M|                        return copy_str<Char>(data, data + size, it);
 2357|  6.13M|                      });
 2358|  6.13M|}
_ZN3fmt3v106detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1795|  6.13M|                                size_t size, size_t width, F&& f) -> OutputIt {
 1796|  6.13M|  static_assert(align == align::left || align == align::right, "");
 1797|  6.13M|  unsigned spec_width = to_unsigned(specs.width);
 1798|  6.13M|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1798:20): [True: 0, False: 6.13M]
  ------------------
 1799|       |  // Shifts are encoded as string literals because static constexpr is not
 1800|       |  // supported in constexpr functions.
 1801|  6.13M|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1801:18): [Folded - Ignored]
  ------------------
 1802|  6.13M|  size_t left_padding = padding >> shifts[specs.align];
 1803|  6.13M|  size_t right_padding = padding - left_padding;
 1804|  6.13M|  auto it = reserve(out, size + padding * specs.fill.size());
 1805|  6.13M|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1805:7): [True: 0, False: 6.13M]
  ------------------
 1806|  6.13M|  it = f(it);
 1807|  6.13M|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1807:7): [True: 0, False: 6.13M]
  ------------------
 1808|  6.13M|  return base_iterator(out, it);
 1809|  6.13M|}
_ZZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2354|  6.13M|                      [=](reserve_iterator<OutputIt> it) {
 2355|  6.13M|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2355:29): [True: 0, False: 6.13M]
  ------------------
 2356|  6.13M|                        return copy_str<Char>(data, data + size, it);
 2357|  6.13M|                      });
_ZN3fmt3v106detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3758|   966k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3759|   966k|    return detail::write(out, value, specs, locale);
 3760|   966k|  }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4297|  7.06M|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt3v109to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4271|  7.06M|    -> std::basic_string<Char> {
 4272|  7.06M|  auto size = buf.size();
 4273|  7.06M|  detail::assume(size < std::basic_string<Char>().max_size());
 4274|  7.06M|  return std::basic_string<Char>(buf.data(), size);
 4275|  7.06M|}
_ZN3fmt3v106detail6assumeEb:
  541|  7.06M|FMT_INLINE void assume(bool condition) {
  542|  7.06M|  (void)condition;
  543|  7.06M|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  544|  7.06M|  __builtin_assume(condition);
  545|  7.06M|#endif
  546|  7.06M|}

LLVMFuzzerTestOneInput:
   14|  55.7k|{
   15|  55.7k|    disable_output();
   16|       |
   17|  55.7k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   18|       |
   19|  55.7k|    EmptySourceManager source_manager;
   20|  55.7k|    DiagnosticEngine   diagnostic_engine;
   21|  55.7k|    Lexer              lexer{&diagnostic_engine};
   22|  55.7k|    auto               document = phi::make_not_null_scope<ASTDocument>();
   23|       |
   24|  55.7k|    Parser parser{&source_manager, &diagnostic_engine, &lexer};
   25|  55.7k|    parser.ParseString(document, "Fuzz.au3", source);
   26|       |
   27|  55.7k|    return 0;
   28|  55.7k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  74.5k|    {
   18|  74.5k|        m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|  74.5k|    }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|   481k|    {
   20|   481k|        m_NodeType = ASTNodeType::BinaryExpression;
   21|   481k|    }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  85.1k|    {
   18|  85.1k|        m_NodeType = ASTNodeType::BooleanLiteral;
   19|  85.1k|    }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|   625k|    {
   20|   625k|        m_Statements.emplace_back(phi::move(child));
   21|   625k|    }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  5.07k|    {
   25|  5.07k|        m_Functions.emplace_back(phi::move(child));
   26|  5.07k|    }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|   177k|    {
   18|   177k|        m_NodeType = ASTNodeType::ExitStatement;
   19|   177k|    }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|  1.04M|    {
   13|  1.04M|        switch (m_NodeType)
   14|  1.04M|        {
   15|   123k|            case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:13): [True: 123k, False: 918k]
  ------------------
   16|   196k|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:13): [True: 72.9k, False: 969k]
  ------------------
   17|   271k|            case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:13): [True: 75.0k, False: 967k]
  ------------------
   18|   271k|                return true;
   19|       |
   20|   770k|            default:
  ------------------
  |  Branch (20:13): [True: 770k, False: 271k]
  ------------------
   21|   770k|                return false;
   22|  1.04M|        }
   23|  1.04M|    }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|  1.04M|    {
   17|  1.04M|        m_NodeType = ASTNodeType::ExpressionStatement;
   18|  1.04M|    }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|   557k|    {
   17|   557k|        m_NodeType = ASTNodeType::FloatLiteral;
   18|   557k|    }

_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|   812k|    {
   26|   812k|        if (m_IsBuiltIn)
  ------------------
  |  Branch (26:13): [True: 15.3k, False: 797k]
  ------------------
   27|  15.3k|        {
   28|  15.3k|            return enum_name(m_BuiltInFunction);
   29|  15.3k|        }
   30|       |
   31|   797k|        return m_FunctionName;
   32|   812k|    }
_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|   988k|    {
   21|   988k|        m_NodeType = ASTNodeType::FunctionCallExpression;
   22|   988k|    }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|   152k|    {
   25|   152k|        m_NodeType = ASTNodeType::IfStatement;
   26|   152k|    }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|  1.70M|    {
   17|  1.70M|        m_NodeType = ASTNodeType::IntegerLiteral;
   18|  1.70M|    }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|   179k|    {
   19|   179k|        m_NodeType = ASTNodeType::KeywordLiteral;
   20|   179k|        PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|   179k|    }

_ZN10OpenAutoIt18ASTMacroExpressionC2ENS_9TokenKindE:
   18|  10.0k|    {
   19|  10.0k|        m_NodeType = ASTNodeType::MacroExpression;
   20|  10.0k|        PHI_ASSERT(static_cast<phi::size_t>(m_Macro) >= MacroFirst &&
   21|  10.0k|                   static_cast<phi::size_t>(m_Macro) <= MacroLast);
   22|  10.0k|    }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   73|  7.04M|    virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   71|  7.04M|    ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   76|   770k|    {
   77|   770k|        PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   78|   770k|        PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   79|       |
   80|   770k|        return enum_name(m_NodeType);
   81|   770k|    }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   49|   770k|{
   50|   770k|    switch (node_type)
   51|   770k|    {
   52|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   53|      0|    case ASTNodeType::name:                                                                        \
   54|      0|        return "AST" #name;
   55|       |
   56|      0|        OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   14|  26.3k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   53|  26.3k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 26.3k, False: 744k]
  |  |  |  |  ------------------
  |  |  |  |   54|  26.3k|        return "AST" #name;
  |  |  ------------------
  |  |   15|  98.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   53|  98.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 98.1k, False: 672k]
  |  |  |  |  ------------------
  |  |  |  |   54|  98.1k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  98.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|  40.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 40.1k, False: 730k]
  |  |  |  |  ------------------
  |  |  |  |   54|  40.1k|        return "AST" #name;
  |  |  ------------------
  |  |   17|  40.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 770k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   18|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 770k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|   145k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   53|   145k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 145k, False: 625k]
  |  |  |  |  ------------------
  |  |  |  |   54|   145k|        return "AST" #name;
  |  |  ------------------
  |  |   20|   145k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 770k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   21|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 770k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   22|   267k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|   267k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 267k, False: 502k]
  |  |  |  |  ------------------
  |  |  |  |   54|   267k|        return "AST" #name;
  |  |  ------------------
  |  |   23|   267k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|  44.9k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 44.9k, False: 725k]
  |  |  |  |  ------------------
  |  |  |  |   54|  44.9k|        return "AST" #name;
  |  |  ------------------
  |  |   24|  44.9k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(MacroExpression)                                            \
  |  |  ------------------
  |  |  |  |   53|  6.30k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 6.30k, False: 764k]
  |  |  |  |  ------------------
  |  |  |  |   54|  6.30k|        return "AST" #name;
  |  |  ------------------
  |  |   25|  41.7k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   53|  41.7k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 41.7k, False: 728k]
  |  |  |  |  ------------------
  |  |  |  |   54|  41.7k|        return "AST" #name;
  |  |  ------------------
  |  |   26|  99.5k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(TernaryIfExpression)                                        \
  |  |  ------------------
  |  |  |  |   53|  99.5k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 99.5k, False: 671k]
  |  |  |  |  ------------------
  |  |  |  |   54|  99.5k|        return "AST" #name;
  |  |  ------------------
  |  |   27|  99.5k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 770k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   28|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 770k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   29|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 770k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   30|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 770k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   57|       |
   58|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   59|       |
   60|      0|        default:
  ------------------
  |  Branch (60:9): [True: 0, False: 770k]
  ------------------
   61|      0|            PHI_ASSERT_NOT_REACHED();
   62|      0|            return "";
   63|   770k|    }
   64|   770k|}

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|   115k|    {
   15|   115k|        m_NodeType = ASTNodeType::StringLiteral;
   16|   115k|    }

_ZN10OpenAutoIt22ASTTernaryIfExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEES5_S5_:
   19|   160k|    {
   20|   160k|        m_NodeType = ASTNodeType::TernaryIfExpression;
   21|   160k|    }

_ZN10OpenAutoIt18ASTUnaryExpressionC2ENS_9TokenKindEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   15|   229k|    {
   16|   229k|        m_NodeType = ASTNodeType::UnaryExpression;
   17|   229k|    }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|   500k|    {
   20|   500k|        m_NodeType = ASTNodeType::VariableAssignment;
   21|   500k|    }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|   349k|    {
   15|   349k|        m_NodeType = ASTNodeType::VariableExpression;
   16|   349k|    }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  76.6k|    {
   18|  76.6k|        m_NodeType = ASTNodeType::WhileStatement;
   19|  76.6k|    }

_ZN10OpenAutoIt17DiagnosticBuilder7WarningIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   55|   870k|    {
   56|   870k|        m_Diagnostics.emplace_back(Diagnostic{
   57|   870k|                id, DiagnosticLevel::Warning, location,
   58|   870k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   59|       |
   60|   870k|        return *this;
   61|   870k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA9_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|   429k|    {
   66|   429k|        m_Diagnostics.emplace_back(Diagnostic{
   67|   429k|                id, DiagnosticLevel::Error, location,
   68|   429k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|   429k|        return *this;
   71|   429k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA18_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|      9|    {
   66|      9|        m_Diagnostics.emplace_back(Diagnostic{
   67|      9|                id, DiagnosticLevel::Error, location,
   68|      9|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|      9|        return *this;
   71|      9|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA4_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  19.6k|    {
   66|  19.6k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  19.6k|                id, DiagnosticLevel::Error, location,
   68|  19.6k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  19.6k|        return *this;
   71|  19.6k|    }
_ZN10OpenAutoIt17DiagnosticBuilder4NoteIJEEERS0_NS_14SourceLocationENSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   31|  19.6k|    {
   32|  19.6k|        PHI_ASSERT(!m_Diagnostics.empty());
   33|       |
   34|  19.6k|        m_Diagnostics.back().AddNote(
   35|  19.6k|                Diagnostic{DiagnosticId::None, DiagnosticLevel::Note, location,
   36|  19.6k|                           std::string{fmt::format(fmt::runtime(format_string),
   37|  19.6k|                                                   phi::forward<ArgsT>(args)...)}});
   38|       |
   39|  19.6k|        return *this;
   40|  19.6k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA25_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  4.95k|    {
   66|  4.95k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  4.95k|                id, DiagnosticLevel::Error, location,
   68|  4.95k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  4.95k|        return *this;
   71|  4.95k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  37.4k|    {
   66|  37.4k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  37.4k|                id, DiagnosticLevel::Error, location,
   68|  37.4k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  37.4k|        return *this;
   71|  37.4k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  7.67k|    {
   66|  7.67k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  7.67k|                id, DiagnosticLevel::Error, location,
   68|  7.67k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  7.67k|        return *this;
   71|  7.67k|    }

_ZN10OpenAutoIt19DiagnosticIdMessageENS_12DiagnosticIdE:
   87|  1.36M|{
   88|  1.36M|    PHI_ASSERT(id != DiagnosticId::None);
   89|       |
   90|  1.36M|    switch (id)
   91|  1.36M|    {
   92|      0|#define OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EnumName, FlagName, DiagnosticMessage)                 \
   93|      0|    case DiagnosticId::EnumName: {                                                                 \
   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
   95|      0|        return DiagnosticMessage;                                                                  \
   96|      0|    }
   97|       |
   98|      0|        OPENAUTOIT_ENUM_DIAGNOSTIC_IDS()
  ------------------
  |  |   12|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(None, "", "")                                              \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   13|      0|    /* Lexer warnings */                                                                           \
  |  |   14|   870k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(NullCharacter, "-Wnull-character",                         \
  |  |  ------------------
  |  |  |  |   93|   870k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 870k, False: 498k]
  |  |  |  |  ------------------
  |  |  |  |   94|   870k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|   870k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|   870k|    }
  |  |  ------------------
  |  |   15|   870k|                                        "null character ignored")                                  \
  |  |   16|   870k|    /* Lexer errors */                                                                             \
  |  |   17|   870k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(InvalidFloatLiteral, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   18|      0|                                        "invalid float literal declaration")                       \
  |  |   19|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FloatHexLiteral, "",                                       \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   20|      0|                                        "hexadecimal float literal are not allowed")               \
  |  |   21|      0|    /* Parser error */                                                                             \
  |  |   22|      9|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(UnexpectedEndOfFile, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      9|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 9, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |   94|      9|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      9|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      9|    }
  |  |  ------------------
  |  |   23|      9|                                        "unexpected end of file while parsing {:s}")               \
  |  |   24|   453k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(Expected, "", "expected {:s}")                             \
  |  |  ------------------
  |  |  |  |   93|   453k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 453k, False: 915k]
  |  |  |  |  ------------------
  |  |  |  |   94|   453k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|   453k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|   453k|    }
  |  |  ------------------
  |  |   25|   453k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IntegerLiteralTooLarge, "",                                \
  |  |  ------------------
  |  |  |  |   93|  30.9k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 30.9k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |   94|  30.9k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  30.9k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  30.9k|    }
  |  |  ------------------
  |  |   26|  30.9k|                                        "integer literal is too large.")                           \
  |  |   27|  30.9k|    /* Parser fatal error */                                                                       \
  |  |   28|  30.9k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNotFound, "", "'{:s}' file not found")                 \
  |  |  ------------------
  |  |  |  |   93|  7.03k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 7.03k, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |   94|  7.03k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  7.03k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  7.03k|    }
  |  |  ------------------
  |  |   29|  7.03k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EmptyFilename, "", "empty filename")                       \
  |  |  ------------------
  |  |  |  |   93|  6.53k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 6.53k, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |   94|  6.53k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  6.53k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  6.53k|    }
  |  |  ------------------
  |  |   30|  6.53k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IncludeNestingTooDeeply, "", "#include nested too deeply") \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   31|    637|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNameTooLong, "",                                       \
  |  |  ------------------
  |  |  |  |   93|    637|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 637, False: 1.36M]
  |  |  |  |  ------------------
  |  |  |  |   94|    637|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    637|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    637|    }
  |  |  ------------------
  |  |   32|    637|                                        "cannot open file '{:s}': File name too long")
  ------------------
   99|       |
  100|      0|#undef OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL
  101|       |
  102|      0|        default:
  ------------------
  |  Branch (102:9): [True: 0, False: 1.36M]
  ------------------
  103|      0|            PHI_ASSERT_NOT_REACHED();
  104|  1.36M|    }
  105|  1.36M|}

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  6.29M|    {
   46|  6.29M|        Token token{kind,
   47|  6.29M|                    m_Source.substring_view(
   48|  6.29M|                            static_cast<typename phi::string_view::size_type::value_type>(
   49|  6.29M|                                    m_Iterator - m_Source.cbegin()),
   50|  6.29M|                            1u),
   51|  6.29M|                    CurrentSourceLocation()};
   52|       |
   53|       |        // 1 character sized token
   54|  6.29M|        ++m_Column;
   55|       |
   56|  6.29M|        return token;
   57|  6.29M|    }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  9.83M|    {
   61|  9.83M|        Token token{kind, TokenText(token_begin), CurrentSourceLocation()};
   62|       |
   63|       |        // Consume the amount of characters that make up our new token
   64|  9.83M|        m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  9.83M|        return token;
   67|  9.83M|    }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  15.5M|    {
   71|  15.5M|        return m_Source.substring_view(token_begin, m_Iterator);
   72|  15.5M|    }
_ZNK10OpenAutoIt5Lexer21CurrentSourceLocationEv:
   75|  17.0M|    {
   76|  17.0M|        return BuildSourceLocation(m_LineNumber, m_Column);
   77|  17.0M|    }
_ZNK10OpenAutoIt5Lexer19BuildSourceLocationEN3phi7integerImEES3_:
   81|  17.0M|    {
   82|  17.0M|        return {m_SourceFile, line_number, column};
   83|  17.0M|    }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   70|  8.78M|    {
   71|  8.78M|        switch (token_kind)
   72|  8.78M|        {
   73|   303k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (73:13): [True: 303k, False: 8.48M]
  ------------------
   74|   666k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (74:13): [True: 362k, False: 8.42M]
  ------------------
   75|   669k|            case TokenKind::KW_Not:
  ------------------
  |  Branch (75:13): [True: 2.66k, False: 8.78M]
  ------------------
   76|   669k|                return true;
   77|       |
   78|  8.11M|            default:
  ------------------
  |  Branch (78:13): [True: 8.11M, False: 669k]
  ------------------
   79|  8.11M|                return false;
   80|  8.78M|        }
   81|  8.78M|    }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   85|  3.55M|    {
   86|  3.55M|        switch (token_kind)
   87|  3.55M|        {
   88|    212|            case TokenKind::KW_And:
  ------------------
  |  Branch (88:13): [True: 212, False: 3.55M]
  ------------------
   89|    478|            case TokenKind::KW_Or:
  ------------------
  |  Branch (89:13): [True: 266, False: 3.55M]
  ------------------
   90|   288k|            case TokenKind::OP_Equals:
  ------------------
  |  Branch (90:13): [True: 288k, False: 3.27M]
  ------------------
   91|   291k|            case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (91:13): [True: 2.36k, False: 3.55M]
  ------------------
   92|   291k|            case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (92:13): [True: 601, False: 3.55M]
  ------------------
   93|   292k|            case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (93:13): [True: 1.05k, False: 3.55M]
  ------------------
   94|   293k|            case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (94:13): [True: 487, False: 3.55M]
  ------------------
   95|   372k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (95:13): [True: 79.0k, False: 3.47M]
  ------------------
   96|   482k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (96:13): [True: 110k, False: 3.44M]
  ------------------
   97|   491k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (97:13): [True: 9.55k, False: 3.54M]
  ------------------
   98|   513k|            case TokenKind::OP_Divide:
  ------------------
  |  Branch (98:13): [True: 21.8k, False: 3.53M]
  ------------------
   99|   542k|            case TokenKind::OP_Raise:
  ------------------
  |  Branch (99:13): [True: 28.5k, False: 3.52M]
  ------------------
  100|   544k|            case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (100:13): [True: 2.40k, False: 3.55M]
  ------------------
  101|   552k|            case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (101:13): [True: 7.52k, False: 3.55M]
  ------------------
  102|   566k|            case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (102:13): [True: 13.9k, False: 3.54M]
  ------------------
  103|   566k|            case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (103:13): [True: 433, False: 3.55M]
  ------------------
  104|   577k|            case TokenKind::OP_LessThan:
  ------------------
  |  Branch (104:13): [True: 11.1k, False: 3.54M]
  ------------------
  105|   578k|            case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (105:13): [True: 430, False: 3.55M]
  ------------------
  106|   634k|            case TokenKind::OP_Concatenate:
  ------------------
  |  Branch (106:13): [True: 56.4k, False: 3.50M]
  ------------------
  107|   668k|            case TokenKind::OP_ConcatenateEquals:
  ------------------
  |  Branch (107:13): [True: 34.1k, False: 3.52M]
  ------------------
  108|   668k|                return true;
  109|       |
  110|  2.88M|            default:
  ------------------
  |  Branch (110:13): [True: 2.88M, False: 668k]
  ------------------
  111|  2.88M|                return false;
  112|  3.55M|        }
  113|  3.55M|    }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  154|  5.07k|    {
  155|  5.07k|        m_Document->AppendFunction(phi::move(function));
  156|  5.07k|    }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  148|   625k|    {
  149|   625k|        m_Document->AppendStatement(phi::move(statement));
  150|   625k|    }

_ZN10OpenAutoIt14SourceLocation7InvalidEv:
   23|  55.7k|    {
   24|  55.7k|        return {nullptr, 1u, 1u};
   25|  55.7k|    }

_ZN10OpenAutoIt13SourceManagerC2Ev:
   21|  55.7k|    SourceManager()          = default;

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_14SourceLocationE:
   27|  16.1M|    {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   39|  94.2M|    {
   40|  94.2M|        return m_Kind;
   41|  94.2M|    }
_ZNK10OpenAutoIt5Token7GetTextEv:
   44|  10.9M|    {
   45|  10.9M|        return m_Text;
   46|  10.9M|    }
_ZNK10OpenAutoIt5Token16GetBeginLocationEv:
   64|   493k|    {
   65|   493k|        return m_SourceLocation;
   66|   493k|    }
_ZNK10OpenAutoIt5Token14GetEndLocationEv:
   69|  24.6k|    {
   70|  24.6k|        return {.source_file = m_SourceLocation.source_file,
   71|  24.6k|                .line_number = m_SourceLocation.line_number,
   72|  24.6k|                .column      = m_SourceLocation.column + m_Text.length()};
   73|  24.6k|    }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   88|  4.92M|    {
   89|  4.92M|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   90|       |
   91|  4.92M|        if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (91:13): [True: 46.1k, False: 4.87M]
  ------------------
   92|  4.92M|            underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (92:13): [True: 46.1k, False: 0]
  ------------------
   93|  46.1k|        {
   94|  46.1k|            return true;
   95|  46.1k|        }
   96|       |
   97|  4.87M|        return false;
   98|  4.92M|    }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
  101|  3.73M|    {
  102|  3.73M|        switch (m_Kind)
  103|  3.73M|        {
  104|   136k|            case TokenKind::KW_Default:
  ------------------
  |  Branch (104:13): [True: 136k, False: 3.59M]
  ------------------
  105|   358k|            case TokenKind::KW_Null:
  ------------------
  |  Branch (105:13): [True: 221k, False: 3.50M]
  ------------------
  106|   358k|                return true;
  107|       |
  108|  3.37M|            default:
  ------------------
  |  Branch (108:13): [True: 3.37M, False: 358k]
  ------------------
  109|  3.37M|                return false;
  110|  3.73M|        }
  111|  3.73M|    }
_ZNK10OpenAutoIt5Token7IsMacroEv:
  158|  1.24M|    {
  159|  1.24M|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
  160|       |
  161|  1.24M|        if (underlying_value >= MacroFirst && underlying_value <= MacroLast)
  ------------------
  |  Branch (161:13): [True: 619k, False: 621k]
  |  Branch (161:47): [True: 10.0k, False: 609k]
  ------------------
  162|  10.0k|        {
  163|  10.0k|            return true;
  164|  10.0k|        }
  165|       |
  166|  1.23M|        return false;
  167|  1.24M|    }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  682|  3.95M|{
  683|  3.95M|    switch (token_kind)
  684|  3.95M|    {
  685|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  686|      0|    case TokenKind::name:                                                                          \
  687|      0|        return #name;
  688|       |
  689|      0|        OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  14.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  686|  14.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14.3k, False: 3.94M]
  |  |  |  |  ------------------
  |  |  |  |  687|  14.3k|        return #name;
  |  |  ------------------
  |  |   13|   365k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  686|   365k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 365k, False: 3.59M]
  |  |  |  |  ------------------
  |  |  |  |  687|   365k|        return #name;
  |  |  ------------------
  |  |   14|   365k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   15|  77.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  686|  77.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 77.9k, False: 3.88M]
  |  |  |  |  ------------------
  |  |  |  |  687|  77.9k|        return #name;
  |  |  ------------------
  |  |   16|  77.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  686|    877|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 877, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    877|        return #name;
  |  |  ------------------
  |  |   17|    877|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   18|   597k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|   597k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 597k, False: 3.36M]
  |  |  |  |  ------------------
  |  |  |  |  687|   597k|        return #name;
  |  |  ------------------
  |  |   19|   597k|    /* Literals */                                                                                 \
  |  |   20|   597k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  686|   496k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 496k, False: 3.46M]
  |  |  |  |  ------------------
  |  |  |  |  687|   496k|        return #name;
  |  |  ------------------
  |  |   21|   496k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  686|   282k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 282k, False: 3.67M]
  |  |  |  |  ------------------
  |  |  |  |  687|   282k|        return #name;
  |  |  ------------------
  |  |   22|   282k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  686|  42.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 42.7k, False: 3.91M]
  |  |  |  |  ------------------
  |  |  |  |  687|  42.7k|        return #name;
  |  |  ------------------
  |  |   23|  42.7k|    /* Punctuation */                                                                              \
  |  |   24|  92.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  686|  92.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 92.2k, False: 3.86M]
  |  |  |  |  ------------------
  |  |  |  |  687|  92.2k|        return #name;
  |  |  ------------------
  |  |   25|   115k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|   115k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 115k, False: 3.84M]
  |  |  |  |  ------------------
  |  |  |  |  687|   115k|        return #name;
  |  |  ------------------
  |  |   26|   384k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|   384k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 384k, False: 3.57M]
  |  |  |  |  ------------------
  |  |  |  |  687|   384k|        return #name;
  |  |  ------------------
  |  |   27|   384k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   28|   120k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|   120k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 120k, False: 3.83M]
  |  |  |  |  ------------------
  |  |  |  |  687|   120k|        return #name;
  |  |  ------------------
  |  |   29|   120k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  62.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 62.0k, False: 3.89M]
  |  |  |  |  ------------------
  |  |  |  |  687|  62.0k|        return #name;
  |  |  ------------------
  |  |   30|  62.0k|    /* Macros */                                                                                   \
  |  |   31|  62.0k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  62.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   33|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   34|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   35|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |   36|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   37|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   38|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   39|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   40|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  686|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 30, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     30|        return #name;
  |  |  ------------------
  |  |   41|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   42|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |   43|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   44|  5.50k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  686|  5.50k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.50k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.50k|        return #name;
  |  |  ------------------
  |  |   45|  5.50k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |   46|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   47|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |   48|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |   49|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   51|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   52|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   53|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |   54|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   55|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   56|    134|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  686|    134|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 134, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    134|        return #name;
  |  |  ------------------
  |  |   57|    134|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   58|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   59|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |   60|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   61|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   62|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |   63|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   65|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   66|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   67|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |   68|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   69|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   70|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   71|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |   72|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   74|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   75|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   76|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   77|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |   78|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   79|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |   80|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 27, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     27|        return #name;
  |  |  ------------------
  |  |   81|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   82|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   83|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   84|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   86|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   87|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   88|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  686|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 31, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     31|        return #name;
  |  |  ------------------
  |  |   89|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  686|     39|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 39, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     39|        return #name;
  |  |  ------------------
  |  |   90|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |   91|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   92|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   93|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |   94|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   95|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   96|    116|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|    116|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 116, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    116|        return #name;
  |  |  ------------------
  |  |   97|    116|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |   98|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   99|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  686|     50|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 50, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     50|        return #name;
  |  |  ------------------
  |  |  100|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  686|     72|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 72, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     72|        return #name;
  |  |  ------------------
  |  |  101|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  103|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  104|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     19|        return #name;
  |  |  ------------------
  |  |  105|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  106|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  107|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  108|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  109|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  110|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  111|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  112|  1.16k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  686|  1.16k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.16k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.16k|        return #name;
  |  |  ------------------
  |  |  113|  1.16k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  114|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  117|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  118|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  122|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  123|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  124|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  686|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     28|        return #name;
  |  |  ------------------
  |  |  125|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  126|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  127|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  128|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  129|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  130|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  131|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 31, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     31|        return #name;
  |  |  ------------------
  |  |  132|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  133|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  134|     11|    /* Preprocessor identifiers */                                                                 \
  |  |  135|     11|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|     11|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|     45|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  686|     45|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 45, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     45|        return #name;
  |  |  ------------------
  |  |  138|     74|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  686|     74|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 74, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     74|        return #name;
  |  |  ------------------
  |  |  139|     74|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|     74|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  686|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 27, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     27|        return #name;
  |  |  ------------------
  |  |  141|     27|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  143|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|  2.16k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|  2.16k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.16k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.16k|        return #name;
  |  |  ------------------
  |  |  145|  2.16k|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|  2.16k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  686|  1.28k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.28k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.28k|        return #name;
  |  |  ------------------
  |  |  147|  1.28k|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|  1.28k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  686|    852|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 852, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    852|        return #name;
  |  |  ------------------
  |  |  149|    852|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|  1.04k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  686|  1.04k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.04k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.04k|        return #name;
  |  |  ------------------
  |  |  151|  1.04k|    /* Keywords */                                                                                 \
  |  |  152|  1.04k|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|  1.04k|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|  1.04k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|  28.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  686|  28.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28.6k, False: 3.93M]
  |  |  |  |  ------------------
  |  |  |  |  687|  28.6k|        return #name;
  |  |  ------------------
  |  |  156|  33.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  686|  33.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 33.6k, False: 3.92M]
  |  |  |  |  ------------------
  |  |  |  |  687|  33.6k|        return #name;
  |  |  ------------------
  |  |  157|  33.6k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  33.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  686|     29|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     29|        return #name;
  |  |  ------------------
  |  |  159|     29|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|  36.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  686|  36.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 36.8k, False: 3.92M]
  |  |  |  |  ------------------
  |  |  |  |  687|  36.8k|        return #name;
  |  |  ------------------
  |  |  163|  36.8k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|  36.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  165|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  166|    106|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  686|    106|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 106, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    106|        return #name;
  |  |  ------------------
  |  |  167|    109|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  686|    109|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 109, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    109|        return #name;
  |  |  ------------------
  |  |  168|    109|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|    109|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  686|     61|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 61, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     61|        return #name;
  |  |  ------------------
  |  |  170|    129|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  686|    129|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 129, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    129|        return #name;
  |  |  ------------------
  |  |  171|    129|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|    129|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  173|      3|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|  9.90k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  686|  9.90k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9.90k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  9.90k|        return #name;
  |  |  ------------------
  |  |  175|  9.90k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|  9.90k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  686|     52|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 52, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     52|        return #name;
  |  |  ------------------
  |  |  177|     52|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|    129|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  686|    129|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 129, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    129|        return #name;
  |  |  ------------------
  |  |  179|  2.58k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  686|  2.58k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.58k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.58k|        return #name;
  |  |  ------------------
  |  |  180|  2.58k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  181|     56|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  686|     56|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 56, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     56|        return #name;
  |  |  ------------------
  |  |  182|     56|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|  9.67k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  686|  9.67k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9.67k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  9.67k|        return #name;
  |  |  ------------------
  |  |  184|  9.67k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  26.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  686|  26.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26.9k, False: 3.93M]
  |  |  |  |  ------------------
  |  |  |  |  687|  26.9k|        return #name;
  |  |  ------------------
  |  |  186|  26.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  686|    320|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 320, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    320|        return #name;
  |  |  ------------------
  |  |  187|    320|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  686|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 38, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     38|        return #name;
  |  |  ------------------
  |  |  188|  4.36k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  686|  4.36k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.36k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.36k|        return #name;
  |  |  ------------------
  |  |  189|  4.36k|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  16.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  686|  16.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16.6k, False: 3.94M]
  |  |  |  |  ------------------
  |  |  |  |  687|  16.6k|        return #name;
  |  |  ------------------
  |  |  191|  40.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  686|  40.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 40.3k, False: 3.91M]
  |  |  |  |  ------------------
  |  |  |  |  687|  40.3k|        return #name;
  |  |  ------------------
  |  |  192|  40.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  686|  9.78k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9.78k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  9.78k|        return #name;
  |  |  ------------------
  |  |  193|  9.78k|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|  46.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  686|  46.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 46.6k, False: 3.91M]
  |  |  |  |  ------------------
  |  |  |  |  687|  46.6k|        return #name;
  |  |  ------------------
  |  |  195|   111k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  686|   111k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 111k, False: 3.84M]
  |  |  |  |  ------------------
  |  |  |  |  687|   111k|        return #name;
  |  |  ------------------
  |  |  196|   111k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|   111k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  686|  65.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 65.4k, False: 3.89M]
  |  |  |  |  ------------------
  |  |  |  |  687|  65.4k|        return #name;
  |  |  ------------------
  |  |  198|  65.4k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|  65.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  686|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 38, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     38|        return #name;
  |  |  ------------------
  |  |  200|     38|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|    236|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  686|    236|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 236, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    236|        return #name;
  |  |  ------------------
  |  |  202|    236|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  686|     64|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 64, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     64|        return #name;
  |  |  ------------------
  |  |  203|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  204|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  206|      4|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  208|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 40, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     40|        return #name;
  |  |  ------------------
  |  |  209|     40|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  211|     18|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|    345|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  686|    345|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 345, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    345|        return #name;
  |  |  ------------------
  |  |  213|  21.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|  21.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 21.5k, False: 3.93M]
  |  |  |  |  ------------------
  |  |  |  |  687|  21.5k|        return #name;
  |  |  ------------------
  |  |  214|  21.5k|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|  21.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  216|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|    105|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  686|    105|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 105, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    105|        return #name;
  |  |  ------------------
  |  |  219|    323|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  686|    323|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 323, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    323|        return #name;
  |  |  ------------------
  |  |  220|    323|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  686|    217|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 217, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    217|        return #name;
  |  |  ------------------
  |  |  221|    217|    /* Operator */                                                                                 \
  |  |  222|    217|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|   167k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)            /* = */                                  \
  |  |  ------------------
  |  |  |  |  686|   167k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 167k, False: 3.79M]
  |  |  |  |  ------------------
  |  |  |  |  687|   167k|        return #name;
  |  |  ------------------
  |  |  224|   167k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)        /* += */                                 \
  |  |  ------------------
  |  |  |  |  686|  1.30k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.30k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.30k|        return #name;
  |  |  ------------------
  |  |  225|  1.30k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)       /* -= */                                 \
  |  |  ------------------
  |  |  |  |  686|    481|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 481, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    481|        return #name;
  |  |  ------------------
  |  |  226|    481|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)    /* *= */                                 \
  |  |  ------------------
  |  |  |  |  686|    240|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 240, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    240|        return #name;
  |  |  ------------------
  |  |  227|    614|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)      /* /= */                                 \
  |  |  ------------------
  |  |  |  |  686|    614|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 614, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    614|        return #name;
  |  |  ------------------
  |  |  228|  23.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)       /* & */                                  \
  |  |  ------------------
  |  |  |  |  686|  23.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23.6k, False: 3.93M]
  |  |  |  |  ------------------
  |  |  |  |  687|  23.6k|        return #name;
  |  |  ------------------
  |  |  229|  23.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals) /* &= */                                 \
  |  |  ------------------
  |  |  |  |  686|  2.08k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.08k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.08k|        return #name;
  |  |  ------------------
  |  |  230|  10.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)              /* + */                                  \
  |  |  ------------------
  |  |  |  |  686|  10.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10.0k, False: 3.94M]
  |  |  |  |  ------------------
  |  |  |  |  687|  10.0k|        return #name;
  |  |  ------------------
  |  |  231|  15.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)             /* - */                                  \
  |  |  ------------------
  |  |  |  |  686|  15.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15.1k, False: 3.94M]
  |  |  |  |  ------------------
  |  |  |  |  687|  15.1k|        return #name;
  |  |  ------------------
  |  |  232|  49.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)          /* * */                                  \
  |  |  ------------------
  |  |  |  |  686|  49.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 49.1k, False: 3.91M]
  |  |  |  |  ------------------
  |  |  |  |  687|  49.1k|        return #name;
  |  |  ------------------
  |  |  233|  49.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)            /* / */                                  \
  |  |  ------------------
  |  |  |  |  686|  45.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 45.9k, False: 3.91M]
  |  |  |  |  ------------------
  |  |  |  |  687|  45.9k|        return #name;
  |  |  ------------------
  |  |  234|  61.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)             /* ^ */                                  \
  |  |  ------------------
  |  |  |  |  686|  61.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 61.2k, False: 3.89M]
  |  |  |  |  ------------------
  |  |  |  |  687|  61.2k|        return #name;
  |  |  ------------------
  |  |  235|  61.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)      /* == */                                 \
  |  |  ------------------
  |  |  |  |  686|  5.87k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.87k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.87k|        return #name;
  |  |  ------------------
  |  |  236|  7.04k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)          /* <> */                                 \
  |  |  ------------------
  |  |  |  |  686|  7.04k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.04k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.04k|        return #name;
  |  |  ------------------
  |  |  237|  41.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)       /* > */                                  \
  |  |  ------------------
  |  |  |  |  686|  41.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 41.7k, False: 3.91M]
  |  |  |  |  ------------------
  |  |  |  |  687|  41.7k|        return #name;
  |  |  ------------------
  |  |  238|  41.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)  /* >= */                                 \
  |  |  ------------------
  |  |  |  |  686|  1.64k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.64k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.64k|        return #name;
  |  |  ------------------
  |  |  239|  92.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)          /* < */                                  \
  |  |  ------------------
  |  |  |  |  686|  92.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 92.0k, False: 3.86M]
  |  |  |  |  ------------------
  |  |  |  |  687|  92.0k|        return #name;
  |  |  ------------------
  |  |  240|  92.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)     /* <= */                                 \
  |  |  ------------------
  |  |  |  |  686|  2.23k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.23k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.23k|        return #name;
  |  |  ------------------
  |  |  241|   154k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)         /* ? */                                  \
  |  |  ------------------
  |  |  |  |  686|   154k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 154k, False: 3.80M]
  |  |  |  |  ------------------
  |  |  |  |  687|   154k|        return #name;
  |  |  ------------------
  |  |  242|   154k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)       /* : */                                  \
  |  |  ------------------
  |  |  |  |  686|   118k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 118k, False: 3.84M]
  |  |  |  |  ------------------
  |  |  |  |  687|   118k|        return #name;
  |  |  ------------------
  |  |  243|   118k|    /* Built-in Functions */                                                                       \
  |  |  244|   118k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|   118k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|   118k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  686|    841|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 841, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    841|        return #name;
  |  |  ------------------
  |  |  247|    841|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  686|    302|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 302, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    302|        return #name;
  |  |  ------------------
  |  |  248|    302|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  249|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  250|     52|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  686|     52|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 52, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     52|        return #name;
  |  |  ------------------
  |  |  251|     52|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  252|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  253|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  686|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 42, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     42|        return #name;
  |  |  ------------------
  |  |  254|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  686|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 32, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     32|        return #name;
  |  |  ------------------
  |  |  255|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  256|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  257|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  258|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  259|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  686|     66|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 66, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     66|        return #name;
  |  |  ------------------
  |  |  260|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  262|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  263|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  264|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  265|    127|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  686|    127|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 127, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    127|        return #name;
  |  |  ------------------
  |  |  266|    127|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  267|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  686|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 68, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     68|        return #name;
  |  |  ------------------
  |  |  268|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  269|  1.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  686|  1.37k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.37k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.37k|        return #name;
  |  |  ------------------
  |  |  270|  1.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  271|     51|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  686|     51|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 51, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     51|        return #name;
  |  |  ------------------
  |  |  272|    652|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  686|    652|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 652, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    652|        return #name;
  |  |  ------------------
  |  |  273|    652|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  274|  1.62k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  686|  1.62k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.62k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.62k|        return #name;
  |  |  ------------------
  |  |  275|  1.62k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  686|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 30, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     30|        return #name;
  |  |  ------------------
  |  |  276|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  277|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  279|     56|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  686|     56|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 56, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     56|        return #name;
  |  |  ------------------
  |  |  280|     56|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  281|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  282|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  283|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  284|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  287|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|     48|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 48, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     48|        return #name;
  |  |  ------------------
  |  |  288|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|     41|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 41, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     41|        return #name;
  |  |  ------------------
  |  |  289|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  290|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  686|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 40, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     40|        return #name;
  |  |  ------------------
  |  |  291|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  297|     49|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  686|     49|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 49, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     49|        return #name;
  |  |  ------------------
  |  |  298|     49|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  686|     29|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     29|        return #name;
  |  |  ------------------
  |  |  299|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  300|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  301|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  302|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  306|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  307|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  308|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  309|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 42, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     42|        return #name;
  |  |  ------------------
  |  |  310|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  311|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  312|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  313|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  314|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  315|    117|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  686|    117|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 117, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    117|        return #name;
  |  |  ------------------
  |  |  316|    117|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  318|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  319|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  320|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  321|     60|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  686|     60|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 60, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     60|        return #name;
  |  |  ------------------
  |  |  322|     60|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  323|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  326|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  327|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  328|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     22|        return #name;
  |  |  ------------------
  |  |  329|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  330|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  686|     94|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 94, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     94|        return #name;
  |  |  ------------------
  |  |  331|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  332|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  686|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 38, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     38|        return #name;
  |  |  ------------------
  |  |  333|     76|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  686|     76|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 76, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     76|        return #name;
  |  |  ------------------
  |  |  334|     76|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  335|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|     54|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 54, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     54|        return #name;
  |  |  ------------------
  |  |  336|    123|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  686|    123|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 123, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    123|        return #name;
  |  |  ------------------
  |  |  337|    123|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  338|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  339|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  340|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  341|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  342|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  343|    132|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  686|    132|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 132, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    132|        return #name;
  |  |  ------------------
  |  |  344|    132|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  345|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  686|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     22|        return #name;
  |  |  ------------------
  |  |  346|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  347|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  348|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  349|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  351|     92|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|     92|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 92, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     92|        return #name;
  |  |  ------------------
  |  |  352|     92|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  355|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  356|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  357|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  358|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  686|     37|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 37, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     37|        return #name;
  |  |  ------------------
  |  |  359|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  360|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  686|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 42, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     42|        return #name;
  |  |  ------------------
  |  |  361|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  362|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  363|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  364|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  365|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  366|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  367|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 46, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     46|        return #name;
  |  |  ------------------
  |  |  368|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  369|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  370|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  371|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  372|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  373|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  374|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  375|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  376|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  377|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  378|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  379|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  380|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  384|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  385|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  386|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  387|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  393|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  394|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  395|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  396|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  402|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  403|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  686|     50|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 50, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     50|        return #name;
  |  |  ------------------
  |  |  404|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  405|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  406|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  407|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  408|     56|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  686|     56|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 56, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     56|        return #name;
  |  |  ------------------
  |  |  409|     56|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  410|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  411|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  412|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  413|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  414|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  415|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  417|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  418|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  419|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  420|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  421|     75|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  686|     75|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 75, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     75|        return #name;
  |  |  ------------------
  |  |  422|     75|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  423|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  424|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  427|     97|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|     97|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 97, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     97|        return #name;
  |  |  ------------------
  |  |  428|     97|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  429|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  430|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  431|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  432|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  434|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  435|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  436|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  437|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  438|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  440|     65|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  686|     65|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 65, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     65|        return #name;
  |  |  ------------------
  |  |  441|     65|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  444|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  686|     54|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 54, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     54|        return #name;
  |  |  ------------------
  |  |  445|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  446|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  447|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  448|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  449|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  450|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  451|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  686|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 46, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     46|        return #name;
  |  |  ------------------
  |  |  452|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  453|    296|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|    296|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 296, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    296|        return #name;
  |  |  ------------------
  |  |  454|    296|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|     54|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 54, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     54|        return #name;
  |  |  ------------------
  |  |  455|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  456|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  457|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  458|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  459|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  460|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  461|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  462|     56|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  686|     56|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 56, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     56|        return #name;
  |  |  ------------------
  |  |  463|     56|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  465|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  466|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  468|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  469|     44|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  686|     44|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 44, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     44|        return #name;
  |  |  ------------------
  |  |  470|     44|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  471|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  472|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  473|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  474|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  475|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  476|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  686|     39|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 39, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     39|        return #name;
  |  |  ------------------
  |  |  477|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  478|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  479|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  686|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 42, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     42|        return #name;
  |  |  ------------------
  |  |  480|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  481|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  482|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  686|     94|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 94, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     94|        return #name;
  |  |  ------------------
  |  |  483|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  485|  1.52k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  686|  1.52k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.52k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.52k|        return #name;
  |  |  ------------------
  |  |  486|  1.52k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  488|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  489|    211|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  686|    211|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 211, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    211|        return #name;
  |  |  ------------------
  |  |  490|    211|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  491|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  492|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  493|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  494|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  495|  1.35k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  686|  1.35k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.35k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.35k|        return #name;
  |  |  ------------------
  |  |  496|  1.35k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|    104|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 104, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    104|        return #name;
  |  |  ------------------
  |  |  497|    104|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  498|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  499|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  500|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  503|    147|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  686|    147|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 147, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    147|        return #name;
  |  |  ------------------
  |  |  504|    147|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  505|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  506|     47|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  686|     47|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 47, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     47|        return #name;
  |  |  ------------------
  |  |  507|     47|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  508|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  509|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  510|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  686|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     28|        return #name;
  |  |  ------------------
  |  |  511|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  512|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  516|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  686|     64|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 64, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     64|        return #name;
  |  |  ------------------
  |  |  517|  2.66k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  686|  2.66k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.66k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.66k|        return #name;
  |  |  ------------------
  |  |  518|  2.66k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  519|    202|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|    202|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 202, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    202|        return #name;
  |  |  ------------------
  |  |  520|    202|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  521|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  522|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  523|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  524|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  686|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     28|        return #name;
  |  |  ------------------
  |  |  525|  7.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  686|  7.69k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.69k, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.69k|        return #name;
  |  |  ------------------
  |  |  526|  7.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  686|    193|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 193, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    193|        return #name;
  |  |  ------------------
  |  |  527|    193|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  529|    110|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  686|    110|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 110, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    110|        return #name;
  |  |  ------------------
  |  |  530|    110|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  531|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  533|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  534|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  535|    309|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  686|    309|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 309, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    309|        return #name;
  |  |  ------------------
  |  |  536|    309|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  686|     82|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 82, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     82|        return #name;
  |  |  ------------------
  |  |  537|     82|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  538|    749|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  686|    749|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 749, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    749|        return #name;
  |  |  ------------------
  |  |  539|    749|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  540|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  541|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  542|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  543|    164|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  686|    164|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 164, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    164|        return #name;
  |  |  ------------------
  |  |  544|    164|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  686|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 30, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     30|        return #name;
  |  |  ------------------
  |  |  545|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  546|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  547|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  548|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  549|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  550|     96|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  686|     96|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 96, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     96|        return #name;
  |  |  ------------------
  |  |  551|     96|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  552|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  553|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  554|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  557|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  686|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     28|        return #name;
  |  |  ------------------
  |  |  558|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  559|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  560|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  561|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  562|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  563|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  566|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  567|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  568|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  569|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  570|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  571|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  572|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  573|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  574|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  575|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  576|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  579|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  580|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  581|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  583|     80|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  686|     80|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 80, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     80|        return #name;
  |  |  ------------------
  |  |  584|     80|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  585|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  586|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  587|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  588|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |  589|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |  590|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  591|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  592|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  593|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  594|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  595|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  596|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  686|     35|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 35, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     35|        return #name;
  |  |  ------------------
  |  |  597|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  599|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  686|     94|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 94, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     94|        return #name;
  |  |  ------------------
  |  |  600|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  601|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  603|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  604|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  609|    235|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  686|    235|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 235, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    235|        return #name;
  |  |  ------------------
  |  |  610|    235|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  611|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  686|     94|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 94, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     94|        return #name;
  |  |  ------------------
  |  |  612|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  613|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  614|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  615|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  616|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|     50|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 50, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     50|        return #name;
  |  |  ------------------
  |  |  617|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  618|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  619|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  620|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  621|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  622|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  623|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  625|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  626|    106|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  686|    106|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 106, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    106|        return #name;
  |  |  ------------------
  |  |  627|    106|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  628|    112|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  686|    112|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 112, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    112|        return #name;
  |  |  ------------------
  |  |  629|    112|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  630|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  631|    187|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  686|    187|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 187, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|    187|        return #name;
  |  |  ------------------
  |  |  632|    187|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  634|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  635|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  636|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  637|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  638|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  686|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     22|        return #name;
  |  |  ------------------
  |  |  639|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  640|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  686|     72|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 72, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     72|        return #name;
  |  |  ------------------
  |  |  641|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  643|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  644|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  645|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  646|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  647|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  648|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  649|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 3.95M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  ------------------
  690|       |
  691|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  692|       |
  693|      0|        default:
  ------------------
  |  Branch (693:9): [True: 0, False: 3.95M]
  ------------------
  694|      0|            PHI_ASSERT_NOT_REACHED();
  695|  3.95M|    }
  696|  3.95M|}

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  16.1M|    {
   21|       |#if defined(PHI_DEBUG)
   22|       |        PHI_ASSERT(!m_Finalized);
   23|       |#endif
   24|       |
   25|  16.1M|        m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  16.1M|    }

_ZN10OpenAutoIt10DiagnosticC2ENS_12DiagnosticIdENS_15DiagnosticLevelENS_14SourceLocationEONSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE:
   14|  1.38M|{}
_ZNK10OpenAutoIt10Diagnostic6IsNoteEv:
   42|  1.38M|{
   43|  1.38M|    return m_Level == DiagnosticLevel::Note;
   44|  1.38M|}
_ZNK10OpenAutoIt10Diagnostic9IsWarningEv:
   47|  1.36M|{
   48|  1.36M|    return m_Level == DiagnosticLevel::Warning;
   49|  1.36M|}
_ZNK10OpenAutoIt10Diagnostic7IsErrorEv:
   52|  1.36M|{
   53|  1.36M|    return m_Level == DiagnosticLevel::Error;
   54|  1.36M|}
_ZNK10OpenAutoIt10Diagnostic12IsFatalErrorEv:
   57|  2.23M|{
   58|  2.23M|    return m_Level == DiagnosticLevel::FatalError;
   59|  2.23M|}
_ZNK10OpenAutoIt10Diagnostic14IsErrorOrFatalEv:
   62|  1.36M|{
   63|  1.36M|    return IsError() || IsFatalError();
  ------------------
  |  Branch (63:12): [True: 498k, False: 870k]
  |  Branch (63:25): [True: 0, False: 870k]
  ------------------
   64|  1.36M|}
_ZN10OpenAutoIt10Diagnostic7AddNoteEOS0_:
   93|  19.6k|{
   94|  19.6k|    PHI_ASSERT(note.IsNote());
   95|       |
   96|  19.6k|    m_Notes.emplace_back(note);
   97|  19.6k|}

_ZN10OpenAutoIt17DiagnosticBuilderC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
   11|  1.36M|{}
_ZN10OpenAutoIt17DiagnosticBuilderD2Ev:
   14|  1.36M|{
   15|  1.36M|    for (auto& diagnostic : m_Diagnostics)
  ------------------
  |  Branch (15:27): [True: 1.36M, False: 1.36M]
  ------------------
   16|  1.36M|    {
   17|  1.36M|        m_DiagnosticEngine->Report(diagnostic);
   18|  1.36M|    }
   19|  1.36M|}

_ZN10OpenAutoIt16DiagnosticEngineC2Ev:
   12|  55.7k|{}
_ZNK10OpenAutoIt16DiagnosticEngine13GetErrorLimitEv:
   29|  4.02M|{
   30|  4.02M|    return m_ErrorLimit;
   31|  4.02M|}
_ZNK10OpenAutoIt16DiagnosticEngine21HasFatalErrorOccurredEv:
   44|  4.02M|{
   45|  4.02M|    return m_FatalErrorOccurred;
   46|  4.02M|}
_ZN10OpenAutoIt16DiagnosticEngine6ReportENS_10DiagnosticE:
   69|  1.36M|{
   70|  1.36M|    PHI_ASSERT(!diagnostic.IsNote());
   71|       |
   72|  1.36M|    if (m_IgnoreAllWarnings)
  ------------------
  |  Branch (72:9): [True: 0, False: 1.36M]
  ------------------
   73|      0|    {
   74|      0|        diagnostic.IgnoreWarning();
   75|      0|    }
   76|       |
   77|  1.36M|    if (m_WarningsAsError)
  ------------------
  |  Branch (77:9): [True: 0, False: 1.36M]
  ------------------
   78|      0|    {
   79|      0|        diagnostic.UpgradeWarningToError();
   80|      0|    }
   81|       |
   82|  1.36M|    if (diagnostic.IsErrorOrFatal())
  ------------------
  |  Branch (82:9): [True: 498k, False: 870k]
  ------------------
   83|   498k|    {
   84|   498k|        m_ErrorOccurred = true;
   85|   498k|        ++m_NumberOfErrors;
   86|   498k|    }
   87|       |
   88|  1.36M|    if (diagnostic.IsFatalError())
  ------------------
  |  Branch (88:9): [True: 0, False: 1.36M]
  ------------------
   89|      0|    {
   90|      0|        m_FatalErrorOccurred = true;
   91|      0|    }
   92|       |
   93|  1.36M|    if (diagnostic.IsWarning())
  ------------------
  |  Branch (93:9): [True: 870k, False: 498k]
  ------------------
   94|   870k|    {
   95|   870k|        ++m_NumberOfWarnings;
   96|   870k|    }
   97|       |
   98|  1.36M|    if (m_Consumer)
  ------------------
  |  Branch (98:9): [True: 0, False: 1.36M]
  ------------------
   99|      0|    {
  100|      0|        m_Consumer->Report(diagnostic);
  101|      0|    }
  102|  1.36M|}

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  160|   105k|{
  161|   105k|    static constexpr auto map =
  162|   105k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  163|   105k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  164|       |
  165|   105k|    std::string str{token.begin(), token.end()};
  166|   105k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  167|       |
  168|   105k|    return map.at(phi::string_view(str.c_str(), str.size()));
  169|   105k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  186|   217k|{
  187|   217k|    static constexpr auto map =
  188|   217k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  189|   217k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  190|       |
  191|   217k|    std::string str{token.begin(), token.end()};
  192|   217k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  193|       |
  194|   217k|    return map.at(phi::string_view(str.c_str(), str.size()));
  195|   217k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  662|  3.75M|{
  663|  3.75M|    static constexpr auto keyword_map =
  664|  3.75M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  665|  3.75M|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  666|  3.75M|    static constexpr auto builtin_map =
  667|  3.75M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  668|  3.75M|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  669|       |
  670|  3.75M|    std::string str{token.begin(), token.end()};
  671|  3.75M|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  672|       |
  673|  3.75M|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  674|       |
  675|  3.75M|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  676|  3.75M|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (676:9): [True: 1.86M, False: 1.89M]
  ------------------
  677|  1.86M|    {
  678|  1.86M|        return builtin_map.at(string);
  679|  1.86M|    }
  680|       |
  681|  1.89M|    return keyword;
  682|  3.75M|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  707|  2.46M|{
  708|  2.46M|    static constexpr auto map =
  709|  2.46M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  710|  2.46M|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  711|       |
  712|  2.46M|    return map.at(token);
  713|  2.46M|}
_ZN10OpenAutoIt5LexerC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
  778|  55.7k|{}
_ZN10OpenAutoIt5Lexer5ResetEv:
  781|  55.7k|{
  782|  55.7k|    m_Iterator = m_Source.begin();
  783|       |
  784|  55.7k|    m_InsideMultiLineComment = false;
  785|       |
  786|  55.7k|    m_LineNumber = 1u;
  787|  55.7k|    m_Column     = 1u;
  788|  55.7k|}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  791|  61.4M|{
  792|  61.4M|    return m_Iterator == m_Source.end();
  793|  61.4M|}
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  796|  16.1M|{
  797|  20.7M|    while (!IsFinished())
  ------------------
  |  Branch (797:12): [True: 20.7M, False: 6.97k]
  ------------------
  798|  20.7M|    {
  799|  20.7M|        char current_character = *m_Iterator;
  800|       |
  801|       |        /* null character */
  802|       |
  803|  20.7M|        if (current_character == '\0')
  ------------------
  |  Branch (803:13): [True: 870k, False: 19.8M]
  ------------------
  804|   870k|        {
  805|   870k|            Diag().Warning(DiagnosticId::NullCharacter, CurrentSourceLocation());
  806|       |
  807|   870k|            SkipCurrentCharacter();
  808|   870k|        }
  809|       |
  810|       |        /* Multiline comments */
  811|       |
  812|  19.8M|        else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (812:18): [True: 9.21k, False: 19.8M]
  ------------------
  813|  9.21k|        {
  814|  9.21k|            iterator       begin_of_multiline_comment            = m_Iterator;
  815|  9.21k|            const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  816|  9.21k|            const phi::u64 beginning_column_of_multiline_comment = m_Column;
  817|       |
  818|  26.9k|            while (!IsFinished())
  ------------------
  |  Branch (818:20): [True: 26.8k, False: 141]
  ------------------
  819|  26.8k|            {
  820|  26.8k|                current_character = *m_Iterator;
  821|       |
  822|       |                // Check for end comment multiline
  823|  26.8k|                if (current_character == '#')
  ------------------
  |  Branch (823:21): [True: 10.9k, False: 15.8k]
  ------------------
  824|  10.9k|                {
  825|  10.9k|                    iterator begin_of_token = m_Iterator;
  826|  10.9k|                    ConsumeCurrentCharacter();
  827|       |
  828|  43.0k|                    while (!IsFinished())
  ------------------
  |  Branch (828:28): [True: 42.8k, False: 193]
  ------------------
  829|  42.8k|                    {
  830|  42.8k|                        current_character = *m_Iterator;
  831|       |
  832|  42.8k|                        if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (832:29): [True: 32.1k, False: 10.7k]
  ------------------
  833|  32.1k|                        {
  834|  32.1k|                            ConsumeCurrentCharacter();
  835|  32.1k|                            continue;
  836|  32.1k|                        }
  837|       |
  838|  10.7k|                        break;
  839|  42.8k|                    }
  840|       |
  841|  10.9k|                    const TokenKind pre_processor_token_kind =
  842|  10.9k|                            lookup_pre_processor(TokenText(begin_of_token));
  843|       |
  844|  10.9k|                    if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (844:25): [True: 9.07k, False: 1.84k]
  ------------------
  845|  9.07k|                    {
  846|  9.07k|                        m_InsideMultiLineComment = false;
  847|       |
  848|       |                        // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  849|  9.07k|                        m_Iterator -= TokenText(begin_of_token).length().unsafe();
  850|       |
  851|  9.07k|                        Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  852|  9.07k|                                    BuildSourceLocation(beginning_line_of_multiline_comment,
  853|  9.07k|                                                        beginning_column_of_multiline_comment)};
  854|       |
  855|  9.07k|                        return token;
  856|  9.07k|                    }
  857|  10.9k|                }
  858|  15.8k|                else if (current_character == '\n')
  ------------------
  |  Branch (858:26): [True: 1.22k, False: 14.6k]
  ------------------
  859|  1.22k|                {
  860|  1.22k|                    ConsumeCurrentCharacter();
  861|  1.22k|                    AdvanceToNextLine();
  862|  1.22k|                }
  863|  14.6k|                else
  864|  14.6k|                {
  865|       |                    // Otherwise simply consume the character
  866|  14.6k|                    ConsumeCurrentCharacter();
  867|  14.6k|                    m_Column += 1u;
  868|  14.6k|                }
  869|  26.8k|            }
  870|  9.21k|        }
  871|       |
  872|       |        /* Skip characters */
  873|       |
  874|  19.8M|        else if (is_skip_character(current_character))
  ------------------
  |  Branch (874:18): [True: 913k, False: 18.9M]
  ------------------
  875|   913k|        {
  876|   913k|            SkipCurrentCharacter();
  877|   913k|        }
  878|       |
  879|       |        /* New Lines */
  880|       |
  881|  18.9M|        else if (current_character == '\n')
  ------------------
  |  Branch (881:18): [True: 1.00M, False: 17.9M]
  ------------------
  882|  1.00M|        {
  883|  1.00M|            Token new_line_token = ConstructToken(TokenKind::NewLine);
  884|       |
  885|  1.00M|            ConsumeCurrentCharacter();
  886|  1.00M|            AdvanceToNextLine();
  887|       |
  888|  1.00M|            return new_line_token;
  889|  1.00M|        }
  890|       |
  891|       |        /* Comment */
  892|       |
  893|  17.9M|        else if (current_character == ';')
  ------------------
  |  Branch (893:18): [True: 11.3k, False: 17.9M]
  ------------------
  894|  11.3k|        {
  895|  11.3k|            iterator begin_of_token = m_Iterator;
  896|  11.3k|            ConsumeCurrentCharacter();
  897|       |
  898|  44.9k|            while (!IsFinished())
  ------------------
  |  Branch (898:20): [True: 44.6k, False: 322]
  ------------------
  899|  44.6k|            {
  900|  44.6k|                current_character = *m_Iterator;
  901|       |
  902|  44.6k|                if (current_character != '\n')
  ------------------
  |  Branch (902:21): [True: 33.5k, False: 11.0k]
  ------------------
  903|  33.5k|                {
  904|  33.5k|                    ConsumeCurrentCharacter();
  905|  33.5k|                    continue;
  906|  33.5k|                }
  907|       |
  908|  11.0k|                break;
  909|  44.6k|            }
  910|       |
  911|  11.3k|            return ConstructToken(TokenKind::Comment, begin_of_token);
  912|  11.3k|        }
  913|       |
  914|       |        /* Macros */
  915|       |
  916|  17.9M|        else if (current_character == '@')
  ------------------
  |  Branch (916:18): [True: 105k, False: 17.7M]
  ------------------
  917|   105k|        {
  918|   105k|            iterator begin_of_token = m_Iterator;
  919|   105k|            ConsumeCurrentCharacter();
  920|       |
  921|   496k|            while (!IsFinished())
  ------------------
  |  Branch (921:20): [True: 495k, False: 651]
  ------------------
  922|   495k|            {
  923|   495k|                current_character = *m_Iterator;
  924|       |
  925|   495k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (925:21): [True: 391k, False: 104k]
  ------------------
  926|   391k|                {
  927|   391k|                    ConsumeCurrentCharacter();
  928|   391k|                    continue;
  929|   391k|                }
  930|       |
  931|   104k|                break;
  932|   495k|            }
  933|       |
  934|       |            // Emit token
  935|   105k|            return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  936|   105k|        }
  937|       |
  938|       |        /* Variable identifier */
  939|       |
  940|  17.7M|        else if (current_character == '$')
  ------------------
  |  Branch (940:18): [True: 1.20M, False: 16.5M]
  ------------------
  941|  1.20M|        {
  942|  1.20M|            iterator     begin_of_token = m_Iterator;
  943|  1.20M|            phi::boolean parsed_something{false};
  944|  1.20M|            ConsumeCurrentCharacter();
  945|       |
  946|  2.64M|            while (!IsFinished())
  ------------------
  |  Branch (946:20): [True: 2.63M, False: 5.81k]
  ------------------
  947|  2.63M|            {
  948|  2.63M|                current_character = *m_Iterator;
  949|       |
  950|  2.63M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (950:21): [True: 1.43M, False: 1.20M]
  ------------------
  951|  1.43M|                {
  952|  1.43M|                    ConsumeCurrentCharacter();
  953|  1.43M|                    parsed_something = true;
  954|  1.43M|                    continue;
  955|  1.43M|                }
  956|       |
  957|  1.20M|                break;
  958|  2.63M|            }
  959|       |
  960|       |            // Ensure that '$' is not a valid variable identifier
  961|  1.20M|            if (!parsed_something)
  ------------------
  |  Branch (961:17): [True: 222k, False: 987k]
  ------------------
  962|   222k|            {
  963|   222k|                return ConstructToken(TokenKind::Garbage, begin_of_token);
  964|   222k|            }
  965|       |
  966|       |            // Emit Token
  967|   987k|            return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  968|  1.20M|        }
  969|       |
  970|       |        /* PreProcessor directive */
  971|       |
  972|  16.5M|        else if (current_character == '#')
  ------------------
  |  Branch (972:18): [True: 206k, False: 16.3M]
  ------------------
  973|   206k|        {
  974|   206k|            iterator begin_of_token = m_Iterator;
  975|   206k|            ConsumeCurrentCharacter();
  976|       |
  977|  1.17M|            while (!IsFinished())
  ------------------
  |  Branch (977:20): [True: 1.17M, False: 1.32k]
  ------------------
  978|  1.17M|            {
  979|  1.17M|                current_character = *m_Iterator;
  980|       |
  981|  1.17M|                if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (981:21): [True: 967k, False: 205k]
  ------------------
  982|   967k|                {
  983|   967k|                    ConsumeCurrentCharacter();
  984|   967k|                    continue;
  985|   967k|                }
  986|       |
  987|   205k|                break;
  988|  1.17M|            }
  989|       |
  990|       |            // Check for start of multiline comment
  991|   206k|            const TokenKind pre_processor_token_kind =
  992|   206k|                    lookup_pre_processor(TokenText(begin_of_token));
  993|       |
  994|   206k|            if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (994:17): [True: 9.24k, False: 197k]
  ------------------
  995|  9.24k|            {
  996|  9.24k|                m_InsideMultiLineComment = true;
  997|  9.24k|            }
  998|       |
  999|   206k|            return ConstructToken(pre_processor_token_kind, begin_of_token);
 1000|   206k|        }
 1001|       |
 1002|       |        /* SingleQuoteStringLiteral */
 1003|       |
 1004|  16.3M|        else if (current_character == '\'')
  ------------------
  |  Branch (1004:18): [True: 37.5k, False: 16.3M]
  ------------------
 1005|  37.5k|        {
 1006|  37.5k|            iterator     begin_of_token = m_Iterator;
 1007|  37.5k|            phi::boolean did_terminate  = false;
 1008|  37.5k|            ConsumeCurrentCharacter();
 1009|       |
 1010|  59.0k|            while (!IsFinished())
  ------------------
  |  Branch (1010:20): [True: 58.7k, False: 322]
  ------------------
 1011|  58.7k|            {
 1012|  58.7k|                current_character = *m_Iterator;
 1013|  58.7k|                ConsumeCurrentCharacter();
 1014|       |
 1015|  58.7k|                if (current_character == '\'')
  ------------------
  |  Branch (1015:21): [True: 37.2k, False: 21.5k]
  ------------------
 1016|  37.2k|                {
 1017|  37.2k|                    did_terminate = true;
 1018|  37.2k|                    break;
 1019|  37.2k|                }
 1020|  58.7k|            }
 1021|       |
 1022|  37.5k|            if (did_terminate)
  ------------------
  |  Branch (1022:17): [True: 37.2k, False: 322]
  ------------------
 1023|  37.2k|            {
 1024|  37.2k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1025|  37.2k|            }
 1026|       |
 1027|       |            // TODO: Warn unterminated string literal
 1028|  37.5k|        }
 1029|       |
 1030|       |        /* DoubleQuoteStringLiteral */
 1031|       |
 1032|  16.3M|        else if (current_character == '\"')
  ------------------
  |  Branch (1032:18): [True: 129k, False: 16.2M]
  ------------------
 1033|   129k|        {
 1034|   129k|            iterator     begin_of_token = m_Iterator;
 1035|   129k|            phi::boolean did_terminate  = false;
 1036|   129k|            ConsumeCurrentCharacter();
 1037|       |
 1038|   410k|            while (!IsFinished())
  ------------------
  |  Branch (1038:20): [True: 410k, False: 601]
  ------------------
 1039|   410k|            {
 1040|   410k|                current_character = *m_Iterator;
 1041|   410k|                ConsumeCurrentCharacter();
 1042|       |
 1043|   410k|                if (current_character == '\"')
  ------------------
  |  Branch (1043:21): [True: 128k, False: 281k]
  ------------------
 1044|   128k|                {
 1045|   128k|                    did_terminate = true;
 1046|   128k|                    break;
 1047|   128k|                }
 1048|   410k|            }
 1049|       |
 1050|   129k|            if (did_terminate)
  ------------------
  |  Branch (1050:17): [True: 128k, False: 601]
  ------------------
 1051|   128k|            {
 1052|   128k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1053|   128k|            }
 1054|   129k|        }
 1055|       |
 1056|       |        /* Number Literals - IntegerLiteral/FloatLiteral */
 1057|       |
 1058|  16.2M|        else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1058:18): [True: 2.03M, False: 14.1M]
  |  Branch (1058:18): [True: 2.77M, False: 13.4M]
  |  Branch (1058:54): [True: 736k, False: 13.4M]
  ------------------
 1059|  2.77M|        {
 1060|  2.77M|            const phi::boolean start_with_zero{current_character == '0'};
 1061|  2.77M|            phi::boolean       parsing_hex{false};
 1062|  2.77M|            phi::boolean       parsing_float{current_character == '.'};
 1063|       |
 1064|  2.77M|            iterator begin_of_token = m_Iterator;
 1065|  2.77M|            ConsumeCurrentCharacter();
 1066|       |
 1067|  4.88M|            while (!IsFinished())
  ------------------
  |  Branch (1067:20): [True: 4.87M, False: 8.39k]
  ------------------
 1068|  4.87M|            {
 1069|  4.87M|                current_character = *m_Iterator;
 1070|       |
 1071|       |                // Is the second character
 1072|  4.87M|                if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1072:21): [True: 2.76M, False: 2.10M]
  |  Branch (1072:58): [True: 618k, False: 2.14M]
  ------------------
 1073|   618k|                {
 1074|       |                    // Hex character
 1075|   618k|                    if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1075:25): [True: 24.7k, False: 593k]
  |  Branch (1075:53): [True: 26.4k, False: 566k]
  ------------------
 1076|  51.1k|                    {
 1077|  51.1k|                        parsing_hex = true;
 1078|  51.1k|                        ConsumeCurrentCharacter();
 1079|  51.1k|                        continue;
 1080|  51.1k|                    }
 1081|   618k|                }
 1082|       |
 1083|       |                // Actually parsing
 1084|  4.82M|                if (parsing_hex)
  ------------------
  |  Branch (1084:21): [True: 381k, False: 4.44M]
  ------------------
 1085|   381k|                {
 1086|   381k|                    if (parsing_float)
  ------------------
  |  Branch (1086:25): [True: 0, False: 381k]
  ------------------
 1087|      0|                    {
 1088|       |                        // TODO: Fix include and enable this warning
 1089|       |                        //Diag().Error(DiagnosticId::FloatHexLiteral, CurrentSourceLocation());
 1090|       |
 1091|      0|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1092|      0|                    }
 1093|       |
 1094|   381k|                    if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1094:25): [True: 330k, False: 50.9k]
  ------------------
 1095|   330k|                    {
 1096|   330k|                        ConsumeCurrentCharacter();
 1097|   330k|                        continue;
 1098|   330k|                    }
 1099|   381k|                }
 1100|  4.44M|                else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1100:26): [True: 1.68M, False: 2.75M]
  ------------------
 1101|  1.68M|                {
 1102|  1.68M|                    ConsumeCurrentCharacter();
 1103|  1.68M|                    continue;
 1104|  1.68M|                }
 1105|       |                // Literal dot
 1106|  2.75M|                else if (current_character == '.')
  ------------------
  |  Branch (1106:26): [True: 87.8k, False: 2.66M]
  ------------------
 1107|  87.8k|                {
 1108|  87.8k|                    if (parsing_float)
  ------------------
  |  Branch (1108:25): [True: 45.6k, False: 42.1k]
  ------------------
 1109|  45.6k|                    {
 1110|       |                        //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1111|       |
 1112|  45.6k|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1113|  45.6k|                    }
 1114|       |
 1115|  42.1k|                    parsing_float = true;
 1116|  42.1k|                    ConsumeCurrentCharacter();
 1117|  42.1k|                    continue;
 1118|  87.8k|                }
 1119|       |
 1120|  2.71M|                break;
 1121|  4.82M|            }
 1122|       |
 1123|  2.72M|            if (parsing_float)
  ------------------
  |  Branch (1123:17): [True: 732k, False: 1.99M]
  ------------------
 1124|   732k|            {
 1125|       |                // Were not allowed to end with a dot
 1126|       |                // TODO: This is very hacky and looks nasty
 1127|   732k|                if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1127:21): [True: 121k, False: 611k]
  ------------------
 1128|   121k|                {
 1129|       |                    //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1130|       |
 1131|   121k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
 1132|   121k|                }
 1133|       |
 1134|   611k|                return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1135|   732k|            }
 1136|       |
 1137|  1.99M|            return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1138|  2.72M|        }
 1139|       |
 1140|       |        /* Operators */
 1141|       |
 1142|  13.4M|        else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1142:18): [True: 1.60M, False: 11.8M]
  ------------------
 1143|  1.60M|        {
 1144|  1.60M|            iterator begin_of_token = m_Iterator;
 1145|  1.60M|            ConsumeCurrentCharacter();
 1146|       |
 1147|  1.60M|            if (!IsFinished())
  ------------------
  |  Branch (1147:17): [True: 1.60M, False: 4.33k]
  ------------------
 1148|  1.60M|            {
 1149|  1.60M|                if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1149:21): [True: 53.8k, False: 1.55M]
  |  Branch (1149:44): [True: 138k, False: 1.41M]
  |  Branch (1149:70): [True: 12.0k, False: 126k]
  ------------------
 1150|  65.8k|                {
 1151|       |                    // We have an actual two part operator
 1152|  65.8k|                    ConsumeCurrentCharacter();
 1153|  65.8k|                }
 1154|  1.60M|            }
 1155|       |
 1156|  1.60M|            return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1157|  1.60M|        }
 1158|       |
 1159|  11.8M|        else if (is_single_operator(current_character))
  ------------------
  |  Branch (1159:18): [True: 859k, False: 10.9M]
  ------------------
 1160|   859k|        {
 1161|   859k|            Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1162|       |
 1163|   859k|            ConsumeCurrentCharacter();
 1164|       |
 1165|   859k|            return token;
 1166|   859k|        }
 1167|       |
 1168|       |        /* Punctioation */
 1169|       |
 1170|  10.9M|        else if (current_character == ',')
  ------------------
  |  Branch (1170:18): [True: 146k, False: 10.8M]
  ------------------
 1171|   146k|        {
 1172|   146k|            Token token = ConstructToken(TokenKind::Comma);
 1173|       |
 1174|   146k|            ConsumeCurrentCharacter();
 1175|       |
 1176|   146k|            return token;
 1177|   146k|        }
 1178|       |
 1179|  10.8M|        else if (current_character == '(')
  ------------------
  |  Branch (1179:18): [True: 1.76M, False: 9.05M]
  ------------------
 1180|  1.76M|        {
 1181|  1.76M|            Token token = ConstructToken(TokenKind::LParen);
 1182|       |
 1183|  1.76M|            ConsumeCurrentCharacter();
 1184|       |
 1185|  1.76M|            return token;
 1186|  1.76M|        }
 1187|       |
 1188|  9.05M|        else if (current_character == ')')
  ------------------
  |  Branch (1188:18): [True: 709k, False: 8.34M]
  ------------------
 1189|   709k|        {
 1190|   709k|            Token token = ConstructToken(TokenKind::RParen);
 1191|       |
 1192|   709k|            ConsumeCurrentCharacter();
 1193|       |
 1194|   709k|            return token;
 1195|   709k|        }
 1196|       |
 1197|  8.34M|        else if (current_character == '.')
  ------------------
  |  Branch (1197:18): [True: 0, False: 8.34M]
  ------------------
 1198|      0|        {
 1199|      0|            Token token = ConstructToken(TokenKind::Dot);
 1200|       |
 1201|      0|            ConsumeCurrentCharacter();
 1202|       |
 1203|      0|            return token;
 1204|      0|        }
 1205|       |
 1206|  8.34M|        else if (current_character == '[')
  ------------------
  |  Branch (1206:18): [True: 1.66M, False: 6.68M]
  ------------------
 1207|  1.66M|        {
 1208|  1.66M|            Token token = ConstructToken(TokenKind::LSquare);
 1209|       |
 1210|  1.66M|            ConsumeCurrentCharacter();
 1211|       |
 1212|  1.66M|            return token;
 1213|  1.66M|        }
 1214|       |
 1215|  6.68M|        else if (current_character == ']')
  ------------------
  |  Branch (1215:18): [True: 146k, False: 6.53M]
  ------------------
 1216|   146k|        {
 1217|   146k|            Token token = ConstructToken(TokenKind::RSquare);
 1218|       |
 1219|   146k|            ConsumeCurrentCharacter();
 1220|       |
 1221|   146k|            return token;
 1222|   146k|        }
 1223|       |
 1224|       |        /* Identifier */
 1225|       |
 1226|  6.53M|        else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1226:18): [True: 3.75M, False: 2.77M]
  ------------------
 1227|  3.75M|        {
 1228|  3.75M|            iterator begin_of_token = m_Iterator;
 1229|  3.75M|            ConsumeCurrentCharacter();
 1230|       |
 1231|  13.1M|            while (!IsFinished())
  ------------------
  |  Branch (1231:20): [True: 13.1M, False: 18.5k]
  ------------------
 1232|  13.1M|            {
 1233|  13.1M|                current_character = *m_Iterator;
 1234|       |
 1235|  13.1M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1235:21): [True: 9.43M, False: 3.73M]
  ------------------
 1236|  9.43M|                {
 1237|  9.43M|                    ConsumeCurrentCharacter();
 1238|  9.43M|                    continue;
 1239|  9.43M|                }
 1240|       |
 1241|  3.73M|                break;
 1242|  13.1M|            }
 1243|       |
 1244|  3.75M|            return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1245|  3.75M|        }
 1246|       |
 1247|       |        /* Unknown/Unexpected character */
 1248|       |
 1249|  2.77M|        else
 1250|  2.77M|        {
 1251|       |            // TODO: Warn unexpected character encountered
 1252|  2.77M|            SkipCurrentCharacter();
 1253|  2.77M|        }
 1254|  20.7M|    }
 1255|       |
 1256|  6.97k|    return {};
 1257|  16.1M|}
_ZN10OpenAutoIt5Lexer13ProcessStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEES6_:
 1260|  55.7k|{
 1261|  55.7k|    SourceFile fake_source{SourceFile::Type::Basic, file_name.data(), source};
 1262|       |
 1263|  55.7k|    return ProcessFile(&fake_source);
 1264|  55.7k|}
_ZN10OpenAutoIt5Lexer11ProcessFileEN3phi21not_null_observer_ptrIKNS_10SourceFileEEE:
 1267|  55.7k|{
 1268|  55.7k|    TokenStream stream;
 1269|       |
 1270|  55.7k|    m_SourceFile = source_file;
 1271|  55.7k|    m_Source     = m_SourceFile->m_Content;
 1272|  55.7k|    Reset();
 1273|       |
 1274|  16.2M|    while (!IsFinished())
  ------------------
  |  Branch (1274:12): [True: 16.1M, False: 55.7k]
  ------------------
 1275|  16.1M|    {
 1276|  16.1M|        phi::optional<Token> maybe_token = GetNextToken();
 1277|       |
 1278|  16.1M|        if (maybe_token.has_value())
  ------------------
  |  Branch (1278:13): [True: 16.1M, False: 6.97k]
  ------------------
 1279|  16.1M|        {
 1280|  16.1M|            stream.emplace_back(maybe_token.value());
 1281|  16.1M|        }
 1282|  16.1M|    }
 1283|       |
 1284|  55.7k|    stream.finalize();
 1285|  55.7k|    return stream;
 1286|  55.7k|}
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1289|  35.6M|{
 1290|  35.6M|    ++m_Iterator;
 1291|  35.6M|}
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1294|  1.00M|{
 1295|  1.00M|    ++m_LineNumber;
 1296|  1.00M|    m_Column = 1u;
 1297|  1.00M|}
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1300|  4.56M|{
 1301|  4.56M|    ConsumeCurrentCharacter();
 1302|  4.56M|    ++m_Column;
 1303|  4.56M|}
_ZN10OpenAutoIt5Lexer4DiagEv:
 1306|   870k|{
 1307|   870k|    return DiagnosticBuilder{m_DiagnosticEngine};
 1308|   870k|}
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   37|   105k|    {
   38|   105k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   105k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   105k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 16.7k, False: 88.2k]
  ------------------
   42|  16.7k|        {
   43|  16.7k|            return itr->second;
   44|  16.7k|        }
   45|       |
   46|  88.2k|        return m_Default;
   47|   105k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  9.56M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   37|   217k|    {
   38|   217k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   217k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   217k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 87.8k, False: 129k]
  ------------------
   42|  87.8k|        {
   43|  87.8k|            return itr->second;
   44|  87.8k|        }
   45|       |
   46|   129k|        return m_Default;
   47|   217k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  1.71M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   37|  1.86M|    {
   38|  1.86M|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  1.86M|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  1.86M|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 19.6k, False: 1.84M]
  ------------------
   42|  19.6k|        {
   43|  19.6k|            return itr->second;
   44|  19.6k|        }
   45|       |
   46|  1.84M|        return m_Default;
   47|  1.86M|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   750M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   37|  3.75M|    {
   38|  3.75M|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  3.75M|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  3.75M|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 1.89M, False: 1.86M]
  ------------------
   42|  1.89M|        {
   43|  1.89M|            return itr->second;
   44|  1.89M|        }
   45|       |
   46|  1.86M|        return m_Default;
   47|  3.75M|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   124M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   37|  2.46M|    {
   38|  2.46M|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  2.46M|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  2.46M|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 2.46M, False: 0]
  ------------------
   42|  2.46M|        {
   43|  2.46M|            return itr->second;
   44|  2.46M|        }
   45|       |
   46|      0|        return m_Default;
   47|  2.46M|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  26.7M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  736|  1.21M|{
  737|  1.21M|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (737:12): [True: 981k, False: 234k]
  |  Branch (737:40): [True: 18.2k, False: 216k]
  ------------------
  738|  1.21M|}
_Z17is_skip_characterc:
  716|  19.8M|{
  717|  19.8M|    switch (c)
  718|  19.8M|    {
  719|   781k|        case ' ':
  ------------------
  |  Branch (719:9): [True: 781k, False: 19.0M]
  ------------------
  720|   832k|        case '\v':
  ------------------
  |  Branch (720:9): [True: 51.0k, False: 19.7M]
  ------------------
  721|   842k|        case '\t':
  ------------------
  |  Branch (721:9): [True: 10.1k, False: 19.8M]
  ------------------
  722|   853k|        case '\b':
  ------------------
  |  Branch (722:9): [True: 11.1k, False: 19.8M]
  ------------------
  723|   913k|        case '\f':
  ------------------
  |  Branch (723:9): [True: 59.8k, False: 19.7M]
  ------------------
  724|   913k|            return true;
  725|  18.9M|        default:
  ------------------
  |  Branch (725:9): [True: 18.9M, False: 913k]
  ------------------
  726|  18.9M|            return false;
  727|  19.8M|    }
  728|  19.8M|}
_Z24is_valid_identifier_charc:
  731|  22.8M|{
  732|  22.8M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (732:12): [True: 14.9M, False: 7.85M]
  |  Branch (732:40): [True: 26.3k, False: 7.82M]
  ------------------
  733|  22.8M|}
_Z20is_two_part_operatorc:
  741|  13.4M|{
  742|  13.4M|    switch (c)
  743|  13.4M|    {
  744|   613k|        case '=':
  ------------------
  |  Branch (744:9): [True: 613k, False: 12.8M]
  ------------------
  745|   868k|        case '+':
  ------------------
  |  Branch (745:9): [True: 254k, False: 13.1M]
  ------------------
  746|  1.18M|        case '-':
  ------------------
  |  Branch (746:9): [True: 318k, False: 13.1M]
  ------------------
  747|  1.24M|        case '*':
  ------------------
  |  Branch (747:9): [True: 57.0k, False: 13.3M]
  ------------------
  748|  1.30M|        case '/':
  ------------------
  |  Branch (748:9): [True: 56.9k, False: 13.3M]
  ------------------
  749|  1.41M|        case '&':
  ------------------
  |  Branch (749:9): [True: 115k, False: 13.3M]
  ------------------
  750|  1.55M|        case '<':
  ------------------
  |  Branch (750:9): [True: 141k, False: 13.2M]
  ------------------
  751|  1.60M|        case '>':
  ------------------
  |  Branch (751:9): [True: 49.9k, False: 13.3M]
  ------------------
  752|  1.60M|            return true;
  753|       |
  754|  11.8M|        default:
  ------------------
  |  Branch (754:9): [True: 11.8M, False: 1.60M]
  ------------------
  755|  11.8M|            return false;
  756|  13.4M|    }
  757|  13.4M|}
_Z18is_single_operatorc:
  760|  11.8M|{
  761|  11.8M|    switch (c)
  762|  11.8M|    {
  763|  72.9k|        case '^':
  ------------------
  |  Branch (763:9): [True: 72.9k, False: 11.7M]
  ------------------
  764|   509k|        case '?':
  ------------------
  |  Branch (764:9): [True: 436k, False: 11.3M]
  ------------------
  765|   859k|        case ':':
  ------------------
  |  Branch (765:9): [True: 349k, False: 11.4M]
  ------------------
  766|   859k|            return true;
  767|       |
  768|  10.9M|        default:
  ------------------
  |  Branch (768:9): [True: 10.9M, False: 859k]
  ------------------
  769|  10.9M|            return false;
  770|  11.8M|    }
  771|  11.8M|}

_ZN10OpenAutoIt6ParserC2EN3phi21not_null_observer_ptrINS_13SourceManagerEEENS2_INS_16DiagnosticEngineEEENS2_INS_5LexerEEE:
  132|  55.7k|{}
_ZN10OpenAutoIt6Parser16ParseTokenStreamEN3phi21not_null_observer_ptrINS_11ASTDocumentEEEONS_11TokenStreamENS2_IKNS_10SourceFileEEE:
  137|  55.7k|{
  138|  55.7k|    PushParsingContext(phi::move(source_file), phi::move(stream));
  139|       |
  140|  55.7k|    ParseDocument(phi::move(document));
  141|  55.7k|}
_ZN10OpenAutoIt6Parser11ParseStringEN3phi21not_null_observer_ptrINS_11ASTDocumentEEENS1_17basic_string_viewIcNSt3__111char_traitsIcEEEES9_:
  145|  55.7k|{
  146|  55.7k|    TokenStream stream = m_Lexer->ProcessString(file_name, source);
  147|       |
  148|  55.7k|    SourceFile fake_source_file{SourceFile::Type::Basic, std::string_view(file_name),
  149|  55.7k|                                phi::move(source)};
  150|  55.7k|    ParseTokenStream(phi::move(document), phi::move(stream), &fake_source_file);
  151|  55.7k|}
_ZN10OpenAutoIt6Parser13ParseDocumentEN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
  171|  55.7k|{
  172|  55.7k|    m_Document = phi::move(document);
  173|       |
  174|  55.7k|    m_IncludeOnceFiles.clear();
  175|       |
  176|  4.02M|    while (ShouldContinueParsing())
  ------------------
  |  Branch (176:12): [True: 3.97M, False: 55.7k]
  ------------------
  177|  3.97M|    {
  178|  3.97M|        if (!CurrentTokenStream().has_more())
  ------------------
  |  Branch (178:13): [True: 55.7k, False: 3.91M]
  ------------------
  179|  55.7k|        {
  180|  55.7k|            PopParsingContext();
  181|  55.7k|            continue;
  182|  55.7k|        }
  183|       |
  184|  3.91M|        const Token& token = CurrentToken();
  185|       |
  186|       |        // Parse global function definition
  187|  3.91M|        switch (token.GetTokenKind())
  188|  3.91M|        {
  189|   117k|            case TokenKind::KW_Func: {
  ------------------
  |  Branch (189:13): [True: 117k, False: 3.79M]
  ------------------
  190|   117k|                ConsumeCurrent();
  191|       |
  192|   117k|                auto function_definition = ParseFunctionDefinition();
  193|   117k|                if (!function_definition)
  ------------------
  |  Branch (193:21): [True: 112k, False: 5.07k]
  ------------------
  194|   112k|                {
  195|   112k|                    err("ERR: Failed to parse function definition!\n");
  196|   112k|                    continue;
  197|   112k|                }
  198|       |
  199|  5.07k|                AppendFunctionToDocument(function_definition.release_not_null());
  200|  5.07k|                break;
  201|   117k|            }
  202|       |
  203|  4.30k|            case TokenKind::Comment:
  ------------------
  |  Branch (203:13): [True: 4.30k, False: 3.91M]
  ------------------
  204|  5.92k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (204:13): [True: 1.62k, False: 3.91M]
  ------------------
  205|  8.81k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (205:13): [True: 2.89k, False: 3.91M]
  ------------------
  206|   225k|            case TokenKind::NewLine: {
  ------------------
  |  Branch (206:13): [True: 217k, False: 3.69M]
  ------------------
  207|       |                // Simply ignore and consume newlines and comments
  208|   225k|                ConsumeCurrent();
  209|   225k|                break;
  210|  8.81k|            }
  211|  95.4k|            case TokenKind::NotAToken: {
  ------------------
  |  Branch (211:13): [True: 95.4k, False: 3.82M]
  ------------------
  212|  95.4k|                err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  213|  95.4k|                                std::string_view(token.GetText())));
  214|  95.4k|                ConsumeCurrent();
  215|  95.4k|                break;
  216|  8.81k|            }
  217|       |
  218|  38.8k|            case TokenKind::PP_Include: {
  ------------------
  |  Branch (218:13): [True: 38.8k, False: 3.87M]
  ------------------
  219|  38.8k|                ConsumeCurrent();
  220|       |
  221|  38.8k|                ParseIncludeDirective();
  222|       |
  223|  38.8k|                break;
  224|  8.81k|            }
  225|       |
  226|  9.12k|            case TokenKind::PP_IncludeOnce: {
  ------------------
  |  Branch (226:13): [True: 9.12k, False: 3.90M]
  ------------------
  227|  9.12k|                ConsumeCurrent();
  228|       |
  229|  9.12k|                m_IncludeOnceFiles.emplace(CurrentSourceFile().get());
  230|       |
  231|  9.12k|                RequireNewLine();
  232|       |
  233|  9.12k|                break;
  234|  8.81k|            }
  235|       |
  236|  3.42M|            default: {
  ------------------
  |  Branch (236:13): [True: 3.42M, False: 486k]
  ------------------
  237|  3.42M|                auto statement = ParseStatement();
  238|  3.42M|                if (!statement)
  ------------------
  |  Branch (238:21): [True: 2.80M, False: 625k]
  ------------------
  239|  2.80M|                {
  240|       |                    // TODO: Proper error reporting
  241|  2.80M|                    err("ERR: Failed to parse statement!\n");
  242|       |
  243|  2.80M|                    if (HasMoreTokens())
  ------------------
  |  Branch (243:25): [True: 2.77M, False: 32.8k]
  ------------------
  244|  2.77M|                    {
  245|       |                        // Swallow the bad token
  246|  2.77M|                        ConsumeCurrent();
  247|  2.77M|                    }
  248|  2.80M|                    continue;
  249|  2.80M|                }
  250|       |
  251|   625k|                AppendStatementToDocument(statement.release_not_null());
  252|       |
  253|   625k|                RequireNewLine();
  254|   625k|                break;
  255|  3.42M|            }
  256|  3.91M|        }
  257|  3.91M|    }
  258|  55.7k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamE:
  262|  55.7k|{
  263|  55.7k|    PushParsingContext(phi::move(source_file), phi::move(token_stream), SourceLocation::Invalid());
  264|  55.7k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamENS_14SourceLocationE:
  268|  55.7k|{
  269|  55.7k|    ParsingContext context{.source_file   = phi::move(source_file),
  270|  55.7k|                           .token_stream  = phi::move(token_stream),
  271|  55.7k|                           .included_from = phi::move(included_from)};
  272|       |
  273|  55.7k|    m_ParsingContextStack.emplace(phi::move(context));
  274|  55.7k|    m_SourceManager->SetLocalSearchPath(source_file->m_FilePath.parent_path());
  275|  55.7k|}
_ZN10OpenAutoIt6Parser17PopParsingContextEv:
  278|  55.7k|{
  279|  55.7k|    m_ParsingContextStack.pop();
  280|  55.7k|    if (!m_ParsingContextStack.empty())
  ------------------
  |  Branch (280:9): [True: 0, False: 55.7k]
  ------------------
  281|      0|    {
  282|      0|        m_SourceManager->SetLocalSearchPath(
  283|      0|                m_ParsingContextStack.top().source_file->m_FilePath.parent_path());
  284|      0|    }
  285|  55.7k|    else
  286|  55.7k|    {
  287|  55.7k|        m_SourceManager->SetLocalSearchPath("");
  288|  55.7k|    }
  289|  55.7k|}
_ZN10OpenAutoIt6Parser21CurrentParsingContextEv:
  292|  9.12k|{
  293|  9.12k|    PHI_ASSERT(!m_ParsingContextStack.empty());
  294|       |
  295|  9.12k|    return m_ParsingContextStack.top();
  296|  9.12k|}
_ZN10OpenAutoIt6Parser17CurrentSourceFileEv:
  299|  9.12k|{
  300|  9.12k|    return CurrentParsingContext().source_file.not_null();
  301|  9.12k|}
_ZN10OpenAutoIt6Parser18CurrentTokenStreamEv:
  304|  20.1M|{
  305|  20.1M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  306|       |
  307|  20.1M|    return m_ParsingContextStack.top().token_stream;
  308|  20.1M|}
_ZNK10OpenAutoIt6Parser18CurrentTokenStreamEv:
  311|   116M|{
  312|   116M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  313|       |
  314|   116M|    return m_ParsingContextStack.top().token_stream;
  315|   116M|}
_ZNK10OpenAutoIt6Parser13HasMoreTokensEv:
  318|  37.2M|{
  319|  37.2M|    return CurrentTokenStream().has_more();
  320|  37.2M|}
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  323|  39.2M|{
  324|  39.2M|    PHI_ASSERT(CurrentTokenStream().has_more());
  325|       |
  326|  39.2M|    return CurrentTokenStream().look_ahead();
  327|  39.2M|}
_ZNK10OpenAutoIt6Parser13PreviousTokenEv:
  330|   448k|{
  331|   448k|    return CurrentTokenStream().look_behind();
  332|   448k|}
_ZNK10OpenAutoIt6Parser21ShouldContinueParsingEv:
  335|  4.02M|{
  336|  4.02M|    const phi::boolean stack_empty          = m_ParsingContextStack.empty();
  337|  4.02M|    const phi::boolean fatal_error_occurred = m_DiagnosticEngine->HasFatalErrorOccurred();
  338|  4.02M|    const phi::boolean error_limit_reached =
  339|  4.02M|            (m_DiagnosticEngine->GetErrorLimit() == 0u ?
  ------------------
  |  Branch (339:14): [True: 4.02M, False: 0]
  ------------------
  340|  4.02M|                     false :
  341|  4.02M|                     m_DiagnosticEngine->GetNumberOfError() >= m_DiagnosticEngine->GetErrorLimit());
  342|       |
  343|  4.02M|    return !stack_empty && !fatal_error_occurred && !error_limit_reached;
  ------------------
  |  Branch (343:12): [True: 3.97M, False: 55.7k]
  |  Branch (343:28): [True: 3.97M, False: 0]
  |  Branch (343:53): [True: 3.97M, False: 0]
  ------------------
  344|  4.02M|}
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  347|  16.1M|{
  348|  16.1M|    CurrentTokenStream().consume();
  349|  16.1M|}
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  352|   635k|{
  353|   643k|    while (HasMoreTokens())
  ------------------
  |  Branch (353:12): [True: 640k, False: 3.75k]
  ------------------
  354|   640k|    {
  355|   640k|        switch (CurrentToken().GetTokenKind())
  356|   640k|        {
  357|  3.44k|            case TokenKind::Comment:
  ------------------
  |  Branch (357:13): [True: 3.44k, False: 636k]
  ------------------
  358|  5.42k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (358:13): [True: 1.97k, False: 638k]
  ------------------
  359|  8.75k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (359:13): [True: 3.33k, False: 636k]
  ------------------
  360|  8.75k|                ConsumeCurrent();
  361|  8.75k|                break;
  362|       |
  363|   631k|            default:
  ------------------
  |  Branch (363:13): [True: 631k, False: 8.75k]
  ------------------
  364|   631k|                return;
  365|   640k|        }
  366|   640k|    }
  367|   635k|}
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  370|  4.63M|{
  371|  4.87M|    while (HasMoreTokens())
  ------------------
  |  Branch (371:12): [True: 4.87M, False: 3.21k]
  ------------------
  372|  4.87M|    {
  373|  4.87M|        switch (CurrentToken().GetTokenKind())
  374|  4.87M|        {
  375|  10.2k|            case TokenKind::Comment:
  ------------------
  |  Branch (375:13): [True: 10.2k, False: 4.86M]
  ------------------
  376|  15.6k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (376:13): [True: 5.37k, False: 4.86M]
  ------------------
  377|  21.2k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (377:13): [True: 5.65k, False: 4.86M]
  ------------------
  378|   239k|            case TokenKind::NewLine:
  ------------------
  |  Branch (378:13): [True: 218k, False: 4.65M]
  ------------------
  379|   239k|                ConsumeCurrent();
  380|   239k|                break;
  381|       |
  382|  4.63M|            default:
  ------------------
  |  Branch (382:13): [True: 4.63M, False: 239k]
  ------------------
  383|  4.63M|                return;
  384|  4.87M|        }
  385|  4.87M|    }
  386|  4.63M|}
_ZN10OpenAutoIt6Parser14RequireNewLineEv:
  389|   635k|{
  390|   635k|    ConsumeComments();
  391|       |
  392|   635k|    if (!HasMoreTokens())
  ------------------
  |  Branch (392:9): [True: 3.75k, False: 631k]
  ------------------
  393|  3.75k|    {
  394|  3.75k|        return;
  395|  3.75k|    }
  396|       |
  397|   631k|    const Token& token = CurrentToken();
  398|       |
  399|   631k|    if (token.GetTokenKind() != TokenKind::NewLine)
  ------------------
  |  Branch (399:9): [True: 429k, False: 202k]
  ------------------
  400|   429k|    {
  401|   429k|        Diag().Error(DiagnosticId::Expected, PreviousToken().GetBeginLocation(), "new line");
  402|   429k|    }
  403|       |
  404|   631k|    ConsumeCurrent();
  405|   631k|}
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  408|  3.42M|{
  409|       |    // Do we even have more tokens?
  410|  3.42M|    if (!HasMoreTokens())
  ------------------
  |  Branch (410:9): [True: 11.3k, False: 3.41M]
  ------------------
  411|  11.3k|    {
  412|  11.3k|        return {};
  413|  11.3k|    }
  414|       |
  415|  3.41M|    const Token& token = CurrentToken();
  416|       |
  417|       |    // Is this the correct token kind
  418|  3.41M|    if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (418:9): [True: 426k, False: 2.98M]
  ------------------
  419|   426k|    {
  420|   426k|        return {};
  421|   426k|    }
  422|       |
  423|  2.98M|    ConsumeCurrent();
  424|  2.98M|    return token;
  425|  3.41M|}
_ZN10OpenAutoIt6Parser4DiagEv:
  441|   498k|{
  442|   498k|    return {m_DiagnosticEngine};
  443|   498k|}
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  446|   117k|{
  447|       |    // Next we MUST parse the function name
  448|   117k|    auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  449|   117k|    if (!function_name_token)
  ------------------
  |  Branch (449:9): [True: 16.9k, False: 100k]
  ------------------
  450|  16.9k|    {
  451|  16.9k|        err("Expected identifier for function name");
  452|  16.9k|        return {};
  453|  16.9k|    }
  454|       |
  455|   100k|    auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  456|   100k|    function_definition->m_FunctionName = function_name_token->GetText();
  457|       |
  458|       |    // Next we MUST parse an opening parenthesis (LParen)
  459|   100k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (459:9): [True: 4.27k, False: 96.4k]
  ------------------
  460|  4.27k|    {
  461|  4.27k|        err("Expected opening parenthesis");
  462|  4.27k|        return {};
  463|  4.27k|    }
  464|       |
  465|       |    // Next we parse the function parameter declarations until right parenthesis (RParen)
  466|   134k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (466:12): [True: 133k, False: 177]
  |  Branch (466:12): [True: 67.1k, False: 67.0k]
  |  Branch (466:31): [True: 67.1k, False: 66.8k]
  ------------------
  467|  67.1k|    {
  468|  67.1k|        phi::optional<FunctionParameter> function_parameter_optional =
  469|  67.1k|                ParseFunctionParameterDefinition();
  470|  67.1k|        if (!function_parameter_optional)
  ------------------
  |  Branch (470:13): [True: 29.4k, False: 37.7k]
  ------------------
  471|  29.4k|        {
  472|       |            // TODO: Proper error reporting
  473|  29.4k|            return {};
  474|  29.4k|        }
  475|  37.7k|        FunctionParameter& function_parameter = function_parameter_optional.value();
  476|       |
  477|  37.7k|        function_definition->m_Parameters.emplace_back(phi::move(function_parameter));
  478|       |
  479|       |        // Parse comma
  480|  37.7k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (480:13): [True: 37.7k, False: 0]
  |  Branch (480:13): [True: 28.6k, False: 9.03k]
  |  Branch (480:32): [True: 28.6k, False: 9.03k]
  ------------------
  481|  28.6k|        {
  482|  28.6k|            ConsumeCurrent();
  483|  28.6k|        }
  484|  37.7k|    }
  485|       |
  486|       |    // Next we MUST parse a right parenthesis (RParen)
  487|  67.0k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (487:9): [True: 177, False: 66.8k]
  ------------------
  488|    177|    {
  489|    177|        err("ERR: Expected ')'");
  490|    177|        return {};
  491|    177|    }
  492|       |
  493|       |    // Next we MUST parse a new line
  494|  66.8k|    if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (494:9): [True: 10.8k, False: 55.9k]
  ------------------
  495|  10.8k|    {
  496|  10.8k|        err("ERR: Missing newline!");
  497|  10.8k|        return {};
  498|  10.8k|    }
  499|       |
  500|       |    // Next parse Statements until EndFunc
  501|   114k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (501:12): [True: 113k, False: 444]
  |  Branch (501:12): [True: 108k, False: 5.51k]
  |  Branch (501:31): [True: 108k, False: 5.07k]
  ------------------
  502|   108k|    {
  503|   108k|        auto statement = ParseStatement();
  504|   108k|        if (!statement)
  ------------------
  |  Branch (504:13): [True: 50.4k, False: 58.2k]
  ------------------
  505|  50.4k|        {
  506|  50.4k|            err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  507|  50.4k|                            std::string_view(function_definition->m_FunctionName)));
  508|       |            // TODO: Report proper error
  509|  50.4k|            return {};
  510|  50.4k|        }
  511|       |
  512|  58.2k|        function_definition->m_FunctionBody.emplace_back(phi::move(statement.release_not_null()));
  513|       |
  514|  58.2k|        ConsumeNewLineAndComments();
  515|  58.2k|    }
  516|       |
  517|       |    // Next we MUST parse EndFunc
  518|  5.51k|    if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (518:9): [True: 444, False: 5.07k]
  ------------------
  519|    444|    {
  520|       |        // TODO: Proper error
  521|    444|        return {};
  522|    444|    }
  523|       |
  524|  5.07k|    return phi::move(function_definition);
  525|  5.51k|}
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  528|  67.1k|{
  529|       |    // TODO: This entire function requires more error checks
  530|  67.1k|    FunctionParameter parameter;
  531|       |
  532|   239k|    while (HasMoreTokens())
  ------------------
  |  Branch (532:12): [True: 239k, False: 416]
  ------------------
  533|   239k|    {
  534|   239k|        const Token& token = CurrentToken();
  535|       |
  536|   239k|        switch (token.GetTokenKind())
  537|   239k|        {
  538|  95.5k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (538:13): [True: 95.5k, False: 143k]
  ------------------
  539|  95.5k|                parameter.name = token.GetText().substring_view(1u);
  540|  95.5k|                ConsumeCurrent();
  541|  95.5k|                break;
  542|      0|            }
  543|    338|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (543:13): [True: 338, False: 238k]
  ------------------
  544|    338|                parameter.as_const = true;
  545|    338|                ConsumeCurrent();
  546|    338|                break;
  547|      0|            }
  548|    185|            case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (548:13): [True: 185, False: 239k]
  ------------------
  549|    185|                parameter.by_ref = true;
  550|    185|                ConsumeCurrent();
  551|    185|                break;
  552|      0|            }
  553|  80.3k|            case TokenKind::OP_Equals: {
  ------------------
  |  Branch (553:13): [True: 80.3k, False: 158k]
  ------------------
  554|  80.3k|                if (parameter.name.is_empty())
  ------------------
  |  Branch (554:21): [True: 560, False: 79.7k]
  ------------------
  555|    560|                {
  556|       |                    // TODO: PROPER ERROR
  557|    560|                    return {};
  558|    560|                }
  559|       |
  560|       |                // Consume the '='
  561|  79.7k|                ConsumeCurrent();
  562|       |
  563|       |                // Default value is an expression
  564|  79.7k|                auto default_expression = ParseExpression();
  565|  79.7k|                if (!default_expression)
  ------------------
  |  Branch (565:21): [True: 3.36k, False: 76.3k]
  ------------------
  566|  3.36k|                {
  567|       |                    // TODO: Report error
  568|  3.36k|                    return {};
  569|  3.36k|                }
  570|       |
  571|       |                // For default values we artificially create a variable assignment
  572|  76.3k|                auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  573|       |
  574|  76.3k|                default_var_assignment->m_Scope                  = VariableScope::Auto;
  575|  76.3k|                default_var_assignment->m_VariableName           = parameter.name;
  576|  76.3k|                default_var_assignment->m_InitialValueExpression = phi::move(default_expression);
  577|       |
  578|  76.3k|                parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  579|  76.3k|                break;
  580|  79.7k|            }
  581|  28.6k|            case TokenKind::Comma:
  ------------------
  |  Branch (581:13): [True: 28.6k, False: 210k]
  ------------------
  582|  37.7k|            case TokenKind::RParen: {
  ------------------
  |  Branch (582:13): [True: 9.03k, False: 230k]
  ------------------
  583|  37.7k|                return phi::move(parameter);
  584|  28.6k|            }
  585|  25.0k|            default: {
  ------------------
  |  Branch (585:13): [True: 25.0k, False: 214k]
  ------------------
  586|       |                // TODO: Report error
  587|  25.0k|                return {};
  588|  28.6k|            }
  589|   239k|        }
  590|   239k|    }
  591|       |
  592|       |    // TODO: Report error unexpected EOF
  593|    416|    return {};
  594|  67.1k|}
_ZN10OpenAutoIt6Parser21ParseIncludeDirectiveEv:
  597|  38.8k|{
  598|  38.8k|    if (!HasMoreTokens())
  ------------------
  |  Branch (598:9): [True: 9, False: 38.8k]
  ------------------
  599|      9|    {
  600|      9|        Diag().Error(DiagnosticId::UnexpectedEndOfFile, PreviousToken().GetBeginLocation(),
  601|      9|                     "include directive");
  602|      9|        return;
  603|      9|    }
  604|       |
  605|  38.8k|    const Token&     token = CurrentToken();
  606|  38.8k|    phi::string_view file_name;
  607|  38.8k|    IncludeType      include_type = IncludeType::Local;
  608|       |
  609|       |    // Local include like this '#include "foo.au3"'
  610|  38.8k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (610:9): [True: 7.27k, False: 31.5k]
  ------------------
  611|  7.27k|    {
  612|  7.27k|        ConsumeCurrent();
  613|       |
  614|       |        // Get the file name
  615|  7.27k|        file_name = token.GetText().substring_view(1u, token.GetText().length() - 2u);
  616|  7.27k|    }
  617|       |    // Global include like this '#include <foo.au3>'
  618|  31.5k|    else if (token.GetTokenKind() == TokenKind::OP_LessThan)
  ------------------
  |  Branch (618:14): [True: 26.5k, False: 4.95k]
  ------------------
  619|  26.5k|    {
  620|       |        // FIXME: This is not really a nice way, but we essentially start from after the opening '<' and include everything upto the closing '>'
  621|  26.5k|        ConsumeCurrent();
  622|       |
  623|  26.5k|        include_type = IncludeType::Global;
  624|  26.5k|        file_name    = token.GetText().remove_prefix(1u);
  625|       |
  626|  26.5k|        phi::boolean found_end{false};
  627|  26.5k|        phi::boolean continue_parsing{true};
  628|   109k|        while (HasMoreTokens() && continue_parsing)
  ------------------
  |  Branch (628:16): [True: 109k, False: 166]
  |  Branch (628:16): [True: 83.2k, False: 26.5k]
  |  Branch (628:35): [True: 83.2k, False: 26.4k]
  ------------------
  629|  83.2k|        {
  630|  83.2k|            const Token& end_token = CurrentToken();
  631|       |
  632|  83.2k|            if (end_token.GetTokenKind() == TokenKind::OP_GreaterThan)
  ------------------
  |  Branch (632:17): [True: 6.92k, False: 76.2k]
  ------------------
  633|  6.92k|            {
  634|  6.92k|                found_end        = true;
  635|  6.92k|                continue_parsing = false;
  636|  6.92k|                const phi::usize difference =
  637|  6.92k|                        phi::narrow_cast<phi::usize>(end_token.GetText().data() - file_name.data());
  638|  6.92k|                file_name.add_postfix(difference);
  639|  6.92k|            }
  640|  76.2k|            else if (end_token.GetTokenKind() == TokenKind::NewLine)
  ------------------
  |  Branch (640:22): [True: 19.5k, False: 56.7k]
  ------------------
  641|  19.5k|            {
  642|       |                // Stop once we hit a newline
  643|  19.5k|                continue_parsing = false;
  644|  19.5k|            }
  645|       |
  646|  83.2k|            ConsumeCurrent();
  647|  83.2k|        }
  648|       |
  649|  26.5k|        if (!found_end)
  ------------------
  |  Branch (649:13): [True: 19.6k, False: 6.92k]
  ------------------
  650|  19.6k|        {
  651|  19.6k|            Diag().Error(DiagnosticId::Expected, PreviousToken().GetEndLocation(), "'>'")
  652|  19.6k|                    .Note(token.GetBeginLocation(), "to match this '<'");
  653|  19.6k|            return;
  654|  19.6k|        }
  655|  26.5k|    }
  656|  4.95k|    else
  657|  4.95k|    {
  658|  4.95k|        Diag().Error(DiagnosticId::Expected, token.GetEndLocation(), "\"Filename\" or <Filename>");
  659|  4.95k|        return;
  660|  4.95k|    }
  661|       |
  662|       |    // Limit include nesting
  663|  14.2k|    if (m_ParsingContextStack.size() >= MaxNumberOfIncludeNesting)
  ------------------
  |  Branch (663:9): [True: 0, False: 14.2k]
  ------------------
  664|      0|    {
  665|      0|        Diag().Error(DiagnosticId::IncludeNestingTooDeeply, token.GetBeginLocation());
  666|      0|        return;
  667|      0|    }
  668|       |
  669|       |    // Emit error for empty file names
  670|  14.2k|    if (file_name.is_empty())
  ------------------
  |  Branch (670:9): [True: 6.53k, False: 7.67k]
  ------------------
  671|  6.53k|    {
  672|  6.53k|        Diag().Error(DiagnosticId::EmptyFilename, token.GetBeginLocation());
  673|  6.53k|        return;
  674|  6.53k|    }
  675|       |
  676|       |    // Emit error if the file name is too long
  677|  7.67k|    if (file_name.length() > 255u)
  ------------------
  |  Branch (677:9): [True: 637, False: 7.03k]
  ------------------
  678|    637|    {
  679|    637|        Diag().Error(DiagnosticId::FileNameTooLong, token.GetBeginLocation(),
  680|    637|                     std::string_view(file_name));
  681|    637|        return;
  682|    637|    }
  683|       |
  684|       |    // Load the file from the SourceManager
  685|  7.03k|    phi::observer_ptr<const SourceFile> include_file =
  686|  7.03k|            m_SourceManager->LoadFile(std::string_view(file_name), include_type);
  687|  7.03k|    if (!include_file)
  ------------------
  |  Branch (687:9): [True: 7.03k, False: 0]
  ------------------
  688|  7.03k|    {
  689|  7.03k|        Diag().Error(DiagnosticId::FileNotFound, token.GetBeginLocation(),
  690|  7.03k|                     std::string_view(file_name));
  691|  7.03k|        return;
  692|  7.03k|    }
  693|       |
  694|      0|    RequireNewLine();
  695|       |
  696|       |    // Append the file
  697|      0|    AppendSourceFileToDocument(include_file.not_null(), token.GetBeginLocation());
  698|      0|}
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  701|  3.92M|{
  702|  3.92M|    ConsumeNewLineAndComments();
  703|       |
  704|  3.92M|    if (!HasMoreTokens())
  ------------------
  |  Branch (704:9): [True: 199, False: 3.92M]
  ------------------
  705|    199|    {
  706|       |        // TODO: Report proper error
  707|    199|        return {};
  708|    199|    }
  709|       |
  710|  3.92M|    phi::scope_ptr<ASTStatement> ret_statement;
  711|       |
  712|       |    // Loop until we parse something or there is nothing left to parse
  713|  3.92M|    const Token& token = CurrentToken();
  714|  3.92M|    switch (token.GetTokenKind())
  715|  3.92M|    {
  716|       |        // Variable assignment
  717|  4.18k|        case TokenKind::KW_Const:
  ------------------
  |  Branch (717:9): [True: 4.18k, False: 3.92M]
  ------------------
  718|  11.5k|        case TokenKind::KW_Local:
  ------------------
  |  Branch (718:9): [True: 7.34k, False: 3.92M]
  ------------------
  719|  16.2k|        case TokenKind::KW_Global:
  ------------------
  |  Branch (719:9): [True: 4.76k, False: 3.92M]
  ------------------
  720|  26.2k|        case TokenKind::KW_Static:
  ------------------
  |  Branch (720:9): [True: 9.97k, False: 3.91M]
  ------------------
  721|   423k|        case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (721:9): [True: 397k, False: 3.53M]
  ------------------
  722|   423k|            ret_statement = ParseVariableAssignment();
  723|   423k|            if (!ret_statement)
  ------------------
  |  Branch (723:17): [True: 37.2k, False: 386k]
  ------------------
  724|  37.2k|            {
  725|  37.2k|                err("ERR: Failed to parse variable assignment!\n");
  726|  37.2k|                return {};
  727|  37.2k|            }
  728|   386k|            break;
  729|   423k|        }
  730|       |
  731|       |        // If Statement
  732|   386k|        case TokenKind::KW_If: {
  ------------------
  |  Branch (732:9): [True: 262k, False: 3.66M]
  ------------------
  733|   262k|            ret_statement = ParseIfStatement();
  734|   262k|            if (!ret_statement)
  ------------------
  |  Branch (734:17): [True: 236k, False: 25.4k]
  ------------------
  735|   236k|            {
  736|   236k|                err("ERR: Failed to parse if statement!\n");
  737|   236k|                return {};
  738|   236k|            }
  739|  25.4k|            break;
  740|   262k|        }
  741|       |
  742|       |        // While statement
  743|  80.3k|        case TokenKind::KW_While: {
  ------------------
  |  Branch (743:9): [True: 80.3k, False: 3.84M]
  ------------------
  744|  80.3k|            ret_statement = ParseWhileStatement();
  745|  80.3k|            if (!ret_statement)
  ------------------
  |  Branch (745:17): [True: 55.3k, False: 25.0k]
  ------------------
  746|  55.3k|            {
  747|  55.3k|                err("ERR: Failed to parse while statement!\n");
  748|  55.3k|                return {};
  749|  55.3k|            }
  750|  25.0k|            break;
  751|  80.3k|        }
  752|       |
  753|       |        // Exit statement
  754|   177k|        case TokenKind::KW_Exit: {
  ------------------
  |  Branch (754:9): [True: 177k, False: 3.75M]
  ------------------
  755|   177k|            ret_statement = ParseExitStatement();
  756|   177k|            if (!ret_statement)
  ------------------
  |  Branch (756:17): [True: 0, False: 177k]
  ------------------
  757|      0|            {
  758|      0|                err("ERR: Failed to parse exit statement!\n");
  759|      0|                return {};
  760|      0|            }
  761|   177k|            break;
  762|   177k|        }
  763|       |
  764|  2.98M|        default: {
  ------------------
  |  Branch (764:9): [True: 2.98M, False: 944k]
  ------------------
  765|       |            // Try to parse ExpressionStatement
  766|  2.98M|            ret_statement = ParseExpressionStatement();
  767|  2.98M|            if (!ret_statement)
  ------------------
  |  Branch (767:17): [True: 2.71M, False: 271k]
  ------------------
  768|  2.71M|            {
  769|  2.71M|                err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  770|  2.71M|                                enum_name(token.GetTokenKind())));
  771|  2.71M|                return {};
  772|  2.71M|            }
  773|   271k|            break;
  774|  2.98M|        }
  775|  3.92M|    }
  776|       |
  777|   886k|    return phi::move(ret_statement);
  778|  3.92M|}
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  781|  80.3k|{
  782|  80.3k|    const Token& token = CurrentToken();
  783|  80.3k|    if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (783:9): [True: 0, False: 80.3k]
  ------------------
  784|      0|    {
  785|       |        // TODO: Proper error
  786|      0|        return {};
  787|      0|    }
  788|  80.3k|    ConsumeCurrent();
  789|       |
  790|       |    // Next we MUST parse an Expression
  791|  80.3k|    auto while_condition_expression = ParseExpression();
  792|  80.3k|    if (!while_condition_expression)
  ------------------
  |  Branch (792:9): [True: 3.70k, False: 76.6k]
  ------------------
  793|  3.70k|    {
  794|       |        // TODO: Proper error
  795|  3.70k|        return {};
  796|  3.70k|    }
  797|       |
  798|  76.6k|    auto while_statement =
  799|  76.6k|            phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  800|       |
  801|       |    // Parse statements until KW_WEnd
  802|   144k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (802:12): [True: 144k, False: 779]
  |  Branch (802:12): [True: 119k, False: 25.8k]
  |  Branch (802:31): [True: 119k, False: 25.0k]
  ------------------
  803|   119k|    {
  804|   119k|        ConsumeNewLineAndComments();
  805|       |
  806|       |        // Parse statements
  807|   119k|        auto statement = ParseStatement();
  808|   119k|        if (!statement)
  ------------------
  |  Branch (808:13): [True: 50.8k, False: 68.2k]
  ------------------
  809|  50.8k|        {
  810|       |            // TODO: Propeer error
  811|  50.8k|            return {};
  812|  50.8k|        }
  813|       |
  814|  68.2k|        while_statement->m_Statements.emplace_back(statement.release_not_null());
  815|  68.2k|    }
  816|       |
  817|  25.8k|    if (!HasMoreTokens())
  ------------------
  |  Branch (817:9): [True: 779, False: 25.0k]
  ------------------
  818|    779|    {
  819|       |        // TODO: Proper error
  820|    779|        return {};
  821|    779|    }
  822|       |
  823|       |    // Next token MUST be KW_Wend
  824|  25.0k|    const Token& wend_token = CurrentToken();
  825|  25.0k|    if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (825:9): [True: 0, False: 25.0k]
  ------------------
  826|      0|    {
  827|       |        // TODO: Proper error
  828|      0|        return {};
  829|      0|    }
  830|  25.0k|    ConsumeCurrent();
  831|       |
  832|  25.0k|    return phi::move(while_statement);
  833|  25.0k|}
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  836|   423k|{
  837|   423k|    auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  838|       |
  839|   423k|    phi::boolean parsed_identifier = false;
  840|       |    // Parse all specifiers until we hit a VariableIdentifier
  841|   847k|    while (HasMoreTokens() && !parsed_identifier)
  ------------------
  |  Branch (841:12): [True: 844k, False: 2.84k]
  |  Branch (841:12): [True: 449k, False: 397k]
  |  Branch (841:31): [True: 449k, False: 394k]
  ------------------
  842|   449k|    {
  843|   449k|        const Token& current_token = CurrentToken();
  844|   449k|        ConsumeCurrent();
  845|       |
  846|   449k|        switch (current_token.GetTokenKind())
  847|   449k|        {
  848|  5.30k|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (848:13): [True: 5.30k, False: 444k]
  ------------------
  849|  5.30k|                if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (849:21): [True: 1.12k, False: 4.18k]
  ------------------
  850|  1.12k|                {
  851|       |                    // TODO: Error more than one const specifier
  852|  1.12k|                    err("ERR: More than one const specifier given\n");
  853|  1.12k|                    return {};
  854|  1.12k|                }
  855|  4.18k|                variable_declaration->m_IsConst = true;
  856|  4.18k|                break;
  857|  5.30k|            }
  858|       |
  859|  11.7k|            case TokenKind::KW_Static: {
  ------------------
  |  Branch (859:13): [True: 11.7k, False: 438k]
  ------------------
  860|  11.7k|                if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (860:21): [True: 1.81k, False: 9.97k]
  ------------------
  861|  1.81k|                {
  862|       |                    // TODO: Error more than one static specifier
  863|  1.81k|                    err("ERR: More than one static specifier given\n");
  864|  1.81k|                    return {};
  865|  1.81k|                }
  866|  9.97k|                variable_declaration->m_IsStatic = true;
  867|  9.97k|                break;
  868|  11.7k|            }
  869|       |
  870|  5.48k|            case TokenKind::KW_Global: {
  ------------------
  |  Branch (870:13): [True: 5.48k, False: 444k]
  ------------------
  871|  5.48k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (871:21): [True: 722, False: 4.76k]
  ------------------
  872|    722|                {
  873|       |                    // TODO: Error more than one scope specifier
  874|    722|                    err("ERR: More than one scope specifier given\n");
  875|    722|                    return {};
  876|    722|                }
  877|  4.76k|                variable_declaration->m_Scope = VariableScope::Global;
  878|  4.76k|                break;
  879|  5.48k|            }
  880|       |
  881|  9.05k|            case TokenKind::KW_Local: {
  ------------------
  |  Branch (881:13): [True: 9.05k, False: 440k]
  ------------------
  882|  9.05k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (882:21): [True: 1.70k, False: 7.34k]
  ------------------
  883|  1.70k|                {
  884|       |                    // TODO: Error more than one scope specifier
  885|  1.70k|                    err("ERR: More than one scope specifier given\n");
  886|  1.70k|                    return {};
  887|  1.70k|                }
  888|  7.34k|                variable_declaration->m_Scope = VariableScope::Local;
  889|  7.34k|                break;
  890|  9.05k|            }
  891|       |
  892|   397k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (892:13): [True: 397k, False: 52.3k]
  ------------------
  893|       |                // VariableIdentifiers begin with a '$'
  894|       |                // Like: $MyVariable
  895|       |                // So for the name we ignore the very first character
  896|   397k|                PHI_ASSERT(current_token.GetText().length() > 1u);
  897|   397k|                variable_declaration->m_VariableName = current_token.GetText().substring_view(1u);
  898|       |
  899|   397k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  900|   397k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  901|       |
  902|   397k|                parsed_identifier = true;
  903|   397k|                break;
  904|  9.05k|            }
  905|       |
  906|  20.6k|            default: {
  ------------------
  |  Branch (906:13): [True: 20.6k, False: 429k]
  ------------------
  907|       |                // TODO: Error unexpected token
  908|  20.6k|                return {};
  909|  9.05k|            }
  910|   449k|        }
  911|   449k|    }
  912|       |
  913|   397k|    if (!parsed_identifier)
  ------------------
  |  Branch (913:9): [True: 203, False: 397k]
  ------------------
  914|    203|    {
  915|       |        // TODO: Error variable declaration ends before the VariableIdentifier
  916|    203|        err("ERR: Missing variable identifier!\n");
  917|    203|        return {};
  918|    203|    }
  919|       |
  920|       |    // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  921|   397k|    if (!HasMoreTokens())
  ------------------
  |  Branch (921:9): [True: 2.64k, False: 394k]
  ------------------
  922|  2.64k|    {
  923|  2.64k|        return variable_declaration;
  924|  2.64k|    }
  925|       |
  926|       |    // Check for equals
  927|   394k|    const Token& next_token = CurrentToken();
  928|       |
  929|   394k|    if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (929:9): [True: 70.2k, False: 324k]
  ------------------
  930|  70.2k|    {
  931|  70.2k|        ConsumeCurrent();
  932|       |
  933|       |        // Now me MUST parse an expression
  934|  70.2k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
  935|  70.2k|        if (!expression)
  ------------------
  |  Branch (935:13): [True: 11.0k, False: 59.2k]
  ------------------
  936|  11.0k|        {
  937|       |            // TODO: Error failed to parse a valid expression
  938|  11.0k|            err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  939|  11.0k|            return {};
  940|  11.0k|        }
  941|       |
  942|  59.2k|        variable_declaration->m_InitialValueExpression = phi::move(expression);
  943|  59.2k|    }
  944|       |
  945|   383k|    return variable_declaration;
  946|   394k|}
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  949|  2.98M|{
  950|  2.98M|    auto expression = ParseExpression();
  951|  2.98M|    if (!expression)
  ------------------
  |  Branch (951:9): [True: 1.94M, False: 1.04M]
  ------------------
  952|  1.94M|    {
  953|  1.94M|        return {};
  954|  1.94M|    }
  955|       |
  956|  1.04M|    auto expression_statement =
  957|  1.04M|            phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  958|       |
  959|  1.04M|    if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (959:9): [True: 770k, False: 271k]
  ------------------
  960|   770k|    {
  961|   770k|        err(fmt::format("Expression {:s} is not valid as an statement\n",
  962|   770k|                        expression_statement->m_Expression->Name()));
  963|   770k|        return {};
  964|   770k|    }
  965|       |
  966|   271k|    return phi::move(expression_statement);
  967|  1.04M|}
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  970|   262k|{
  971|   262k|    if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (971:9): [True: 0, False: 262k]
  ------------------
  972|      0|    {
  973|      0|        return {};
  974|      0|    }
  975|       |
  976|       |    // Next me MUST parse an expression
  977|   262k|    auto if_condition = ParseExpression();
  978|   262k|    if (!if_condition)
  ------------------
  |  Branch (978:9): [True: 24.9k, False: 237k]
  ------------------
  979|  24.9k|    {
  980|  24.9k|        err("ERR: failed to parse expression!\n");
  981|       |
  982|  24.9k|        return {};
  983|  24.9k|    }
  984|       |
  985|       |    // Next we MUST parse Then
  986|   237k|    if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (986:9): [True: 45.9k, False: 191k]
  ------------------
  987|  45.9k|    {
  988|  45.9k|        err("ERR: Missing then!\n");
  989|       |
  990|  45.9k|        return {};
  991|  45.9k|    }
  992|       |
  993|   191k|    ConsumeNewLineAndComments();
  994|       |
  995|   191k|    IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  996|       |
  997|       |    // Next parse statements until we hit and EndIf, ElseIf or Else
  998|   248k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (998:12): [True: 247k, False: 1.09k]
  |  Branch (998:12): [True: 96.0k, False: 152k]
  |  Branch (998:31): [True: 232k, False: 15.2k]
  ------------------
  999|   248k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (999:12): [True: 168k, False: 63.5k]
  ------------------
 1000|   248k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1000:12): [True: 96.0k, False: 72.6k]
  ------------------
 1001|  96.0k|    {
 1002|  96.0k|        auto statement = ParseStatement();
 1003|  96.0k|        if (!statement)
  ------------------
  |  Branch (1003:13): [True: 39.0k, False: 57.0k]
  ------------------
 1004|  39.0k|        {
 1005|  39.0k|            err("ERR: Failed to parse statement inside of IF\n");
 1006|  39.0k|            return {};
 1007|  39.0k|        }
 1008|       |
 1009|  57.0k|        if_case.body.emplace_back(statement.release_not_null());
 1010|       |
 1011|  57.0k|        ConsumeNewLineAndComments();
 1012|  57.0k|    }
 1013|       |
 1014|   152k|    auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
 1015|       |
 1016|       |    // Handle all ElseIf cases which are optional
 1017|   286k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1017:12): [True: 280k, False: 6.53k]
  |  Branch (1017:12): [True: 156k, False: 129k]
  |  Branch (1017:31): [True: 156k, False: 123k]
  ------------------
 1018|   156k|    {
 1019|       |        // Consume KW_ElseIf token
 1020|   156k|        ConsumeCurrent();
 1021|       |
 1022|       |        // Parse the condition
 1023|   156k|        auto else_if_condition = ParseExpression();
 1024|   156k|        if (!else_if_condition)
  ------------------
  |  Branch (1024:13): [True: 22.6k, False: 134k]
  ------------------
 1025|  22.6k|        {
 1026|  22.6k|            return {};
 1027|  22.6k|        }
 1028|       |
 1029|       |        // Parse KW_Then
 1030|   134k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (1030:13): [True: 67.4k, False: 66.7k]
  ------------------
 1031|  67.4k|        {
 1032|       |            // TODO: Better error message and this error should be recoverable
 1033|  67.4k|            err("ERR: Missing then!\n");
 1034|  67.4k|        }
 1035|       |
 1036|   134k|        ConsumeNewLineAndComments();
 1037|       |
 1038|   134k|        IfCase else_if_case{.condition{else_if_condition.release_not_null()},
 1039|   134k|                            .body{ParseIfCaseStatements()}};
 1040|       |
 1041|       |        // Append our case to the if statement
 1042|   134k|        if_statement->m_ElseIfCases.emplace_back(phi::move(else_if_case));
 1043|   134k|    }
 1044|       |
 1045|       |    // Handle optional else case
 1046|   129k|    if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_Else)
  ------------------
  |  Branch (1046:9): [True: 123k, False: 6.53k]
  |  Branch (1046:9): [True: 70.7k, False: 59.1k]
  |  Branch (1046:28): [True: 70.7k, False: 52.6k]
  ------------------
 1047|  70.7k|    {
 1048|       |        // Consume KW_Else token
 1049|  70.7k|        ConsumeCurrent();
 1050|       |
 1051|  70.7k|        ConsumeNewLineAndComments();
 1052|       |
 1053|  70.7k|        if_statement->m_ElseCase = ParseIfCaseStatements();
 1054|  70.7k|    }
 1055|       |
 1056|   129k|    if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (1056:9): [True: 104k, False: 25.4k]
  ------------------
 1057|   104k|    {
 1058|   104k|        err("ERR: Missing EndIf!\n");
 1059|       |        // TODO: Proper Error
 1060|   104k|        return {};
 1061|   104k|    }
 1062|       |
 1063|  25.4k|    return phi::move(if_statement);
 1064|   129k|}
_ZN10OpenAutoIt6Parser21ParseIfCaseStatementsEv:
 1067|   204k|{
 1068|   204k|    std::vector<phi::not_null_scope_ptr<ASTStatement>> statements;
 1069|       |
 1070|       |    // Parse statements until KW_EndIf, KW_Else, KW_ElseIf
 1071|   281k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1071:12): [True: 280k, False: 1.28k]
  |  Branch (1071:12): [True: 176k, False: 105k]
  |  Branch (1071:31): [True: 270k, False: 10.1k]
  ------------------
 1072|   281k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1072:12): [True: 250k, False: 20.0k]
  ------------------
 1073|   281k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1073:12): [True: 176k, False: 73.7k]
  ------------------
 1074|   176k|    {
 1075|   176k|        auto statement = ParseStatement();
 1076|   176k|        if (!statement)
  ------------------
  |  Branch (1076:13): [True: 99.7k, False: 76.5k]
  ------------------
 1077|  99.7k|        {
 1078|  99.7k|            err("ERR: Failed to parse statement inside of IF\n");
 1079|  99.7k|            return {};
 1080|  99.7k|        }
 1081|       |
 1082|  76.5k|        statements.emplace_back(statement.release_not_null());
 1083|       |
 1084|  76.5k|        ConsumeNewLineAndComments();
 1085|  76.5k|    }
 1086|       |
 1087|   105k|    return statements;
 1088|   204k|}
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
 1091|  1.73M|{
 1092|  1.73M|    const Token& token = CurrentToken();
 1093|  1.73M|    if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1093:9): [True: 0, False: 1.73M]
  ------------------
 1094|      0|    {
 1095|      0|        return {};
 1096|      0|    }
 1097|       |
 1098|  1.73M|    phi::int64_t value{0};
 1099|  1.73M|    phi::boolean parsing_hex{false};
 1100|  4.68M|    for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (1100:32): [True: 2.97M, False: 1.70M]
  ------------------
 1101|  2.97M|    {
 1102|  2.97M|        const char character = token.GetText().at(index);
 1103|       |
 1104|       |        // Checking the second character
 1105|  2.97M|        if (index == 1u)
  ------------------
  |  Branch (1105:13): [True: 348k, False: 2.62M]
  ------------------
 1106|   348k|        {
 1107|   348k|            if (character == 'x' || character == 'X')
  ------------------
  |  Branch (1107:17): [True: 15.3k, False: 333k]
  |  Branch (1107:37): [True: 23.7k, False: 309k]
  ------------------
 1108|  39.0k|            {
 1109|  39.0k|                parsing_hex = true;
 1110|  39.0k|                continue;
 1111|  39.0k|            }
 1112|   348k|        }
 1113|       |
 1114|  2.93M|        if (parsing_hex)
  ------------------
  |  Branch (1114:13): [True: 285k, False: 2.64M]
  ------------------
 1115|   285k|        {
 1116|   285k|            PHI_ASSERT(phi::is_hex_digit(character));
 1117|       |
 1118|   285k|            if (phi::detail::will_multiplication_error(phi::detail::unsigned_integer_tag{}, value,
  ------------------
  |  Branch (1118:17): [True: 8.51k, False: 276k]
  ------------------
 1119|   285k|                                                       phi::int64_t(16)) ||
 1120|   285k|                phi::detail::will_addition_error(phi::detail::unsigned_integer_tag{}, value * 16,
  ------------------
  |  Branch (1120:17): [True: 5.29k, False: 271k]
  ------------------
 1121|   276k|                                                 phi::int64_t(character - '0')))
 1122|  13.8k|            {
 1123|  13.8k|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1124|  13.8k|                ConsumeCurrent();
 1125|  13.8k|                return {};
 1126|  13.8k|            }
 1127|       |
 1128|   271k|            value <<= 4;
 1129|   271k|            value |= phi::hex_digit_value(character).unsafe();
 1130|   271k|        }
 1131|  2.64M|        else
 1132|  2.64M|        {
 1133|  2.64M|            PHI_ASSERT(character >= '0' && character <= '9');
 1134|       |
 1135|  2.64M|            if (phi::detail::will_multiplication_error(phi::detail::signed_integer_tag{}, value,
  ------------------
  |  Branch (1135:17): [True: 8.98k, False: 2.63M]
  ------------------
 1136|  2.64M|                                                       phi::int64_t(10)) ||
 1137|  2.64M|                phi::detail::will_addition_error(phi::detail::signed_integer_tag{}, value * 10,
  ------------------
  |  Branch (1137:17): [True: 8.14k, False: 2.63M]
  ------------------
 1138|  2.63M|                                                 phi::int64_t(character - '0')))
 1139|  17.1k|            {
 1140|  17.1k|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1141|  17.1k|                ConsumeCurrent();
 1142|  17.1k|                return {};
 1143|  17.1k|            }
 1144|       |
 1145|  2.63M|            value *= 10;
 1146|  2.63M|            value += (character - '0');
 1147|  2.63M|        }
 1148|  2.93M|    }
 1149|       |
 1150|  1.70M|    ConsumeCurrent();
 1151|  1.70M|    return phi::make_scope<ASTIntegerLiteral>(value);
 1152|  1.73M|}
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
 1155|   115k|{
 1156|   115k|    const Token& token = CurrentToken();
 1157|   115k|    if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (1157:9): [True: 0, False: 115k]
  ------------------
 1158|      0|    {
 1159|      0|        return {};
 1160|      0|    }
 1161|   115k|    ConsumeCurrent();
 1162|       |
 1163|   115k|    auto string_literal = phi::make_scope<ASTStringLiteral>();
 1164|       |
 1165|   115k|    const phi::usize length = token.GetText().length();
 1166|       |    // Trim the trailing and leading "
 1167|   115k|    string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
 1168|       |
 1169|   115k|    return phi::move(string_literal);
 1170|   115k|}
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
 1173|  7.79M|{
 1174|  7.79M|    phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
 1175|  7.79M|    if (!lhs_expression)
  ------------------
  |  Branch (1175:9): [True: 4.72M, False: 3.07M]
  ------------------
 1176|  4.72M|    {
 1177|  4.72M|        return {};
 1178|  4.72M|    }
 1179|       |
 1180|  3.07M|    return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
 1181|  7.79M|}
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
 1184|  8.45M|{
 1185|  8.45M|    if (!HasMoreTokens())
  ------------------
  |  Branch (1185:9): [True: 4.79k, False: 8.45M]
  ------------------
 1186|  4.79k|    {
 1187|       |        // TODO: Proper error
 1188|  4.79k|        return {};
 1189|  4.79k|    }
 1190|       |
 1191|  8.45M|    const Token& token = CurrentToken();
 1192|  8.45M|    if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (1192:9): [True: 334k, False: 8.11M]
  ------------------
 1193|   334k|    {
 1194|   334k|        const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
 1195|   334k|        PHI_UNUSED_VARIABLE(op_precedence);
 1196|   334k|        ConsumeCurrent();
 1197|       |
 1198|   334k|        phi::scope_ptr<ASTExpression> unary_expression = ParseUnaryExpression(token.GetTokenKind());
 1199|   334k|        if (!unary_expression)
  ------------------
  |  Branch (1199:13): [True: 104k, False: 229k]
  ------------------
 1200|   104k|        {
 1201|       |            // TODO: Proper error
 1202|   104k|            return {};
 1203|   104k|        }
 1204|       |
 1205|   229k|        return phi::move(unary_expression);
 1206|   334k|    }
 1207|  8.11M|    if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (1207:9): [True: 1.29M, False: 6.82M]
  ------------------
 1208|  1.29M|    {
 1209|       |        // Consume the LParen
 1210|  1.29M|        ConsumeCurrent();
 1211|       |
 1212|  1.29M|        phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
 1213|  1.29M|        if (!paren_expression)
  ------------------
  |  Branch (1213:13): [True: 1.20M, False: 88.8k]
  ------------------
 1214|  1.20M|        {
 1215|       |            // TODO: Proper error
 1216|  1.20M|            return {};
 1217|  1.20M|        }
 1218|       |
 1219|  88.8k|        return phi::move(paren_expression);
 1220|  1.29M|    }
 1221|  6.82M|    if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1221:9): [True: 1.73M, False: 5.09M]
  ------------------
 1222|  1.73M|    {
 1223|  1.73M|        phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
 1224|  1.73M|        if (!int_literal)
  ------------------
  |  Branch (1224:13): [True: 30.9k, False: 1.70M]
  ------------------
 1225|  30.9k|        {
 1226|       |            // TODO: Error failed to parse integer literal
 1227|  30.9k|            return {};
 1228|  30.9k|        }
 1229|       |
 1230|  1.70M|        return phi::move(int_literal);
 1231|  1.73M|    }
 1232|  5.09M|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (1232:9): [True: 115k, False: 4.97M]
  ------------------
 1233|   115k|    {
 1234|   115k|        auto string_literal_expression = ParseStringLiteral();
 1235|   115k|        if (!string_literal_expression)
  ------------------
  |  Branch (1235:13): [True: 0, False: 115k]
  ------------------
 1236|      0|        {
 1237|       |            // TODO: Proper error
 1238|      0|            return {};
 1239|      0|        }
 1240|       |
 1241|   115k|        return phi::move(string_literal_expression);
 1242|   115k|    }
 1243|       |
 1244|       |    // Boolean literal
 1245|  4.97M|    if (token.GetTokenKind() == TokenKind::KW_True || token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1245:9): [True: 54.8k, False: 4.91M]
  |  Branch (1245:55): [True: 30.3k, False: 4.88M]
  ------------------
 1246|  85.1k|    {
 1247|  85.1k|        auto boolean_literal = ParseBooleanLiteral();
 1248|  85.1k|        if (!boolean_literal)
  ------------------
  |  Branch (1248:13): [True: 0, False: 85.1k]
  ------------------
 1249|      0|        {
 1250|       |            // TODO: Proper error
 1251|      0|            return {};
 1252|      0|        }
 1253|       |
 1254|  85.1k|        return phi::move(boolean_literal);
 1255|  85.1k|    }
 1256|       |
 1257|       |    // Function call expression
 1258|  4.88M|    if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (1258:9): [True: 973k, False: 3.91M]
  |  Branch (1258:9): [True: 988k, False: 3.90M]
  |  Branch (1258:66): [True: 15.3k, False: 3.90M]
  ------------------
 1259|   988k|    {
 1260|   988k|        auto function_call_expression = ParseFunctionCallExpression();
 1261|   988k|        if (!function_call_expression)
  ------------------
  |  Branch (1261:13): [True: 812k, False: 175k]
  ------------------
 1262|   812k|        {
 1263|       |            // TODO: Proper error
 1264|   812k|            err("ERR: Failed to parse function call expression!\n");
 1265|   812k|            return {};
 1266|   812k|        }
 1267|       |
 1268|   175k|        return phi::move(function_call_expression);
 1269|   988k|    }
 1270|       |    // Variable expression
 1271|  3.90M|    if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1271:9): [True: 349k, False: 3.55M]
  ------------------
 1272|   349k|    {
 1273|   349k|        auto variable_expression = ParseVariableExpression();
 1274|   349k|        if (!variable_expression)
  ------------------
  |  Branch (1274:13): [True: 0, False: 349k]
  ------------------
 1275|      0|        {
 1276|       |            // TODO: Proper error
 1277|      0|            err("ERR: Failed to parse Variable expression\n");
 1278|      0|            return {};
 1279|      0|        }
 1280|       |
 1281|   349k|        return phi::move(variable_expression);
 1282|   349k|    }
 1283|       |    // Keyword literal
 1284|  3.55M|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1284:9): [True: 179k, False: 3.37M]
  ------------------
 1285|   179k|    {
 1286|   179k|        auto keyword_literal = ParseKeywordLiteral();
 1287|   179k|        if (!keyword_literal)
  ------------------
  |  Branch (1287:13): [True: 0, False: 179k]
  ------------------
 1288|      0|        {
 1289|       |            // TODO: Proper error
 1290|      0|            err("ERR: Failed to parse keyword literal expression!\n");
 1291|      0|            return {};
 1292|      0|        }
 1293|       |
 1294|   179k|        return phi::move(keyword_literal);
 1295|   179k|    }
 1296|       |    // Float literal
 1297|  3.37M|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1297:9): [True: 557k, False: 2.81M]
  ------------------
 1298|   557k|    {
 1299|   557k|        auto float_literal = ParseFloatLiteral();
 1300|   557k|        if (!float_literal)
  ------------------
  |  Branch (1300:13): [True: 0, False: 557k]
  ------------------
 1301|      0|        {
 1302|       |            // TODO: Proper error
 1303|      0|            err("ERR: Failed to parse float literal expression!\n");
 1304|      0|            return {};
 1305|      0|        }
 1306|       |
 1307|   557k|        return phi::move(float_literal);
 1308|   557k|    }
 1309|       |    // ArraySubscript expression
 1310|  2.81M|    if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (1310:9): [True: 1.57M, False: 1.24M]
  ------------------
 1311|  1.57M|    {
 1312|  1.57M|        auto subscript_expression = ParseArraySubscriptExpression();
 1313|  1.57M|        if (!subscript_expression)
  ------------------
  |  Branch (1313:13): [True: 1.49M, False: 74.5k]
  ------------------
 1314|  1.49M|        {
 1315|  1.49M|            err("ERR: Failed to parse array subscript expression\n");
 1316|  1.49M|            return {};
 1317|  1.49M|        }
 1318|       |
 1319|  74.5k|        return phi::move(subscript_expression);
 1320|  1.57M|    }
 1321|  1.24M|    if (token.IsMacro())
  ------------------
  |  Branch (1321:9): [True: 10.0k, False: 1.23M]
  ------------------
 1322|  10.0k|    {
 1323|  10.0k|        ConsumeCurrent();
 1324|       |
 1325|  10.0k|        phi::scope_ptr<ASTExpression> macro_expression = ParseMacroExpression(token.GetTokenKind());
 1326|  10.0k|        if (!macro_expression)
  ------------------
  |  Branch (1326:13): [True: 0, False: 10.0k]
  ------------------
 1327|      0|        {
 1328|       |            // TODO: Proper error
 1329|      0|            return {};
 1330|      0|        }
 1331|       |
 1332|  10.0k|        return macro_expression;
 1333|  10.0k|    }
 1334|       |
 1335|       |    // TODO: Error Unexpected token
 1336|  1.23M|    err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
 1337|  1.23M|                    enum_name(token.GetTokenKind())));
 1338|  1.23M|    return {};
 1339|  1.24M|}
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
 1343|  3.10M|{
 1344|  3.57M|    while (true)
  ------------------
  |  Branch (1344:12): [Folded - Ignored]
  ------------------
 1345|  3.57M|    {
 1346|  3.57M|        if (!HasMoreTokens())
  ------------------
  |  Branch (1346:13): [True: 15.1k, False: 3.55M]
  ------------------
 1347|  15.1k|        {
 1348|  15.1k|            return phi::move(lhs);
 1349|  15.1k|        }
 1350|       |
 1351|  3.55M|        const Token& operator_token = CurrentToken();
 1352|  3.55M|        if (!IsBinaryOperator(operator_token.GetTokenKind()) &&
  ------------------
  |  Branch (1352:13): [True: 2.88M, False: 668k]
  |  Branch (1352:13): [True: 2.56M, False: 989k]
  ------------------
 1353|  3.55M|            operator_token.GetTokenKind() != TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1353:13): [True: 2.56M, False: 320k]
  ------------------
 1354|  2.56M|        {
 1355|       |            // If its not a binary operator and not a ternary just return the lhs expression
 1356|  2.56M|            return phi::move(lhs);
 1357|  2.56M|        }
 1358|   989k|        int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
 1359|   989k|        ConsumeCurrent();
 1360|       |
 1361|   989k|        if (token_precedence < precedence)
  ------------------
  |  Branch (1361:13): [True: 2.62k, False: 987k]
  ------------------
 1362|  2.62k|        {
 1363|  2.62k|            return phi::move(lhs);
 1364|  2.62k|        }
 1365|       |
 1366|   987k|        if (operator_token.GetTokenKind() == TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1366:13): [True: 320k, False: 666k]
  ------------------
 1367|   320k|        {
 1368|   320k|            phi::scope_ptr<ASTTernaryIfExpression> ternary_if_expression =
 1369|   320k|                    ParseTernaryIfExpression(phi::move(lhs));
 1370|   320k|            if (!ternary_if_expression)
  ------------------
  |  Branch (1370:17): [True: 159k, False: 160k]
  ------------------
 1371|   159k|            {
 1372|       |                // TODO: Proper error
 1373|   159k|                return {};
 1374|   159k|            }
 1375|       |
 1376|   160k|            return phi::move(ternary_if_expression);
 1377|   320k|        }
 1378|       |
 1379|       |        // This must be an binary expression
 1380|   666k|        phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
 1381|   666k|        if (!rhs_expression)
  ------------------
  |  Branch (1381:13): [True: 165k, False: 501k]
  ------------------
 1382|   165k|        {
 1383|       |            // TODO: Proper error
 1384|   165k|            return {};
 1385|   165k|        }
 1386|       |
 1387|       |        // Nothing left to parse so directly return from here
 1388|   501k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1388:13): [True: 10.5k, False: 491k]
  ------------------
 1389|  10.5k|        {
 1390|  10.5k|            return phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1391|  10.5k|                                                                 operator_token.GetTokenKind(),
 1392|  10.5k|                                                                 rhs_expression.release_not_null());
 1393|  10.5k|        }
 1394|       |
 1395|       |        // If BinOp binds less tightly with RHS than the operator after RHS, let
 1396|       |        // the pending operator take RHS as its LHS.
 1397|   491k|        const Token& next_token      = CurrentToken();
 1398|   491k|        int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1399|       |
 1400|   491k|        if (token_precedence < next_precedence)
  ------------------
  |  Branch (1400:13): [True: 30.9k, False: 460k]
  ------------------
 1401|  30.9k|        {
 1402|  30.9k|            rhs_expression =
 1403|  30.9k|                    ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1404|  30.9k|            if (!rhs_expression)
  ------------------
  |  Branch (1404:17): [True: 20.6k, False: 10.2k]
  ------------------
 1405|  20.6k|            {
 1406|       |                // TODO: Proper error
 1407|  20.6k|                return {};
 1408|  20.6k|            }
 1409|  30.9k|        }
 1410|       |
 1411|       |        // Merge LHS/RHS.
 1412|   470k|        lhs = phi::make_not_null_scope<ASTBinaryExpression>(
 1413|   470k|                phi::move(lhs), operator_token.GetTokenKind(), rhs_expression.release_not_null());
 1414|   470k|    }
 1415|  3.10M|}
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
 1418|   988k|{
 1419|       |    // Parse the function name
 1420|   988k|    const Token& function_identifier_token = CurrentToken();
 1421|   988k|    if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1421:9): [True: 15.3k, False: 973k]
  |  Branch (1421:9): [True: 0, False: 988k]
  ------------------
 1422|   988k|        !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1422:9): [True: 0, False: 15.3k]
  ------------------
 1423|      0|    {
 1424|      0|        return {};
 1425|      0|    }
 1426|   988k|    ConsumeCurrent();
 1427|       |
 1428|   988k|    phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1429|   988k|            phi::make_scope<ASTFunctionCallExpression>();
 1430|   988k|    if (!function_call_expression)
  ------------------
  |  Branch (1430:9): [True: 0, False: 988k]
  ------------------
 1431|      0|    {
 1432|       |        // TODO: Proper error
 1433|      0|        return {};
 1434|      0|    }
 1435|       |
 1436|   988k|    if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1436:9): [True: 15.3k, False: 973k]
  ------------------
 1437|  15.3k|    {
 1438|  15.3k|        function_call_expression->m_IsBuiltIn       = true;
 1439|  15.3k|        function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
 1440|  15.3k|    }
 1441|   973k|    else
 1442|   973k|    {
 1443|   973k|        const phi::string_view function_name = function_identifier_token.GetText();
 1444|       |
 1445|   973k|        function_call_expression->m_IsBuiltIn    = false;
 1446|   973k|        function_call_expression->m_FunctionName = function_name;
 1447|   973k|    }
 1448|       |
 1449|       |    // TODO: These 2 checks should be combined
 1450|       |    // Now me MUST parse an LParen
 1451|   988k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1451:9): [True: 11.1k, False: 977k]
  ------------------
 1452|  11.1k|    {
 1453|       |        // TODO: Give proper error
 1454|  11.1k|        err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1455|  11.1k|                        std::string_view{function_call_expression->FunctionName()}));
 1456|  11.1k|        return {};
 1457|  11.1k|    }
 1458|       |
 1459|   977k|    const Token& left_paren_token = CurrentToken();
 1460|   977k|    ConsumeCurrent();
 1461|   977k|    if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1461:9): [True: 677k, False: 300k]
  ------------------
 1462|   677k|    {
 1463|       |        // TODO: Give error
 1464|   677k|        err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1465|   677k|                        std::string_view{function_call_expression->FunctionName()}));
 1466|   677k|        return {};
 1467|   677k|    }
 1468|       |
 1469|       |    // Now parse all the arguments (which are expressions) separated by commas or nothing
 1470|   300k|    function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1471|       |
 1472|       |    // Finally we MUST parse an RParen
 1473|   300k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1473:9): [True: 74.5k, False: 225k]
  ------------------
 1474|  74.5k|    {
 1475|  74.5k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1476|  74.5k|                        std::string_view{function_call_expression->FunctionName()}));
 1477|       |        // TODO: Give proper error
 1478|  74.5k|        return {};
 1479|  74.5k|    }
 1480|       |
 1481|   225k|    const Token& right_paren_token = CurrentToken();
 1482|   225k|    ConsumeCurrent();
 1483|   225k|    if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1483:9): [True: 50.1k, False: 175k]
  ------------------
 1484|  50.1k|    {
 1485|  50.1k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1486|  50.1k|                        std::string_view{function_call_expression->FunctionName()}));
 1487|       |        // TODO: Give Error
 1488|  50.1k|        return {};
 1489|  50.1k|    }
 1490|       |
 1491|       |    // Return result
 1492|   175k|    return function_call_expression;
 1493|   225k|}
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1496|   300k|{
 1497|   300k|    std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1498|       |
 1499|   420k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1499:12): [True: 419k, False: 1.02k]
  |  Branch (1499:12): [True: 260k, False: 160k]
  |  Branch (1499:31): [True: 260k, False: 159k]
  ------------------
 1500|   260k|    {
 1501|       |        // Parse the expression
 1502|   260k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1503|   260k|        if (!expression)
  ------------------
  |  Branch (1503:13): [True: 140k, False: 120k]
  ------------------
 1504|   140k|        {
 1505|   140k|            arguments.clear();
 1506|   140k|            return arguments;
 1507|   140k|        }
 1508|       |
 1509|       |        // Add argument to parameters
 1510|   120k|        arguments.emplace_back(expression.release_not_null());
 1511|       |
 1512|       |        // Next Token MUST be a comma followed by another expression or RParen
 1513|   120k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1513:13): [True: 119k, False: 748]
  |  Branch (1513:13): [True: 582, False: 119k]
  |  Branch (1513:32): [True: 582, False: 118k]
  ------------------
 1514|    582|        {
 1515|    582|            ConsumeCurrent();
 1516|    582|        }
 1517|   120k|    }
 1518|       |
 1519|   160k|    return arguments;
 1520|   300k|}
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1523|   349k|{
 1524|   349k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1524:9): [True: 0, False: 349k]
  ------------------
 1525|      0|    {
 1526|       |        // TODO: Proper error
 1527|      0|        return {};
 1528|      0|    }
 1529|       |
 1530|   349k|    const Token& token = CurrentToken();
 1531|   349k|    if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1531:9): [True: 0, False: 349k]
  ------------------
 1532|      0|    {
 1533|       |        // TODO error
 1534|      0|        return {};
 1535|      0|    }
 1536|       |
 1537|   349k|    auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1538|   349k|    variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1539|       |
 1540|   349k|    ConsumeCurrent();
 1541|       |
 1542|   349k|    return phi::move(variable_expression);
 1543|   349k|}
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1549|  1.57M|{
 1550|  1.57M|    if (!HasMoreTokens())
  ------------------
  |  Branch (1550:9): [True: 0, False: 1.57M]
  ------------------
 1551|      0|    {
 1552|      0|        return {};
 1553|      0|    }
 1554|       |
 1555|  1.57M|    if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1555:9): [True: 0, False: 1.57M]
  ------------------
 1556|      0|    {
 1557|      0|        return {};
 1558|      0|    }
 1559|       |
 1560|  1.57M|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1561|  1.57M|    if (!expression)
  ------------------
  |  Branch (1561:9): [True: 1.42M, False: 152k]
  ------------------
 1562|  1.42M|    {
 1563|  1.42M|        return {};
 1564|  1.42M|    }
 1565|       |
 1566|   152k|    if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1566:9): [True: 78.1k, False: 74.5k]
  ------------------
 1567|  78.1k|    {
 1568|  78.1k|        return {};
 1569|  78.1k|    }
 1570|       |
 1571|  74.5k|    return phi::make_scope<ASTArraySubscriptExpression>(phi::move(expression.release_not_null()));
 1572|   152k|}
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1577|  1.29M|{
 1578|       |    // NOTE: Me MUST have consumed the LParen before this
 1579|       |
 1580|  1.29M|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1581|  1.29M|    if (!expression)
  ------------------
  |  Branch (1581:9): [True: 1.15M, False: 139k]
  ------------------
 1582|  1.15M|    {
 1583|       |        // TODO: Proper error
 1584|  1.15M|        return {};
 1585|  1.15M|    }
 1586|       |
 1587|   139k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1587:9): [True: 50.8k, False: 88.8k]
  ------------------
 1588|  50.8k|    {
 1589|       |        // TODO: Proper error expected closing paren
 1590|  50.8k|        return {};
 1591|  50.8k|    }
 1592|       |
 1593|  88.8k|    return phi::move(expression);
 1594|   139k|}
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1597|   177k|{
 1598|   177k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1598:9): [True: 0, False: 177k]
  ------------------
 1599|      0|    {
 1600|      0|        return {};
 1601|      0|    }
 1602|       |
 1603|   177k|    if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1603:9): [True: 0, False: 177k]
  ------------------
 1604|      0|    {
 1605|      0|        return {};
 1606|      0|    }
 1607|       |
 1608|       |    // Parse optional expression
 1609|   177k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1610|       |
 1611|   177k|    return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1612|   177k|}
_ZN10OpenAutoIt6Parser20ParseUnaryExpressionENS_9TokenKindE:
 1615|   334k|{
 1616|   334k|    PHI_ASSERT(IsUnaryOperator(operator_kind));
 1617|       |
 1618|   334k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1618:9): [True: 675, False: 333k]
  ------------------
 1619|    675|    {
 1620|    675|        return {};
 1621|    675|    }
 1622|       |
 1623|       |    // Parse expression
 1624|   333k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1625|   333k|    if (!expression)
  ------------------
  |  Branch (1625:9): [True: 103k, False: 229k]
  ------------------
 1626|   103k|    {
 1627|       |        // TODO: Proper error
 1628|   103k|        return {};
 1629|   103k|    }
 1630|       |
 1631|   229k|    return phi::make_scope<ASTUnaryExpression>(operator_kind,
 1632|   229k|                                               phi::move(expression.release_not_null()));
 1633|   333k|}
_ZN10OpenAutoIt6Parser24ParseTernaryIfExpressionEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
 1637|   320k|{
 1638|   320k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1638:9): [True: 362, False: 319k]
  ------------------
 1639|    362|    {
 1640|    362|        return {};
 1641|    362|    }
 1642|       |
 1643|   319k|    phi::scope_ptr<ASTExpression> true_expression = ParseExpression();
 1644|   319k|    if (!true_expression)
  ------------------
  |  Branch (1644:9): [True: 59.5k, False: 260k]
  ------------------
 1645|  59.5k|    {
 1646|  59.5k|        return {};
 1647|  59.5k|    }
 1648|       |
 1649|       |    // Must parse the else part ":"
 1650|   260k|    if (!MustParse(TokenKind::OP_TernaryElse))
  ------------------
  |  Branch (1650:9): [True: 58.7k, False: 201k]
  ------------------
 1651|  58.7k|    {
 1652|  58.7k|        err("Missing ':' for ternary if\n");
 1653|  58.7k|        return {};
 1654|  58.7k|    }
 1655|       |
 1656|   201k|    phi::scope_ptr<ASTExpression> false_expression = ParseExpression();
 1657|   201k|    if (!false_expression)
  ------------------
  |  Branch (1657:9): [True: 40.9k, False: 160k]
  ------------------
 1658|  40.9k|    {
 1659|  40.9k|        return {};
 1660|  40.9k|    }
 1661|       |
 1662|   160k|    return phi::make_scope<ASTTernaryIfExpression>(phi::move(condition),
 1663|   160k|                                                   phi::move(true_expression.release_not_null()),
 1664|   160k|                                                   phi::move(false_expression.release_not_null()));
 1665|   201k|}
_ZN10OpenAutoIt6Parser20ParseMacroExpressionENS_9TokenKindE:
 1668|  10.0k|{
 1669|  10.0k|    const auto macro = static_cast<phi::size_t>(macro_kind);
 1670|  10.0k|    PHI_ASSERT(macro >= MacroFirst && macro <= MacroLast);
 1671|       |
 1672|  10.0k|    return phi::make_scope<ASTMacroExpression>(macro_kind);
 1673|  10.0k|}
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1676|  85.1k|{
 1677|  85.1k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1677:9): [True: 0, False: 85.1k]
  ------------------
 1678|      0|    {
 1679|       |        // TODO: Proper error
 1680|      0|        return {};
 1681|      0|    }
 1682|       |
 1683|       |    // BooleanLiteral is either KW_True or KW_False
 1684|  85.1k|    const Token& token = CurrentToken();
 1685|  85.1k|    if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1685:9): [True: 54.8k, False: 30.3k]
  ------------------
 1686|  54.8k|    {
 1687|  54.8k|        ConsumeCurrent();
 1688|  54.8k|        return phi::make_scope<ASTBooleanLiteral>(true);
 1689|  54.8k|    }
 1690|       |
 1691|  30.3k|    if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1691:9): [True: 30.3k, False: 0]
  ------------------
 1692|  30.3k|    {
 1693|  30.3k|        ConsumeCurrent();
 1694|  30.3k|        return phi::make_scope<ASTBooleanLiteral>(false);
 1695|  30.3k|    }
 1696|       |
 1697|       |    // TODO: Proper error
 1698|      0|    return {};
 1699|  30.3k|}
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1702|   179k|{
 1703|   179k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1703:9): [True: 0, False: 179k]
  ------------------
 1704|      0|    {
 1705|       |        // TODO: Proper error
 1706|      0|        return {};
 1707|      0|    }
 1708|       |
 1709|   179k|    const Token& token = CurrentToken();
 1710|   179k|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1710:9): [True: 179k, False: 0]
  ------------------
 1711|   179k|    {
 1712|   179k|        ConsumeCurrent();
 1713|   179k|        return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1714|   179k|    }
 1715|       |
 1716|       |    // TODO: Proper error
 1717|      0|    return {};
 1718|   179k|}
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1721|   557k|{
 1722|   557k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1722:9): [True: 0, False: 557k]
  ------------------
 1723|      0|    {
 1724|       |        // TODO: Proper error
 1725|      0|        return {};
 1726|      0|    }
 1727|       |
 1728|   557k|    const Token& token = CurrentToken();
 1729|   557k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1729:9): [True: 557k, False: 0]
  ------------------
 1730|   557k|    {
 1731|   557k|        ConsumeCurrent();
 1732|       |
 1733|   557k|        char*    ptr   = nullptr;
 1734|   557k|        phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1735|       |
 1736|   557k|        return phi::make_scope<ASTFloatLiteral>(value);
 1737|   557k|    }
 1738|       |
 1739|       |    // TODO: Proper error
 1740|      0|    return {};
 1741|   557k|}
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   69|  1.81M|    {
   70|  1.81M|        int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   71|       |        //PHI_ASSERT(precedence != 0);
   72|       |
   73|  1.81M|        return precedence;
   74|  1.81M|    }

_ZN10OpenAutoIt10SourceFileC2ENS0_4TypeENSt3__14__fs10filesystem4pathEN3phi17basic_string_viewIcNS2_11char_traitsIcEEEE:
   12|   111k|{}

_ZN10OpenAutoIt13SourceManager18SetLocalSearchPathERKNSt3__14__fs10filesystem4pathE:
   14|   111k|{}
_ZN10OpenAutoIt18EmptySourceManager8LoadFileEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_11IncludeTypeE:
  156|  7.03k|{
  157|  7.03k|    return {};
  158|  7.03k|}

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  55.7k|{
   31|       |#if defined(PHI_DEBUG)
   32|       |    PHI_ASSERT(!m_Finalized);
   33|       |#endif
   34|       |
   35|  55.7k|    m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |    m_Finalized = true;
   38|       |#endif
   39|  55.7k|}
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   68|  80.5M|{
   69|       |#if defined(PHI_DEBUG)
   70|       |    PHI_ASSERT(m_Finalized);
   71|       |#endif
   72|       |
   73|  80.5M|    return m_Index < m_Tokens.size();
   74|  80.5M|}
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   77|  55.4M|{
   78|       |#if defined(PHI_DEBUG)
   79|       |    PHI_ASSERT(m_Finalized);
   80|       |#endif
   81|       |
   82|  55.4M|    return m_Index >= m_Tokens.size();
   83|  55.4M|}
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   86|  39.2M|{
   87|  39.2M|    PHI_ASSERT(!reached_end());
   88|       |#if defined(PHI_DEBUG)
   89|       |    PHI_ASSERT(m_Finalized);
   90|       |#endif
   91|       |
   92|  39.2M|    return m_Tokens[m_Index.unsafe()];
   93|  39.2M|}
_ZNK10OpenAutoIt11TokenStream11look_behindEv:
   96|   448k|{
   97|   448k|    PHI_ASSERT(!m_Tokens.empty());
   98|       |#if defined(PHI_DEBUG)
   99|       |    PHI_ASSERT(m_Finalized);
  100|       |#endif
  101|       |
  102|   448k|    if (m_Index == 0u)
  ------------------
  |  Branch (102:9): [True: 0, False: 448k]
  ------------------
  103|      0|    {
  104|      0|        return m_Tokens[0u];
  105|      0|    }
  106|       |
  107|   448k|    return m_Tokens[m_Index.unsafe() - 1u];
  108|   448k|}
_ZN10OpenAutoIt11TokenStream7consumeEv:
  111|  16.1M|{
  112|  16.1M|    PHI_ASSERT(!reached_end());
  113|       |#if defined(PHI_DEBUG)
  114|       |    PHI_ASSERT(m_Finalized);
  115|       |#endif
  116|       |
  117|  16.1M|    m_Index += 1u;
  118|  16.1M|}

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  11.7M|{
  100|  11.7M|    if (output_enabled)
  ------------------
  |  Branch (100:9): [True: 0, False: 11.7M]
  ------------------
  101|      0|    {
  102|      0|        std::cerr << data;
  103|      0|    }
  104|  11.7M|}
_ZN10OpenAutoIt14disable_outputEv:
  107|  55.7k|{
  108|  55.7k|    output_enabled = false;
  109|  55.7k|}

