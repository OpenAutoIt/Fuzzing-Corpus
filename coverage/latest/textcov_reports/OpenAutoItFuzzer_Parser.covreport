_ZN3fmt3v106detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  375|   551k|    typename std::make_unsigned<Int>::type {
  376|   551k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  334|  1.10M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (334:35): [Folded - Ignored]
  |  |  |  Branch (334:35): [True: 551k, False: 0]
  |  |  ------------------
  ------------------
  377|   551k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  378|   551k|}
_ZN3fmt3v106detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  302|  4.39M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v1017basic_string_viewIcE4sizeEv:
  443|  3.00M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  302|   551k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE4sizeEv:
  838|   606k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail6bufferIcEC2EPcmm:
  810|   606k|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt3v106detail6bufferIcE3setEPcm:
  816|   606k|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  817|   606k|    ptr_ = buf_data;
  818|   606k|    capacity_ = buf_capacity;
  819|   606k|  }
_ZN3fmt3v106detail13ignore_unusedIJbEEEvDpRKT_:
  302|    186|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE8capacityEv:
  841|    316|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt3v106detail6bufferIcE4dataEv:
  844|   606k|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt3v1017basic_string_viewIcE5beginEv:
  445|  1.15M|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt3v1017basic_string_viewIcE3endEv:
  446|  1.15M|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKc:
  426|   590k|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt3v106detail10locale_refC2Ev:
 1534|  1.07M|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZNK3fmt3v1019basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2748|  54.3k|  FMT_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt3v1016make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJEEENS0_16format_arg_storeIT_JDpNSt3__19remove_cvINS7_16remove_referenceIT0_E4typeEE4typeEEEEDpRSA_:
 1825|  54.3k|    -> format_arg_store<Context, remove_cvref_t<T>...> {
 1826|  54.3k|  return {args...};
 1827|  54.3k|}
_ZN3fmt3v1016format_arg_storeINS0_20basic_format_contextINS0_8appenderEcEEJEEC2IJEEEDpRT_:
 1808|  54.3k|        data_{detail::make_arg<is_packed, Context>(args)...} {
 1809|  54.3k|    if (detail::const_check(num_named_args != 0))
  ------------------
  |  Branch (1809:9): [Folded - Ignored]
  ------------------
 1810|      0|      detail::init_named_args(data_.named_args(), 0, 0, args...);
 1811|  54.3k|  }
_ZN3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EEC2IJEEEDpRKT_:
 1168|  54.3k|  FMT_CONSTEXPR FMT_INLINE arg_data(const U&... init) : args_{init...} {}
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1261|   606k|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt3v109monostateC2Ev:
  277|   606k|  constexpr monostate() {}
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2IJEEERKNS0_16format_arg_storeIS4_JDpT_EEE:
 1909|  54.3k|                          store.data_.args()) {}
_ZNK3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE4argsEv:
 1169|  54.3k|  FMT_CONSTEXPR FMT_INLINE auto args() const -> const T* { return args_; }
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1893|   606k|      : desc_(desc), values_(values) {}
_ZNK3fmt3v1017basic_string_viewIcE4dataEv:
  440|  1.23M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKcm:
  411|  1.23M|      : data_(s), size_(count) {}
_ZN3fmt3v106detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  375|  3.84M|    typename std::make_unsigned<Int>::type {
  376|  3.84M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  334|  7.68M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (334:35): [Folded - Ignored]
  |  |  |  Branch (334:35): [True: 3.84M, False: 0]
  |  |  ------------------
  ------------------
  377|  3.84M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  378|  3.84M|}
_ZN3fmt3v106detail6bufferIcE11try_reserveEm:
  861|  1.64M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  862|  1.64M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (862:9): [True: 186, False: 1.64M]
  ------------------
  863|  1.64M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 1931|   551k|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1932|   551k|    format_arg arg;
 1933|   551k|    if (!is_packed()) {
  ------------------
  |  Branch (1933:9): [True: 0, False: 551k]
  ------------------
 1934|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1934:11): [True: 0, False: 0]
  ------------------
 1935|      0|      return arg;
 1936|      0|    }
 1937|   551k|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1937:9): [True: 0, False: 551k]
  ------------------
 1938|   551k|    arg.type_ = type(id);
 1939|   551k|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1939:9): [True: 0, False: 551k]
  ------------------
 1940|   551k|    arg.value_ = values_[id];
 1941|   551k|    return arg;
 1942|   551k|  }
_ZN3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1642|   551k|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1878|   551k|  constexpr auto is_packed() const -> bool {
 1879|   551k|    return (desc_ & detail::is_unpacked_bit) == 0;
 1880|   551k|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1885|   551k|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1886|   551k|    int shift = index * detail::packed_arg_bits;
 1887|   551k|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1888|   551k|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1889|   551k|  }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1644|   551k|  constexpr explicit operator bool() const noexcept {
 1645|   551k|    return type_ != detail::type::none_type;
 1646|   551k|  }
_ZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  766|  1.70M|    -> Container& {
  767|  1.70M|  using base = std::back_insert_iterator<Container>;
  768|  1.70M|  struct accessor : base {
  769|  1.70M|    accessor(base b) : base(b) {}
  770|  1.70M|    using base::container;
  771|  1.70M|  };
  772|  1.70M|  return *accessor(it).container;
  773|  1.70M|}
_ZZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  769|  1.70M|    accessor(base b) : base(b) {}
_ZNK3fmt3v106detail6fill_tIcE4sizeEv:
 2009|   551k|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt3v106detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1488|  1.70M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1489|  1.70M|  get_container(out).append(begin, end);
 1490|  1.70M|  return out;
 1491|  1.70M|}
_ZN3fmt3v1012format_specsIcEC2Ev:
 2059|   551k|        localized(false) {}
_ZN3fmt3v1026basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  669|   606k|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1731|   606k|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE3outEv:
 1746|  1.70M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2479|   606k|    basic_string_view<Char> format_str, Handler&& handler) {
 2480|   606k|  auto begin = format_str.data();
 2481|   606k|  auto end = begin + format_str.size();
 2482|   606k|  if (end - begin < 32) {
  ------------------
  |  Branch (2482:7): [True: 346k, False: 259k]
  ------------------
 2483|       |    // Use a simple loop instead of memchr for small strings.
 2484|   346k|    const Char* p = begin;
 2485|  8.31M|    while (p != end) {
  ------------------
  |  Branch (2485:12): [True: 7.96M, False: 346k]
  ------------------
 2486|  7.96M|      auto c = *p++;
 2487|  7.96M|      if (c == '{') {
  ------------------
  |  Branch (2487:11): [True: 292k, False: 7.67M]
  ------------------
 2488|   292k|        handler.on_text(begin, p - 1);
 2489|   292k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2490|  7.67M|      } else if (c == '}') {
  ------------------
  |  Branch (2490:18): [True: 0, False: 7.67M]
  ------------------
 2491|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2491:13): [True: 0, False: 0]
  |  Branch (2491:25): [True: 0, False: 0]
  ------------------
 2492|      0|          return handler.on_error("unmatched '}' in format string");
 2493|      0|        handler.on_text(begin, p);
 2494|      0|        begin = ++p;
 2495|      0|      }
 2496|  7.96M|    }
 2497|   346k|    handler.on_text(begin, end);
 2498|   346k|    return;
 2499|   346k|  }
 2500|   259k|  struct writer {
 2501|   259k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2502|   259k|      if (from == to) return;
 2503|   259k|      for (;;) {
 2504|   259k|        const Char* p = nullptr;
 2505|   259k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2506|   259k|          return handler_.on_text(from, to);
 2507|   259k|        ++p;
 2508|   259k|        if (p == to || *p != '}')
 2509|   259k|          return handler_.on_error("unmatched '}' in format string");
 2510|   259k|        handler_.on_text(from, p);
 2511|   259k|        from = p + 1;
 2512|   259k|      }
 2513|   259k|    }
 2514|   259k|    Handler& handler_;
 2515|   259k|  } write = {handler};
 2516|   519k|  while (begin != end) {
  ------------------
  |  Branch (2516:10): [True: 519k, False: 8]
  ------------------
 2517|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2518|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2519|   519k|    const Char* p = begin;
 2520|   519k|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2520:9): [True: 519k, False: 0]
  |  Branch (2520:26): [True: 259k, False: 259k]
  ------------------
 2521|   259k|      return write(begin, end);
 2522|   259k|    write(begin, p);
 2523|   259k|    begin = parse_replacement_field(p, end, handler);
 2524|   259k|  }
 2525|   259k|}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1749|  1.70M|  void advance_to(iterator it) {
 1750|  1.70M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1750:9): [Folded - Ignored]
  ------------------
 1751|  1.70M|  }
_ZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2442|   551k|                                           Handler&& handler) -> const Char* {
 2443|   551k|  struct id_adapter {
 2444|   551k|    Handler& handler;
 2445|   551k|    int arg_id;
 2446|       |
 2447|   551k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2448|   551k|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2449|   551k|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2450|   551k|      arg_id = handler.on_arg_id(id);
 2451|   551k|    }
 2452|   551k|  };
 2453|       |
 2454|   551k|  ++begin;
 2455|   551k|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2455:7): [True: 0, False: 551k]
  ------------------
 2456|   551k|  if (*begin == '}') {
  ------------------
  |  Branch (2456:7): [True: 0, False: 551k]
  ------------------
 2457|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2458|   551k|  } else if (*begin == '{') {
  ------------------
  |  Branch (2458:14): [True: 0, False: 551k]
  ------------------
 2459|      0|    handler.on_text(begin, begin + 1);
 2460|   551k|  } else {
 2461|   551k|    auto adapter = id_adapter{handler, 0};
 2462|   551k|    begin = parse_arg_id(begin, end, adapter);
 2463|   551k|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2463:14): [True: 551k, False: 0]
  ------------------
 2464|   551k|    if (c == '}') {
  ------------------
  |  Branch (2464:9): [True: 0, False: 551k]
  ------------------
 2465|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2466|   551k|    } else if (c == ':') {
  ------------------
  |  Branch (2466:16): [True: 551k, False: 0]
  ------------------
 2467|   551k|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2468|   551k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2468:11): [True: 0, False: 551k]
  |  Branch (2468:27): [True: 0, False: 551k]
  ------------------
 2469|      0|        return handler.on_error("unknown format specifier"), end;
 2470|   551k|    } else {
 2471|      0|      return handler.on_error("missing '}' in format string"), end;
 2472|      0|    }
 2473|   551k|  }
 2474|   551k|  return begin + 1;
 2475|   551k|}
_ZNK3fmt3v1020basic_format_contextINS0_8appenderEcE3argEi:
 1733|   551k|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE6localeEv:
 1753|   551k|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt3v1026basic_format_parse_contextIcE11next_arg_idEv:
  693|   551k|  FMT_CONSTEXPR auto next_arg_id() -> int {
  694|   551k|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (694:9): [True: 0, False: 551k]
  ------------------
  695|      0|      detail::throw_format_error(
  696|      0|          "cannot switch from manual to automatic argument indexing");
  697|      0|      return 0;
  698|      0|    }
  699|   551k|    int id = next_arg_id_++;
  700|   551k|    do_check_arg_id(id);
  701|   551k|    return id;
  702|   551k|  }
_ZN3fmt3v1026basic_format_parse_contextIcE15do_check_arg_idEi:
 1040|   551k|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
 1041|       |  // Argument id is only checked at compile-time during parsing because
 1042|       |  // formatting has its own validation.
 1043|   551k|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (1043:7): [Folded - Ignored]
  ------------------
 1044|   551k|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (1044:8): [Folded - Ignored]
  |  Branch (1044:28): [Folded - Ignored]
  ------------------
 1045|      0|    using context = detail::compile_parse_context<Char>;
 1046|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (1046:9): [True: 0, False: 0]
  ------------------
 1047|      0|      detail::throw_format_error("argument not found");
 1048|      0|  }
 1049|   551k|}
_ZN3fmt3v106detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2207|   551k|                                           Handler&& handler) -> const Char* {
 2208|   551k|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  334|   551k|      fmt::detail::ignore_unused((condition), (message))
  ------------------
 2209|   551k|  Char c = *begin;
 2210|   551k|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2210:7): [True: 551k, False: 0]
  |  Branch (2210:19): [True: 0, False: 551k]
  ------------------
 2211|   551k|  handler.on_auto();
 2212|   551k|  return begin;
 2213|   551k|}
_ZZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2447|   551k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1648|  1.10M|  auto type() const -> detail::type { return type_; }
_ZN3fmt3v106detail7arg_refIcEC2Ev:
 2068|  1.10M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt3v106detail7arg_refIcE5valueC2Ei:
 2083|  1.10M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2277|   551k|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2278|   551k|  auto c = '\0';
 2279|   551k|  if (end - begin > 1) {
  ------------------
  |  Branch (2279:7): [True: 551k, False: 0]
  ------------------
 2280|   551k|    auto next = to_ascii(begin[1]);
 2281|   551k|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2281:9): [True: 551k, False: 0]
  ------------------
 2282|   551k|  } else {
 2283|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2283:9): [True: 0, False: 0]
  ------------------
 2284|      0|    c = to_ascii(*begin);
 2285|      0|  }
 2286|       |
 2287|   551k|  struct {
 2288|   551k|    state current_state = state::start;
 2289|   551k|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2290|   551k|      if (current_state >= s || !valid)
 2291|   551k|        throw_format_error("invalid format specifier");
 2292|   551k|      current_state = s;
 2293|   551k|    }
 2294|   551k|  } enter_state;
 2295|       |
 2296|   551k|  using pres = presentation_type;
 2297|   551k|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2298|   551k|  struct {
 2299|   551k|    const Char*& begin;
 2300|   551k|    dynamic_format_specs<Char>& specs;
 2301|   551k|    type arg_type;
 2302|       |
 2303|   551k|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2304|   551k|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
 2305|   551k|      specs.type = type;
 2306|   551k|      return begin + 1;
 2307|   551k|    }
 2308|   551k|  } parse_presentation_type{begin, specs, arg_type};
 2309|       |
 2310|   551k|  for (;;) {
 2311|   551k|    switch (c) {
 2312|      0|    case '<':
  ------------------
  |  Branch (2312:5): [True: 0, False: 551k]
  ------------------
 2313|      0|    case '>':
  ------------------
  |  Branch (2313:5): [True: 0, False: 551k]
  ------------------
 2314|      0|    case '^':
  ------------------
  |  Branch (2314:5): [True: 0, False: 551k]
  ------------------
 2315|      0|      enter_state(state::align);
 2316|      0|      specs.align = parse_align(c);
 2317|      0|      ++begin;
 2318|      0|      break;
 2319|      0|    case '+':
  ------------------
  |  Branch (2319:5): [True: 0, False: 551k]
  ------------------
 2320|      0|    case '-':
  ------------------
  |  Branch (2320:5): [True: 0, False: 551k]
  ------------------
 2321|      0|    case ' ':
  ------------------
  |  Branch (2321:5): [True: 0, False: 551k]
  ------------------
 2322|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2323|      0|      switch (c) {
  ------------------
  |  Branch (2323:15): [True: 0, False: 0]
  ------------------
 2324|      0|      case '+':
  ------------------
  |  Branch (2324:7): [True: 0, False: 0]
  ------------------
 2325|      0|        specs.sign = sign::plus;
 2326|      0|        break;
 2327|      0|      case '-':
  ------------------
  |  Branch (2327:7): [True: 0, False: 0]
  ------------------
 2328|      0|        specs.sign = sign::minus;
 2329|      0|        break;
 2330|      0|      case ' ':
  ------------------
  |  Branch (2330:7): [True: 0, False: 0]
  ------------------
 2331|      0|        specs.sign = sign::space;
 2332|      0|        break;
 2333|      0|      }
 2334|      0|      ++begin;
 2335|      0|      break;
 2336|      0|    case '#':
  ------------------
  |  Branch (2336:5): [True: 0, False: 551k]
  ------------------
 2337|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2338|      0|      specs.alt = true;
 2339|      0|      ++begin;
 2340|      0|      break;
 2341|      0|    case '0':
  ------------------
  |  Branch (2341:5): [True: 0, False: 551k]
  ------------------
 2342|      0|      enter_state(state::zero);
 2343|      0|      if (!is_arithmetic_type(arg_type))
  ------------------
  |  Branch (2343:11): [True: 0, False: 0]
  ------------------
 2344|      0|        throw_format_error("format specifier requires numeric argument");
 2345|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2345:11): [True: 0, False: 0]
  ------------------
 2346|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2347|      0|        specs.align = align::numeric;
 2348|      0|        specs.fill[0] = Char('0');
 2349|      0|      }
 2350|      0|      ++begin;
 2351|      0|      break;
 2352|      0|    case '1':
  ------------------
  |  Branch (2352:5): [True: 0, False: 551k]
  ------------------
 2353|      0|    case '2':
  ------------------
  |  Branch (2353:5): [True: 0, False: 551k]
  ------------------
 2354|      0|    case '3':
  ------------------
  |  Branch (2354:5): [True: 0, False: 551k]
  ------------------
 2355|      0|    case '4':
  ------------------
  |  Branch (2355:5): [True: 0, False: 551k]
  ------------------
 2356|      0|    case '5':
  ------------------
  |  Branch (2356:5): [True: 0, False: 551k]
  ------------------
 2357|      0|    case '6':
  ------------------
  |  Branch (2357:5): [True: 0, False: 551k]
  ------------------
 2358|      0|    case '7':
  ------------------
  |  Branch (2358:5): [True: 0, False: 551k]
  ------------------
 2359|      0|    case '8':
  ------------------
  |  Branch (2359:5): [True: 0, False: 551k]
  ------------------
 2360|      0|    case '9':
  ------------------
  |  Branch (2360:5): [True: 0, False: 551k]
  ------------------
 2361|      0|    case '{':
  ------------------
  |  Branch (2361:5): [True: 0, False: 551k]
  ------------------
 2362|      0|      enter_state(state::width);
 2363|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2364|      0|      break;
 2365|      0|    case '.':
  ------------------
  |  Branch (2365:5): [True: 0, False: 551k]
  ------------------
 2366|      0|      enter_state(state::precision,
 2367|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2368|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2369|      0|                              ctx);
 2370|      0|      break;
 2371|      0|    case 'L':
  ------------------
  |  Branch (2371:5): [True: 0, False: 551k]
  ------------------
 2372|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2373|      0|      specs.localized = true;
 2374|      0|      ++begin;
 2375|      0|      break;
 2376|      0|    case 'd':
  ------------------
  |  Branch (2376:5): [True: 0, False: 551k]
  ------------------
 2377|      0|      return parse_presentation_type(pres::dec, integral_set);
 2378|      0|    case 'o':
  ------------------
  |  Branch (2378:5): [True: 0, False: 551k]
  ------------------
 2379|      0|      return parse_presentation_type(pres::oct, integral_set);
 2380|      0|    case 'x':
  ------------------
  |  Branch (2380:5): [True: 0, False: 551k]
  ------------------
 2381|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2382|      0|    case 'X':
  ------------------
  |  Branch (2382:5): [True: 0, False: 551k]
  ------------------
 2383|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2384|      0|    case 'b':
  ------------------
  |  Branch (2384:5): [True: 0, False: 551k]
  ------------------
 2385|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2386|      0|    case 'B':
  ------------------
  |  Branch (2386:5): [True: 0, False: 551k]
  ------------------
 2387|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2388|      0|    case 'a':
  ------------------
  |  Branch (2388:5): [True: 0, False: 551k]
  ------------------
 2389|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2390|      0|    case 'A':
  ------------------
  |  Branch (2390:5): [True: 0, False: 551k]
  ------------------
 2391|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2392|      0|    case 'e':
  ------------------
  |  Branch (2392:5): [True: 0, False: 551k]
  ------------------
 2393|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2394|      0|    case 'E':
  ------------------
  |  Branch (2394:5): [True: 0, False: 551k]
  ------------------
 2395|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2396|      0|    case 'f':
  ------------------
  |  Branch (2396:5): [True: 0, False: 551k]
  ------------------
 2397|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2398|      0|    case 'F':
  ------------------
  |  Branch (2398:5): [True: 0, False: 551k]
  ------------------
 2399|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2400|      0|    case 'g':
  ------------------
  |  Branch (2400:5): [True: 0, False: 551k]
  ------------------
 2401|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2402|      0|    case 'G':
  ------------------
  |  Branch (2402:5): [True: 0, False: 551k]
  ------------------
 2403|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2404|      0|    case 'c':
  ------------------
  |  Branch (2404:5): [True: 0, False: 551k]
  ------------------
 2405|      0|      return parse_presentation_type(pres::chr, integral_set);
 2406|   551k|    case 's':
  ------------------
  |  Branch (2406:5): [True: 551k, False: 0]
  ------------------
 2407|   551k|      return parse_presentation_type(pres::string,
 2408|   551k|                                     bool_set | string_set | cstring_set);
 2409|      0|    case 'p':
  ------------------
  |  Branch (2409:5): [True: 0, False: 551k]
  ------------------
 2410|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2411|      0|    case '?':
  ------------------
  |  Branch (2411:5): [True: 0, False: 551k]
  ------------------
 2412|      0|      return parse_presentation_type(pres::debug,
 2413|      0|                                     char_set | string_set | cstring_set);
 2414|      0|    case '}':
  ------------------
  |  Branch (2414:5): [True: 0, False: 551k]
  ------------------
 2415|      0|      return begin;
 2416|      0|    default: {
  ------------------
  |  Branch (2416:5): [True: 0, False: 551k]
  ------------------
 2417|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2417:11): [True: 0, False: 0]
  ------------------
 2418|       |      // Parse fill and alignment.
 2419|      0|      auto fill_end = begin + code_point_length(begin);
 2420|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2420:11): [True: 0, False: 0]
  ------------------
 2421|      0|        throw_format_error("invalid format specifier");
 2422|      0|        return begin;
 2423|      0|      }
 2424|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2424:11): [True: 0, False: 0]
  ------------------
 2425|      0|        throw_format_error("invalid fill character '{'");
 2426|      0|        return begin;
 2427|      0|      }
 2428|      0|      auto align = parse_align(to_ascii(*fill_end));
 2429|      0|      enter_state(state::align, align != align::none);
 2430|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2431|      0|      specs.align = align;
 2432|      0|      begin = fill_end + 1;
 2433|      0|    }
 2434|   551k|    }
 2435|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2435:9): [True: 0, False: 0]
  ------------------
 2436|      0|    c = to_ascii(*begin);
 2437|      0|  }
 2438|   551k|}
_ZN3fmt3v106detail8to_asciiIcLi0EEEcT_:
 2102|  1.10M|constexpr auto to_ascii(Char c) -> char {
 2103|  1.10M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2103:10): [True: 1.10M, False: 0]
  ------------------
 2104|  1.10M|}
_ZN3fmt3v106detail11parse_alignEc:
 2160|   551k|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2161|   551k|  switch (c) {
  ------------------
  |  Branch (2161:11): [True: 551k, False: 0]
  ------------------
 2162|      0|  case '<':
  ------------------
  |  Branch (2162:3): [True: 0, False: 551k]
  ------------------
 2163|      0|    return align::left;
 2164|      0|  case '>':
  ------------------
  |  Branch (2164:3): [True: 0, False: 551k]
  ------------------
 2165|      0|    return align::right;
 2166|      0|  case '^':
  ------------------
  |  Branch (2166:3): [True: 0, False: 551k]
  ------------------
 2167|      0|    return align::center;
 2168|   551k|  }
 2169|   551k|  return align::none;
 2170|   551k|}
_ZN3fmt3v106detail2inENS1_4typeEi:
  611|   551k|constexpr auto in(type t, int set) -> bool {
  612|   551k|  return ((set >> static_cast<int>(t)) & 1) != 0;
  613|   551k|}
_ZZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2303|   551k|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2304|   551k|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
  ------------------
  |  Branch (2304:11): [True: 0, False: 551k]
  ------------------
 2305|   551k|      specs.type = type;
 2306|   551k|      return begin + 1;
 2307|   551k|    }
_ZN3fmt3v1016visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1666|   551k|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1667|   551k|  switch (arg.type_) {
  ------------------
  |  Branch (1667:11): [True: 0, False: 551k]
  ------------------
 1668|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1668:3): [True: 0, False: 551k]
  ------------------
 1669|      0|    break;
 1670|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1670:3): [True: 0, False: 551k]
  ------------------
 1671|      0|    return vis(arg.value_.int_value);
 1672|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1672:3): [True: 0, False: 551k]
  ------------------
 1673|      0|    return vis(arg.value_.uint_value);
 1674|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1674:3): [True: 0, False: 551k]
  ------------------
 1675|      0|    return vis(arg.value_.long_long_value);
 1676|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1676:3): [True: 0, False: 551k]
  ------------------
 1677|      0|    return vis(arg.value_.ulong_long_value);
 1678|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1678:3): [True: 0, False: 551k]
  ------------------
 1679|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1680|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1680:3): [True: 0, False: 551k]
  ------------------
 1681|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1682|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1682:3): [True: 0, False: 551k]
  ------------------
 1683|      0|    return vis(arg.value_.bool_value);
 1684|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1684:3): [True: 0, False: 551k]
  ------------------
 1685|      0|    return vis(arg.value_.char_value);
 1686|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1686:3): [True: 0, False: 551k]
  ------------------
 1687|      0|    return vis(arg.value_.float_value);
 1688|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1688:3): [True: 0, False: 551k]
  ------------------
 1689|      0|    return vis(arg.value_.double_value);
 1690|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1690:3): [True: 0, False: 551k]
  ------------------
 1691|      0|    return vis(arg.value_.long_double_value);
 1692|   472k|  case detail::type::cstring_type:
  ------------------
  |  Branch (1692:3): [True: 472k, False: 79.5k]
  ------------------
 1693|   472k|    return vis(arg.value_.string.data);
 1694|  79.5k|  case detail::type::string_type:
  ------------------
  |  Branch (1694:3): [True: 79.5k, False: 472k]
  ------------------
 1695|  79.5k|    using sv = basic_string_view<typename Context::char_type>;
 1696|  79.5k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1697|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1697:3): [True: 0, False: 551k]
  ------------------
 1698|      0|    return vis(arg.value_.pointer);
 1699|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1699:3): [True: 0, False: 551k]
  ------------------
 1700|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1701|   551k|  }
 1702|      0|  return vis(monostate());
 1703|   551k|}
_ZN3fmt3v106detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2129|  1.03M|                              const char*& out) -> bool {
 2130|  1.03M|  out = static_cast<const char*>(
 2131|  1.03M|      std::memchr(first, value, to_unsigned(last - first)));
 2132|  1.03M|  return out != nullptr;
 2133|  1.03M|}
_ZZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2501|   519k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2502|   519k|      if (from == to) return;
  ------------------
  |  Branch (2502:11): [True: 0, False: 519k]
  ------------------
 2503|   519k|      for (;;) {
 2504|   519k|        const Char* p = nullptr;
 2505|   519k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2505:13): [True: 519k, False: 0]
  ------------------
 2506|   519k|          return handler_.on_text(from, to);
 2507|      0|        ++p;
 2508|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2508:13): [True: 0, False: 0]
  |  Branch (2508:24): [True: 0, False: 0]
  ------------------
 2509|      0|          return handler_.on_error("unmatched '}' in format string");
 2510|      0|        handler_.on_text(from, p);
 2511|      0|        from = p + 1;
 2512|      0|      }
 2513|   519k|    }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1277|  79.5k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1278|  79.5k|    string.data = val.data();
 1279|  79.5k|    string.size = val.size();
 1280|  79.5k|  }
_ZN3fmt3v106detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1391|   472k|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1392|   472k|    return val;
 1393|   472k|  }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1273|   472k|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1274|   472k|    string.data = val;
 1275|   472k|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1275:9): [Folded - Ignored]
  ------------------
 1276|   472k|  }
_ZNK3fmt3v106detail6bufferIcE4dataEv:
  845|   606k|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt3v107vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1420|   606k|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1421|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1422|       |  // can be better optimized in fmt::format anyway.
 1423|   606k|  auto buffer = memory_buffer();
 1424|   606k|  detail::vformat_to(buffer, fmt, args);
 1425|   606k|  return to_string(buffer);
 1426|   606k|}

_ZN3fmt3v106detail6bufferIcE6appendIcEEvPKT_S7_:
  871|  1.70M|void buffer<T>::append(const U* begin, const U* end) {
  872|  3.35M|  while (begin != end) {
  ------------------
  |  Branch (872:10): [True: 1.64M, False: 1.70M]
  ------------------
  873|  1.64M|    auto count = to_unsigned(end - begin);
  874|  1.64M|    try_reserve(size_ + count);
  875|  1.64M|    auto free_cap = capacity_ - size_;
  876|  1.64M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (876:9): [True: 0, False: 1.64M]
  ------------------
  877|  1.64M|    std::uninitialized_copy_n(begin, count, ptr_ + size_);
  878|  1.64M|    size_ += count;
  879|  1.64M|    begin += count;
  880|  1.64M|  }
  881|  1.70M|}
_ZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4360|   606k|                typename vformat_args<Char>::type args, locale_ref loc) {
 4361|   606k|  auto out = buffer_appender<Char>(buf);
 4362|   606k|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4362:7): [True: 0, False: 606k]
  |  Branch (4362:26): [True: 0, False: 0]
  ------------------
 4363|      0|    auto arg = args.get(0);
 4364|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4364:9): [True: 0, False: 0]
  ------------------
 4365|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4366|      0|    return;
 4367|      0|  }
 4368|       |
 4369|   606k|  struct format_handler : error_handler {
 4370|   606k|    basic_format_parse_context<Char> parse_context;
 4371|   606k|    buffer_context<Char> context;
 4372|       |
 4373|   606k|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4374|   606k|                   basic_format_args<buffer_context<Char>> p_args,
 4375|   606k|                   locale_ref p_loc)
 4376|   606k|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4377|       |
 4378|   606k|    void on_text(const Char* begin, const Char* end) {
 4379|   606k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4380|   606k|      context.advance_to(write<Char>(context.out(), text));
 4381|   606k|    }
 4382|       |
 4383|   606k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4384|   606k|      return parse_context.next_arg_id();
 4385|   606k|    }
 4386|   606k|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4387|   606k|      return parse_context.check_arg_id(id), id;
 4388|   606k|    }
 4389|   606k|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4390|   606k|      int arg_id = context.arg_id(id);
 4391|   606k|      if (arg_id < 0) on_error("argument not found");
 4392|   606k|      return arg_id;
 4393|   606k|    }
 4394|       |
 4395|   606k|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4396|   606k|      auto arg = get_arg(context, id);
 4397|   606k|      context.advance_to(visit_format_arg(
 4398|   606k|          default_arg_formatter<Char>{context.out(), context.args(),
 4399|   606k|                                      context.locale()},
 4400|   606k|          arg));
 4401|   606k|    }
 4402|       |
 4403|   606k|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4404|   606k|        -> const Char* {
 4405|   606k|      auto arg = get_arg(context, id);
 4406|   606k|      if (arg.type() == type::custom_type) {
 4407|   606k|        parse_context.advance_to(begin);
 4408|   606k|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4409|   606k|        return parse_context.begin();
 4410|   606k|      }
 4411|   606k|      auto specs = detail::dynamic_format_specs<Char>();
 4412|   606k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4413|   606k|      detail::handle_dynamic_spec<detail::width_checker>(
 4414|   606k|          specs.width, specs.width_ref, context);
 4415|   606k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4416|   606k|          specs.precision, specs.precision_ref, context);
 4417|   606k|      if (begin == end || *begin != '}')
 4418|   606k|        on_error("missing '}' in format string");
 4419|   606k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4420|   606k|      context.advance_to(visit_format_arg(f, arg));
 4421|   606k|      return begin;
 4422|   606k|    }
 4423|   606k|  };
 4424|   606k|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4425|   606k|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  961|   606k|      : alloc_(alloc) {
  962|   606k|    this->set(store_, SIZE);
  963|   606k|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (963:9): [Folded - Ignored]
  ------------------
  964|   606k|  }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  932|    186|  FMT_CONSTEXPR20 void grow(size_t size) override {
  933|    186|    detail::abort_fuzzing_if(size > 5000);
  934|    186|    const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  935|    186|    size_t old_capacity = this->capacity();
  936|    186|    size_t new_capacity = old_capacity + old_capacity / 2;
  937|    186|    if (size > new_capacity)
  ------------------
  |  Branch (937:9): [True: 48, False: 138]
  ------------------
  938|     48|      new_capacity = size;
  939|    138|    else if (new_capacity > max_size)
  ------------------
  |  Branch (939:14): [True: 0, False: 138]
  ------------------
  940|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (940:22): [True: 0, False: 0]
  ------------------
  941|    186|    T* old_data = this->data();
  942|    186|    T* new_data =
  943|    186|        std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  944|       |    // Suppress a bogus -Wstringop-overflow in gcc 13.1 (#3481).
  945|    186|    detail::assume(this->size() <= new_capacity);
  946|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  947|    186|    std::uninitialized_copy_n(old_data, this->size(), new_data);
  948|    186|    this->set(new_data, new_capacity);
  949|       |    // deallocate must not throw according to the standard, but even if it does,
  950|       |    // the buffer already uses the new storage and will deallocate it in
  951|       |    // destructor.
  952|    186|    if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (952:9): [True: 56, False: 130]
  ------------------
  953|    186|  }
_ZN3fmt3v106detail16abort_fuzzing_ifEb:
  291|    186|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  292|    186|  ignore_unused(condition);
  293|       |#ifdef FMT_FUZZ
  294|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  295|       |#endif
  296|    186|}
_ZN3fmt3v106detail6assumeEb:
  540|   606k|FMT_INLINE void assume(bool condition) {
  541|   606k|  (void)condition;
  542|   606k|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  543|   606k|  __builtin_assume(condition);
  544|       |#elif FMT_GCC_VERSION
  545|       |  if (!condition) __builtin_unreachable();
  546|       |#endif
  547|   606k|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  965|   606k|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  926|   606k|  FMT_CONSTEXPR20 void deallocate() {
  927|   606k|    T* data = this->data();
  928|   606k|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (928:9): [True: 130, False: 605k]
  ------------------
  929|   606k|  }
_ZN3fmt3v106detail7reserveINS0_8appenderEEERT_S5_m:
  587|  1.70M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  588|  1.70M|  return it;
  589|  1.70M|}
_ZN3fmt3v106detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  615|  1.70M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  616|  1.70M|  return it;
  617|  1.70M|}
_ZN3fmt3v106detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  644|  1.15M|                                                  OutputIt out) -> OutputIt {
  645|  1.15M|  return copy_str<OutChar>(begin, end, out);
  646|  1.15M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3686|  1.15M|    -> OutputIt {
 3687|  1.15M|  auto it = reserve(out, value.size());
 3688|  1.15M|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3689|  1.15M|  return base_iterator(out, it);
 3690|  1.15M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4378|  1.15M|    void on_text(const Char* begin, const Char* end) {
 4379|  1.15M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4380|  1.15M|      context.advance_to(write<Char>(context.out(), text));
 4381|  1.15M|    }
_ZN3fmt3v106detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEEDTcldtfp_3argfp0_EERT_T0_:
 3864|   551k|FMT_CONSTEXPR auto get_arg(Context& ctx, ID id) -> decltype(ctx.arg(id)) {
 3865|   551k|  auto arg = ctx.arg(id);
 3866|   551k|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3866:7): [True: 0, False: 551k]
  ------------------
 3867|   551k|  return arg;
 3868|   551k|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4383|   551k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4384|   551k|      return parse_context.next_arg_id();
 4385|   551k|    }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4404|   551k|        -> const Char* {
 4405|   551k|      auto arg = get_arg(context, id);
 4406|   551k|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4406:11): [True: 0, False: 551k]
  ------------------
 4407|      0|        parse_context.advance_to(begin);
 4408|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4409|      0|        return parse_context.begin();
 4410|      0|      }
 4411|   551k|      auto specs = detail::dynamic_format_specs<Char>();
 4412|   551k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4413|   551k|      detail::handle_dynamic_spec<detail::width_checker>(
 4414|   551k|          specs.width, specs.width_ref, context);
 4415|   551k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4416|   551k|          specs.precision, specs.precision_ref, context);
 4417|   551k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4417:11): [True: 0, False: 551k]
  |  Branch (4417:27): [True: 0, False: 551k]
  ------------------
 4418|      0|        on_error("missing '}' in format string");
 4419|   551k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4420|   551k|      context.advance_to(visit_format_arg(f, arg));
 4421|   551k|      return begin;
 4422|   551k|    }
_ZN3fmt3v106detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3873|   551k|                                       Context& ctx) {
 3874|   551k|  switch (ref.kind) {
  ------------------
  |  Branch (3874:11): [True: 0, False: 551k]
  ------------------
 3875|   551k|  case arg_id_kind::none:
  ------------------
  |  Branch (3875:3): [True: 551k, False: 0]
  ------------------
 3876|   551k|    break;
 3877|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3877:3): [True: 0, False: 551k]
  ------------------
 3878|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3879|      0|                                              ctx.error_handler());
 3880|      0|    break;
 3881|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3881:3): [True: 0, False: 551k]
  ------------------
 3882|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3883|      0|                                              ctx.error_handler());
 3884|      0|    break;
 3885|   551k|  }
 3886|   551k|}
_ZN3fmt3v106detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3873|   551k|                                       Context& ctx) {
 3874|   551k|  switch (ref.kind) {
  ------------------
  |  Branch (3874:11): [True: 0, False: 551k]
  ------------------
 3875|   551k|  case arg_id_kind::none:
  ------------------
  |  Branch (3875:3): [True: 551k, False: 0]
  ------------------
 3876|   551k|    break;
 3877|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3877:3): [True: 0, False: 551k]
  ------------------
 3878|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3879|      0|                                              ctx.error_handler());
 3880|      0|    break;
 3881|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3881:3): [True: 0, False: 551k]
  ------------------
 3882|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3883|      0|                                              ctx.error_handler());
 3884|      0|    break;
 3885|   551k|  }
 3886|   551k|}
_ZN3fmt3v106detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3794|   472k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3795|   472k|    return detail::write(out, value, specs, locale);
 3796|   472k|  }
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2362|   472k|    -> OutputIt {
 2363|   472k|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2363:10): [True: 472k, False: 0]
  ------------------
 2364|   472k|             ? write(out, basic_string_view<Char>(s), specs, {})
 2365|   472k|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2366|   472k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2356|   551k|    -> OutputIt {
 2357|   551k|  return write(out, s, specs);
 2358|   551k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2333|   551k|                         const format_specs<Char>& specs) -> OutputIt {
 2334|   551k|  auto data = s.data();
 2335|   551k|  auto size = s.size();
 2336|   551k|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2336:7): [True: 0, False: 551k]
  |  Branch (2336:31): [True: 0, False: 0]
  ------------------
 2337|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2338|   551k|  bool is_debug = specs.type == presentation_type::debug;
 2339|   551k|  size_t width = 0;
 2340|   551k|  if (specs.width != 0) {
  ------------------
  |  Branch (2340:7): [True: 0, False: 551k]
  ------------------
 2341|      0|    if (is_debug)
  ------------------
  |  Branch (2341:9): [True: 0, False: 0]
  ------------------
 2342|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2343|      0|    else
 2344|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2345|      0|  }
 2346|   551k|  return write_padded(out, specs, size, width,
 2347|   551k|                      [=](reserve_iterator<OutputIt> it) {
 2348|   551k|                        if (is_debug) return write_escaped_string(it, s);
 2349|   551k|                        return copy_str<Char>(data, data + size, it);
 2350|   551k|                      });
 2351|   551k|}
_ZN3fmt3v106detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1788|   551k|                                size_t size, size_t width, F&& f) -> OutputIt {
 1789|   551k|  static_assert(align == align::left || align == align::right, "");
 1790|   551k|  unsigned spec_width = to_unsigned(specs.width);
 1791|   551k|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1791:20): [True: 0, False: 551k]
  ------------------
 1792|       |  // Shifts are encoded as string literals because static constexpr is not
 1793|       |  // supported in constexpr functions.
 1794|   551k|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1794:18): [Folded - Ignored]
  ------------------
 1795|   551k|  size_t left_padding = padding >> shifts[specs.align];
 1796|   551k|  size_t right_padding = padding - left_padding;
 1797|   551k|  auto it = reserve(out, size + padding * specs.fill.size());
 1798|   551k|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1798:7): [True: 0, False: 551k]
  ------------------
 1799|   551k|  it = f(it);
 1800|   551k|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1800:7): [True: 0, False: 551k]
  ------------------
 1801|   551k|  return base_iterator(out, it);
 1802|   551k|}
_ZZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2347|   551k|                      [=](reserve_iterator<OutputIt> it) {
 2348|   551k|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2348:29): [True: 0, False: 551k]
  ------------------
 2349|   551k|                        return copy_str<Char>(data, data + size, it);
 2350|   551k|                      });
_ZN3fmt3v106detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3794|  79.5k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3795|  79.5k|    return detail::write(out, value, specs, locale);
 3796|  79.5k|  }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4376|   606k|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt3v109to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4342|   606k|    -> std::basic_string<Char> {
 4343|   606k|  auto size = buf.size();
 4344|   606k|  detail::assume(size < std::basic_string<Char>().max_size());
 4345|   606k|  return std::basic_string<Char>(buf.data(), size);
 4346|   606k|}

LLVMFuzzerTestOneInput:
   14|  6.90k|{
   15|  6.90k|    disable_output();
   16|       |
   17|  6.90k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   18|       |
   19|  6.90k|    EmptySourceManager source_manager;
   20|  6.90k|    DiagnosticEngine   diagnostic_engine;
   21|  6.90k|    Lexer              lexer{&diagnostic_engine};
   22|  6.90k|    auto               document = phi::make_not_null_scope<ASTDocument>();
   23|       |
   24|  6.90k|    Parser parser{&source_manager, &diagnostic_engine, &lexer};
   25|  6.90k|    parser.ParseString(document, "Fuzz.au3", source);
   26|       |
   27|  6.90k|    return 0;
   28|  6.90k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  3.86k|    {
   18|  3.86k|        m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|  3.86k|    }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  46.2k|    {
   20|  46.2k|        m_NodeType = ASTNodeType::BinaryExpression;
   21|  46.2k|    }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  4.92k|    {
   18|  4.92k|        m_NodeType = ASTNodeType::BooleanLiteral;
   19|  4.92k|    }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|  82.8k|    {
   20|  82.8k|        m_Statements.emplace_back(phi::move(child));
   21|  82.8k|    }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  2.06k|    {
   25|  2.06k|        m_Functions.emplace_back(phi::move(child));
   26|  2.06k|    }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|  4.27k|    {
   18|  4.27k|        m_NodeType = ASTNodeType::ExitStatement;
   19|  4.27k|    }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|   103k|    {
   13|   103k|        switch (m_NodeType)
   14|   103k|        {
   15|  33.0k|            case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:13): [True: 33.0k, False: 70.8k]
  ------------------
   16|  36.1k|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:13): [True: 3.14k, False: 100k]
  ------------------
   17|  36.6k|            case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:13): [True: 510, False: 103k]
  ------------------
   18|  36.6k|                return true;
   19|       |
   20|  67.2k|            default:
  ------------------
  |  Branch (20:13): [True: 67.2k, False: 36.6k]
  ------------------
   21|  67.2k|                return false;
   22|   103k|        }
   23|   103k|    }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|   103k|    {
   17|   103k|        m_NodeType = ASTNodeType::ExpressionStatement;
   18|   103k|    }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  4.73k|    {
   17|  4.73k|        m_NodeType = ASTNodeType::FloatLiteral;
   18|  4.73k|    }

_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|  66.4k|    {
   26|  66.4k|        if (m_IsBuiltIn)
  ------------------
  |  Branch (26:13): [True: 1.63k, False: 64.8k]
  ------------------
   27|  1.63k|        {
   28|  1.63k|            return enum_name(m_BuiltInFunction);
   29|  1.63k|        }
   30|       |
   31|  64.8k|        return m_FunctionName;
   32|  66.4k|    }
_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|   110k|    {
   21|   110k|        m_NodeType = ASTNodeType::FunctionCallExpression;
   22|   110k|    }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  7.04k|    {
   25|  7.04k|        m_NodeType = ASTNodeType::IfStatement;
   26|  7.04k|    }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|   267k|    {
   17|   267k|        m_NodeType = ASTNodeType::IntegerLiteral;
   18|   267k|    }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|    824|    {
   19|    824|        m_NodeType = ASTNodeType::KeywordLiteral;
   20|    824|        PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|    824|    }

_ZN10OpenAutoIt18ASTMacroExpressionC2ENS_9TokenKindE:
   18|    897|    {
   19|    897|        m_NodeType = ASTNodeType::MacroExpression;
   20|    897|        PHI_ASSERT(static_cast<phi::size_t>(m_Macro) >= MacroFirst &&
   21|    897|                   static_cast<phi::size_t>(m_Macro) <= MacroLast);
   22|    897|    }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   73|   752k|    virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   71|   752k|    ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   76|  67.2k|    {
   77|  67.2k|        PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   78|  67.2k|        PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   79|       |
   80|  67.2k|        return enum_name(m_NodeType);
   81|  67.2k|    }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   49|  67.2k|{
   50|  67.2k|    switch (node_type)
   51|  67.2k|    {
   52|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   53|      0|    case ASTNodeType::name:                                                                        \
   54|      0|        return "AST" #name;
   55|       |
   56|      0|        OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   14|  2.48k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   53|  2.48k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 2.48k, False: 64.7k]
  |  |  |  |  ------------------
  |  |  |  |   54|  2.48k|        return "AST" #name;
  |  |  ------------------
  |  |   15|  10.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   53|  10.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 10.1k, False: 57.0k]
  |  |  |  |  ------------------
  |  |  |  |   54|  10.1k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  10.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|    809|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 809, False: 66.3k]
  |  |  |  |  ------------------
  |  |  |  |   54|    809|        return "AST" #name;
  |  |  ------------------
  |  |   17|    809|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 67.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   18|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 67.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|  1.62k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   53|  1.62k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 1.62k, False: 65.5k]
  |  |  |  |  ------------------
  |  |  |  |   54|  1.62k|        return "AST" #name;
  |  |  ------------------
  |  |   20|  1.62k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 67.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   21|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 67.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   22|  39.6k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|  39.6k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 39.6k, False: 27.5k]
  |  |  |  |  ------------------
  |  |  |  |   54|  39.6k|        return "AST" #name;
  |  |  ------------------
  |  |   23|  39.6k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|    311|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 311, False: 66.8k]
  |  |  |  |  ------------------
  |  |  |  |   54|    311|        return "AST" #name;
  |  |  ------------------
  |  |   24|    612|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(MacroExpression)                                            \
  |  |  ------------------
  |  |  |  |   53|    612|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 612, False: 66.5k]
  |  |  |  |  ------------------
  |  |  |  |   54|    612|        return "AST" #name;
  |  |  ------------------
  |  |   25|    660|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   53|    660|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 660, False: 66.5k]
  |  |  |  |  ------------------
  |  |  |  |   54|    660|        return "AST" #name;
  |  |  ------------------
  |  |   26|  10.9k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(TernaryIfExpression)                                        \
  |  |  ------------------
  |  |  |  |   53|  10.9k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 10.9k, False: 56.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|  10.9k|        return "AST" #name;
  |  |  ------------------
  |  |   27|  10.9k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 67.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   28|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 67.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   29|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 67.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   30|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 67.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   57|       |
   58|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   59|       |
   60|      0|        default:
  ------------------
  |  Branch (60:9): [True: 0, False: 67.2k]
  ------------------
   61|      0|            PHI_ASSERT_NOT_REACHED();
   62|      0|            return "";
   63|  67.2k|    }
   64|  67.2k|}

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  4.65k|    {
   15|  4.65k|        m_NodeType = ASTNodeType::StringLiteral;
   16|  4.65k|    }

_ZN10OpenAutoIt22ASTTernaryIfExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEES5_S5_:
   19|  33.7k|    {
   20|  33.7k|        m_NodeType = ASTNodeType::TernaryIfExpression;
   21|  33.7k|    }

_ZN10OpenAutoIt18ASTUnaryExpressionC2ENS_9TokenKindEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   15|  6.40k|    {
   16|  6.40k|        m_NodeType = ASTNodeType::UnaryExpression;
   17|  6.40k|    }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|  87.4k|    {
   20|  87.4k|        m_NodeType = ASTNodeType::VariableAssignment;
   21|  87.4k|    }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|  34.9k|    {
   15|  34.9k|        m_NodeType = ASTNodeType::VariableExpression;
   16|  34.9k|    }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  10.1k|    {
   18|  10.1k|        m_NodeType = ASTNodeType::WhileStatement;
   19|  10.1k|    }

_ZN10OpenAutoIt17DiagnosticBuilder7WarningIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   55|  50.0k|    {
   56|  50.0k|        m_Diagnostics.emplace_back(Diagnostic{
   57|  50.0k|                id, DiagnosticLevel::Warning, location,
   58|  50.0k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   59|       |
   60|  50.0k|        return *this;
   61|  50.0k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA9_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  62.6k|    {
   66|  62.6k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  62.6k|                id, DiagnosticLevel::Error, location,
   68|  62.6k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  62.6k|        return *this;
   71|  62.6k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA18_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|      8|    {
   66|      8|        m_Diagnostics.emplace_back(Diagnostic{
   67|      8|                id, DiagnosticLevel::Error, location,
   68|      8|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|      8|        return *this;
   71|      8|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA4_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  1.73k|    {
   66|  1.73k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  1.73k|                id, DiagnosticLevel::Error, location,
   68|  1.73k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  1.73k|        return *this;
   71|  1.73k|    }
_ZN10OpenAutoIt17DiagnosticBuilder4NoteIJEEERS0_NS_14SourceLocationENSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   31|  1.73k|    {
   32|  1.73k|        PHI_ASSERT(!m_Diagnostics.empty());
   33|       |
   34|  1.73k|        m_Diagnostics.back().AddNote(
   35|  1.73k|                Diagnostic{DiagnosticId::None, DiagnosticLevel::Note, location,
   36|  1.73k|                           std::string{fmt::format(fmt::runtime(format_string),
   37|  1.73k|                                                   phi::forward<ArgsT>(args)...)}});
   38|       |
   39|  1.73k|        return *this;
   40|  1.73k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA25_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    485|    {
   66|    485|        m_Diagnostics.emplace_back(Diagnostic{
   67|    485|                id, DiagnosticLevel::Error, location,
   68|    485|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    485|        return *this;
   71|    485|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  2.56k|    {
   66|  2.56k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  2.56k|                id, DiagnosticLevel::Error, location,
   68|  2.56k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  2.56k|        return *this;
   71|  2.56k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  1.02k|    {
   66|  1.02k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  1.02k|                id, DiagnosticLevel::Error, location,
   68|  1.02k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  1.02k|        return *this;
   71|  1.02k|    }

_ZN10OpenAutoIt19DiagnosticIdMessageENS_12DiagnosticIdE:
   87|   118k|{
   88|   118k|    PHI_ASSERT(id != DiagnosticId::None);
   89|       |
   90|   118k|    switch (id)
   91|   118k|    {
   92|      0|#define OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EnumName, FlagName, DiagnosticMessage)                 \
   93|      0|    case DiagnosticId::EnumName: {                                                                 \
   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
   95|      0|        return DiagnosticMessage;                                                                  \
   96|      0|    }
   97|       |
   98|      0|        OPENAUTOIT_ENUM_DIAGNOSTIC_IDS()
  ------------------
  |  |   12|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(None, "", "")                                              \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 118k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   13|      0|    /* Lexer warnings */                                                                           \
  |  |   14|  50.0k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(NullCharacter, "-Wnull-character",                         \
  |  |  ------------------
  |  |  |  |   93|  50.0k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 50.0k, False: 68.4k]
  |  |  |  |  ------------------
  |  |  |  |   94|  50.0k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  50.0k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  50.0k|    }
  |  |  ------------------
  |  |   15|  50.0k|                                        "null character ignored")                                  \
  |  |   16|  50.0k|    /* Lexer errors */                                                                             \
  |  |   17|  50.0k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(InvalidFloatLiteral, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 118k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   18|      0|                                        "invalid float literal declaration")                       \
  |  |   19|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FloatHexLiteral, "",                                       \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 118k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   20|      0|                                        "hexadecimal float literal are not allowed")               \
  |  |   21|      0|    /* Parser error */                                                                             \
  |  |   22|      8|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(UnexpectedEndOfFile, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      8|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 8, False: 118k]
  |  |  |  |  ------------------
  |  |  |  |   94|      8|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      8|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      8|    }
  |  |  ------------------
  |  |   23|      8|                                        "unexpected end of file while parsing {:s}")               \
  |  |   24|  64.8k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(Expected, "", "expected {:s}")                             \
  |  |  ------------------
  |  |  |  |   93|  64.8k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 64.8k, False: 53.6k]
  |  |  |  |  ------------------
  |  |  |  |   94|  64.8k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  64.8k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  64.8k|    }
  |  |  ------------------
  |  |   25|  64.8k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IntegerLiteralTooLarge, "",                                \
  |  |  ------------------
  |  |  |  |   93|  1.66k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 1.66k, False: 116k]
  |  |  |  |  ------------------
  |  |  |  |   94|  1.66k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  1.66k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  1.66k|    }
  |  |  ------------------
  |  |   26|  1.66k|                                        "integer literal is too large.")                           \
  |  |   27|  1.66k|    /* Parser fatal error */                                                                       \
  |  |   28|  1.66k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNotFound, "", "'{:s}' file not found")                 \
  |  |  ------------------
  |  |  |  |   93|    984|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 984, False: 117k]
  |  |  |  |  ------------------
  |  |  |  |   94|    984|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    984|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    984|    }
  |  |  ------------------
  |  |   29|    984|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EmptyFilename, "", "empty filename")                       \
  |  |  ------------------
  |  |  |  |   93|    899|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 899, False: 117k]
  |  |  |  |  ------------------
  |  |  |  |   94|    899|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    899|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    899|    }
  |  |  ------------------
  |  |   30|    899|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IncludeNestingTooDeeply, "", "#include nested too deeply") \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 118k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   31|     38|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNameTooLong, "",                                       \
  |  |  ------------------
  |  |  |  |   93|     38|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 38, False: 118k]
  |  |  |  |  ------------------
  |  |  |  |   94|     38|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|     38|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|     38|    }
  |  |  ------------------
  |  |   32|     38|                                        "cannot open file '{:s}': File name too long")
  ------------------
   99|       |
  100|      0|#undef OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL
  101|       |
  102|      0|        default:
  ------------------
  |  Branch (102:9): [True: 0, False: 118k]
  ------------------
  103|      0|            PHI_ASSERT_NOT_REACHED();
  104|   118k|    }
  105|   118k|}

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|   803k|    {
   46|   803k|        Token token{kind,
   47|   803k|                    m_Source.substring_view(
   48|   803k|                            static_cast<typename phi::string_view::size_type::value_type>(
   49|   803k|                                    m_Iterator - m_Source.cbegin()),
   50|   803k|                            1u),
   51|   803k|                    CurrentSourceLocation()};
   52|       |
   53|       |        // 1 character sized token
   54|   803k|        ++m_Column;
   55|       |
   56|   803k|        return token;
   57|   803k|    }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  1.01M|    {
   61|  1.01M|        Token token{kind, TokenText(token_begin), CurrentSourceLocation()};
   62|       |
   63|       |        // Consume the amount of characters that make up our new token
   64|  1.01M|        m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  1.01M|        return token;
   67|  1.01M|    }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  1.53M|    {
   71|  1.53M|        return m_Source.substring_view(token_begin, m_Iterator);
   72|  1.53M|    }
_ZNK10OpenAutoIt5Lexer21CurrentSourceLocationEv:
   75|  1.86M|    {
   76|  1.86M|        return BuildSourceLocation(m_LineNumber, m_Column);
   77|  1.86M|    }
_ZNK10OpenAutoIt5Lexer19BuildSourceLocationEN3phi7integerImEES3_:
   81|  1.86M|    {
   82|  1.86M|        return {m_SourceFile, line_number, column};
   83|  1.86M|    }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   70|   954k|    {
   71|   954k|        switch (token_kind)
   72|   954k|        {
   73|  19.7k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (73:13): [True: 19.7k, False: 934k]
  ------------------
   74|  28.3k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (74:13): [True: 8.53k, False: 945k]
  ------------------
   75|  28.7k|            case TokenKind::KW_Not:
  ------------------
  |  Branch (75:13): [True: 410, False: 954k]
  ------------------
   76|  28.7k|                return true;
   77|       |
   78|   925k|            default:
  ------------------
  |  Branch (78:13): [True: 925k, False: 28.7k]
  ------------------
   79|   925k|                return false;
   80|   954k|        }
   81|   954k|    }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   85|   375k|    {
   86|   375k|        switch (token_kind)
   87|   375k|        {
   88|    194|            case TokenKind::KW_And:
  ------------------
  |  Branch (88:13): [True: 194, False: 375k]
  ------------------
   89|    394|            case TokenKind::KW_Or:
  ------------------
  |  Branch (89:13): [True: 200, False: 375k]
  ------------------
   90|  32.6k|            case TokenKind::OP_Equals:
  ------------------
  |  Branch (90:13): [True: 32.2k, False: 343k]
  ------------------
   91|  32.8k|            case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (91:13): [True: 228, False: 375k]
  ------------------
   92|  33.0k|            case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (92:13): [True: 218, False: 375k]
  ------------------
   93|  33.4k|            case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (93:13): [True: 448, False: 375k]
  ------------------
   94|  34.1k|            case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (94:13): [True: 607, False: 374k]
  ------------------
   95|  36.7k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (95:13): [True: 2.67k, False: 372k]
  ------------------
   96|  41.5k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (96:13): [True: 4.76k, False: 370k]
  ------------------
   97|  44.3k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (97:13): [True: 2.83k, False: 372k]
  ------------------
   98|  46.8k|            case TokenKind::OP_Divide:
  ------------------
  |  Branch (98:13): [True: 2.47k, False: 373k]
  ------------------
   99|  47.2k|            case TokenKind::OP_Raise:
  ------------------
  |  Branch (99:13): [True: 431, False: 375k]
  ------------------
  100|  52.2k|            case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (100:13): [True: 4.93k, False: 370k]
  ------------------
  101|  52.4k|            case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (101:13): [True: 205, False: 375k]
  ------------------
  102|  57.8k|            case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (102:13): [True: 5.39k, False: 370k]
  ------------------
  103|  58.0k|            case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (103:13): [True: 194, False: 375k]
  ------------------
  104|  62.3k|            case TokenKind::OP_LessThan:
  ------------------
  |  Branch (104:13): [True: 4.35k, False: 371k]
  ------------------
  105|  62.5k|            case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (105:13): [True: 194, False: 375k]
  ------------------
  106|  64.8k|            case TokenKind::OP_Concatenate:
  ------------------
  |  Branch (106:13): [True: 2.27k, False: 373k]
  ------------------
  107|  65.5k|            case TokenKind::OP_ConcatenateEquals:
  ------------------
  |  Branch (107:13): [True: 729, False: 374k]
  ------------------
  108|  65.5k|                return true;
  109|       |
  110|   309k|            default:
  ------------------
  |  Branch (110:13): [True: 309k, False: 65.5k]
  ------------------
  111|   309k|                return false;
  112|   375k|        }
  113|   375k|    }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  154|  2.06k|    {
  155|  2.06k|        m_Document->AppendFunction(phi::move(function));
  156|  2.06k|    }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  148|  82.8k|    {
  149|  82.8k|        m_Document->AppendStatement(phi::move(statement));
  150|  82.8k|    }

_ZN10OpenAutoIt14SourceLocation7InvalidEv:
   23|  6.90k|    {
   24|  6.90k|        return {nullptr, 1u, 1u};
   25|  6.90k|    }

_ZN10OpenAutoIt13SourceManagerC2Ev:
   21|  6.90k|    SourceManager()          = default;

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_14SourceLocationE:
   27|  1.81M|    {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   39|  10.4M|    {
   40|  10.4M|        return m_Kind;
   41|  10.4M|    }
_ZNK10OpenAutoIt5Token7GetTextEv:
   44|  1.27M|    {
   45|  1.27M|        return m_Text;
   46|  1.27M|    }
_ZNK10OpenAutoIt5Token16GetBeginLocationEv:
   64|  68.0k|    {
   65|  68.0k|        return m_SourceLocation;
   66|  68.0k|    }
_ZNK10OpenAutoIt5Token14GetEndLocationEv:
   69|  2.21k|    {
   70|  2.21k|        return {.source_file = m_SourceLocation.source_file,
   71|  2.21k|                .line_number = m_SourceLocation.line_number,
   72|  2.21k|                .column      = m_SourceLocation.column + m_Text.length()};
   73|  2.21k|    }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   88|   560k|    {
   89|   560k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   90|       |
   91|   560k|        if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (91:13): [True: 4.89k, False: 555k]
  ------------------
   92|   560k|            underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (92:13): [True: 4.89k, False: 0]
  ------------------
   93|  4.89k|        {
   94|  4.89k|            return true;
   95|  4.89k|        }
   96|       |
   97|   555k|        return false;
   98|   560k|    }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
  101|   412k|    {
  102|   412k|        switch (m_Kind)
  103|   412k|        {
  104|    464|            case TokenKind::KW_Default:
  ------------------
  |  Branch (104:13): [True: 464, False: 411k]
  ------------------
  105|  1.64k|            case TokenKind::KW_Null:
  ------------------
  |  Branch (105:13): [True: 1.18k, False: 410k]
  ------------------
  106|  1.64k|                return true;
  107|       |
  108|   410k|            default:
  ------------------
  |  Branch (108:13): [True: 410k, False: 1.64k]
  ------------------
  109|   410k|                return false;
  110|   412k|        }
  111|   412k|    }
_ZNK10OpenAutoIt5Token7IsMacroEv:
  158|   114k|    {
  159|   114k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
  160|       |
  161|   114k|        if (underlying_value >= MacroFirst && underlying_value <= MacroLast)
  ------------------
  |  Branch (161:13): [True: 65.4k, False: 49.3k]
  |  Branch (161:47): [True: 897, False: 64.5k]
  ------------------
  162|    897|        {
  163|    897|            return true;
  164|    897|        }
  165|       |
  166|   113k|        return false;
  167|   114k|    }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  682|   341k|{
  683|   341k|    switch (token_kind)
  684|   341k|    {
  685|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  686|      0|    case TokenKind::name:                                                                          \
  687|      0|        return #name;
  688|       |
  689|      0|        OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  4.43k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  686|  4.43k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.43k, False: 337k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.43k|        return #name;
  |  |  ------------------
  |  |   13|  25.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  686|  25.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 25.3k, False: 316k]
  |  |  |  |  ------------------
  |  |  |  |  687|  25.3k|        return #name;
  |  |  ------------------
  |  |   14|  25.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   15|  2.49k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  686|  2.49k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.49k, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.49k|        return #name;
  |  |  ------------------
  |  |   16|  2.49k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   17|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   18|  45.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|  45.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 45.8k, False: 295k]
  |  |  |  |  ------------------
  |  |  |  |  687|  45.8k|        return #name;
  |  |  ------------------
  |  |   19|  45.8k|    /* Literals */                                                                                 \
  |  |   20|  78.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  686|  78.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 78.6k, False: 263k]
  |  |  |  |  ------------------
  |  |  |  |  687|  78.6k|        return #name;
  |  |  ------------------
  |  |   21|  78.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  686|  3.78k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.78k, False: 337k]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.78k|        return #name;
  |  |  ------------------
  |  |   22|  3.78k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  686|    658|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 658, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    658|        return #name;
  |  |  ------------------
  |  |   23|    658|    /* Punctuation */                                                                              \
  |  |   24|  3.90k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  686|  3.90k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.90k, False: 337k]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.90k|        return #name;
  |  |  ------------------
  |  |   25|  10.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  10.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10.7k, False: 331k]
  |  |  |  |  ------------------
  |  |  |  |  687|  10.7k|        return #name;
  |  |  ------------------
  |  |   26|  32.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  32.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 32.3k, False: 309k]
  |  |  |  |  ------------------
  |  |  |  |  687|  32.3k|        return #name;
  |  |  ------------------
  |  |   27|  32.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   28|  8.08k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  8.08k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8.08k, False: 333k]
  |  |  |  |  ------------------
  |  |  |  |  687|  8.08k|        return #name;
  |  |  ------------------
  |  |   29|  8.08k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  2.70k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.70k, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.70k|        return #name;
  |  |  ------------------
  |  |   30|  2.70k|    /* Macros */                                                                                   \
  |  |   31|  2.70k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  2.70k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   33|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   34|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   35|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   36|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   37|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   38|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   40|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   41|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   42|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   43|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   44|    493|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  686|    493|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 493, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    493|        return #name;
  |  |  ------------------
  |  |   45|    493|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   46|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   47|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   49|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   51|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |   52|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   53|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   54|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   55|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   56|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   58|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |   59|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   60|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   67|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   70|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   74|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   75|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |   76|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   77|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   81|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   82|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   83|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   84|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   86|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |   87|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   88|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   89|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   91|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   92|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   93|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   96|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   97|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   98|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   99|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  100|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  101|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  103|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  105|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  106|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  107|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  108|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  109|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  111|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  112|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  113|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  114|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  122|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  123|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  124|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  125|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  127|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  128|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  129|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  130|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  131|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  132|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|     35|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 35, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     35|        return #name;
  |  |  ------------------
  |  |  133|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  138|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  139|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  141|      3|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  143|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    552|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|    552|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 552, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    552|        return #name;
  |  |  ------------------
  |  |  145|    552|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|    552|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  686|    360|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 360, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    360|        return #name;
  |  |  ------------------
  |  |  147|    360|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    360|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  686|    336|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 336, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    336|        return #name;
  |  |  ------------------
  |  |  149|    336|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    584|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  686|    584|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 584, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    584|        return #name;
  |  |  ------------------
  |  |  151|    584|    /* Keywords */                                                                                 \
  |  |  152|    584|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    584|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    584|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|    584|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  686|    204|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 204, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    204|        return #name;
  |  |  ------------------
  |  |  156|  2.53k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  686|  2.53k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.53k, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.53k|        return #name;
  |  |  ------------------
  |  |  157|  2.53k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  2.53k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|    189|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  686|    189|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 189, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    189|        return #name;
  |  |  ------------------
  |  |  163|    189|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|    189|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  165|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  166|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  167|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  168|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|    160|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  686|    160|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 160, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    160|        return #name;
  |  |  ------------------
  |  |  170|    160|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  171|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  173|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  175|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  179|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  180|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  181|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  182|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|     44|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  686|     44|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 44, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     44|        return #name;
  |  |  ------------------
  |  |  184|     44|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  5.22k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  686|  5.22k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.22k, False: 336k]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.22k|        return #name;
  |  |  ------------------
  |  |  186|  5.22k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  187|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  188|  2.51k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  686|  2.51k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.51k, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.51k|        return #name;
  |  |  ------------------
  |  |  189|  2.51k|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  2.51k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  686|    409|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 409, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    409|        return #name;
  |  |  ------------------
  |  |  191|  1.62k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  686|  1.62k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.62k, False: 340k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.62k|        return #name;
  |  |  ------------------
  |  |  192|  1.62k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  686|    200|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 200, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    200|        return #name;
  |  |  ------------------
  |  |  193|    200|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|  4.91k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  686|  4.91k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.91k, False: 336k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.91k|        return #name;
  |  |  ------------------
  |  |  195|  4.91k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  686|  2.53k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.53k, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.53k|        return #name;
  |  |  ------------------
  |  |  196|  2.53k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|  2.53k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  686|    252|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 252, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    252|        return #name;
  |  |  ------------------
  |  |  198|    252|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|    252|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  200|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  202|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  203|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  206|     17|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  208|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|    111|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  686|    111|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 111, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    111|        return #name;
  |  |  ------------------
  |  |  213|  1.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|  1.69k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.69k, False: 340k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.69k|        return #name;
  |  |  ------------------
  |  |  214|  1.69k|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|  1.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  216|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  219|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  220|    191|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  686|    191|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 191, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    191|        return #name;
  |  |  ------------------
  |  |  221|    191|    /* Operator */                                                                                 \
  |  |  222|    191|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  19.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)            /* = */                                  \
  |  |  ------------------
  |  |  |  |  686|  19.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19.8k, False: 321k]
  |  |  |  |  ------------------
  |  |  |  |  687|  19.8k|        return #name;
  |  |  ------------------
  |  |  224|  19.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)        /* += */                                 \
  |  |  ------------------
  |  |  |  |  686|     58|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 58, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     58|        return #name;
  |  |  ------------------
  |  |  225|     58|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)       /* -= */                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  226|    370|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)    /* *= */                                 \
  |  |  ------------------
  |  |  |  |  686|    370|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 370, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    370|        return #name;
  |  |  ------------------
  |  |  227|    370|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)      /* /= */                                 \
  |  |  ------------------
  |  |  |  |  686|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 38, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     38|        return #name;
  |  |  ------------------
  |  |  228|  2.72k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)       /* & */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.72k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.72k, False: 339k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.72k|        return #name;
  |  |  ------------------
  |  |  229|  2.72k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals) /* &= */                                 \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  230|    526|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)              /* + */                                  \
  |  |  ------------------
  |  |  |  |  686|    526|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 526, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    526|        return #name;
  |  |  ------------------
  |  |  231|    526|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)             /* - */                                  \
  |  |  ------------------
  |  |  |  |  686|    214|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 214, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    214|        return #name;
  |  |  ------------------
  |  |  232|  4.35k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)          /* * */                                  \
  |  |  ------------------
  |  |  |  |  686|  4.35k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.35k, False: 337k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.35k|        return #name;
  |  |  ------------------
  |  |  233|  4.35k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)            /* / */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.77k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.77k, False: 338k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.77k|        return #name;
  |  |  ------------------
  |  |  234|  2.77k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)             /* ^ */                                  \
  |  |  ------------------
  |  |  |  |  686|    930|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 930, False: 340k]
  |  |  |  |  ------------------
  |  |  |  |  687|    930|        return #name;
  |  |  ------------------
  |  |  235|  1.23k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)      /* == */                                 \
  |  |  ------------------
  |  |  |  |  686|  1.23k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.23k, False: 340k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.23k|        return #name;
  |  |  ------------------
  |  |  236|  1.23k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)          /* <> */                                 \
  |  |  ------------------
  |  |  |  |  686|    929|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 929, False: 340k]
  |  |  |  |  ------------------
  |  |  |  |  687|    929|        return #name;
  |  |  ------------------
  |  |  237|  7.90k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)       /* > */                                  \
  |  |  ------------------
  |  |  |  |  686|  7.90k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.90k, False: 333k]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.90k|        return #name;
  |  |  ------------------
  |  |  238|  7.90k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)  /* >= */                                 \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  239|  10.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)          /* < */                                  \
  |  |  ------------------
  |  |  |  |  686|  10.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10.9k, False: 330k]
  |  |  |  |  ------------------
  |  |  |  |  687|  10.9k|        return #name;
  |  |  ------------------
  |  |  240|  10.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)     /* <= */                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  241|  18.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)         /* ? */                                  \
  |  |  ------------------
  |  |  |  |  686|  18.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18.1k, False: 323k]
  |  |  |  |  ------------------
  |  |  |  |  687|  18.1k|        return #name;
  |  |  ------------------
  |  |  242|  24.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)       /* : */                                  \
  |  |  ------------------
  |  |  |  |  686|  24.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24.1k, False: 317k]
  |  |  |  |  ------------------
  |  |  |  |  687|  24.1k|        return #name;
  |  |  ------------------
  |  |  243|  24.1k|    /* Built-in Functions */                                                                       \
  |  |  244|  24.1k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  24.1k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  24.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  686|    512|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 512, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    512|        return #name;
  |  |  ------------------
  |  |  247|    512|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  248|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  249|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  250|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  251|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  254|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  255|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  256|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  257|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  259|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  260|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  263|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  264|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  265|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  270|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  271|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  272|     82|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  686|     82|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 82, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     82|        return #name;
  |  |  ------------------
  |  |  273|     82|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  274|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  275|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  276|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  279|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  280|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  281|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  282|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  288|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  297|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  298|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  299|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  300|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  301|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  302|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  307|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  308|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  309|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  312|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  313|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  314|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  315|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  316|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  320|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  321|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  323|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  327|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  328|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  330|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  331|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  332|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  333|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  334|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  335|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|     48|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 48, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     48|        return #name;
  |  |  ------------------
  |  |  336|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  337|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  338|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  340|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  341|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  343|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  344|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  345|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  347|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  348|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  349|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  352|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  357|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  358|    134|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  686|    134|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 134, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    134|        return #name;
  |  |  ------------------
  |  |  359|    134|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  361|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  362|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  363|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  364|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  365|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  366|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  367|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  368|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  369|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  370|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  371|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  373|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  374|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  379|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  380|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  381|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  384|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  385|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  402|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  403|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  404|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  405|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  406|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  417|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  418|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  421|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  686|     48|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 48, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     48|        return #name;
  |  |  ------------------
  |  |  422|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  426|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  427|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  428|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  430|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  435|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  436|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  437|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  438|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  440|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  443|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  444|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  445|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  448|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  449|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  450|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  451|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  452|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  453|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  454|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  455|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  462|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  463|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  466|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  468|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  470|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  471|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  472|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  473|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  474|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  477|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  479|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  480|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  482|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  483|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  485|    182|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  686|    182|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 182, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    182|        return #name;
  |  |  ------------------
  |  |  486|    182|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  488|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  489|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  491|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  492|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  494|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  495|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  496|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  497|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  498|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  499|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  500|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  503|     65|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  686|     65|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 65, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     65|        return #name;
  |  |  ------------------
  |  |  504|     65|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  505|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  507|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  508|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  509|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  510|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  511|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  512|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  516|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  517|    145|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  686|    145|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 145, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    145|        return #name;
  |  |  ------------------
  |  |  518|    145|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  519|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  522|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  523|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  525|    431|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  686|    431|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 431, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|    431|        return #name;
  |  |  ------------------
  |  |  526|    431|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  527|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  528|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  529|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  530|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  533|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  536|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  537|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  538|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  539|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  540|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  541|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  542|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  543|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  544|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  548|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  549|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  550|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  686|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 40, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     40|        return #name;
  |  |  ------------------
  |  |  551|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  553|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  554|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  562|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  563|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  566|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  567|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  569|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  570|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  575|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  576|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  579|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  580|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  583|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  686|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 68, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     68|        return #name;
  |  |  ------------------
  |  |  584|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  585|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  586|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  588|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  589|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  590|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  595|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  596|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  597|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  600|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  601|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  603|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  686|     29|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     29|        return #name;
  |  |  ------------------
  |  |  604|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  611|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  612|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  613|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  614|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  615|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  616|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  618|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  619|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  620|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  621|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  622|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  628|     52|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  686|     52|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 52, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     52|        return #name;
  |  |  ------------------
  |  |  629|     52|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  631|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  632|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  635|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  636|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  638|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  639|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  645|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  646|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  647|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  649|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 341k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  ------------------
  690|       |
  691|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  692|       |
  693|      0|        default:
  ------------------
  |  Branch (693:9): [True: 0, False: 341k]
  ------------------
  694|      0|            PHI_ASSERT_NOT_REACHED();
  695|   341k|    }
  696|   341k|}

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  1.81M|    {
   21|       |#if defined(PHI_DEBUG)
   22|       |        PHI_ASSERT(!m_Finalized);
   23|       |#endif
   24|       |
   25|  1.81M|        m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  1.81M|    }

_ZN10OpenAutoIt10DiagnosticC2ENS_12DiagnosticIdENS_15DiagnosticLevelENS_14SourceLocationEONSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE:
   14|   120k|{}
_ZNK10OpenAutoIt10Diagnostic6IsNoteEv:
   42|   120k|{
   43|   120k|    return m_Level == DiagnosticLevel::Note;
   44|   120k|}
_ZNK10OpenAutoIt10Diagnostic9IsWarningEv:
   47|   118k|{
   48|   118k|    return m_Level == DiagnosticLevel::Warning;
   49|   118k|}
_ZNK10OpenAutoIt10Diagnostic7IsErrorEv:
   52|   118k|{
   53|   118k|    return m_Level == DiagnosticLevel::Error;
   54|   118k|}
_ZNK10OpenAutoIt10Diagnostic12IsFatalErrorEv:
   57|   168k|{
   58|   168k|    return m_Level == DiagnosticLevel::FatalError;
   59|   168k|}
_ZNK10OpenAutoIt10Diagnostic14IsErrorOrFatalEv:
   62|   118k|{
   63|   118k|    return IsError() || IsFatalError();
  ------------------
  |  Branch (63:12): [True: 68.4k, False: 50.0k]
  |  Branch (63:25): [True: 0, False: 50.0k]
  ------------------
   64|   118k|}
_ZN10OpenAutoIt10Diagnostic7AddNoteEOS0_:
   93|  1.73k|{
   94|  1.73k|    PHI_ASSERT(note.IsNote());
   95|       |
   96|  1.73k|    m_Notes.emplace_back(note);
   97|  1.73k|}

_ZN10OpenAutoIt17DiagnosticBuilderC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
   11|   118k|{}
_ZN10OpenAutoIt17DiagnosticBuilderD2Ev:
   14|   118k|{
   15|   118k|    for (auto& diagnostic : m_Diagnostics)
  ------------------
  |  Branch (15:27): [True: 118k, False: 118k]
  ------------------
   16|   118k|    {
   17|   118k|        m_DiagnosticEngine->Report(diagnostic);
   18|   118k|    }
   19|   118k|}

_ZN10OpenAutoIt16DiagnosticEngineC2Ev:
   12|  6.90k|{}
_ZNK10OpenAutoIt16DiagnosticEngine13GetErrorLimitEv:
   29|   402k|{
   30|   402k|    return m_ErrorLimit;
   31|   402k|}
_ZNK10OpenAutoIt16DiagnosticEngine21HasFatalErrorOccurredEv:
   44|   402k|{
   45|   402k|    return m_FatalErrorOccurred;
   46|   402k|}
_ZN10OpenAutoIt16DiagnosticEngine6ReportENS_10DiagnosticE:
   69|   118k|{
   70|   118k|    PHI_ASSERT(!diagnostic.IsNote());
   71|       |
   72|   118k|    if (m_IgnoreAllWarnings)
  ------------------
  |  Branch (72:9): [True: 0, False: 118k]
  ------------------
   73|      0|    {
   74|      0|        diagnostic.IgnoreWarning();
   75|      0|    }
   76|       |
   77|   118k|    if (m_WarningsAsError)
  ------------------
  |  Branch (77:9): [True: 0, False: 118k]
  ------------------
   78|      0|    {
   79|      0|        diagnostic.UpgradeWarningToError();
   80|      0|    }
   81|       |
   82|   118k|    if (diagnostic.IsErrorOrFatal())
  ------------------
  |  Branch (82:9): [True: 68.4k, False: 50.0k]
  ------------------
   83|  68.4k|    {
   84|  68.4k|        m_ErrorOccurred = true;
   85|  68.4k|        ++m_NumberOfErrors;
   86|  68.4k|    }
   87|       |
   88|   118k|    if (diagnostic.IsFatalError())
  ------------------
  |  Branch (88:9): [True: 0, False: 118k]
  ------------------
   89|      0|    {
   90|      0|        m_FatalErrorOccurred = true;
   91|      0|    }
   92|       |
   93|   118k|    if (diagnostic.IsWarning())
  ------------------
  |  Branch (93:9): [True: 50.0k, False: 68.4k]
  ------------------
   94|  50.0k|    {
   95|  50.0k|        ++m_NumberOfWarnings;
   96|  50.0k|    }
   97|       |
   98|   118k|    if (m_Consumer)
  ------------------
  |  Branch (98:9): [True: 0, False: 118k]
  ------------------
   99|      0|    {
  100|      0|        m_Consumer->Report(diagnostic);
  101|      0|    }
  102|   118k|}

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  160|  15.4k|{
  161|  15.4k|    static constexpr auto map =
  162|  15.4k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  163|  15.4k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  164|       |
  165|  15.4k|    std::string str{token.begin(), token.end()};
  166|  15.4k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  167|       |
  168|  15.4k|    return map.at(phi::string_view(str.c_str(), str.size()));
  169|  15.4k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  186|  18.1k|{
  187|  18.1k|    static constexpr auto map =
  188|  18.1k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  189|  18.1k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  190|       |
  191|  18.1k|    std::string str{token.begin(), token.end()};
  192|  18.1k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  193|       |
  194|  18.1k|    return map.at(phi::string_view(str.c_str(), str.size()));
  195|  18.1k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  662|   322k|{
  663|   322k|    static constexpr auto keyword_map =
  664|   322k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  665|   322k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  666|   322k|    static constexpr auto builtin_map =
  667|   322k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  668|   322k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  669|       |
  670|   322k|    std::string str{token.begin(), token.end()};
  671|   322k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  672|       |
  673|   322k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  674|       |
  675|   322k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  676|   322k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (676:9): [True: 199k, False: 123k]
  ------------------
  677|   199k|    {
  678|   199k|        return builtin_map.at(string);
  679|   199k|    }
  680|       |
  681|   123k|    return keyword;
  682|   322k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  707|   331k|{
  708|   331k|    static constexpr auto map =
  709|   331k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  710|   331k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  711|       |
  712|   331k|    return map.at(token);
  713|   331k|}
_ZN10OpenAutoIt5LexerC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
  778|  6.90k|{}
_ZN10OpenAutoIt5Lexer5ResetEv:
  781|  6.90k|{
  782|  6.90k|    m_Iterator = m_Source.begin();
  783|       |
  784|  6.90k|    m_InsideMultiLineComment = false;
  785|       |
  786|  6.90k|    m_LineNumber = 1u;
  787|  6.90k|    m_Column     = 1u;
  788|  6.90k|}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  791|  6.22M|{
  792|  6.22M|    return m_Iterator == m_Source.end();
  793|  6.22M|}
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  796|  1.81M|{
  797|  2.13M|    while (!IsFinished())
  ------------------
  |  Branch (797:12): [True: 2.13M, False: 513]
  ------------------
  798|  2.13M|    {
  799|  2.13M|        char current_character = *m_Iterator;
  800|       |
  801|       |        /* null character */
  802|       |
  803|  2.13M|        if (current_character == '\0')
  ------------------
  |  Branch (803:13): [True: 50.0k, False: 2.08M]
  ------------------
  804|  50.0k|        {
  805|  50.0k|            Diag().Warning(DiagnosticId::NullCharacter, CurrentSourceLocation());
  806|       |
  807|  50.0k|            SkipCurrentCharacter();
  808|  50.0k|        }
  809|       |
  810|       |        /* Multiline comments */
  811|       |
  812|  2.08M|        else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (812:18): [True: 989, False: 2.08M]
  ------------------
  813|    989|        {
  814|    989|            iterator       begin_of_multiline_comment            = m_Iterator;
  815|    989|            const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  816|    989|            const phi::u64 beginning_column_of_multiline_comment = m_Column;
  817|       |
  818|  1.93k|            while (!IsFinished())
  ------------------
  |  Branch (818:20): [True: 1.87k, False: 66]
  ------------------
  819|  1.87k|            {
  820|  1.87k|                current_character = *m_Iterator;
  821|       |
  822|       |                // Check for end comment multiline
  823|  1.87k|                if (current_character == '#')
  ------------------
  |  Branch (823:21): [True: 1.44k, False: 432]
  ------------------
  824|  1.44k|                {
  825|  1.44k|                    iterator begin_of_token = m_Iterator;
  826|  1.44k|                    ConsumeCurrentCharacter();
  827|       |
  828|  7.88k|                    while (!IsFinished())
  ------------------
  |  Branch (828:28): [True: 7.82k, False: 62]
  ------------------
  829|  7.82k|                    {
  830|  7.82k|                        current_character = *m_Iterator;
  831|       |
  832|  7.82k|                        if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (832:29): [True: 6.44k, False: 1.37k]
  ------------------
  833|  6.44k|                        {
  834|  6.44k|                            ConsumeCurrentCharacter();
  835|  6.44k|                            continue;
  836|  6.44k|                        }
  837|       |
  838|  1.37k|                        break;
  839|  7.82k|                    }
  840|       |
  841|  1.44k|                    const TokenKind pre_processor_token_kind =
  842|  1.44k|                            lookup_pre_processor(TokenText(begin_of_token));
  843|       |
  844|  1.44k|                    if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (844:25): [True: 923, False: 517]
  ------------------
  845|    923|                    {
  846|    923|                        m_InsideMultiLineComment = false;
  847|       |
  848|       |                        // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  849|    923|                        m_Iterator -= TokenText(begin_of_token).length().unsafe();
  850|       |
  851|    923|                        Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  852|    923|                                    BuildSourceLocation(beginning_line_of_multiline_comment,
  853|    923|                                                        beginning_column_of_multiline_comment)};
  854|       |
  855|    923|                        return token;
  856|    923|                    }
  857|  1.44k|                }
  858|    432|                else if (current_character == '\n')
  ------------------
  |  Branch (858:26): [True: 194, False: 238]
  ------------------
  859|    194|                {
  860|    194|                    ConsumeCurrentCharacter();
  861|    194|                    AdvanceToNextLine();
  862|    194|                }
  863|    238|                else
  864|    238|                {
  865|       |                    // Otherwise simply consume the character
  866|    238|                    ConsumeCurrentCharacter();
  867|    238|                    m_Column += 1u;
  868|    238|                }
  869|  1.87k|            }
  870|    989|        }
  871|       |
  872|       |        /* Skip characters */
  873|       |
  874|  2.08M|        else if (is_skip_character(current_character))
  ------------------
  |  Branch (874:18): [True: 70.1k, False: 2.01M]
  ------------------
  875|  70.1k|        {
  876|  70.1k|            SkipCurrentCharacter();
  877|  70.1k|        }
  878|       |
  879|       |        /* New Lines */
  880|       |
  881|  2.01M|        else if (current_character == '\n')
  ------------------
  |  Branch (881:18): [True: 78.3k, False: 1.93M]
  ------------------
  882|  78.3k|        {
  883|  78.3k|            Token new_line_token = ConstructToken(TokenKind::NewLine);
  884|       |
  885|  78.3k|            ConsumeCurrentCharacter();
  886|  78.3k|            AdvanceToNextLine();
  887|       |
  888|  78.3k|            return new_line_token;
  889|  78.3k|        }
  890|       |
  891|       |        /* Comment */
  892|       |
  893|  1.93M|        else if (current_character == ';')
  ------------------
  |  Branch (893:18): [True: 841, False: 1.93M]
  ------------------
  894|    841|        {
  895|    841|            iterator begin_of_token = m_Iterator;
  896|    841|            ConsumeCurrentCharacter();
  897|       |
  898|  1.85k|            while (!IsFinished())
  ------------------
  |  Branch (898:20): [True: 1.78k, False: 61]
  ------------------
  899|  1.78k|            {
  900|  1.78k|                current_character = *m_Iterator;
  901|       |
  902|  1.78k|                if (current_character != '\n')
  ------------------
  |  Branch (902:21): [True: 1.00k, False: 780]
  ------------------
  903|  1.00k|                {
  904|  1.00k|                    ConsumeCurrentCharacter();
  905|  1.00k|                    continue;
  906|  1.00k|                }
  907|       |
  908|    780|                break;
  909|  1.78k|            }
  910|       |
  911|    841|            return ConstructToken(TokenKind::Comment, begin_of_token);
  912|    841|        }
  913|       |
  914|       |        /* Macros */
  915|       |
  916|  1.93M|        else if (current_character == '@')
  ------------------
  |  Branch (916:18): [True: 15.4k, False: 1.92M]
  ------------------
  917|  15.4k|        {
  918|  15.4k|            iterator begin_of_token = m_Iterator;
  919|  15.4k|            ConsumeCurrentCharacter();
  920|       |
  921|  82.5k|            while (!IsFinished())
  ------------------
  |  Branch (921:20): [True: 82.3k, False: 164]
  ------------------
  922|  82.3k|            {
  923|  82.3k|                current_character = *m_Iterator;
  924|       |
  925|  82.3k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (925:21): [True: 67.0k, False: 15.3k]
  ------------------
  926|  67.0k|                {
  927|  67.0k|                    ConsumeCurrentCharacter();
  928|  67.0k|                    continue;
  929|  67.0k|                }
  930|       |
  931|  15.3k|                break;
  932|  82.3k|            }
  933|       |
  934|       |            // Emit token
  935|  15.4k|            return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  936|  15.4k|        }
  937|       |
  938|       |        /* Variable identifier */
  939|       |
  940|  1.92M|        else if (current_character == '$')
  ------------------
  |  Branch (940:18): [True: 182k, False: 1.74M]
  ------------------
  941|   182k|        {
  942|   182k|            iterator     begin_of_token = m_Iterator;
  943|   182k|            phi::boolean parsed_something{false};
  944|   182k|            ConsumeCurrentCharacter();
  945|       |
  946|   404k|            while (!IsFinished())
  ------------------
  |  Branch (946:20): [True: 403k, False: 982]
  ------------------
  947|   403k|            {
  948|   403k|                current_character = *m_Iterator;
  949|       |
  950|   403k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (950:21): [True: 222k, False: 181k]
  ------------------
  951|   222k|                {
  952|   222k|                    ConsumeCurrentCharacter();
  953|   222k|                    parsed_something = true;
  954|   222k|                    continue;
  955|   222k|                }
  956|       |
  957|   181k|                break;
  958|   403k|            }
  959|       |
  960|       |            // Ensure that '$' is not a valid variable identifier
  961|   182k|            if (!parsed_something)
  ------------------
  |  Branch (961:17): [True: 27.9k, False: 154k]
  ------------------
  962|  27.9k|            {
  963|  27.9k|                return ConstructToken(TokenKind::Garbage, begin_of_token);
  964|  27.9k|            }
  965|       |
  966|       |            // Emit Token
  967|   154k|            return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  968|   182k|        }
  969|       |
  970|       |        /* PreProcessor directive */
  971|       |
  972|  1.74M|        else if (current_character == '#')
  ------------------
  |  Branch (972:18): [True: 16.7k, False: 1.72M]
  ------------------
  973|  16.7k|        {
  974|  16.7k|            iterator begin_of_token = m_Iterator;
  975|  16.7k|            ConsumeCurrentCharacter();
  976|       |
  977|   140k|            while (!IsFinished())
  ------------------
  |  Branch (977:20): [True: 140k, False: 291]
  ------------------
  978|   140k|            {
  979|   140k|                current_character = *m_Iterator;
  980|       |
  981|   140k|                if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (981:21): [True: 123k, False: 16.4k]
  ------------------
  982|   123k|                {
  983|   123k|                    ConsumeCurrentCharacter();
  984|   123k|                    continue;
  985|   123k|                }
  986|       |
  987|  16.4k|                break;
  988|   140k|            }
  989|       |
  990|       |            // Check for start of multiline comment
  991|  16.7k|            const TokenKind pre_processor_token_kind =
  992|  16.7k|                    lookup_pre_processor(TokenText(begin_of_token));
  993|       |
  994|  16.7k|            if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (994:17): [True: 1.00k, False: 15.7k]
  ------------------
  995|  1.00k|            {
  996|  1.00k|                m_InsideMultiLineComment = true;
  997|  1.00k|            }
  998|       |
  999|  16.7k|            return ConstructToken(pre_processor_token_kind, begin_of_token);
 1000|  16.7k|        }
 1001|       |
 1002|       |        /* SingleQuoteStringLiteral */
 1003|       |
 1004|  1.72M|        else if (current_character == '\'')
  ------------------
  |  Branch (1004:18): [True: 1.81k, False: 1.72M]
  ------------------
 1005|  1.81k|        {
 1006|  1.81k|            iterator     begin_of_token = m_Iterator;
 1007|  1.81k|            phi::boolean did_terminate  = false;
 1008|  1.81k|            ConsumeCurrentCharacter();
 1009|       |
 1010|  2.03k|            while (!IsFinished())
  ------------------
  |  Branch (1010:20): [True: 2.01k, False: 13]
  ------------------
 1011|  2.01k|            {
 1012|  2.01k|                current_character = *m_Iterator;
 1013|  2.01k|                ConsumeCurrentCharacter();
 1014|       |
 1015|  2.01k|                if (current_character == '\'')
  ------------------
  |  Branch (1015:21): [True: 1.79k, False: 220]
  ------------------
 1016|  1.79k|                {
 1017|  1.79k|                    did_terminate = true;
 1018|  1.79k|                    break;
 1019|  1.79k|                }
 1020|  2.01k|            }
 1021|       |
 1022|  1.81k|            if (did_terminate)
  ------------------
  |  Branch (1022:17): [True: 1.79k, False: 13]
  ------------------
 1023|  1.79k|            {
 1024|  1.79k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1025|  1.79k|            }
 1026|       |
 1027|       |            // TODO: Warn unterminated string literal
 1028|  1.81k|        }
 1029|       |
 1030|       |        /* DoubleQuoteStringLiteral */
 1031|       |
 1032|  1.72M|        else if (current_character == '\"')
  ------------------
  |  Branch (1032:18): [True: 4.51k, False: 1.71M]
  ------------------
 1033|  4.51k|        {
 1034|  4.51k|            iterator     begin_of_token = m_Iterator;
 1035|  4.51k|            phi::boolean did_terminate  = false;
 1036|  4.51k|            ConsumeCurrentCharacter();
 1037|       |
 1038|  17.0k|            while (!IsFinished())
  ------------------
  |  Branch (1038:20): [True: 16.9k, False: 27]
  ------------------
 1039|  16.9k|            {
 1040|  16.9k|                current_character = *m_Iterator;
 1041|  16.9k|                ConsumeCurrentCharacter();
 1042|       |
 1043|  16.9k|                if (current_character == '\"')
  ------------------
  |  Branch (1043:21): [True: 4.49k, False: 12.4k]
  ------------------
 1044|  4.49k|                {
 1045|  4.49k|                    did_terminate = true;
 1046|  4.49k|                    break;
 1047|  4.49k|                }
 1048|  16.9k|            }
 1049|       |
 1050|  4.51k|            if (did_terminate)
  ------------------
  |  Branch (1050:17): [True: 4.49k, False: 27]
  ------------------
 1051|  4.49k|            {
 1052|  4.49k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1053|  4.49k|            }
 1054|  4.51k|        }
 1055|       |
 1056|       |        /* Number Literals - IntegerLiteral/FloatLiteral */
 1057|       |
 1058|  1.71M|        else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1058:18): [True: 294k, False: 1.42M]
  |  Branch (1058:18): [True: 303k, False: 1.41M]
  |  Branch (1058:54): [True: 8.73k, False: 1.41M]
  ------------------
 1059|   303k|        {
 1060|   303k|            const phi::boolean start_with_zero{current_character == '0'};
 1061|   303k|            phi::boolean       parsing_hex{false};
 1062|   303k|            phi::boolean       parsing_float{current_character == '.'};
 1063|       |
 1064|   303k|            iterator begin_of_token = m_Iterator;
 1065|   303k|            ConsumeCurrentCharacter();
 1066|       |
 1067|   378k|            while (!IsFinished())
  ------------------
  |  Branch (1067:20): [True: 377k, False: 771]
  ------------------
 1068|   377k|            {
 1069|   377k|                current_character = *m_Iterator;
 1070|       |
 1071|       |                // Is the second character
 1072|   377k|                if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1072:21): [True: 303k, False: 74.6k]
  |  Branch (1072:58): [True: 62.2k, False: 240k]
  ------------------
 1073|  62.2k|                {
 1074|       |                    // Hex character
 1075|  62.2k|                    if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1075:25): [True: 883, False: 61.3k]
  |  Branch (1075:53): [True: 7.20k, False: 54.1k]
  ------------------
 1076|  8.09k|                    {
 1077|  8.09k|                        parsing_hex = true;
 1078|  8.09k|                        ConsumeCurrentCharacter();
 1079|  8.09k|                        continue;
 1080|  8.09k|                    }
 1081|  62.2k|                }
 1082|       |
 1083|       |                // Actually parsing
 1084|   369k|                if (parsing_hex)
  ------------------
  |  Branch (1084:21): [True: 26.6k, False: 342k]
  ------------------
 1085|  26.6k|                {
 1086|  26.6k|                    if (parsing_float)
  ------------------
  |  Branch (1086:25): [True: 0, False: 26.6k]
  ------------------
 1087|      0|                    {
 1088|       |                        // TODO: Fix include and enable this warning
 1089|       |                        //Diag().Error(DiagnosticId::FloatHexLiteral, CurrentSourceLocation());
 1090|       |
 1091|      0|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1092|      0|                    }
 1093|       |
 1094|  26.6k|                    if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1094:25): [True: 18.6k, False: 8.03k]
  ------------------
 1095|  18.6k|                    {
 1096|  18.6k|                        ConsumeCurrentCharacter();
 1097|  18.6k|                        continue;
 1098|  18.6k|                    }
 1099|  26.6k|                }
 1100|   342k|                else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1100:26): [True: 47.8k, False: 295k]
  ------------------
 1101|  47.8k|                {
 1102|  47.8k|                    ConsumeCurrentCharacter();
 1103|  47.8k|                    continue;
 1104|  47.8k|                }
 1105|       |                // Literal dot
 1106|   295k|                else if (current_character == '.')
  ------------------
  |  Branch (1106:26): [True: 861, False: 294k]
  ------------------
 1107|    861|                {
 1108|    861|                    if (parsing_float)
  ------------------
  |  Branch (1108:25): [True: 556, False: 305]
  ------------------
 1109|    556|                    {
 1110|       |                        //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1111|       |
 1112|    556|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1113|    556|                    }
 1114|       |
 1115|    305|                    parsing_float = true;
 1116|    305|                    ConsumeCurrentCharacter();
 1117|    305|                    continue;
 1118|    861|                }
 1119|       |
 1120|   302k|                break;
 1121|   369k|            }
 1122|       |
 1123|   303k|            if (parsing_float)
  ------------------
  |  Branch (1123:17): [True: 8.48k, False: 294k]
  ------------------
 1124|  8.48k|            {
 1125|       |                // Were not allowed to end with a dot
 1126|       |                // TODO: This is very hacky and looks nasty
 1127|  8.48k|                if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1127:21): [True: 2.47k, False: 6.01k]
  ------------------
 1128|  2.47k|                {
 1129|       |                    //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1130|       |
 1131|  2.47k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
 1132|  2.47k|                }
 1133|       |
 1134|  6.01k|                return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1135|  8.48k|            }
 1136|       |
 1137|   294k|            return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1138|   303k|        }
 1139|       |
 1140|       |        /* Operators */
 1141|       |
 1142|  1.41M|        else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1142:18): [True: 163k, False: 1.25M]
  ------------------
 1143|   163k|        {
 1144|   163k|            iterator begin_of_token = m_Iterator;
 1145|   163k|            ConsumeCurrentCharacter();
 1146|       |
 1147|   163k|            if (!IsFinished())
  ------------------
  |  Branch (1147:17): [True: 162k, False: 701]
  ------------------
 1148|   162k|            {
 1149|   162k|                if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1149:21): [True: 9.66k, False: 153k]
  |  Branch (1149:44): [True: 22.0k, False: 131k]
  |  Branch (1149:70): [True: 1.34k, False: 20.7k]
  ------------------
 1150|  11.0k|                {
 1151|       |                    // We have an actual two part operator
 1152|  11.0k|                    ConsumeCurrentCharacter();
 1153|  11.0k|                }
 1154|   162k|            }
 1155|       |
 1156|   163k|            return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1157|   163k|        }
 1158|       |
 1159|  1.25M|        else if (is_single_operator(current_character))
  ------------------
  |  Branch (1159:18): [True: 167k, False: 1.08M]
  ------------------
 1160|   167k|        {
 1161|   167k|            Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1162|       |
 1163|   167k|            ConsumeCurrentCharacter();
 1164|       |
 1165|   167k|            return token;
 1166|   167k|        }
 1167|       |
 1168|       |        /* Punctioation */
 1169|       |
 1170|  1.08M|        else if (current_character == ',')
  ------------------
  |  Branch (1170:18): [True: 6.65k, False: 1.07M]
  ------------------
 1171|  6.65k|        {
 1172|  6.65k|            Token token = ConstructToken(TokenKind::Comma);
 1173|       |
 1174|  6.65k|            ConsumeCurrentCharacter();
 1175|       |
 1176|  6.65k|            return token;
 1177|  6.65k|        }
 1178|       |
 1179|  1.07M|        else if (current_character == '(')
  ------------------
  |  Branch (1179:18): [True: 165k, False: 910k]
  ------------------
 1180|   165k|        {
 1181|   165k|            Token token = ConstructToken(TokenKind::LParen);
 1182|       |
 1183|   165k|            ConsumeCurrentCharacter();
 1184|       |
 1185|   165k|            return token;
 1186|   165k|        }
 1187|       |
 1188|   910k|        else if (current_character == ')')
  ------------------
  |  Branch (1188:18): [True: 81.0k, False: 829k]
  ------------------
 1189|  81.0k|        {
 1190|  81.0k|            Token token = ConstructToken(TokenKind::RParen);
 1191|       |
 1192|  81.0k|            ConsumeCurrentCharacter();
 1193|       |
 1194|  81.0k|            return token;
 1195|  81.0k|        }
 1196|       |
 1197|   829k|        else if (current_character == '.')
  ------------------
  |  Branch (1197:18): [True: 0, False: 829k]
  ------------------
 1198|      0|        {
 1199|      0|            Token token = ConstructToken(TokenKind::Dot);
 1200|       |
 1201|      0|            ConsumeCurrentCharacter();
 1202|       |
 1203|      0|            return token;
 1204|      0|        }
 1205|       |
 1206|   829k|        else if (current_character == '[')
  ------------------
  |  Branch (1206:18): [True: 297k, False: 532k]
  ------------------
 1207|   297k|        {
 1208|   297k|            Token token = ConstructToken(TokenKind::LSquare);
 1209|       |
 1210|   297k|            ConsumeCurrentCharacter();
 1211|       |
 1212|   297k|            return token;
 1213|   297k|        }
 1214|       |
 1215|   532k|        else if (current_character == ']')
  ------------------
  |  Branch (1215:18): [True: 6.86k, False: 525k]
  ------------------
 1216|  6.86k|        {
 1217|  6.86k|            Token token = ConstructToken(TokenKind::RSquare);
 1218|       |
 1219|  6.86k|            ConsumeCurrentCharacter();
 1220|       |
 1221|  6.86k|            return token;
 1222|  6.86k|        }
 1223|       |
 1224|       |        /* Identifier */
 1225|       |
 1226|   525k|        else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1226:18): [True: 322k, False: 203k]
  ------------------
 1227|   322k|        {
 1228|   322k|            iterator begin_of_token = m_Iterator;
 1229|   322k|            ConsumeCurrentCharacter();
 1230|       |
 1231|  1.06M|            while (!IsFinished())
  ------------------
  |  Branch (1231:20): [True: 1.06M, False: 2.01k]
  ------------------
 1232|  1.06M|            {
 1233|  1.06M|                current_character = *m_Iterator;
 1234|       |
 1235|  1.06M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1235:21): [True: 740k, False: 320k]
  ------------------
 1236|   740k|                {
 1237|   740k|                    ConsumeCurrentCharacter();
 1238|   740k|                    continue;
 1239|   740k|                }
 1240|       |
 1241|   320k|                break;
 1242|  1.06M|            }
 1243|       |
 1244|   322k|            return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1245|   322k|        }
 1246|       |
 1247|       |        /* Unknown/Unexpected character */
 1248|       |
 1249|   203k|        else
 1250|   203k|        {
 1251|       |            // TODO: Warn unexpected character encountered
 1252|   203k|            SkipCurrentCharacter();
 1253|   203k|        }
 1254|  2.13M|    }
 1255|       |
 1256|    513|    return {};
 1257|  1.81M|}
_ZN10OpenAutoIt5Lexer13ProcessStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEES6_:
 1260|  6.90k|{
 1261|  6.90k|    SourceFile fake_source{SourceFile::Type::Basic, file_name.data(), source};
 1262|       |
 1263|  6.90k|    return ProcessFile(&fake_source);
 1264|  6.90k|}
_ZN10OpenAutoIt5Lexer11ProcessFileEN3phi21not_null_observer_ptrIKNS_10SourceFileEEE:
 1267|  6.90k|{
 1268|  6.90k|    TokenStream stream;
 1269|       |
 1270|  6.90k|    m_SourceFile = source_file;
 1271|  6.90k|    m_Source     = m_SourceFile->m_Content;
 1272|  6.90k|    Reset();
 1273|       |
 1274|  1.82M|    while (!IsFinished())
  ------------------
  |  Branch (1274:12): [True: 1.81M, False: 6.90k]
  ------------------
 1275|  1.81M|    {
 1276|  1.81M|        phi::optional<Token> maybe_token = GetNextToken();
 1277|       |
 1278|  1.81M|        if (maybe_token.has_value())
  ------------------
  |  Branch (1278:13): [True: 1.81M, False: 513]
  ------------------
 1279|  1.81M|        {
 1280|  1.81M|            stream.emplace_back(maybe_token.value());
 1281|  1.81M|        }
 1282|  1.81M|    }
 1283|       |
 1284|  6.90k|    stream.finalize();
 1285|  6.90k|    return stream;
 1286|  6.90k|}
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1289|  3.40M|{
 1290|  3.40M|    ++m_Iterator;
 1291|  3.40M|}
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1294|  78.5k|{
 1295|  78.5k|    ++m_LineNumber;
 1296|  78.5k|    m_Column = 1u;
 1297|  78.5k|}
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1300|   323k|{
 1301|   323k|    ConsumeCurrentCharacter();
 1302|   323k|    ++m_Column;
 1303|   323k|}
_ZN10OpenAutoIt5Lexer4DiagEv:
 1306|  50.0k|{
 1307|  50.0k|    return DiagnosticBuilder{m_DiagnosticEngine};
 1308|  50.0k|}
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   37|  15.4k|    {
   38|  15.4k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  15.4k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  15.4k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 1.36k, False: 14.1k]
  ------------------
   42|  1.36k|        {
   43|  1.36k|            return itr->second;
   44|  1.36k|        }
   45|       |
   46|  14.1k|        return m_Default;
   47|  15.4k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  1.46M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   37|  18.1k|    {
   38|  18.1k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  18.1k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  18.1k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 9.58k, False: 8.59k]
  ------------------
   42|  9.58k|        {
   43|  9.58k|            return itr->second;
   44|  9.58k|        }
   45|       |
   46|  8.59k|        return m_Default;
   47|  18.1k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   133k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   37|   199k|    {
   38|   199k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   199k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   199k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 1.88k, False: 197k]
  ------------------
   42|  1.88k|        {
   43|  1.88k|            return itr->second;
   44|  1.88k|        }
   45|       |
   46|   197k|        return m_Default;
   47|   199k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  80.2M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   37|   322k|    {
   38|   322k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   322k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   322k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 123k, False: 199k]
  ------------------
   42|   123k|        {
   43|   123k|            return itr->second;
   44|   123k|        }
   45|       |
   46|   199k|        return m_Default;
   47|   322k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  11.7M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   37|   331k|    {
   38|   331k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   331k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   331k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 331k, False: 0]
  ------------------
   42|   331k|        {
   43|   331k|            return itr->second;
   44|   331k|        }
   45|       |
   46|      0|        return m_Default;
   47|   331k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  4.36M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  736|   147k|{
  737|   147k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (737:12): [True: 127k, False: 20.0k]
  |  Branch (737:40): [True: 2.22k, False: 17.8k]
  ------------------
  738|   147k|}
_Z17is_skip_characterc:
  716|  2.08M|{
  717|  2.08M|    switch (c)
  718|  2.08M|    {
  719|  63.6k|        case ' ':
  ------------------
  |  Branch (719:9): [True: 63.6k, False: 2.02M]
  ------------------
  720|  65.8k|        case '\v':
  ------------------
  |  Branch (720:9): [True: 2.13k, False: 2.08M]
  ------------------
  721|  68.1k|        case '\t':
  ------------------
  |  Branch (721:9): [True: 2.29k, False: 2.08M]
  ------------------
  722|  69.4k|        case '\b':
  ------------------
  |  Branch (722:9): [True: 1.29k, False: 2.08M]
  ------------------
  723|  70.1k|        case '\f':
  ------------------
  |  Branch (723:9): [True: 699, False: 2.08M]
  ------------------
  724|  70.1k|            return true;
  725|  2.01M|        default:
  ------------------
  |  Branch (725:9): [True: 2.01M, False: 70.1k]
  ------------------
  726|  2.01M|            return false;
  727|  2.08M|    }
  728|  2.08M|}
_Z24is_valid_identifier_charc:
  731|  2.07M|{
  732|  2.07M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (732:12): [True: 1.34M, False: 724k]
  |  Branch (732:40): [True: 3.65k, False: 720k]
  ------------------
  733|  2.07M|}
_Z20is_two_part_operatorc:
  741|  1.41M|{
  742|  1.41M|    switch (c)
  743|  1.41M|    {
  744|  86.5k|        case '=':
  ------------------
  |  Branch (744:9): [True: 86.5k, False: 1.32M]
  ------------------
  745|   100k|        case '+':
  ------------------
  |  Branch (745:9): [True: 13.5k, False: 1.40M]
  ------------------
  746|   110k|        case '-':
  ------------------
  |  Branch (746:9): [True: 10.0k, False: 1.40M]
  ------------------
  747|   118k|        case '*':
  ------------------
  |  Branch (747:9): [True: 8.09k, False: 1.40M]
  ------------------
  748|   123k|        case '/':
  ------------------
  |  Branch (748:9): [True: 4.94k, False: 1.40M]
  ------------------
  749|   128k|        case '&':
  ------------------
  |  Branch (749:9): [True: 4.94k, False: 1.40M]
  ------------------
  750|   150k|        case '<':
  ------------------
  |  Branch (750:9): [True: 22.3k, False: 1.39M]
  ------------------
  751|   163k|        case '>':
  ------------------
  |  Branch (751:9): [True: 13.1k, False: 1.40M]
  ------------------
  752|   163k|            return true;
  753|       |
  754|  1.25M|        default:
  ------------------
  |  Branch (754:9): [True: 1.25M, False: 163k]
  ------------------
  755|  1.25M|            return false;
  756|  1.41M|    }
  757|  1.41M|}
_Z18is_single_operatorc:
  760|  1.25M|{
  761|  1.25M|    switch (c)
  762|  1.25M|    {
  763|  1.10k|        case '^':
  ------------------
  |  Branch (763:9): [True: 1.10k, False: 1.25M]
  ------------------
  764|  79.1k|        case '?':
  ------------------
  |  Branch (764:9): [True: 78.0k, False: 1.17M]
  ------------------
  765|   167k|        case ':':
  ------------------
  |  Branch (765:9): [True: 88.8k, False: 1.16M]
  ------------------
  766|   167k|            return true;
  767|       |
  768|  1.08M|        default:
  ------------------
  |  Branch (768:9): [True: 1.08M, False: 167k]
  ------------------
  769|  1.08M|            return false;
  770|  1.25M|    }
  771|  1.25M|}

_ZN10OpenAutoIt6ParserC2EN3phi21not_null_observer_ptrINS_13SourceManagerEEENS2_INS_16DiagnosticEngineEEENS2_INS_5LexerEEE:
  132|  6.90k|{}
_ZN10OpenAutoIt6Parser16ParseTokenStreamEN3phi21not_null_observer_ptrINS_11ASTDocumentEEEONS_11TokenStreamENS2_IKNS_10SourceFileEEE:
  137|  6.90k|{
  138|  6.90k|    PushParsingContext(phi::move(source_file), phi::move(stream));
  139|       |
  140|  6.90k|    ParseDocument(phi::move(document));
  141|  6.90k|}
_ZN10OpenAutoIt6Parser11ParseStringEN3phi21not_null_observer_ptrINS_11ASTDocumentEEENS1_17basic_string_viewIcNSt3__111char_traitsIcEEEES9_:
  145|  6.90k|{
  146|  6.90k|    TokenStream stream = m_Lexer->ProcessString(file_name, source);
  147|       |
  148|  6.90k|    SourceFile fake_source_file{SourceFile::Type::Basic, std::string_view(file_name),
  149|  6.90k|                                phi::move(source)};
  150|  6.90k|    ParseTokenStream(phi::move(document), phi::move(stream), &fake_source_file);
  151|  6.90k|}
_ZN10OpenAutoIt6Parser13ParseDocumentEN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
  171|  6.90k|{
  172|  6.90k|    m_Document = phi::move(document);
  173|       |
  174|  6.90k|    m_IncludeOnceFiles.clear();
  175|       |
  176|   402k|    while (ShouldContinueParsing())
  ------------------
  |  Branch (176:12): [True: 395k, False: 6.90k]
  ------------------
  177|   395k|    {
  178|   395k|        if (!CurrentTokenStream().has_more())
  ------------------
  |  Branch (178:13): [True: 6.90k, False: 388k]
  ------------------
  179|  6.90k|        {
  180|  6.90k|            PopParsingContext();
  181|  6.90k|            continue;
  182|  6.90k|        }
  183|       |
  184|   388k|        const Token& token = CurrentToken();
  185|       |
  186|       |        // Parse global function definition
  187|   388k|        switch (token.GetTokenKind())
  188|   388k|        {
  189|  13.9k|            case TokenKind::KW_Func: {
  ------------------
  |  Branch (189:13): [True: 13.9k, False: 374k]
  ------------------
  190|  13.9k|                ConsumeCurrent();
  191|       |
  192|  13.9k|                auto function_definition = ParseFunctionDefinition();
  193|  13.9k|                if (!function_definition)
  ------------------
  |  Branch (193:21): [True: 11.9k, False: 2.06k]
  ------------------
  194|  11.9k|                {
  195|  11.9k|                    err("ERR: Failed to parse function definition!\n");
  196|  11.9k|                    continue;
  197|  11.9k|                }
  198|       |
  199|  2.06k|                AppendFunctionToDocument(function_definition.release_not_null());
  200|  2.06k|                break;
  201|  13.9k|            }
  202|       |
  203|    693|            case TokenKind::Comment:
  ------------------
  |  Branch (203:13): [True: 693, False: 387k]
  ------------------
  204|  1.15k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (204:13): [True: 464, False: 387k]
  ------------------
  205|  1.63k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (205:13): [True: 478, False: 387k]
  ------------------
  206|  22.8k|            case TokenKind::NewLine: {
  ------------------
  |  Branch (206:13): [True: 21.2k, False: 367k]
  ------------------
  207|       |                // Simply ignore and consume newlines and comments
  208|  22.8k|                ConsumeCurrent();
  209|  22.8k|                break;
  210|  1.63k|            }
  211|  11.0k|            case TokenKind::NotAToken: {
  ------------------
  |  Branch (211:13): [True: 11.0k, False: 377k]
  ------------------
  212|  11.0k|                err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  213|  11.0k|                                std::string_view(token.GetText())));
  214|  11.0k|                ConsumeCurrent();
  215|  11.0k|                break;
  216|  1.63k|            }
  217|       |
  218|  4.14k|            case TokenKind::PP_Include: {
  ------------------
  |  Branch (218:13): [True: 4.14k, False: 384k]
  ------------------
  219|  4.14k|                ConsumeCurrent();
  220|       |
  221|  4.14k|                ParseIncludeDirective();
  222|       |
  223|  4.14k|                break;
  224|  1.63k|            }
  225|       |
  226|  1.00k|            case TokenKind::PP_IncludeOnce: {
  ------------------
  |  Branch (226:13): [True: 1.00k, False: 387k]
  ------------------
  227|  1.00k|                ConsumeCurrent();
  228|       |
  229|  1.00k|                m_IncludeOnceFiles.emplace(CurrentSourceFile().get());
  230|       |
  231|  1.00k|                RequireNewLine();
  232|       |
  233|  1.00k|                break;
  234|  1.63k|            }
  235|       |
  236|   335k|            default: {
  ------------------
  |  Branch (236:13): [True: 335k, False: 53.0k]
  ------------------
  237|   335k|                auto statement = ParseStatement();
  238|   335k|                if (!statement)
  ------------------
  |  Branch (238:21): [True: 252k, False: 82.8k]
  ------------------
  239|   252k|                {
  240|       |                    // TODO: Proper error reporting
  241|   252k|                    err("ERR: Failed to parse statement!\n");
  242|       |
  243|   252k|                    if (HasMoreTokens())
  ------------------
  |  Branch (243:25): [True: 248k, False: 3.61k]
  ------------------
  244|   248k|                    {
  245|       |                        // Swallow the bad token
  246|   248k|                        ConsumeCurrent();
  247|   248k|                    }
  248|   252k|                    continue;
  249|   252k|                }
  250|       |
  251|  82.8k|                AppendStatementToDocument(statement.release_not_null());
  252|       |
  253|  82.8k|                RequireNewLine();
  254|  82.8k|                break;
  255|   335k|            }
  256|   388k|        }
  257|   388k|    }
  258|  6.90k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamE:
  262|  6.90k|{
  263|  6.90k|    PushParsingContext(phi::move(source_file), phi::move(token_stream), SourceLocation::Invalid());
  264|  6.90k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamENS_14SourceLocationE:
  268|  6.90k|{
  269|  6.90k|    ParsingContext context{.source_file   = phi::move(source_file),
  270|  6.90k|                           .token_stream  = phi::move(token_stream),
  271|  6.90k|                           .included_from = phi::move(included_from)};
  272|       |
  273|  6.90k|    m_ParsingContextStack.emplace(phi::move(context));
  274|  6.90k|    m_SourceManager->SetLocalSearchPath(source_file->m_FilePath.parent_path());
  275|  6.90k|}
_ZN10OpenAutoIt6Parser17PopParsingContextEv:
  278|  6.90k|{
  279|  6.90k|    m_ParsingContextStack.pop();
  280|  6.90k|    if (!m_ParsingContextStack.empty())
  ------------------
  |  Branch (280:9): [True: 0, False: 6.90k]
  ------------------
  281|      0|    {
  282|      0|        m_SourceManager->SetLocalSearchPath(
  283|      0|                m_ParsingContextStack.top().source_file->m_FilePath.parent_path());
  284|      0|    }
  285|  6.90k|    else
  286|  6.90k|    {
  287|  6.90k|        m_SourceManager->SetLocalSearchPath("");
  288|  6.90k|    }
  289|  6.90k|}
_ZN10OpenAutoIt6Parser21CurrentParsingContextEv:
  292|  1.00k|{
  293|  1.00k|    PHI_ASSERT(!m_ParsingContextStack.empty());
  294|       |
  295|  1.00k|    return m_ParsingContextStack.top();
  296|  1.00k|}
_ZN10OpenAutoIt6Parser17CurrentSourceFileEv:
  299|  1.00k|{
  300|  1.00k|    return CurrentParsingContext().source_file.not_null();
  301|  1.00k|}
_ZN10OpenAutoIt6Parser18CurrentTokenStreamEv:
  304|  2.21M|{
  305|  2.21M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  306|       |
  307|  2.21M|    return m_ParsingContextStack.top().token_stream;
  308|  2.21M|}
_ZNK10OpenAutoIt6Parser18CurrentTokenStreamEv:
  311|  12.6M|{
  312|  12.6M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  313|       |
  314|  12.6M|    return m_ParsingContextStack.top().token_stream;
  315|  12.6M|}
_ZNK10OpenAutoIt6Parser13HasMoreTokensEv:
  318|  4.10M|{
  319|  4.10M|    return CurrentTokenStream().has_more();
  320|  4.10M|}
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  323|  4.23M|{
  324|  4.23M|    PHI_ASSERT(CurrentTokenStream().has_more());
  325|       |
  326|  4.23M|    return CurrentTokenStream().look_ahead();
  327|  4.23M|}
_ZNK10OpenAutoIt6Parser13PreviousTokenEv:
  330|  64.4k|{
  331|  64.4k|    return CurrentTokenStream().look_behind();
  332|  64.4k|}
_ZNK10OpenAutoIt6Parser21ShouldContinueParsingEv:
  335|   402k|{
  336|   402k|    const phi::boolean stack_empty          = m_ParsingContextStack.empty();
  337|   402k|    const phi::boolean fatal_error_occurred = m_DiagnosticEngine->HasFatalErrorOccurred();
  338|   402k|    const phi::boolean error_limit_reached =
  339|   402k|            (m_DiagnosticEngine->GetErrorLimit() == 0u ?
  ------------------
  |  Branch (339:14): [True: 402k, False: 0]
  ------------------
  340|   402k|                     false :
  341|   402k|                     m_DiagnosticEngine->GetNumberOfError() >= m_DiagnosticEngine->GetErrorLimit());
  342|       |
  343|   402k|    return !stack_empty && !fatal_error_occurred && !error_limit_reached;
  ------------------
  |  Branch (343:12): [True: 395k, False: 6.90k]
  |  Branch (343:28): [True: 395k, False: 0]
  |  Branch (343:53): [True: 395k, False: 0]
  ------------------
  344|   402k|}
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  347|  1.81M|{
  348|  1.81M|    CurrentTokenStream().consume();
  349|  1.81M|}
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  352|  83.8k|{
  353|  84.7k|    while (HasMoreTokens())
  ------------------
  |  Branch (353:12): [True: 83.9k, False: 757]
  ------------------
  354|  83.9k|    {
  355|  83.9k|        switch (CurrentToken().GetTokenKind())
  356|  83.9k|        {
  357|    409|            case TokenKind::Comment:
  ------------------
  |  Branch (357:13): [True: 409, False: 83.5k]
  ------------------
  358|    612|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (358:13): [True: 203, False: 83.7k]
  ------------------
  359|    869|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (359:13): [True: 257, False: 83.6k]
  ------------------
  360|    869|                ConsumeCurrent();
  361|    869|                break;
  362|       |
  363|  83.0k|            default:
  ------------------
  |  Branch (363:13): [True: 83.0k, False: 869]
  ------------------
  364|  83.0k|                return;
  365|  83.9k|        }
  366|  83.9k|    }
  367|  83.8k|}
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  370|   424k|{
  371|   444k|    while (HasMoreTokens())
  ------------------
  |  Branch (371:12): [True: 444k, False: 278]
  ------------------
  372|   444k|    {
  373|   444k|        switch (CurrentToken().GetTokenKind())
  374|   444k|        {
  375|    570|            case TokenKind::Comment:
  ------------------
  |  Branch (375:13): [True: 570, False: 443k]
  ------------------
  376|    892|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (376:13): [True: 322, False: 444k]
  ------------------
  377|  1.21k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (377:13): [True: 327, False: 443k]
  ------------------
  378|  19.6k|            case TokenKind::NewLine:
  ------------------
  |  Branch (378:13): [True: 18.3k, False: 425k]
  ------------------
  379|  19.6k|                ConsumeCurrent();
  380|  19.6k|                break;
  381|       |
  382|   424k|            default:
  ------------------
  |  Branch (382:13): [True: 424k, False: 19.6k]
  ------------------
  383|   424k|                return;
  384|   444k|        }
  385|   444k|    }
  386|   424k|}
_ZN10OpenAutoIt6Parser14RequireNewLineEv:
  389|  83.8k|{
  390|  83.8k|    ConsumeComments();
  391|       |
  392|  83.8k|    if (!HasMoreTokens())
  ------------------
  |  Branch (392:9): [True: 757, False: 83.0k]
  ------------------
  393|    757|    {
  394|    757|        return;
  395|    757|    }
  396|       |
  397|  83.0k|    const Token& token = CurrentToken();
  398|       |
  399|  83.0k|    if (token.GetTokenKind() != TokenKind::NewLine)
  ------------------
  |  Branch (399:9): [True: 62.6k, False: 20.4k]
  ------------------
  400|  62.6k|    {
  401|  62.6k|        Diag().Error(DiagnosticId::Expected, PreviousToken().GetBeginLocation(), "new line");
  402|  62.6k|    }
  403|       |
  404|  83.0k|    ConsumeCurrent();
  405|  83.0k|}
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  408|   445k|{
  409|       |    // Do we even have more tokens?
  410|   445k|    if (!HasMoreTokens())
  ------------------
  |  Branch (410:9): [True: 1.06k, False: 444k]
  ------------------
  411|  1.06k|    {
  412|  1.06k|        return {};
  413|  1.06k|    }
  414|       |
  415|   444k|    const Token& token = CurrentToken();
  416|       |
  417|       |    // Is this the correct token kind
  418|   444k|    if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (418:9): [True: 27.8k, False: 416k]
  ------------------
  419|  27.8k|    {
  420|  27.8k|        return {};
  421|  27.8k|    }
  422|       |
  423|   416k|    ConsumeCurrent();
  424|   416k|    return token;
  425|   444k|}
_ZN10OpenAutoIt6Parser4DiagEv:
  441|  68.4k|{
  442|  68.4k|    return {m_DiagnosticEngine};
  443|  68.4k|}
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  446|  13.9k|{
  447|       |    // Next we MUST parse the function name
  448|  13.9k|    auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  449|  13.9k|    if (!function_name_token)
  ------------------
  |  Branch (449:9): [True: 1.19k, False: 12.7k]
  ------------------
  450|  1.19k|    {
  451|  1.19k|        err("Expected identifier for function name");
  452|  1.19k|        return {};
  453|  1.19k|    }
  454|       |
  455|  12.7k|    auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  456|  12.7k|    function_definition->m_FunctionName = function_name_token->GetText();
  457|       |
  458|       |    // Next we MUST parse an opening parenthesis (LParen)
  459|  12.7k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (459:9): [True: 846, False: 11.9k]
  ------------------
  460|    846|    {
  461|    846|        err("Expected opening parenthesis");
  462|    846|        return {};
  463|    846|    }
  464|       |
  465|       |    // Next we parse the function parameter declarations until right parenthesis (RParen)
  466|  16.0k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (466:12): [True: 15.9k, False: 51]
  |  Branch (466:12): [True: 10.1k, False: 5.85k]
  |  Branch (466:31): [True: 10.1k, False: 5.80k]
  ------------------
  467|  10.1k|    {
  468|  10.1k|        phi::optional<FunctionParameter> function_parameter_optional =
  469|  10.1k|                ParseFunctionParameterDefinition();
  470|  10.1k|        if (!function_parameter_optional)
  ------------------
  |  Branch (470:13): [True: 6.08k, False: 4.07k]
  ------------------
  471|  6.08k|        {
  472|       |            // TODO: Proper error reporting
  473|  6.08k|            return {};
  474|  6.08k|        }
  475|  4.07k|        FunctionParameter& function_parameter = function_parameter_optional.value();
  476|       |
  477|  4.07k|        function_definition->m_Parameters.emplace_back(phi::move(function_parameter));
  478|       |
  479|       |        // Parse comma
  480|  4.07k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (480:13): [True: 4.07k, False: 0]
  |  Branch (480:13): [True: 1.99k, False: 2.07k]
  |  Branch (480:32): [True: 1.99k, False: 2.07k]
  ------------------
  481|  1.99k|        {
  482|  1.99k|            ConsumeCurrent();
  483|  1.99k|        }
  484|  4.07k|    }
  485|       |
  486|       |    // Next we MUST parse a right parenthesis (RParen)
  487|  5.85k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (487:9): [True: 51, False: 5.80k]
  ------------------
  488|     51|    {
  489|     51|        err("ERR: Expected ')'");
  490|     51|        return {};
  491|     51|    }
  492|       |
  493|       |    // Next we MUST parse a new line
  494|  5.80k|    if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (494:9): [True: 2.63k, False: 3.17k]
  ------------------
  495|  2.63k|    {
  496|  2.63k|        err("ERR: Missing newline!");
  497|  2.63k|        return {};
  498|  2.63k|    }
  499|       |
  500|       |    // Next parse Statements until EndFunc
  501|  5.39k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (501:12): [True: 5.36k, False: 30]
  |  Branch (501:12): [True: 3.30k, False: 2.09k]
  |  Branch (501:31): [True: 3.30k, False: 2.06k]
  ------------------
  502|  3.30k|    {
  503|  3.30k|        auto statement = ParseStatement();
  504|  3.30k|        if (!statement)
  ------------------
  |  Branch (504:13): [True: 1.07k, False: 2.22k]
  ------------------
  505|  1.07k|        {
  506|  1.07k|            err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  507|  1.07k|                            std::string_view(function_definition->m_FunctionName)));
  508|       |            // TODO: Report proper error
  509|  1.07k|            return {};
  510|  1.07k|        }
  511|       |
  512|  2.22k|        function_definition->m_FunctionBody.emplace_back(phi::move(statement.release_not_null()));
  513|       |
  514|  2.22k|        ConsumeNewLineAndComments();
  515|  2.22k|    }
  516|       |
  517|       |    // Next we MUST parse EndFunc
  518|  2.09k|    if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (518:9): [True: 30, False: 2.06k]
  ------------------
  519|     30|    {
  520|       |        // TODO: Proper error
  521|     30|        return {};
  522|     30|    }
  523|       |
  524|  2.06k|    return phi::move(function_definition);
  525|  2.09k|}
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  528|  10.1k|{
  529|       |    // TODO: This entire function requires more error checks
  530|  10.1k|    FunctionParameter parameter;
  531|       |
  532|  24.3k|    while (HasMoreTokens())
  ------------------
  |  Branch (532:12): [True: 24.2k, False: 67]
  ------------------
  533|  24.2k|    {
  534|  24.2k|        const Token& token = CurrentToken();
  535|       |
  536|  24.2k|        switch (token.GetTokenKind())
  537|  24.2k|        {
  538|  7.97k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (538:13): [True: 7.97k, False: 16.2k]
  ------------------
  539|  7.97k|                parameter.name = token.GetText().substring_view(1u);
  540|  7.97k|                ConsumeCurrent();
  541|  7.97k|                break;
  542|      0|            }
  543|    322|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (543:13): [True: 322, False: 23.9k]
  ------------------
  544|    322|                parameter.as_const = true;
  545|    322|                ConsumeCurrent();
  546|    322|                break;
  547|      0|            }
  548|     66|            case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (548:13): [True: 66, False: 24.1k]
  ------------------
  549|     66|                parameter.by_ref = true;
  550|     66|                ConsumeCurrent();
  551|     66|                break;
  552|      0|            }
  553|  6.66k|            case TokenKind::OP_Equals: {
  ------------------
  |  Branch (553:13): [True: 6.66k, False: 17.5k]
  ------------------
  554|  6.66k|                if (parameter.name.is_empty())
  ------------------
  |  Branch (554:21): [True: 201, False: 6.46k]
  ------------------
  555|    201|                {
  556|       |                    // TODO: PROPER ERROR
  557|    201|                    return {};
  558|    201|                }
  559|       |
  560|       |                // Consume the '='
  561|  6.46k|                ConsumeCurrent();
  562|       |
  563|       |                // Default value is an expression
  564|  6.46k|                auto default_expression = ParseExpression();
  565|  6.46k|                if (!default_expression)
  ------------------
  |  Branch (565:21): [True: 678, False: 5.78k]
  ------------------
  566|    678|                {
  567|       |                    // TODO: Report error
  568|    678|                    return {};
  569|    678|                }
  570|       |
  571|       |                // For default values we artificially create a variable assignment
  572|  5.78k|                auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  573|       |
  574|  5.78k|                default_var_assignment->m_Scope                  = VariableScope::Auto;
  575|  5.78k|                default_var_assignment->m_VariableName           = parameter.name;
  576|  5.78k|                default_var_assignment->m_InitialValueExpression = phi::move(default_expression);
  577|       |
  578|  5.78k|                parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  579|  5.78k|                break;
  580|  6.46k|            }
  581|  1.99k|            case TokenKind::Comma:
  ------------------
  |  Branch (581:13): [True: 1.99k, False: 22.2k]
  ------------------
  582|  4.07k|            case TokenKind::RParen: {
  ------------------
  |  Branch (582:13): [True: 2.07k, False: 22.1k]
  ------------------
  583|  4.07k|                return phi::move(parameter);
  584|  1.99k|            }
  585|  5.13k|            default: {
  ------------------
  |  Branch (585:13): [True: 5.13k, False: 19.1k]
  ------------------
  586|       |                // TODO: Report error
  587|  5.13k|                return {};
  588|  1.99k|            }
  589|  24.2k|        }
  590|  24.2k|    }
  591|       |
  592|       |    // TODO: Report error unexpected EOF
  593|     67|    return {};
  594|  10.1k|}
_ZN10OpenAutoIt6Parser21ParseIncludeDirectiveEv:
  597|  4.14k|{
  598|  4.14k|    if (!HasMoreTokens())
  ------------------
  |  Branch (598:9): [True: 8, False: 4.13k]
  ------------------
  599|      8|    {
  600|      8|        Diag().Error(DiagnosticId::UnexpectedEndOfFile, PreviousToken().GetBeginLocation(),
  601|      8|                     "include directive");
  602|      8|        return;
  603|      8|    }
  604|       |
  605|  4.13k|    const Token&     token = CurrentToken();
  606|  4.13k|    phi::string_view file_name;
  607|  4.13k|    IncludeType      include_type = IncludeType::Local;
  608|       |
  609|       |    // Local include like this '#include "foo.au3"'
  610|  4.13k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (610:9): [True: 937, False: 3.20k]
  ------------------
  611|    937|    {
  612|    937|        ConsumeCurrent();
  613|       |
  614|       |        // Get the file name
  615|    937|        file_name = token.GetText().substring_view(1u, token.GetText().length() - 2u);
  616|    937|    }
  617|       |    // Global include like this '#include <foo.au3>'
  618|  3.20k|    else if (token.GetTokenKind() == TokenKind::OP_LessThan)
  ------------------
  |  Branch (618:14): [True: 2.71k, False: 485]
  ------------------
  619|  2.71k|    {
  620|       |        // FIXME: This is not really a nice way, but we essentially start from after the opening '<' and include everything upto the closing '>'
  621|  2.71k|        ConsumeCurrent();
  622|       |
  623|  2.71k|        include_type = IncludeType::Global;
  624|  2.71k|        file_name    = token.GetText().remove_prefix(1u);
  625|       |
  626|  2.71k|        phi::boolean found_end{false};
  627|  2.71k|        phi::boolean continue_parsing{true};
  628|  10.1k|        while (HasMoreTokens() && continue_parsing)
  ------------------
  |  Branch (628:16): [True: 10.1k, False: 23]
  |  Branch (628:16): [True: 7.46k, False: 2.71k]
  |  Branch (628:35): [True: 7.46k, False: 2.69k]
  ------------------
  629|  7.46k|        {
  630|  7.46k|            const Token& end_token = CurrentToken();
  631|       |
  632|  7.46k|            if (end_token.GetTokenKind() == TokenKind::OP_GreaterThan)
  ------------------
  |  Branch (632:17): [True: 984, False: 6.48k]
  ------------------
  633|    984|            {
  634|    984|                found_end        = true;
  635|    984|                continue_parsing = false;
  636|    984|                const phi::usize difference =
  637|    984|                        phi::narrow_cast<phi::usize>(end_token.GetText().data() - file_name.data());
  638|    984|                file_name.add_postfix(difference);
  639|    984|            }
  640|  6.48k|            else if (end_token.GetTokenKind() == TokenKind::NewLine)
  ------------------
  |  Branch (640:22): [True: 1.71k, False: 4.76k]
  ------------------
  641|  1.71k|            {
  642|       |                // Stop once we hit a newline
  643|  1.71k|                continue_parsing = false;
  644|  1.71k|            }
  645|       |
  646|  7.46k|            ConsumeCurrent();
  647|  7.46k|        }
  648|       |
  649|  2.71k|        if (!found_end)
  ------------------
  |  Branch (649:13): [True: 1.73k, False: 984]
  ------------------
  650|  1.73k|        {
  651|  1.73k|            Diag().Error(DiagnosticId::Expected, PreviousToken().GetEndLocation(), "'>'")
  652|  1.73k|                    .Note(token.GetBeginLocation(), "to match this '<'");
  653|  1.73k|            return;
  654|  1.73k|        }
  655|  2.71k|    }
  656|    485|    else
  657|    485|    {
  658|    485|        Diag().Error(DiagnosticId::Expected, token.GetEndLocation(), "\"Filename\" or <Filename>");
  659|    485|        return;
  660|    485|    }
  661|       |
  662|       |    // Limit include nesting
  663|  1.92k|    if (m_ParsingContextStack.size() >= MaxNumberOfIncludeNesting)
  ------------------
  |  Branch (663:9): [True: 0, False: 1.92k]
  ------------------
  664|      0|    {
  665|      0|        Diag().Error(DiagnosticId::IncludeNestingTooDeeply, token.GetBeginLocation());
  666|      0|        return;
  667|      0|    }
  668|       |
  669|       |    // Emit error for empty file names
  670|  1.92k|    if (file_name.is_empty())
  ------------------
  |  Branch (670:9): [True: 899, False: 1.02k]
  ------------------
  671|    899|    {
  672|    899|        Diag().Error(DiagnosticId::EmptyFilename, token.GetBeginLocation());
  673|    899|        return;
  674|    899|    }
  675|       |
  676|       |    // Emit error if the file name is too long
  677|  1.02k|    if (file_name.length() > 255u)
  ------------------
  |  Branch (677:9): [True: 38, False: 984]
  ------------------
  678|     38|    {
  679|     38|        Diag().Error(DiagnosticId::FileNameTooLong, token.GetBeginLocation(),
  680|     38|                     std::string_view(file_name));
  681|     38|        return;
  682|     38|    }
  683|       |
  684|       |    // Load the file from the SourceManager
  685|    984|    phi::observer_ptr<const SourceFile> include_file =
  686|    984|            m_SourceManager->LoadFile(std::string_view(file_name), include_type);
  687|    984|    if (!include_file)
  ------------------
  |  Branch (687:9): [True: 984, False: 0]
  ------------------
  688|    984|    {
  689|    984|        Diag().Error(DiagnosticId::FileNotFound, token.GetBeginLocation(),
  690|    984|                     std::string_view(file_name));
  691|    984|        return;
  692|    984|    }
  693|       |
  694|      0|    RequireNewLine();
  695|       |
  696|       |    // Append the file
  697|      0|    AppendSourceFileToDocument(include_file.not_null(), token.GetBeginLocation());
  698|      0|}
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  701|   374k|{
  702|   374k|    ConsumeNewLineAndComments();
  703|       |
  704|   374k|    if (!HasMoreTokens())
  ------------------
  |  Branch (704:9): [True: 24, False: 374k]
  ------------------
  705|     24|    {
  706|       |        // TODO: Report proper error
  707|     24|        return {};
  708|     24|    }
  709|       |
  710|   374k|    phi::scope_ptr<ASTStatement> ret_statement;
  711|       |
  712|       |    // Loop until we parse something or there is nothing left to parse
  713|   374k|    const Token& token = CurrentToken();
  714|   374k|    switch (token.GetTokenKind())
  715|   374k|    {
  716|       |        // Variable assignment
  717|  2.69k|        case TokenKind::KW_Const:
  ------------------
  |  Branch (717:9): [True: 2.69k, False: 372k]
  ------------------
  718|  4.36k|        case TokenKind::KW_Local:
  ------------------
  |  Branch (718:9): [True: 1.66k, False: 373k]
  ------------------
  719|  6.64k|        case TokenKind::KW_Global:
  ------------------
  |  Branch (719:9): [True: 2.28k, False: 372k]
  ------------------
  720|  9.45k|        case TokenKind::KW_Static:
  ------------------
  |  Branch (720:9): [True: 2.80k, False: 372k]
  ------------------
  721|  81.6k|        case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (721:9): [True: 72.1k, False: 302k]
  ------------------
  722|  81.6k|            ret_statement = ParseVariableAssignment();
  723|  81.6k|            if (!ret_statement)
  ------------------
  |  Branch (723:17): [True: 20.3k, False: 61.3k]
  ------------------
  724|  20.3k|            {
  725|  20.3k|                err("ERR: Failed to parse variable assignment!\n");
  726|  20.3k|                return {};
  727|  20.3k|            }
  728|  61.3k|            break;
  729|  81.6k|        }
  730|       |
  731|       |        // If Statement
  732|  61.3k|        case TokenKind::KW_If: {
  ------------------
  |  Branch (732:9): [True: 15.2k, False: 359k]
  ------------------
  733|  15.2k|            ret_statement = ParseIfStatement();
  734|  15.2k|            if (!ret_statement)
  ------------------
  |  Branch (734:17): [True: 13.9k, False: 1.22k]
  ------------------
  735|  13.9k|            {
  736|  13.9k|                err("ERR: Failed to parse if statement!\n");
  737|  13.9k|                return {};
  738|  13.9k|            }
  739|  1.22k|            break;
  740|  15.2k|        }
  741|       |
  742|       |        // While statement
  743|  11.0k|        case TokenKind::KW_While: {
  ------------------
  |  Branch (743:9): [True: 11.0k, False: 363k]
  ------------------
  744|  11.0k|            ret_statement = ParseWhileStatement();
  745|  11.0k|            if (!ret_statement)
  ------------------
  |  Branch (745:17): [True: 6.46k, False: 4.54k]
  ------------------
  746|  6.46k|            {
  747|  6.46k|                err("ERR: Failed to parse while statement!\n");
  748|  6.46k|                return {};
  749|  6.46k|            }
  750|  4.54k|            break;
  751|  11.0k|        }
  752|       |
  753|       |        // Exit statement
  754|  4.54k|        case TokenKind::KW_Exit: {
  ------------------
  |  Branch (754:9): [True: 4.27k, False: 370k]
  ------------------
  755|  4.27k|            ret_statement = ParseExitStatement();
  756|  4.27k|            if (!ret_statement)
  ------------------
  |  Branch (756:17): [True: 0, False: 4.27k]
  ------------------
  757|      0|            {
  758|      0|                err("ERR: Failed to parse exit statement!\n");
  759|      0|                return {};
  760|      0|            }
  761|  4.27k|            break;
  762|  4.27k|        }
  763|       |
  764|   262k|        default: {
  ------------------
  |  Branch (764:9): [True: 262k, False: 112k]
  ------------------
  765|       |            // Try to parse ExpressionStatement
  766|   262k|            ret_statement = ParseExpressionStatement();
  767|   262k|            if (!ret_statement)
  ------------------
  |  Branch (767:17): [True: 226k, False: 36.6k]
  ------------------
  768|   226k|            {
  769|   226k|                err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  770|   226k|                                enum_name(token.GetTokenKind())));
  771|   226k|                return {};
  772|   226k|            }
  773|  36.6k|            break;
  774|   262k|        }
  775|   374k|    }
  776|       |
  777|   108k|    return phi::move(ret_statement);
  778|   374k|}
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  781|  11.0k|{
  782|  11.0k|    const Token& token = CurrentToken();
  783|  11.0k|    if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (783:9): [True: 0, False: 11.0k]
  ------------------
  784|      0|    {
  785|       |        // TODO: Proper error
  786|      0|        return {};
  787|      0|    }
  788|  11.0k|    ConsumeCurrent();
  789|       |
  790|       |    // Next we MUST parse an Expression
  791|  11.0k|    auto while_condition_expression = ParseExpression();
  792|  11.0k|    if (!while_condition_expression)
  ------------------
  |  Branch (792:9): [True: 914, False: 10.1k]
  ------------------
  793|    914|    {
  794|       |        // TODO: Proper error
  795|    914|        return {};
  796|    914|    }
  797|       |
  798|  10.1k|    auto while_statement =
  799|  10.1k|            phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  800|       |
  801|       |    // Parse statements until KW_WEnd
  802|  22.9k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (802:12): [True: 22.8k, False: 97]
  |  Branch (802:12): [True: 18.2k, False: 4.64k]
  |  Branch (802:31): [True: 18.2k, False: 4.54k]
  ------------------
  803|  18.2k|    {
  804|  18.2k|        ConsumeNewLineAndComments();
  805|       |
  806|       |        // Parse statements
  807|  18.2k|        auto statement = ParseStatement();
  808|  18.2k|        if (!statement)
  ------------------
  |  Branch (808:13): [True: 5.45k, False: 12.8k]
  ------------------
  809|  5.45k|        {
  810|       |            // TODO: Propeer error
  811|  5.45k|            return {};
  812|  5.45k|        }
  813|       |
  814|  12.8k|        while_statement->m_Statements.emplace_back(statement.release_not_null());
  815|  12.8k|    }
  816|       |
  817|  4.64k|    if (!HasMoreTokens())
  ------------------
  |  Branch (817:9): [True: 97, False: 4.54k]
  ------------------
  818|     97|    {
  819|       |        // TODO: Proper error
  820|     97|        return {};
  821|     97|    }
  822|       |
  823|       |    // Next token MUST be KW_Wend
  824|  4.54k|    const Token& wend_token = CurrentToken();
  825|  4.54k|    if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (825:9): [True: 0, False: 4.54k]
  ------------------
  826|      0|    {
  827|       |        // TODO: Proper error
  828|      0|        return {};
  829|      0|    }
  830|  4.54k|    ConsumeCurrent();
  831|       |
  832|  4.54k|    return phi::move(while_statement);
  833|  4.54k|}
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  836|  81.6k|{
  837|  81.6k|    auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  838|       |
  839|  81.6k|    phi::boolean parsed_identifier = false;
  840|       |    // Parse all specifiers until we hit a VariableIdentifier
  841|   163k|    while (HasMoreTokens() && !parsed_identifier)
  ------------------
  |  Branch (841:12): [True: 162k, False: 529]
  |  Branch (841:12): [True: 91.0k, False: 72.2k]
  |  Branch (841:31): [True: 91.0k, False: 71.7k]
  ------------------
  842|  91.0k|    {
  843|  91.0k|        const Token& current_token = CurrentToken();
  844|  91.0k|        ConsumeCurrent();
  845|       |
  846|  91.0k|        switch (current_token.GetTokenKind())
  847|  91.0k|        {
  848|  3.48k|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (848:13): [True: 3.48k, False: 87.5k]
  ------------------
  849|  3.48k|                if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (849:21): [True: 785, False: 2.69k]
  ------------------
  850|    785|                {
  851|       |                    // TODO: Error more than one const specifier
  852|    785|                    err("ERR: More than one const specifier given\n");
  853|    785|                    return {};
  854|    785|                }
  855|  2.69k|                variable_declaration->m_IsConst = true;
  856|  2.69k|                break;
  857|  3.48k|            }
  858|       |
  859|  3.00k|            case TokenKind::KW_Static: {
  ------------------
  |  Branch (859:13): [True: 3.00k, False: 88.0k]
  ------------------
  860|  3.00k|                if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (860:21): [True: 196, False: 2.80k]
  ------------------
  861|    196|                {
  862|       |                    // TODO: Error more than one static specifier
  863|    196|                    err("ERR: More than one static specifier given\n");
  864|    196|                    return {};
  865|    196|                }
  866|  2.80k|                variable_declaration->m_IsStatic = true;
  867|  2.80k|                break;
  868|  3.00k|            }
  869|       |
  870|  2.77k|            case TokenKind::KW_Global: {
  ------------------
  |  Branch (870:13): [True: 2.77k, False: 88.2k]
  ------------------
  871|  2.77k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (871:21): [True: 488, False: 2.28k]
  ------------------
  872|    488|                {
  873|       |                    // TODO: Error more than one scope specifier
  874|    488|                    err("ERR: More than one scope specifier given\n");
  875|    488|                    return {};
  876|    488|                }
  877|  2.28k|                variable_declaration->m_Scope = VariableScope::Global;
  878|  2.28k|                break;
  879|  2.77k|            }
  880|       |
  881|  2.22k|            case TokenKind::KW_Local: {
  ------------------
  |  Branch (881:13): [True: 2.22k, False: 88.7k]
  ------------------
  882|  2.22k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (882:21): [True: 558, False: 1.66k]
  ------------------
  883|    558|                {
  884|       |                    // TODO: Error more than one scope specifier
  885|    558|                    err("ERR: More than one scope specifier given\n");
  886|    558|                    return {};
  887|    558|                }
  888|  1.66k|                variable_declaration->m_Scope = VariableScope::Local;
  889|  1.66k|                break;
  890|  2.22k|            }
  891|       |
  892|  72.1k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (892:13): [True: 72.1k, False: 18.8k]
  ------------------
  893|       |                // VariableIdentifiers begin with a '$'
  894|       |                // Like: $MyVariable
  895|       |                // So for the name we ignore the very first character
  896|  72.1k|                PHI_ASSERT(current_token.GetText().length() > 1u);
  897|  72.1k|                variable_declaration->m_VariableName = current_token.GetText().substring_view(1u);
  898|       |
  899|  72.1k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  900|  72.1k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  901|       |
  902|  72.1k|                parsed_identifier = true;
  903|  72.1k|                break;
  904|  2.22k|            }
  905|       |
  906|  7.33k|            default: {
  ------------------
  |  Branch (906:13): [True: 7.33k, False: 83.6k]
  ------------------
  907|       |                // TODO: Error unexpected token
  908|  7.33k|                return {};
  909|  2.22k|            }
  910|  91.0k|        }
  911|  91.0k|    }
  912|       |
  913|  72.2k|    if (!parsed_identifier)
  ------------------
  |  Branch (913:9): [True: 88, False: 72.1k]
  ------------------
  914|     88|    {
  915|       |        // TODO: Error variable declaration ends before the VariableIdentifier
  916|     88|        err("ERR: Missing variable identifier!\n");
  917|     88|        return {};
  918|     88|    }
  919|       |
  920|       |    // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  921|  72.1k|    if (!HasMoreTokens())
  ------------------
  |  Branch (921:9): [True: 441, False: 71.7k]
  ------------------
  922|    441|    {
  923|    441|        return variable_declaration;
  924|    441|    }
  925|       |
  926|       |    // Check for equals
  927|  71.7k|    const Token& next_token = CurrentToken();
  928|       |
  929|  71.7k|    if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (929:9): [True: 21.7k, False: 50.0k]
  ------------------
  930|  21.7k|    {
  931|  21.7k|        ConsumeCurrent();
  932|       |
  933|       |        // Now me MUST parse an expression
  934|  21.7k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
  935|  21.7k|        if (!expression)
  ------------------
  |  Branch (935:13): [True: 10.8k, False: 10.8k]
  ------------------
  936|  10.8k|        {
  937|       |            // TODO: Error failed to parse a valid expression
  938|  10.8k|            err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  939|  10.8k|            return {};
  940|  10.8k|        }
  941|       |
  942|  10.8k|        variable_declaration->m_InitialValueExpression = phi::move(expression);
  943|  10.8k|    }
  944|       |
  945|  60.8k|    return variable_declaration;
  946|  71.7k|}
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  949|   262k|{
  950|   262k|    auto expression = ParseExpression();
  951|   262k|    if (!expression)
  ------------------
  |  Branch (951:9): [True: 158k, False: 103k]
  ------------------
  952|   158k|    {
  953|   158k|        return {};
  954|   158k|    }
  955|       |
  956|   103k|    auto expression_statement =
  957|   103k|            phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  958|       |
  959|   103k|    if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (959:9): [True: 67.2k, False: 36.6k]
  ------------------
  960|  67.2k|    {
  961|  67.2k|        err(fmt::format("Expression {:s} is not valid as an statement\n",
  962|  67.2k|                        expression_statement->m_Expression->Name()));
  963|  67.2k|        return {};
  964|  67.2k|    }
  965|       |
  966|  36.6k|    return phi::move(expression_statement);
  967|   103k|}
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  970|  15.2k|{
  971|  15.2k|    if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (971:9): [True: 0, False: 15.2k]
  ------------------
  972|      0|    {
  973|      0|        return {};
  974|      0|    }
  975|       |
  976|       |    // Next me MUST parse an expression
  977|  15.2k|    auto if_condition = ParseExpression();
  978|  15.2k|    if (!if_condition)
  ------------------
  |  Branch (978:9): [True: 1.38k, False: 13.8k]
  ------------------
  979|  1.38k|    {
  980|  1.38k|        err("ERR: failed to parse expression!\n");
  981|       |
  982|  1.38k|        return {};
  983|  1.38k|    }
  984|       |
  985|       |    // Next we MUST parse Then
  986|  13.8k|    if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (986:9): [True: 2.83k, False: 11.0k]
  ------------------
  987|  2.83k|    {
  988|  2.83k|        err("ERR: Missing then!\n");
  989|       |
  990|  2.83k|        return {};
  991|  2.83k|    }
  992|       |
  993|  11.0k|    ConsumeNewLineAndComments();
  994|       |
  995|  11.0k|    IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  996|       |
  997|       |    // Next parse statements until we hit and EndIf, ElseIf or Else
  998|  18.0k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (998:12): [True: 17.9k, False: 72]
  |  Branch (998:12): [True: 10.9k, False: 7.04k]
  |  Branch (998:31): [True: 17.7k, False: 196]
  ------------------
  999|  18.0k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (999:12): [True: 14.9k, False: 2.77k]
  ------------------
 1000|  18.0k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1000:12): [True: 10.9k, False: 3.99k]
  ------------------
 1001|  10.9k|    {
 1002|  10.9k|        auto statement = ParseStatement();
 1003|  10.9k|        if (!statement)
  ------------------
  |  Branch (1003:13): [True: 3.96k, False: 7.01k]
  ------------------
 1004|  3.96k|        {
 1005|  3.96k|            err("ERR: Failed to parse statement inside of IF\n");
 1006|  3.96k|            return {};
 1007|  3.96k|        }
 1008|       |
 1009|  7.01k|        if_case.body.emplace_back(statement.release_not_null());
 1010|       |
 1011|  7.01k|        ConsumeNewLineAndComments();
 1012|  7.01k|    }
 1013|       |
 1014|  7.04k|    auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
 1015|       |
 1016|       |    // Handle all ElseIf cases which are optional
 1017|  12.3k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1017:12): [True: 11.9k, False: 424]
  |  Branch (1017:12): [True: 6.55k, False: 5.83k]
  |  Branch (1017:31): [True: 6.55k, False: 5.41k]
  ------------------
 1018|  6.55k|    {
 1019|       |        // Consume KW_ElseIf token
 1020|  6.55k|        ConsumeCurrent();
 1021|       |
 1022|       |        // Parse the condition
 1023|  6.55k|        auto else_if_condition = ParseExpression();
 1024|  6.55k|        if (!else_if_condition)
  ------------------
  |  Branch (1024:13): [True: 1.20k, False: 5.34k]
  ------------------
 1025|  1.20k|        {
 1026|  1.20k|            return {};
 1027|  1.20k|        }
 1028|       |
 1029|       |        // Parse KW_Then
 1030|  5.34k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (1030:13): [True: 3.89k, False: 1.45k]
  ------------------
 1031|  3.89k|        {
 1032|       |            // TODO: Better error message and this error should be recoverable
 1033|  3.89k|            err("ERR: Missing then!\n");
 1034|  3.89k|        }
 1035|       |
 1036|  5.34k|        ConsumeNewLineAndComments();
 1037|       |
 1038|  5.34k|        IfCase else_if_case{.condition{else_if_condition.release_not_null()},
 1039|  5.34k|                            .body{ParseIfCaseStatements()}};
 1040|       |
 1041|       |        // Append our case to the if statement
 1042|  5.34k|        if_statement->m_ElseIfCases.emplace_back(phi::move(else_if_case));
 1043|  5.34k|    }
 1044|       |
 1045|       |    // Handle optional else case
 1046|  5.83k|    if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_Else)
  ------------------
  |  Branch (1046:9): [True: 5.41k, False: 424]
  |  Branch (1046:9): [True: 2.99k, False: 2.84k]
  |  Branch (1046:28): [True: 2.99k, False: 2.42k]
  ------------------
 1047|  2.99k|    {
 1048|       |        // Consume KW_Else token
 1049|  2.99k|        ConsumeCurrent();
 1050|       |
 1051|  2.99k|        ConsumeNewLineAndComments();
 1052|       |
 1053|  2.99k|        if_statement->m_ElseCase = ParseIfCaseStatements();
 1054|  2.99k|    }
 1055|       |
 1056|  5.83k|    if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (1056:9): [True: 4.61k, False: 1.22k]
  ------------------
 1057|  4.61k|    {
 1058|  4.61k|        err("ERR: Missing EndIf!\n");
 1059|       |        // TODO: Proper Error
 1060|  4.61k|        return {};
 1061|  4.61k|    }
 1062|       |
 1063|  1.22k|    return phi::move(if_statement);
 1064|  5.83k|}
_ZN10OpenAutoIt6Parser21ParseIfCaseStatementsEv:
 1067|  8.33k|{
 1068|  8.33k|    std::vector<phi::not_null_scope_ptr<ASTStatement>> statements;
 1069|       |
 1070|       |    // Parse statements until KW_EndIf, KW_Else, KW_ElseIf
 1071|  11.4k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1071:12): [True: 11.3k, False: 135]
  |  Branch (1071:12): [True: 7.12k, False: 4.36k]
  |  Branch (1071:31): [True: 10.3k, False: 1.02k]
  ------------------
 1072|  11.4k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1072:12): [True: 9.52k, False: 808]
  ------------------
 1073|  11.4k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1073:12): [True: 7.12k, False: 2.39k]
  ------------------
 1074|  7.12k|    {
 1075|  7.12k|        auto statement = ParseStatement();
 1076|  7.12k|        if (!statement)
  ------------------
  |  Branch (1076:13): [True: 3.97k, False: 3.15k]
  ------------------
 1077|  3.97k|        {
 1078|  3.97k|            err("ERR: Failed to parse statement inside of IF\n");
 1079|  3.97k|            return {};
 1080|  3.97k|        }
 1081|       |
 1082|  3.15k|        statements.emplace_back(statement.release_not_null());
 1083|       |
 1084|  3.15k|        ConsumeNewLineAndComments();
 1085|  3.15k|    }
 1086|       |
 1087|  4.36k|    return statements;
 1088|  8.33k|}
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
 1091|   269k|{
 1092|   269k|    const Token& token = CurrentToken();
 1093|   269k|    if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1093:9): [True: 0, False: 269k]
  ------------------
 1094|      0|    {
 1095|      0|        return {};
 1096|      0|    }
 1097|       |
 1098|   269k|    phi::int64_t value{0};
 1099|   269k|    phi::boolean parsing_hex{false};
 1100|   599k|    for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (1100:32): [True: 331k, False: 267k]
  ------------------
 1101|   331k|    {
 1102|   331k|        const char character = token.GetText().at(index);
 1103|       |
 1104|       |        // Checking the second character
 1105|   331k|        if (index == 1u)
  ------------------
  |  Branch (1105:13): [True: 27.8k, False: 303k]
  ------------------
 1106|  27.8k|        {
 1107|  27.8k|            if (character == 'x' || character == 'X')
  ------------------
  |  Branch (1107:17): [True: 476, False: 27.4k]
  |  Branch (1107:37): [True: 5.97k, False: 21.4k]
  ------------------
 1108|  6.45k|            {
 1109|  6.45k|                parsing_hex = true;
 1110|  6.45k|                continue;
 1111|  6.45k|            }
 1112|  27.8k|        }
 1113|       |
 1114|   325k|        if (parsing_hex)
  ------------------
  |  Branch (1114:13): [True: 17.0k, False: 307k]
  ------------------
 1115|  17.0k|        {
 1116|  17.0k|            PHI_ASSERT(phi::is_hex_digit(character));
 1117|       |
 1118|  17.0k|            if (phi::detail::will_multiplication_error(phi::detail::unsigned_integer_tag{}, value,
  ------------------
  |  Branch (1118:17): [True: 492, False: 16.5k]
  ------------------
 1119|  17.0k|                                                       phi::int64_t(16)) ||
 1120|  17.0k|                phi::detail::will_addition_error(phi::detail::unsigned_integer_tag{}, value * 16,
  ------------------
  |  Branch (1120:17): [True: 482, False: 16.1k]
  ------------------
 1121|  16.5k|                                                 phi::int64_t(character - '0')))
 1122|    974|            {
 1123|    974|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1124|    974|                ConsumeCurrent();
 1125|    974|                return {};
 1126|    974|            }
 1127|       |
 1128|  16.1k|            value <<= 4;
 1129|  16.1k|            value |= phi::hex_digit_value(character).unsafe();
 1130|  16.1k|        }
 1131|   307k|        else
 1132|   307k|        {
 1133|   307k|            PHI_ASSERT(character >= '0' && character <= '9');
 1134|       |
 1135|   307k|            if (phi::detail::will_multiplication_error(phi::detail::signed_integer_tag{}, value,
  ------------------
  |  Branch (1135:17): [True: 423, False: 307k]
  ------------------
 1136|   307k|                                                       phi::int64_t(10)) ||
 1137|   307k|                phi::detail::will_addition_error(phi::detail::signed_integer_tag{}, value * 10,
  ------------------
  |  Branch (1137:17): [True: 266, False: 307k]
  ------------------
 1138|   307k|                                                 phi::int64_t(character - '0')))
 1139|    689|            {
 1140|    689|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1141|    689|                ConsumeCurrent();
 1142|    689|                return {};
 1143|    689|            }
 1144|       |
 1145|   307k|            value *= 10;
 1146|   307k|            value += (character - '0');
 1147|   307k|        }
 1148|   325k|    }
 1149|       |
 1150|   267k|    ConsumeCurrent();
 1151|   267k|    return phi::make_scope<ASTIntegerLiteral>(value);
 1152|   269k|}
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
 1155|  4.65k|{
 1156|  4.65k|    const Token& token = CurrentToken();
 1157|  4.65k|    if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (1157:9): [True: 0, False: 4.65k]
  ------------------
 1158|      0|    {
 1159|      0|        return {};
 1160|      0|    }
 1161|  4.65k|    ConsumeCurrent();
 1162|       |
 1163|  4.65k|    auto string_literal = phi::make_scope<ASTStringLiteral>();
 1164|       |
 1165|  4.65k|    const phi::usize length = token.GetText().length();
 1166|       |    // Trim the trailing and leading "
 1167|  4.65k|    string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
 1168|       |
 1169|  4.65k|    return phi::move(string_literal);
 1170|  4.65k|}
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
 1173|   876k|{
 1174|   876k|    phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
 1175|   876k|    if (!lhs_expression)
  ------------------
  |  Branch (1175:9): [True: 548k, False: 328k]
  ------------------
 1176|   548k|    {
 1177|   548k|        return {};
 1178|   548k|    }
 1179|       |
 1180|   328k|    return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
 1181|   876k|}
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
 1184|   940k|{
 1185|   940k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1185:9): [True: 664, False: 940k]
  ------------------
 1186|    664|    {
 1187|       |        // TODO: Proper error
 1188|    664|        return {};
 1189|    664|    }
 1190|       |
 1191|   940k|    const Token& token = CurrentToken();
 1192|   940k|    if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (1192:9): [True: 14.3k, False: 925k]
  ------------------
 1193|  14.3k|    {
 1194|  14.3k|        const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
 1195|  14.3k|        PHI_UNUSED_VARIABLE(op_precedence);
 1196|  14.3k|        ConsumeCurrent();
 1197|       |
 1198|  14.3k|        phi::scope_ptr<ASTExpression> unary_expression = ParseUnaryExpression(token.GetTokenKind());
 1199|  14.3k|        if (!unary_expression)
  ------------------
  |  Branch (1199:13): [True: 7.95k, False: 6.40k]
  ------------------
 1200|  7.95k|        {
 1201|       |            // TODO: Proper error
 1202|  7.95k|            return {};
 1203|  7.95k|        }
 1204|       |
 1205|  6.40k|        return phi::move(unary_expression);
 1206|  14.3k|    }
 1207|   925k|    if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (1207:9): [True: 89.8k, False: 835k]
  ------------------
 1208|  89.8k|    {
 1209|       |        // Consume the LParen
 1210|  89.8k|        ConsumeCurrent();
 1211|       |
 1212|  89.8k|        phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
 1213|  89.8k|        if (!paren_expression)
  ------------------
  |  Branch (1213:13): [True: 86.6k, False: 3.15k]
  ------------------
 1214|  86.6k|        {
 1215|       |            // TODO: Proper error
 1216|  86.6k|            return {};
 1217|  86.6k|        }
 1218|       |
 1219|  3.15k|        return phi::move(paren_expression);
 1220|  89.8k|    }
 1221|   835k|    if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1221:9): [True: 269k, False: 566k]
  ------------------
 1222|   269k|    {
 1223|   269k|        phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
 1224|   269k|        if (!int_literal)
  ------------------
  |  Branch (1224:13): [True: 1.66k, False: 267k]
  ------------------
 1225|  1.66k|        {
 1226|       |            // TODO: Error failed to parse integer literal
 1227|  1.66k|            return {};
 1228|  1.66k|        }
 1229|       |
 1230|   267k|        return phi::move(int_literal);
 1231|   269k|    }
 1232|   566k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (1232:9): [True: 4.65k, False: 561k]
  ------------------
 1233|  4.65k|    {
 1234|  4.65k|        auto string_literal_expression = ParseStringLiteral();
 1235|  4.65k|        if (!string_literal_expression)
  ------------------
  |  Branch (1235:13): [True: 0, False: 4.65k]
  ------------------
 1236|      0|        {
 1237|       |            // TODO: Proper error
 1238|      0|            return {};
 1239|      0|        }
 1240|       |
 1241|  4.65k|        return phi::move(string_literal_expression);
 1242|  4.65k|    }
 1243|       |
 1244|       |    // Boolean literal
 1245|   561k|    if (token.GetTokenKind() == TokenKind::KW_True || token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1245:9): [True: 4.68k, False: 557k]
  |  Branch (1245:55): [True: 243, False: 556k]
  ------------------
 1246|  4.92k|    {
 1247|  4.92k|        auto boolean_literal = ParseBooleanLiteral();
 1248|  4.92k|        if (!boolean_literal)
  ------------------
  |  Branch (1248:13): [True: 0, False: 4.92k]
  ------------------
 1249|      0|        {
 1250|       |            // TODO: Proper error
 1251|      0|            return {};
 1252|      0|        }
 1253|       |
 1254|  4.92k|        return phi::move(boolean_literal);
 1255|  4.92k|    }
 1256|       |
 1257|       |    // Function call expression
 1258|   556k|    if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (1258:9): [True: 109k, False: 447k]
  |  Branch (1258:9): [True: 110k, False: 446k]
  |  Branch (1258:66): [True: 1.63k, False: 446k]
  ------------------
 1259|   110k|    {
 1260|   110k|        auto function_call_expression = ParseFunctionCallExpression();
 1261|   110k|        if (!function_call_expression)
  ------------------
  |  Branch (1261:13): [True: 66.4k, False: 44.3k]
  ------------------
 1262|  66.4k|        {
 1263|       |            // TODO: Proper error
 1264|  66.4k|            err("ERR: Failed to parse function call expression!\n");
 1265|  66.4k|            return {};
 1266|  66.4k|        }
 1267|       |
 1268|  44.3k|        return phi::move(function_call_expression);
 1269|   110k|    }
 1270|       |    // Variable expression
 1271|   446k|    if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1271:9): [True: 34.9k, False: 411k]
  ------------------
 1272|  34.9k|    {
 1273|  34.9k|        auto variable_expression = ParseVariableExpression();
 1274|  34.9k|        if (!variable_expression)
  ------------------
  |  Branch (1274:13): [True: 0, False: 34.9k]
  ------------------
 1275|      0|        {
 1276|       |            // TODO: Proper error
 1277|      0|            err("ERR: Failed to parse Variable expression\n");
 1278|      0|            return {};
 1279|      0|        }
 1280|       |
 1281|  34.9k|        return phi::move(variable_expression);
 1282|  34.9k|    }
 1283|       |    // Keyword literal
 1284|   411k|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1284:9): [True: 824, False: 410k]
  ------------------
 1285|    824|    {
 1286|    824|        auto keyword_literal = ParseKeywordLiteral();
 1287|    824|        if (!keyword_literal)
  ------------------
  |  Branch (1287:13): [True: 0, False: 824]
  ------------------
 1288|      0|        {
 1289|       |            // TODO: Proper error
 1290|      0|            err("ERR: Failed to parse keyword literal expression!\n");
 1291|      0|            return {};
 1292|      0|        }
 1293|       |
 1294|    824|        return phi::move(keyword_literal);
 1295|    824|    }
 1296|       |    // Float literal
 1297|   410k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1297:9): [True: 4.73k, False: 405k]
  ------------------
 1298|  4.73k|    {
 1299|  4.73k|        auto float_literal = ParseFloatLiteral();
 1300|  4.73k|        if (!float_literal)
  ------------------
  |  Branch (1300:13): [True: 0, False: 4.73k]
  ------------------
 1301|      0|        {
 1302|       |            // TODO: Proper error
 1303|      0|            err("ERR: Failed to parse float literal expression!\n");
 1304|      0|            return {};
 1305|      0|        }
 1306|       |
 1307|  4.73k|        return phi::move(float_literal);
 1308|  4.73k|    }
 1309|       |    // ArraySubscript expression
 1310|   405k|    if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (1310:9): [True: 290k, False: 114k]
  ------------------
 1311|   290k|    {
 1312|   290k|        auto subscript_expression = ParseArraySubscriptExpression();
 1313|   290k|        if (!subscript_expression)
  ------------------
  |  Branch (1313:13): [True: 287k, False: 3.86k]
  ------------------
 1314|   287k|        {
 1315|   287k|            err("ERR: Failed to parse array subscript expression\n");
 1316|   287k|            return {};
 1317|   287k|        }
 1318|       |
 1319|  3.86k|        return phi::move(subscript_expression);
 1320|   290k|    }
 1321|   114k|    if (token.IsMacro())
  ------------------
  |  Branch (1321:9): [True: 897, False: 113k]
  ------------------
 1322|    897|    {
 1323|    897|        ConsumeCurrent();
 1324|       |
 1325|    897|        phi::scope_ptr<ASTExpression> macro_expression = ParseMacroExpression(token.GetTokenKind());
 1326|    897|        if (!macro_expression)
  ------------------
  |  Branch (1326:13): [True: 0, False: 897]
  ------------------
 1327|      0|        {
 1328|       |            // TODO: Proper error
 1329|      0|            return {};
 1330|      0|        }
 1331|       |
 1332|    897|        return macro_expression;
 1333|    897|    }
 1334|       |
 1335|       |    // TODO: Error Unexpected token
 1336|   113k|    err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
 1337|   113k|                    enum_name(token.GetTokenKind())));
 1338|   113k|    return {};
 1339|   114k|}
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
 1343|   332k|{
 1344|   377k|    while (true)
  ------------------
  |  Branch (1344:12): [Folded - Ignored]
  ------------------
 1345|   377k|    {
 1346|   377k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1346:13): [True: 1.74k, False: 375k]
  ------------------
 1347|  1.74k|        {
 1348|  1.74k|            return phi::move(lhs);
 1349|  1.74k|        }
 1350|       |
 1351|   375k|        const Token& operator_token = CurrentToken();
 1352|   375k|        if (!IsBinaryOperator(operator_token.GetTokenKind()) &&
  ------------------
  |  Branch (1352:13): [True: 309k, False: 65.5k]
  |  Branch (1352:13): [True: 245k, False: 129k]
  ------------------
 1353|   375k|            operator_token.GetTokenKind() != TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1353:13): [True: 245k, False: 64.2k]
  ------------------
 1354|   245k|        {
 1355|       |            // If its not a binary operator and not a ternary just return the lhs expression
 1356|   245k|            return phi::move(lhs);
 1357|   245k|        }
 1358|   129k|        int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
 1359|   129k|        ConsumeCurrent();
 1360|       |
 1361|   129k|        if (token_precedence < precedence)
  ------------------
  |  Branch (1361:13): [True: 1.27k, False: 128k]
  ------------------
 1362|  1.27k|        {
 1363|  1.27k|            return phi::move(lhs);
 1364|  1.27k|        }
 1365|       |
 1366|   128k|        if (operator_token.GetTokenKind() == TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1366:13): [True: 64.2k, False: 64.2k]
  ------------------
 1367|  64.2k|        {
 1368|  64.2k|            phi::scope_ptr<ASTTernaryIfExpression> ternary_if_expression =
 1369|  64.2k|                    ParseTernaryIfExpression(phi::move(lhs));
 1370|  64.2k|            if (!ternary_if_expression)
  ------------------
  |  Branch (1370:17): [True: 30.4k, False: 33.7k]
  ------------------
 1371|  30.4k|            {
 1372|       |                // TODO: Proper error
 1373|  30.4k|                return {};
 1374|  30.4k|            }
 1375|       |
 1376|  33.7k|            return phi::move(ternary_if_expression);
 1377|  64.2k|        }
 1378|       |
 1379|       |        // This must be an binary expression
 1380|  64.2k|        phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
 1381|  64.2k|        if (!rhs_expression)
  ------------------
  |  Branch (1381:13): [True: 15.9k, False: 48.3k]
  ------------------
 1382|  15.9k|        {
 1383|       |            // TODO: Proper error
 1384|  15.9k|            return {};
 1385|  15.9k|        }
 1386|       |
 1387|       |        // Nothing left to parse so directly return from here
 1388|  48.3k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1388:13): [True: 1.34k, False: 46.9k]
  ------------------
 1389|  1.34k|        {
 1390|  1.34k|            return phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1391|  1.34k|                                                                 operator_token.GetTokenKind(),
 1392|  1.34k|                                                                 rhs_expression.release_not_null());
 1393|  1.34k|        }
 1394|       |
 1395|       |        // If BinOp binds less tightly with RHS than the operator after RHS, let
 1396|       |        // the pending operator take RHS as its LHS.
 1397|  46.9k|        const Token& next_token      = CurrentToken();
 1398|  46.9k|        int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1399|       |
 1400|  46.9k|        if (token_precedence < next_precedence)
  ------------------
  |  Branch (1400:13): [True: 4.17k, False: 42.7k]
  ------------------
 1401|  4.17k|        {
 1402|  4.17k|            rhs_expression =
 1403|  4.17k|                    ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1404|  4.17k|            if (!rhs_expression)
  ------------------
  |  Branch (1404:17): [True: 2.03k, False: 2.14k]
  ------------------
 1405|  2.03k|            {
 1406|       |                // TODO: Proper error
 1407|  2.03k|                return {};
 1408|  2.03k|            }
 1409|  4.17k|        }
 1410|       |
 1411|       |        // Merge LHS/RHS.
 1412|  44.9k|        lhs = phi::make_not_null_scope<ASTBinaryExpression>(
 1413|  44.9k|                phi::move(lhs), operator_token.GetTokenKind(), rhs_expression.release_not_null());
 1414|  44.9k|    }
 1415|   332k|}
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
 1418|   110k|{
 1419|       |    // Parse the function name
 1420|   110k|    const Token& function_identifier_token = CurrentToken();
 1421|   110k|    if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1421:9): [True: 1.63k, False: 109k]
  |  Branch (1421:9): [True: 0, False: 110k]
  ------------------
 1422|   110k|        !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1422:9): [True: 0, False: 1.63k]
  ------------------
 1423|      0|    {
 1424|      0|        return {};
 1425|      0|    }
 1426|   110k|    ConsumeCurrent();
 1427|       |
 1428|   110k|    phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1429|   110k|            phi::make_scope<ASTFunctionCallExpression>();
 1430|   110k|    if (!function_call_expression)
  ------------------
  |  Branch (1430:9): [True: 0, False: 110k]
  ------------------
 1431|      0|    {
 1432|       |        // TODO: Proper error
 1433|      0|        return {};
 1434|      0|    }
 1435|       |
 1436|   110k|    if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1436:9): [True: 1.63k, False: 109k]
  ------------------
 1437|  1.63k|    {
 1438|  1.63k|        function_call_expression->m_IsBuiltIn       = true;
 1439|  1.63k|        function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
 1440|  1.63k|    }
 1441|   109k|    else
 1442|   109k|    {
 1443|   109k|        const phi::string_view function_name = function_identifier_token.GetText();
 1444|       |
 1445|   109k|        function_call_expression->m_IsBuiltIn    = false;
 1446|   109k|        function_call_expression->m_FunctionName = function_name;
 1447|   109k|    }
 1448|       |
 1449|       |    // TODO: These 2 checks should be combined
 1450|       |    // Now me MUST parse an LParen
 1451|   110k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1451:9): [True: 1.14k, False: 109k]
  ------------------
 1452|  1.14k|    {
 1453|       |        // TODO: Give proper error
 1454|  1.14k|        err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1455|  1.14k|                        std::string_view{function_call_expression->FunctionName()}));
 1456|  1.14k|        return {};
 1457|  1.14k|    }
 1458|       |
 1459|   109k|    const Token& left_paren_token = CurrentToken();
 1460|   109k|    ConsumeCurrent();
 1461|   109k|    if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1461:9): [True: 52.5k, False: 57.1k]
  ------------------
 1462|  52.5k|    {
 1463|       |        // TODO: Give error
 1464|  52.5k|        err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1465|  52.5k|                        std::string_view{function_call_expression->FunctionName()}));
 1466|  52.5k|        return {};
 1467|  52.5k|    }
 1468|       |
 1469|       |    // Now parse all the arguments (which are expressions) separated by commas or nothing
 1470|  57.1k|    function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1471|       |
 1472|       |    // Finally we MUST parse an RParen
 1473|  57.1k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1473:9): [True: 3.78k, False: 53.3k]
  ------------------
 1474|  3.78k|    {
 1475|  3.78k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1476|  3.78k|                        std::string_view{function_call_expression->FunctionName()}));
 1477|       |        // TODO: Give proper error
 1478|  3.78k|        return {};
 1479|  3.78k|    }
 1480|       |
 1481|  53.3k|    const Token& right_paren_token = CurrentToken();
 1482|  53.3k|    ConsumeCurrent();
 1483|  53.3k|    if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1483:9): [True: 9.02k, False: 44.3k]
  ------------------
 1484|  9.02k|    {
 1485|  9.02k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1486|  9.02k|                        std::string_view{function_call_expression->FunctionName()}));
 1487|       |        // TODO: Give Error
 1488|  9.02k|        return {};
 1489|  9.02k|    }
 1490|       |
 1491|       |    // Return result
 1492|  44.3k|    return function_call_expression;
 1493|  53.3k|}
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1496|  57.1k|{
 1497|  57.1k|    std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1498|       |
 1499|  75.4k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1499:12): [True: 75.2k, False: 173]
  |  Branch (1499:12): [True: 39.5k, False: 35.9k]
  |  Branch (1499:31): [True: 39.5k, False: 35.7k]
  ------------------
 1500|  39.5k|    {
 1501|       |        // Parse the expression
 1502|  39.5k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1503|  39.5k|        if (!expression)
  ------------------
  |  Branch (1503:13): [True: 21.1k, False: 18.3k]
  ------------------
 1504|  21.1k|        {
 1505|  21.1k|            arguments.clear();
 1506|  21.1k|            return arguments;
 1507|  21.1k|        }
 1508|       |
 1509|       |        // Add argument to parameters
 1510|  18.3k|        arguments.emplace_back(expression.release_not_null());
 1511|       |
 1512|       |        // Next Token MUST be a comma followed by another expression or RParen
 1513|  18.3k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1513:13): [True: 18.1k, False: 144]
  |  Branch (1513:13): [True: 243, False: 18.0k]
  |  Branch (1513:32): [True: 243, False: 17.9k]
  ------------------
 1514|    243|        {
 1515|    243|            ConsumeCurrent();
 1516|    243|        }
 1517|  18.3k|    }
 1518|       |
 1519|  35.9k|    return arguments;
 1520|  57.1k|}
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1523|  34.9k|{
 1524|  34.9k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1524:9): [True: 0, False: 34.9k]
  ------------------
 1525|      0|    {
 1526|       |        // TODO: Proper error
 1527|      0|        return {};
 1528|      0|    }
 1529|       |
 1530|  34.9k|    const Token& token = CurrentToken();
 1531|  34.9k|    if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1531:9): [True: 0, False: 34.9k]
  ------------------
 1532|      0|    {
 1533|       |        // TODO error
 1534|      0|        return {};
 1535|      0|    }
 1536|       |
 1537|  34.9k|    auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1538|  34.9k|    variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1539|       |
 1540|  34.9k|    ConsumeCurrent();
 1541|       |
 1542|  34.9k|    return phi::move(variable_expression);
 1543|  34.9k|}
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1549|   290k|{
 1550|   290k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1550:9): [True: 0, False: 290k]
  ------------------
 1551|      0|    {
 1552|      0|        return {};
 1553|      0|    }
 1554|       |
 1555|   290k|    if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1555:9): [True: 0, False: 290k]
  ------------------
 1556|      0|    {
 1557|      0|        return {};
 1558|      0|    }
 1559|       |
 1560|   290k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1561|   290k|    if (!expression)
  ------------------
  |  Branch (1561:9): [True: 282k, False: 8.24k]
  ------------------
 1562|   282k|    {
 1563|   282k|        return {};
 1564|   282k|    }
 1565|       |
 1566|  8.24k|    if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1566:9): [True: 4.38k, False: 3.86k]
  ------------------
 1567|  4.38k|    {
 1568|  4.38k|        return {};
 1569|  4.38k|    }
 1570|       |
 1571|  3.86k|    return phi::make_scope<ASTArraySubscriptExpression>(phi::move(expression.release_not_null()));
 1572|  8.24k|}
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1577|  89.8k|{
 1578|       |    // NOTE: Me MUST have consumed the LParen before this
 1579|       |
 1580|  89.8k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1581|  89.8k|    if (!expression)
  ------------------
  |  Branch (1581:9): [True: 83.0k, False: 6.77k]
  ------------------
 1582|  83.0k|    {
 1583|       |        // TODO: Proper error
 1584|  83.0k|        return {};
 1585|  83.0k|    }
 1586|       |
 1587|  6.77k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1587:9): [True: 3.61k, False: 3.15k]
  ------------------
 1588|  3.61k|    {
 1589|       |        // TODO: Proper error expected closing paren
 1590|  3.61k|        return {};
 1591|  3.61k|    }
 1592|       |
 1593|  3.15k|    return phi::move(expression);
 1594|  6.77k|}
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1597|  4.27k|{
 1598|  4.27k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1598:9): [True: 0, False: 4.27k]
  ------------------
 1599|      0|    {
 1600|      0|        return {};
 1601|      0|    }
 1602|       |
 1603|  4.27k|    if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1603:9): [True: 0, False: 4.27k]
  ------------------
 1604|      0|    {
 1605|      0|        return {};
 1606|      0|    }
 1607|       |
 1608|       |    // Parse optional expression
 1609|  4.27k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1610|       |
 1611|  4.27k|    return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1612|  4.27k|}
_ZN10OpenAutoIt6Parser20ParseUnaryExpressionENS_9TokenKindE:
 1615|  14.3k|{
 1616|  14.3k|    PHI_ASSERT(IsUnaryOperator(operator_kind));
 1617|       |
 1618|  14.3k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1618:9): [True: 77, False: 14.2k]
  ------------------
 1619|     77|    {
 1620|     77|        return {};
 1621|     77|    }
 1622|       |
 1623|       |    // Parse expression
 1624|  14.2k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1625|  14.2k|    if (!expression)
  ------------------
  |  Branch (1625:9): [True: 7.88k, False: 6.40k]
  ------------------
 1626|  7.88k|    {
 1627|       |        // TODO: Proper error
 1628|  7.88k|        return {};
 1629|  7.88k|    }
 1630|       |
 1631|  6.40k|    return phi::make_scope<ASTUnaryExpression>(operator_kind,
 1632|  6.40k|                                               phi::move(expression.release_not_null()));
 1633|  14.2k|}
_ZN10OpenAutoIt6Parser24ParseTernaryIfExpressionEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
 1637|  64.2k|{
 1638|  64.2k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1638:9): [True: 57, False: 64.1k]
  ------------------
 1639|     57|    {
 1640|     57|        return {};
 1641|     57|    }
 1642|       |
 1643|  64.1k|    phi::scope_ptr<ASTExpression> true_expression = ParseExpression();
 1644|  64.1k|    if (!true_expression)
  ------------------
  |  Branch (1644:9): [True: 9.54k, False: 54.6k]
  ------------------
 1645|  9.54k|    {
 1646|  9.54k|        return {};
 1647|  9.54k|    }
 1648|       |
 1649|       |    // Must parse the else part ":"
 1650|  54.6k|    if (!MustParse(TokenKind::OP_TernaryElse))
  ------------------
  |  Branch (1650:9): [True: 4.85k, False: 49.7k]
  ------------------
 1651|  4.85k|    {
 1652|  4.85k|        err("Missing ':' for ternary if\n");
 1653|  4.85k|        return {};
 1654|  4.85k|    }
 1655|       |
 1656|  49.7k|    phi::scope_ptr<ASTExpression> false_expression = ParseExpression();
 1657|  49.7k|    if (!false_expression)
  ------------------
  |  Branch (1657:9): [True: 16.0k, False: 33.7k]
  ------------------
 1658|  16.0k|    {
 1659|  16.0k|        return {};
 1660|  16.0k|    }
 1661|       |
 1662|  33.7k|    return phi::make_scope<ASTTernaryIfExpression>(phi::move(condition),
 1663|  33.7k|                                                   phi::move(true_expression.release_not_null()),
 1664|  33.7k|                                                   phi::move(false_expression.release_not_null()));
 1665|  49.7k|}
_ZN10OpenAutoIt6Parser20ParseMacroExpressionENS_9TokenKindE:
 1668|    897|{
 1669|    897|    const auto macro = static_cast<phi::size_t>(macro_kind);
 1670|    897|    PHI_ASSERT(macro >= MacroFirst && macro <= MacroLast);
 1671|       |
 1672|    897|    return phi::make_scope<ASTMacroExpression>(macro_kind);
 1673|    897|}
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1676|  4.92k|{
 1677|  4.92k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1677:9): [True: 0, False: 4.92k]
  ------------------
 1678|      0|    {
 1679|       |        // TODO: Proper error
 1680|      0|        return {};
 1681|      0|    }
 1682|       |
 1683|       |    // BooleanLiteral is either KW_True or KW_False
 1684|  4.92k|    const Token& token = CurrentToken();
 1685|  4.92k|    if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1685:9): [True: 4.68k, False: 243]
  ------------------
 1686|  4.68k|    {
 1687|  4.68k|        ConsumeCurrent();
 1688|  4.68k|        return phi::make_scope<ASTBooleanLiteral>(true);
 1689|  4.68k|    }
 1690|       |
 1691|    243|    if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1691:9): [True: 243, False: 0]
  ------------------
 1692|    243|    {
 1693|    243|        ConsumeCurrent();
 1694|    243|        return phi::make_scope<ASTBooleanLiteral>(false);
 1695|    243|    }
 1696|       |
 1697|       |    // TODO: Proper error
 1698|      0|    return {};
 1699|    243|}
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1702|    824|{
 1703|    824|    if (!HasMoreTokens())
  ------------------
  |  Branch (1703:9): [True: 0, False: 824]
  ------------------
 1704|      0|    {
 1705|       |        // TODO: Proper error
 1706|      0|        return {};
 1707|      0|    }
 1708|       |
 1709|    824|    const Token& token = CurrentToken();
 1710|    824|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1710:9): [True: 824, False: 0]
  ------------------
 1711|    824|    {
 1712|    824|        ConsumeCurrent();
 1713|    824|        return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1714|    824|    }
 1715|       |
 1716|       |    // TODO: Proper error
 1717|      0|    return {};
 1718|    824|}
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1721|  4.73k|{
 1722|  4.73k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1722:9): [True: 0, False: 4.73k]
  ------------------
 1723|      0|    {
 1724|       |        // TODO: Proper error
 1725|      0|        return {};
 1726|      0|    }
 1727|       |
 1728|  4.73k|    const Token& token = CurrentToken();
 1729|  4.73k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1729:9): [True: 4.73k, False: 0]
  ------------------
 1730|  4.73k|    {
 1731|  4.73k|        ConsumeCurrent();
 1732|       |
 1733|  4.73k|        char*    ptr   = nullptr;
 1734|  4.73k|        phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1735|       |
 1736|  4.73k|        return phi::make_scope<ASTFloatLiteral>(value);
 1737|  4.73k|    }
 1738|       |
 1739|       |    // TODO: Proper error
 1740|      0|    return {};
 1741|  4.73k|}
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   69|   191k|    {
   70|   191k|        int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   71|       |        //PHI_ASSERT(precedence != 0);
   72|       |
   73|   191k|        return precedence;
   74|   191k|    }

_ZN10OpenAutoIt10SourceFileC2ENS0_4TypeENSt3__14__fs10filesystem4pathEN3phi17basic_string_viewIcNS2_11char_traitsIcEEEE:
   12|  13.8k|{}

_ZN10OpenAutoIt13SourceManager18SetLocalSearchPathERKNSt3__14__fs10filesystem4pathE:
   14|  13.8k|{}
_ZN10OpenAutoIt18EmptySourceManager8LoadFileEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_11IncludeTypeE:
  156|    984|{
  157|    984|    return {};
  158|    984|}

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  6.90k|{
   31|       |#if defined(PHI_DEBUG)
   32|       |    PHI_ASSERT(!m_Finalized);
   33|       |#endif
   34|       |
   35|  6.90k|    m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |    m_Finalized = true;
   38|       |#endif
   39|  6.90k|}
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   68|  8.73M|{
   69|       |#if defined(PHI_DEBUG)
   70|       |    PHI_ASSERT(m_Finalized);
   71|       |#endif
   72|       |
   73|  8.73M|    return m_Index < m_Tokens.size();
   74|  8.73M|}
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   77|  6.04M|{
   78|       |#if defined(PHI_DEBUG)
   79|       |    PHI_ASSERT(m_Finalized);
   80|       |#endif
   81|       |
   82|  6.04M|    return m_Index >= m_Tokens.size();
   83|  6.04M|}
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   86|  4.23M|{
   87|  4.23M|    PHI_ASSERT(!reached_end());
   88|       |#if defined(PHI_DEBUG)
   89|       |    PHI_ASSERT(m_Finalized);
   90|       |#endif
   91|       |
   92|  4.23M|    return m_Tokens[m_Index.unsafe()];
   93|  4.23M|}
_ZNK10OpenAutoIt11TokenStream11look_behindEv:
   96|  64.4k|{
   97|  64.4k|    PHI_ASSERT(!m_Tokens.empty());
   98|       |#if defined(PHI_DEBUG)
   99|       |    PHI_ASSERT(m_Finalized);
  100|       |#endif
  101|       |
  102|  64.4k|    if (m_Index == 0u)
  ------------------
  |  Branch (102:9): [True: 0, False: 64.4k]
  ------------------
  103|      0|    {
  104|      0|        return m_Tokens[0u];
  105|      0|    }
  106|       |
  107|  64.4k|    return m_Tokens[m_Index.unsafe() - 1u];
  108|  64.4k|}
_ZN10OpenAutoIt11TokenStream7consumeEv:
  111|  1.81M|{
  112|  1.81M|    PHI_ASSERT(!reached_end());
  113|       |#if defined(PHI_DEBUG)
  114|       |    PHI_ASSERT(m_Finalized);
  115|       |#endif
  116|       |
  117|  1.81M|    m_Index += 1u;
  118|  1.81M|}

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  1.18M|{
  100|  1.18M|    if (output_enabled)
  ------------------
  |  Branch (100:9): [True: 0, False: 1.18M]
  ------------------
  101|      0|    {
  102|      0|        std::cerr << data;
  103|      0|    }
  104|  1.18M|}
_ZN10OpenAutoIt14disable_outputEv:
  107|  6.90k|{
  108|  6.90k|    output_enabled = false;
  109|  6.90k|}

