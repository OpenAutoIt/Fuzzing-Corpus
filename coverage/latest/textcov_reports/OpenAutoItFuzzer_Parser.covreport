_ZN3fmt3v106detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  377|   585k|    typename std::make_unsigned<Int>::type {
  378|   585k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  336|  1.17M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (336:35): [Folded - Ignored]
  |  |  |  Branch (336:35): [True: 585k, False: 0]
  |  |  ------------------
  ------------------
  379|   585k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  380|   585k|}
_ZN3fmt3v106detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  304|  4.66M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v1017basic_string_viewIcE4sizeEv:
  445|  3.17M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  304|   585k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE4sizeEv:
  840|   637k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail6bufferIcEC2EPcmm:
  812|   637k|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt3v106detail6bufferIcE3setEPcm:
  818|   637k|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  819|   637k|    ptr_ = buf_data;
  820|   637k|    capacity_ = buf_capacity;
  821|   637k|  }
_ZN3fmt3v106detail13ignore_unusedIJbEEEvDpRKT_:
  304|    201|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE8capacityEv:
  843|    346|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt3v106detail6bufferIcE4dataEv:
  846|   637k|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt3v1017basic_string_viewIcE5beginEv:
  447|  1.22M|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt3v1017basic_string_viewIcE3endEv:
  448|  1.22M|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKc:
  428|   597k|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt3v106detail10locale_refC2Ev:
 1536|  1.12M|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZNK3fmt3v1019basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2759|  52.0k|  FMT_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt3v1016make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJEEENS0_16format_arg_storeIT_JDpNSt3__19remove_cvINS7_16remove_referenceIT0_E4typeEE4typeEEEEDpRSA_:
 1827|  52.0k|    -> format_arg_store<Context, remove_cvref_t<T>...> {
 1828|  52.0k|  return {args...};
 1829|  52.0k|}
_ZN3fmt3v1016format_arg_storeINS0_20basic_format_contextINS0_8appenderEcEEJEEC2IJEEEDpRT_:
 1810|  52.0k|        data_{detail::make_arg<is_packed, Context>(args)...} {
 1811|  52.0k|    if (detail::const_check(num_named_args != 0))
  ------------------
  |  Branch (1811:9): [Folded - Ignored]
  ------------------
 1812|      0|      detail::init_named_args(data_.named_args(), 0, 0, args...);
 1813|  52.0k|  }
_ZN3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EEC2IJEEEDpRKT_:
 1170|  52.0k|  FMT_CONSTEXPR FMT_INLINE arg_data(const U&... init) : args_{init...} {}
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1263|   637k|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt3v109monostateC2Ev:
  279|   637k|  constexpr monostate() {}
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2IJEEERKNS0_16format_arg_storeIS4_JDpT_EEE:
 1911|  52.0k|                          store.data_.args()) {}
_ZNK3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE4argsEv:
 1171|  52.0k|  FMT_CONSTEXPR FMT_INLINE auto args() const -> const T* { return args_; }
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1895|   637k|      : desc_(desc), values_(values) {}
_ZNK3fmt3v1017basic_string_viewIcE4dataEv:
  442|  1.31M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKcm:
  413|  1.31M|      : data_(s), size_(count) {}
_ZN3fmt3v106detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  377|  4.07M|    typename std::make_unsigned<Int>::type {
  378|  4.07M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  336|  8.15M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (336:35): [Folded - Ignored]
  |  |  |  Branch (336:35): [True: 4.07M, False: 0]
  |  |  ------------------
  ------------------
  379|  4.07M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  380|  4.07M|}
_ZN3fmt3v106detail6bufferIcE11try_reserveEm:
  863|  1.75M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  864|  1.75M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (864:9): [True: 201, False: 1.75M]
  ------------------
  865|  1.75M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 1933|   585k|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1934|   585k|    format_arg arg;
 1935|   585k|    if (!is_packed()) {
  ------------------
  |  Branch (1935:9): [True: 0, False: 585k]
  ------------------
 1936|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1936:11): [True: 0, False: 0]
  ------------------
 1937|      0|      return arg;
 1938|      0|    }
 1939|   585k|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1939:9): [True: 0, False: 585k]
  ------------------
 1940|   585k|    arg.type_ = type(id);
 1941|   585k|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1941:9): [True: 0, False: 585k]
  ------------------
 1942|   585k|    arg.value_ = values_[id];
 1943|   585k|    return arg;
 1944|   585k|  }
_ZN3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1644|   585k|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1880|   585k|  constexpr auto is_packed() const -> bool {
 1881|   585k|    return (desc_ & detail::is_unpacked_bit) == 0;
 1882|   585k|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1887|   585k|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1888|   585k|    int shift = index * detail::packed_arg_bits;
 1889|   585k|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1890|   585k|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1891|   585k|  }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1646|   585k|  constexpr explicit operator bool() const noexcept {
 1647|   585k|    return type_ != detail::type::none_type;
 1648|   585k|  }
_ZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  768|  1.80M|    -> Container& {
  769|  1.80M|  using base = std::back_insert_iterator<Container>;
  770|  1.80M|  struct accessor : base {
  771|  1.80M|    accessor(base b) : base(b) {}
  772|  1.80M|    using base::container;
  773|  1.80M|  };
  774|  1.80M|  return *accessor(it).container;
  775|  1.80M|}
_ZZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  771|  1.80M|    accessor(base b) : base(b) {}
_ZNK3fmt3v106detail6fill_tIcE4sizeEv:
 2011|   585k|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt3v106detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1490|  1.80M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1491|  1.80M|  get_container(out).append(begin, end);
 1492|  1.80M|  return out;
 1493|  1.80M|}
_ZN3fmt3v1012format_specsIcEC2Ev:
 2061|   585k|        localized(false) {}
_ZN3fmt3v1026basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  671|   637k|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1733|   637k|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE3outEv:
 1748|  1.80M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2490|   637k|    basic_string_view<Char> format_str, Handler&& handler) {
 2491|   637k|  auto begin = format_str.data();
 2492|   637k|  auto end = begin + format_str.size();
 2493|   637k|  if (end - begin < 32) {
  ------------------
  |  Branch (2493:7): [True: 361k, False: 275k]
  ------------------
 2494|       |    // Use a simple loop instead of memchr for small strings.
 2495|   361k|    const Char* p = begin;
 2496|  8.94M|    while (p != end) {
  ------------------
  |  Branch (2496:12): [True: 8.58M, False: 361k]
  ------------------
 2497|  8.58M|      auto c = *p++;
 2498|  8.58M|      if (c == '{') {
  ------------------
  |  Branch (2498:11): [True: 309k, False: 8.27M]
  ------------------
 2499|   309k|        handler.on_text(begin, p - 1);
 2500|   309k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2501|  8.27M|      } else if (c == '}') {
  ------------------
  |  Branch (2501:18): [True: 0, False: 8.27M]
  ------------------
 2502|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2502:13): [True: 0, False: 0]
  |  Branch (2502:25): [True: 0, False: 0]
  ------------------
 2503|      0|          return handler.on_error("unmatched '}' in format string");
 2504|      0|        handler.on_text(begin, p);
 2505|      0|        begin = ++p;
 2506|      0|      }
 2507|  8.58M|    }
 2508|   361k|    handler.on_text(begin, end);
 2509|   361k|    return;
 2510|   361k|  }
 2511|   275k|  struct writer {
 2512|   275k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2513|   275k|      if (from == to) return;
 2514|   275k|      for (;;) {
 2515|   275k|        const Char* p = nullptr;
 2516|   275k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2517|   275k|          return handler_.on_text(from, to);
 2518|   275k|        ++p;
 2519|   275k|        if (p == to || *p != '}')
 2520|   275k|          return handler_.on_error("unmatched '}' in format string");
 2521|   275k|        handler_.on_text(from, p);
 2522|   275k|        from = p + 1;
 2523|   275k|      }
 2524|   275k|    }
 2525|   275k|    Handler& handler_;
 2526|   275k|  } write = {handler};
 2527|   551k|  while (begin != end) {
  ------------------
  |  Branch (2527:10): [True: 551k, False: 8]
  ------------------
 2528|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2529|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2530|   551k|    const Char* p = begin;
 2531|   551k|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2531:9): [True: 551k, False: 0]
  |  Branch (2531:26): [True: 275k, False: 275k]
  ------------------
 2532|   275k|      return write(begin, end);
 2533|   275k|    write(begin, p);
 2534|   275k|    begin = parse_replacement_field(p, end, handler);
 2535|   275k|  }
 2536|   275k|}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1751|  1.80M|  void advance_to(iterator it) {
 1752|  1.80M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1752:9): [Folded - Ignored]
  ------------------
 1753|  1.80M|  }
_ZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2453|   585k|                                           Handler&& handler) -> const Char* {
 2454|   585k|  struct id_adapter {
 2455|   585k|    Handler& handler;
 2456|   585k|    int arg_id;
 2457|       |
 2458|   585k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2459|   585k|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2460|   585k|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2461|   585k|      arg_id = handler.on_arg_id(id);
 2462|   585k|    }
 2463|   585k|  };
 2464|       |
 2465|   585k|  ++begin;
 2466|   585k|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2466:7): [True: 0, False: 585k]
  ------------------
 2467|   585k|  if (*begin == '}') {
  ------------------
  |  Branch (2467:7): [True: 0, False: 585k]
  ------------------
 2468|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2469|   585k|  } else if (*begin == '{') {
  ------------------
  |  Branch (2469:14): [True: 0, False: 585k]
  ------------------
 2470|      0|    handler.on_text(begin, begin + 1);
 2471|   585k|  } else {
 2472|   585k|    auto adapter = id_adapter{handler, 0};
 2473|   585k|    begin = parse_arg_id(begin, end, adapter);
 2474|   585k|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2474:14): [True: 585k, False: 0]
  ------------------
 2475|   585k|    if (c == '}') {
  ------------------
  |  Branch (2475:9): [True: 0, False: 585k]
  ------------------
 2476|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2477|   585k|    } else if (c == ':') {
  ------------------
  |  Branch (2477:16): [True: 585k, False: 0]
  ------------------
 2478|   585k|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2479|   585k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2479:11): [True: 0, False: 585k]
  |  Branch (2479:27): [True: 0, False: 585k]
  ------------------
 2480|      0|        return handler.on_error("unknown format specifier"), end;
 2481|   585k|    } else {
 2482|      0|      return handler.on_error("missing '}' in format string"), end;
 2483|      0|    }
 2484|   585k|  }
 2485|   585k|  return begin + 1;
 2486|   585k|}
_ZNK3fmt3v1020basic_format_contextINS0_8appenderEcE3argEi:
 1735|   585k|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE6localeEv:
 1755|   585k|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt3v1026basic_format_parse_contextIcE11next_arg_idEv:
  695|   585k|  FMT_CONSTEXPR auto next_arg_id() -> int {
  696|   585k|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (696:9): [True: 0, False: 585k]
  ------------------
  697|      0|      detail::throw_format_error(
  698|      0|          "cannot switch from manual to automatic argument indexing");
  699|      0|      return 0;
  700|      0|    }
  701|   585k|    int id = next_arg_id_++;
  702|   585k|    do_check_arg_id(id);
  703|   585k|    return id;
  704|   585k|  }
_ZN3fmt3v1026basic_format_parse_contextIcE15do_check_arg_idEi:
 1042|   585k|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
 1043|       |  // Argument id is only checked at compile-time during parsing because
 1044|       |  // formatting has its own validation.
 1045|   585k|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (1045:7): [Folded - Ignored]
  ------------------
 1046|   585k|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (1046:8): [Folded - Ignored]
  |  Branch (1046:28): [Folded - Ignored]
  ------------------
 1047|      0|    using context = detail::compile_parse_context<Char>;
 1048|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (1048:9): [True: 0, False: 0]
  ------------------
 1049|      0|      detail::throw_format_error("argument not found");
 1050|      0|  }
 1051|   585k|}
_ZN3fmt3v106detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2209|   585k|                                           Handler&& handler) -> const Char* {
 2210|   585k|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  336|   585k|      fmt::detail::ignore_unused((condition), (message))
  ------------------
 2211|   585k|  Char c = *begin;
 2212|   585k|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2212:7): [True: 585k, False: 0]
  |  Branch (2212:19): [True: 0, False: 585k]
  ------------------
 2213|   585k|  handler.on_auto();
 2214|   585k|  return begin;
 2215|   585k|}
_ZZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2458|   585k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1650|  1.17M|  auto type() const -> detail::type { return type_; }
_ZN3fmt3v106detail7arg_refIcEC2Ev:
 2070|  1.17M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt3v106detail7arg_refIcE5valueC2Ei:
 2085|  1.17M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2279|   585k|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2280|   585k|  auto c = '\0';
 2281|   585k|  if (end - begin > 1) {
  ------------------
  |  Branch (2281:7): [True: 585k, False: 0]
  ------------------
 2282|   585k|    auto next = to_ascii(begin[1]);
 2283|   585k|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2283:9): [True: 585k, False: 0]
  ------------------
 2284|   585k|  } else {
 2285|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2285:9): [True: 0, False: 0]
  ------------------
 2286|      0|    c = to_ascii(*begin);
 2287|      0|  }
 2288|       |
 2289|   585k|  struct {
 2290|   585k|    state current_state = state::start;
 2291|   585k|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2292|   585k|      if (current_state >= s || !valid)
 2293|   585k|        throw_format_error("invalid format specifier");
 2294|   585k|      current_state = s;
 2295|   585k|    }
 2296|   585k|  } enter_state;
 2297|       |
 2298|   585k|  using pres = presentation_type;
 2299|   585k|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2300|   585k|  struct {
 2301|   585k|    const Char*& begin;
 2302|   585k|    dynamic_format_specs<Char>& specs;
 2303|   585k|    type arg_type;
 2304|       |
 2305|   585k|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2306|   585k|      if (!in(arg_type, set)) {
 2307|   585k|        if (arg_type == type::none_type) return begin;
 2308|   585k|        throw_format_error("invalid format specifier");
 2309|   585k|      }
 2310|   585k|      specs.type = pres_type;
 2311|   585k|      return begin + 1;
 2312|   585k|    }
 2313|   585k|  } parse_presentation_type{begin, specs, arg_type};
 2314|       |
 2315|   585k|  for (;;) {
 2316|   585k|    switch (c) {
 2317|      0|    case '<':
  ------------------
  |  Branch (2317:5): [True: 0, False: 585k]
  ------------------
 2318|      0|    case '>':
  ------------------
  |  Branch (2318:5): [True: 0, False: 585k]
  ------------------
 2319|      0|    case '^':
  ------------------
  |  Branch (2319:5): [True: 0, False: 585k]
  ------------------
 2320|      0|      enter_state(state::align);
 2321|      0|      specs.align = parse_align(c);
 2322|      0|      ++begin;
 2323|      0|      break;
 2324|      0|    case '+':
  ------------------
  |  Branch (2324:5): [True: 0, False: 585k]
  ------------------
 2325|      0|    case '-':
  ------------------
  |  Branch (2325:5): [True: 0, False: 585k]
  ------------------
 2326|      0|    case ' ':
  ------------------
  |  Branch (2326:5): [True: 0, False: 585k]
  ------------------
 2327|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2327:11): [True: 0, False: 0]
  ------------------
 2328|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2329|      0|      switch (c) {
  ------------------
  |  Branch (2329:15): [True: 0, False: 0]
  ------------------
 2330|      0|      case '+':
  ------------------
  |  Branch (2330:7): [True: 0, False: 0]
  ------------------
 2331|      0|        specs.sign = sign::plus;
 2332|      0|        break;
 2333|      0|      case '-':
  ------------------
  |  Branch (2333:7): [True: 0, False: 0]
  ------------------
 2334|      0|        specs.sign = sign::minus;
 2335|      0|        break;
 2336|      0|      case ' ':
  ------------------
  |  Branch (2336:7): [True: 0, False: 0]
  ------------------
 2337|      0|        specs.sign = sign::space;
 2338|      0|        break;
 2339|      0|      }
 2340|      0|      ++begin;
 2341|      0|      break;
 2342|      0|    case '#':
  ------------------
  |  Branch (2342:5): [True: 0, False: 585k]
  ------------------
 2343|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2343:11): [True: 0, False: 0]
  ------------------
 2344|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2345|      0|      specs.alt = true;
 2346|      0|      ++begin;
 2347|      0|      break;
 2348|      0|    case '0':
  ------------------
  |  Branch (2348:5): [True: 0, False: 585k]
  ------------------
 2349|      0|      enter_state(state::zero);
 2350|      0|      if (!is_arithmetic_type(arg_type)) {
  ------------------
  |  Branch (2350:11): [True: 0, False: 0]
  ------------------
 2351|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2351:13): [True: 0, False: 0]
  ------------------
 2352|      0|        throw_format_error("format specifier requires numeric argument");
 2353|      0|      }
 2354|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2354:11): [True: 0, False: 0]
  ------------------
 2355|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2356|      0|        specs.align = align::numeric;
 2357|      0|        specs.fill[0] = Char('0');
 2358|      0|      }
 2359|      0|      ++begin;
 2360|      0|      break;
 2361|      0|    case '1':
  ------------------
  |  Branch (2361:5): [True: 0, False: 585k]
  ------------------
 2362|      0|    case '2':
  ------------------
  |  Branch (2362:5): [True: 0, False: 585k]
  ------------------
 2363|      0|    case '3':
  ------------------
  |  Branch (2363:5): [True: 0, False: 585k]
  ------------------
 2364|      0|    case '4':
  ------------------
  |  Branch (2364:5): [True: 0, False: 585k]
  ------------------
 2365|      0|    case '5':
  ------------------
  |  Branch (2365:5): [True: 0, False: 585k]
  ------------------
 2366|      0|    case '6':
  ------------------
  |  Branch (2366:5): [True: 0, False: 585k]
  ------------------
 2367|      0|    case '7':
  ------------------
  |  Branch (2367:5): [True: 0, False: 585k]
  ------------------
 2368|      0|    case '8':
  ------------------
  |  Branch (2368:5): [True: 0, False: 585k]
  ------------------
 2369|      0|    case '9':
  ------------------
  |  Branch (2369:5): [True: 0, False: 585k]
  ------------------
 2370|      0|    case '{':
  ------------------
  |  Branch (2370:5): [True: 0, False: 585k]
  ------------------
 2371|      0|      enter_state(state::width);
 2372|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2373|      0|      break;
 2374|      0|    case '.':
  ------------------
  |  Branch (2374:5): [True: 0, False: 585k]
  ------------------
 2375|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2375:11): [True: 0, False: 0]
  ------------------
 2376|      0|      enter_state(state::precision,
 2377|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2378|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2379|      0|                              ctx);
 2380|      0|      break;
 2381|      0|    case 'L':
  ------------------
  |  Branch (2381:5): [True: 0, False: 585k]
  ------------------
 2382|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2382:11): [True: 0, False: 0]
  ------------------
 2383|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2384|      0|      specs.localized = true;
 2385|      0|      ++begin;
 2386|      0|      break;
 2387|      0|    case 'd':
  ------------------
  |  Branch (2387:5): [True: 0, False: 585k]
  ------------------
 2388|      0|      return parse_presentation_type(pres::dec, integral_set);
 2389|      0|    case 'o':
  ------------------
  |  Branch (2389:5): [True: 0, False: 585k]
  ------------------
 2390|      0|      return parse_presentation_type(pres::oct, integral_set);
 2391|      0|    case 'x':
  ------------------
  |  Branch (2391:5): [True: 0, False: 585k]
  ------------------
 2392|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2393|      0|    case 'X':
  ------------------
  |  Branch (2393:5): [True: 0, False: 585k]
  ------------------
 2394|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2395|      0|    case 'b':
  ------------------
  |  Branch (2395:5): [True: 0, False: 585k]
  ------------------
 2396|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2397|      0|    case 'B':
  ------------------
  |  Branch (2397:5): [True: 0, False: 585k]
  ------------------
 2398|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2399|      0|    case 'a':
  ------------------
  |  Branch (2399:5): [True: 0, False: 585k]
  ------------------
 2400|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2401|      0|    case 'A':
  ------------------
  |  Branch (2401:5): [True: 0, False: 585k]
  ------------------
 2402|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2403|      0|    case 'e':
  ------------------
  |  Branch (2403:5): [True: 0, False: 585k]
  ------------------
 2404|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2405|      0|    case 'E':
  ------------------
  |  Branch (2405:5): [True: 0, False: 585k]
  ------------------
 2406|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2407|      0|    case 'f':
  ------------------
  |  Branch (2407:5): [True: 0, False: 585k]
  ------------------
 2408|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2409|      0|    case 'F':
  ------------------
  |  Branch (2409:5): [True: 0, False: 585k]
  ------------------
 2410|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2411|      0|    case 'g':
  ------------------
  |  Branch (2411:5): [True: 0, False: 585k]
  ------------------
 2412|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2413|      0|    case 'G':
  ------------------
  |  Branch (2413:5): [True: 0, False: 585k]
  ------------------
 2414|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2415|      0|    case 'c':
  ------------------
  |  Branch (2415:5): [True: 0, False: 585k]
  ------------------
 2416|      0|      return parse_presentation_type(pres::chr, integral_set);
 2417|   585k|    case 's':
  ------------------
  |  Branch (2417:5): [True: 585k, False: 0]
  ------------------
 2418|   585k|      return parse_presentation_type(pres::string,
 2419|   585k|                                     bool_set | string_set | cstring_set);
 2420|      0|    case 'p':
  ------------------
  |  Branch (2420:5): [True: 0, False: 585k]
  ------------------
 2421|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2422|      0|    case '?':
  ------------------
  |  Branch (2422:5): [True: 0, False: 585k]
  ------------------
 2423|      0|      return parse_presentation_type(pres::debug,
 2424|      0|                                     char_set | string_set | cstring_set);
 2425|      0|    case '}':
  ------------------
  |  Branch (2425:5): [True: 0, False: 585k]
  ------------------
 2426|      0|      return begin;
 2427|      0|    default: {
  ------------------
  |  Branch (2427:5): [True: 0, False: 585k]
  ------------------
 2428|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2428:11): [True: 0, False: 0]
  ------------------
 2429|       |      // Parse fill and alignment.
 2430|      0|      auto fill_end = begin + code_point_length(begin);
 2431|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2431:11): [True: 0, False: 0]
  ------------------
 2432|      0|        throw_format_error("invalid format specifier");
 2433|      0|        return begin;
 2434|      0|      }
 2435|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2435:11): [True: 0, False: 0]
  ------------------
 2436|      0|        throw_format_error("invalid fill character '{'");
 2437|      0|        return begin;
 2438|      0|      }
 2439|      0|      auto align = parse_align(to_ascii(*fill_end));
 2440|      0|      enter_state(state::align, align != align::none);
 2441|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2442|      0|      specs.align = align;
 2443|      0|      begin = fill_end + 1;
 2444|      0|    }
 2445|   585k|    }
 2446|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2446:9): [True: 0, False: 0]
  ------------------
 2447|      0|    c = to_ascii(*begin);
 2448|      0|  }
 2449|   585k|}
_ZN3fmt3v106detail8to_asciiIcLi0EEEcT_:
 2104|  1.17M|constexpr auto to_ascii(Char c) -> char {
 2105|  1.17M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2105:10): [True: 1.17M, False: 0]
  ------------------
 2106|  1.17M|}
_ZN3fmt3v106detail11parse_alignEc:
 2162|   585k|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2163|   585k|  switch (c) {
  ------------------
  |  Branch (2163:11): [True: 585k, False: 0]
  ------------------
 2164|      0|  case '<':
  ------------------
  |  Branch (2164:3): [True: 0, False: 585k]
  ------------------
 2165|      0|    return align::left;
 2166|      0|  case '>':
  ------------------
  |  Branch (2166:3): [True: 0, False: 585k]
  ------------------
 2167|      0|    return align::right;
 2168|      0|  case '^':
  ------------------
  |  Branch (2168:3): [True: 0, False: 585k]
  ------------------
 2169|      0|    return align::center;
 2170|   585k|  }
 2171|   585k|  return align::none;
 2172|   585k|}
_ZN3fmt3v106detail2inENS1_4typeEi:
  613|   585k|constexpr auto in(type t, int set) -> bool {
  614|   585k|  return ((set >> static_cast<int>(t)) & 1) != 0;
  615|   585k|}
_ZZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2305|   585k|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2306|   585k|      if (!in(arg_type, set)) {
  ------------------
  |  Branch (2306:11): [True: 0, False: 585k]
  ------------------
 2307|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2307:13): [True: 0, False: 0]
  ------------------
 2308|      0|        throw_format_error("invalid format specifier");
 2309|      0|      }
 2310|   585k|      specs.type = pres_type;
 2311|   585k|      return begin + 1;
 2312|   585k|    }
_ZN3fmt3v1016visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1668|   585k|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1669|   585k|  switch (arg.type_) {
  ------------------
  |  Branch (1669:11): [True: 0, False: 585k]
  ------------------
 1670|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1670:3): [True: 0, False: 585k]
  ------------------
 1671|      0|    break;
 1672|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1672:3): [True: 0, False: 585k]
  ------------------
 1673|      0|    return vis(arg.value_.int_value);
 1674|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1674:3): [True: 0, False: 585k]
  ------------------
 1675|      0|    return vis(arg.value_.uint_value);
 1676|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1676:3): [True: 0, False: 585k]
  ------------------
 1677|      0|    return vis(arg.value_.long_long_value);
 1678|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1678:3): [True: 0, False: 585k]
  ------------------
 1679|      0|    return vis(arg.value_.ulong_long_value);
 1680|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1680:3): [True: 0, False: 585k]
  ------------------
 1681|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1682|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1682:3): [True: 0, False: 585k]
  ------------------
 1683|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1684|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1684:3): [True: 0, False: 585k]
  ------------------
 1685|      0|    return vis(arg.value_.bool_value);
 1686|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1686:3): [True: 0, False: 585k]
  ------------------
 1687|      0|    return vis(arg.value_.char_value);
 1688|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1688:3): [True: 0, False: 585k]
  ------------------
 1689|      0|    return vis(arg.value_.float_value);
 1690|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1690:3): [True: 0, False: 585k]
  ------------------
 1691|      0|    return vis(arg.value_.double_value);
 1692|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1692:3): [True: 0, False: 585k]
  ------------------
 1693|      0|    return vis(arg.value_.long_double_value);
 1694|   490k|  case detail::type::cstring_type:
  ------------------
  |  Branch (1694:3): [True: 490k, False: 94.7k]
  ------------------
 1695|   490k|    return vis(arg.value_.string.data);
 1696|  94.7k|  case detail::type::string_type:
  ------------------
  |  Branch (1696:3): [True: 94.7k, False: 490k]
  ------------------
 1697|  94.7k|    using sv = basic_string_view<typename Context::char_type>;
 1698|  94.7k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1699|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1699:3): [True: 0, False: 585k]
  ------------------
 1700|      0|    return vis(arg.value_.pointer);
 1701|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1701:3): [True: 0, False: 585k]
  ------------------
 1702|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1703|   585k|  }
 1704|      0|  return vis(monostate());
 1705|   585k|}
_ZN3fmt3v106detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2131|  1.10M|                              const char*& out) -> bool {
 2132|  1.10M|  out = static_cast<const char*>(
 2133|  1.10M|      std::memchr(first, value, to_unsigned(last - first)));
 2134|  1.10M|  return out != nullptr;
 2135|  1.10M|}
_ZZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2512|   551k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2513|   551k|      if (from == to) return;
  ------------------
  |  Branch (2513:11): [True: 0, False: 551k]
  ------------------
 2514|   551k|      for (;;) {
 2515|   551k|        const Char* p = nullptr;
 2516|   551k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2516:13): [True: 551k, False: 0]
  ------------------
 2517|   551k|          return handler_.on_text(from, to);
 2518|      0|        ++p;
 2519|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2519:13): [True: 0, False: 0]
  |  Branch (2519:24): [True: 0, False: 0]
  ------------------
 2520|      0|          return handler_.on_error("unmatched '}' in format string");
 2521|      0|        handler_.on_text(from, p);
 2522|      0|        from = p + 1;
 2523|      0|      }
 2524|   551k|    }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1279|  94.7k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1280|  94.7k|    string.data = val.data();
 1281|  94.7k|    string.size = val.size();
 1282|  94.7k|  }
_ZN3fmt3v106detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1393|   490k|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1394|   490k|    return val;
 1395|   490k|  }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1275|   490k|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1276|   490k|    string.data = val;
 1277|   490k|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1277:9): [Folded - Ignored]
  ------------------
 1278|   490k|  }
_ZNK3fmt3v106detail6bufferIcE4dataEv:
  847|   637k|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt3v107vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1420|   637k|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1421|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1422|       |  // can be better optimized in fmt::format anyway.
 1423|   637k|  auto buffer = memory_buffer();
 1424|   637k|  detail::vformat_to(buffer, fmt, args);
 1425|   637k|  return to_string(buffer);
 1426|   637k|}

_ZN3fmt3v106detail6bufferIcE6appendIcEEvPKT_S7_:
  875|  1.80M|void buffer<T>::append(const U* begin, const U* end) {
  876|  3.56M|  while (begin != end) {
  ------------------
  |  Branch (876:10): [True: 1.75M, False: 1.80M]
  ------------------
  877|  1.75M|    auto count = to_unsigned(end - begin);
  878|  1.75M|    try_reserve(size_ + count);
  879|  1.75M|    auto free_cap = capacity_ - size_;
  880|  1.75M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (880:9): [True: 0, False: 1.75M]
  ------------------
  881|  1.75M|    std::uninitialized_copy_n(begin, count, ptr_ + size_);
  882|  1.75M|    size_ += count;
  883|  1.75M|    begin += count;
  884|  1.75M|  }
  885|  1.80M|}
_ZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4373|   637k|                typename vformat_args<Char>::type args, locale_ref loc) {
 4374|   637k|  auto out = buffer_appender<Char>(buf);
 4375|   637k|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4375:7): [True: 0, False: 637k]
  |  Branch (4375:26): [True: 0, False: 0]
  ------------------
 4376|      0|    auto arg = args.get(0);
 4377|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4377:9): [True: 0, False: 0]
  ------------------
 4378|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4379|      0|    return;
 4380|      0|  }
 4381|       |
 4382|   637k|  struct format_handler : error_handler {
 4383|   637k|    basic_format_parse_context<Char> parse_context;
 4384|   637k|    buffer_context<Char> context;
 4385|       |
 4386|   637k|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4387|   637k|                   basic_format_args<buffer_context<Char>> p_args,
 4388|   637k|                   locale_ref p_loc)
 4389|   637k|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4390|       |
 4391|   637k|    void on_text(const Char* begin, const Char* end) {
 4392|   637k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4393|   637k|      context.advance_to(write<Char>(context.out(), text));
 4394|   637k|    }
 4395|       |
 4396|   637k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4397|   637k|      return parse_context.next_arg_id();
 4398|   637k|    }
 4399|   637k|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4400|   637k|      return parse_context.check_arg_id(id), id;
 4401|   637k|    }
 4402|   637k|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4403|   637k|      int arg_id = context.arg_id(id);
 4404|   637k|      if (arg_id < 0) on_error("argument not found");
 4405|   637k|      return arg_id;
 4406|   637k|    }
 4407|       |
 4408|   637k|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4409|   637k|      auto arg = get_arg(context, id);
 4410|   637k|      context.advance_to(visit_format_arg(
 4411|   637k|          default_arg_formatter<Char>{context.out(), context.args(),
 4412|   637k|                                      context.locale()},
 4413|   637k|          arg));
 4414|   637k|    }
 4415|       |
 4416|   637k|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4417|   637k|        -> const Char* {
 4418|   637k|      auto arg = get_arg(context, id);
 4419|   637k|      if (arg.type() == type::custom_type) {
 4420|   637k|        parse_context.advance_to(begin);
 4421|   637k|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4422|   637k|        return parse_context.begin();
 4423|   637k|      }
 4424|   637k|      auto specs = detail::dynamic_format_specs<Char>();
 4425|   637k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4426|   637k|      detail::handle_dynamic_spec<detail::width_checker>(
 4427|   637k|          specs.width, specs.width_ref, context);
 4428|   637k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4429|   637k|          specs.precision, specs.precision_ref, context);
 4430|   637k|      if (begin == end || *begin != '}')
 4431|   637k|        on_error("missing '}' in format string");
 4432|   637k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4433|   637k|      context.advance_to(visit_format_arg(f, arg));
 4434|   637k|      return begin;
 4435|   637k|    }
 4436|   637k|  };
 4437|   637k|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4438|   637k|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  965|   637k|      : alloc_(alloc) {
  966|   637k|    this->set(store_, SIZE);
  967|   637k|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (967:9): [Folded - Ignored]
  ------------------
  968|   637k|  }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  936|    201|  FMT_CONSTEXPR20 void grow(size_t size) override {
  937|    201|    detail::abort_fuzzing_if(size > 5000);
  938|    201|    const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  939|    201|    size_t old_capacity = this->capacity();
  940|    201|    size_t new_capacity = old_capacity + old_capacity / 2;
  941|    201|    if (size > new_capacity)
  ------------------
  |  Branch (941:9): [True: 48, False: 153]
  ------------------
  942|     48|      new_capacity = size;
  943|    153|    else if (new_capacity > max_size)
  ------------------
  |  Branch (943:14): [True: 0, False: 153]
  ------------------
  944|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (944:22): [True: 0, False: 0]
  ------------------
  945|    201|    T* old_data = this->data();
  946|    201|    T* new_data =
  947|    201|        std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  948|       |    // Suppress a bogus -Wstringop-overflow in gcc 13.1 (#3481).
  949|    201|    detail::assume(this->size() <= new_capacity);
  950|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  951|    201|    std::uninitialized_copy_n(old_data, this->size(), new_data);
  952|    201|    this->set(new_data, new_capacity);
  953|       |    // deallocate must not throw according to the standard, but even if it does,
  954|       |    // the buffer already uses the new storage and will deallocate it in
  955|       |    // destructor.
  956|    201|    if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (956:9): [True: 56, False: 145]
  ------------------
  957|    201|  }
_ZN3fmt3v106detail16abort_fuzzing_ifEb:
  295|    201|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  296|    201|  ignore_unused(condition);
  297|       |#ifdef FMT_FUZZ
  298|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  299|       |#endif
  300|    201|}
_ZN3fmt3v106detail6assumeEb:
  544|   637k|FMT_INLINE void assume(bool condition) {
  545|   637k|  (void)condition;
  546|   637k|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  547|   637k|  __builtin_assume(condition);
  548|       |#elif FMT_GCC_VERSION
  549|       |  if (!condition) __builtin_unreachable();
  550|       |#endif
  551|   637k|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  969|   637k|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  930|   637k|  FMT_CONSTEXPR20 void deallocate() {
  931|   637k|    T* data = this->data();
  932|   637k|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (932:9): [True: 145, False: 637k]
  ------------------
  933|   637k|  }
_ZN3fmt3v106detail7reserveINS0_8appenderEEERT_S5_m:
  591|  1.80M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  592|  1.80M|  return it;
  593|  1.80M|}
_ZN3fmt3v106detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  619|  1.80M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  620|  1.80M|  return it;
  621|  1.80M|}
_ZN3fmt3v106detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  648|  1.22M|                                                  OutputIt out) -> OutputIt {
  649|  1.22M|  return copy_str<OutChar>(begin, end, out);
  650|  1.22M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3680|  1.22M|    -> OutputIt {
 3681|  1.22M|  auto it = reserve(out, value.size());
 3682|  1.22M|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3683|  1.22M|  return base_iterator(out, it);
 3684|  1.22M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4391|  1.22M|    void on_text(const Char* begin, const Char* end) {
 4392|  1.22M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4393|  1.22M|      context.advance_to(write<Char>(context.out(), text));
 4394|  1.22M|    }
_ZN3fmt3v106detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEEDTcldtfp_3argfp0_EERT_T0_:
 3858|   585k|FMT_CONSTEXPR auto get_arg(Context& ctx, ID id) -> decltype(ctx.arg(id)) {
 3859|   585k|  auto arg = ctx.arg(id);
 3860|   585k|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3860:7): [True: 0, False: 585k]
  ------------------
 3861|   585k|  return arg;
 3862|   585k|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4396|   585k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4397|   585k|      return parse_context.next_arg_id();
 4398|   585k|    }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4417|   585k|        -> const Char* {
 4418|   585k|      auto arg = get_arg(context, id);
 4419|   585k|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4419:11): [True: 0, False: 585k]
  ------------------
 4420|      0|        parse_context.advance_to(begin);
 4421|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4422|      0|        return parse_context.begin();
 4423|      0|      }
 4424|   585k|      auto specs = detail::dynamic_format_specs<Char>();
 4425|   585k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4426|   585k|      detail::handle_dynamic_spec<detail::width_checker>(
 4427|   585k|          specs.width, specs.width_ref, context);
 4428|   585k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4429|   585k|          specs.precision, specs.precision_ref, context);
 4430|   585k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4430:11): [True: 0, False: 585k]
  |  Branch (4430:27): [True: 0, False: 585k]
  ------------------
 4431|      0|        on_error("missing '}' in format string");
 4432|   585k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4433|   585k|      context.advance_to(visit_format_arg(f, arg));
 4434|   585k|      return begin;
 4435|   585k|    }
_ZN3fmt3v106detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3867|   585k|                                       Context& ctx) {
 3868|   585k|  switch (ref.kind) {
  ------------------
  |  Branch (3868:11): [True: 0, False: 585k]
  ------------------
 3869|   585k|  case arg_id_kind::none:
  ------------------
  |  Branch (3869:3): [True: 585k, False: 0]
  ------------------
 3870|   585k|    break;
 3871|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3871:3): [True: 0, False: 585k]
  ------------------
 3872|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3873|      0|                                              ctx.error_handler());
 3874|      0|    break;
 3875|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3875:3): [True: 0, False: 585k]
  ------------------
 3876|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3877|      0|                                              ctx.error_handler());
 3878|      0|    break;
 3879|   585k|  }
 3880|   585k|}
_ZN3fmt3v106detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3867|   585k|                                       Context& ctx) {
 3868|   585k|  switch (ref.kind) {
  ------------------
  |  Branch (3868:11): [True: 0, False: 585k]
  ------------------
 3869|   585k|  case arg_id_kind::none:
  ------------------
  |  Branch (3869:3): [True: 585k, False: 0]
  ------------------
 3870|   585k|    break;
 3871|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3871:3): [True: 0, False: 585k]
  ------------------
 3872|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3873|      0|                                              ctx.error_handler());
 3874|      0|    break;
 3875|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3875:3): [True: 0, False: 585k]
  ------------------
 3876|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3877|      0|                                              ctx.error_handler());
 3878|      0|    break;
 3879|   585k|  }
 3880|   585k|}
_ZN3fmt3v106detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3788|   490k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3789|   490k|    return detail::write(out, value, specs, locale);
 3790|   490k|  }
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2343|   490k|    -> OutputIt {
 2344|   490k|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2344:10): [True: 490k, False: 0]
  ------------------
 2345|   490k|             ? write(out, basic_string_view<Char>(s), specs, {})
 2346|   490k|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2347|   490k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2337|   585k|    -> OutputIt {
 2338|   585k|  return write(out, s, specs);
 2339|   585k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2314|   585k|                         const format_specs<Char>& specs) -> OutputIt {
 2315|   585k|  auto data = s.data();
 2316|   585k|  auto size = s.size();
 2317|   585k|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2317:7): [True: 0, False: 585k]
  |  Branch (2317:31): [True: 0, False: 0]
  ------------------
 2318|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2319|   585k|  bool is_debug = specs.type == presentation_type::debug;
 2320|   585k|  size_t width = 0;
 2321|   585k|  if (specs.width != 0) {
  ------------------
  |  Branch (2321:7): [True: 0, False: 585k]
  ------------------
 2322|      0|    if (is_debug)
  ------------------
  |  Branch (2322:9): [True: 0, False: 0]
  ------------------
 2323|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2324|      0|    else
 2325|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2326|      0|  }
 2327|   585k|  return write_padded(out, specs, size, width,
 2328|   585k|                      [=](reserve_iterator<OutputIt> it) {
 2329|   585k|                        if (is_debug) return write_escaped_string(it, s);
 2330|   585k|                        return copy_str<Char>(data, data + size, it);
 2331|   585k|                      });
 2332|   585k|}
_ZN3fmt3v106detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1769|   585k|                                size_t size, size_t width, F&& f) -> OutputIt {
 1770|   585k|  static_assert(align == align::left || align == align::right, "");
 1771|   585k|  unsigned spec_width = to_unsigned(specs.width);
 1772|   585k|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1772:20): [True: 0, False: 585k]
  ------------------
 1773|       |  // Shifts are encoded as string literals because static constexpr is not
 1774|       |  // supported in constexpr functions.
 1775|   585k|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1775:18): [Folded - Ignored]
  ------------------
 1776|   585k|  size_t left_padding = padding >> shifts[specs.align];
 1777|   585k|  size_t right_padding = padding - left_padding;
 1778|   585k|  auto it = reserve(out, size + padding * specs.fill.size());
 1779|   585k|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1779:7): [True: 0, False: 585k]
  ------------------
 1780|   585k|  it = f(it);
 1781|   585k|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1781:7): [True: 0, False: 585k]
  ------------------
 1782|   585k|  return base_iterator(out, it);
 1783|   585k|}
_ZZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2328|   585k|                      [=](reserve_iterator<OutputIt> it) {
 2329|   585k|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2329:29): [True: 0, False: 585k]
  ------------------
 2330|   585k|                        return copy_str<Char>(data, data + size, it);
 2331|   585k|                      });
_ZN3fmt3v106detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3788|  94.7k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3789|  94.7k|    return detail::write(out, value, specs, locale);
 3790|  94.7k|  }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4389|   637k|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt3v109to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4355|   637k|    -> std::basic_string<Char> {
 4356|   637k|  auto size = buf.size();
 4357|   637k|  detail::assume(size < std::basic_string<Char>().max_size());
 4358|   637k|  return std::basic_string<Char>(buf.data(), size);
 4359|   637k|}

LLVMFuzzerTestOneInput:
   14|  7.09k|{
   15|  7.09k|    disable_output();
   16|       |
   17|  7.09k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   18|       |
   19|  7.09k|    EmptySourceManager source_manager;
   20|  7.09k|    DiagnosticEngine   diagnostic_engine;
   21|  7.09k|    Lexer              lexer{&diagnostic_engine};
   22|  7.09k|    auto               document = phi::make_not_null_scope<ASTDocument>();
   23|       |
   24|  7.09k|    Parser parser{&source_manager, &diagnostic_engine, &lexer};
   25|  7.09k|    parser.ParseString(document, "Fuzz.au3", source);
   26|       |
   27|  7.09k|    return 0;
   28|  7.09k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  2.01k|    {
   18|  2.01k|        m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|  2.01k|    }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  49.3k|    {
   20|  49.3k|        m_NodeType = ASTNodeType::BinaryExpression;
   21|  49.3k|    }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  28.4k|    {
   18|  28.4k|        m_NodeType = ASTNodeType::BooleanLiteral;
   19|  28.4k|    }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|  66.8k|    {
   20|  66.8k|        m_Statements.emplace_back(phi::move(child));
   21|  66.8k|    }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  1.98k|    {
   25|  1.98k|        m_Functions.emplace_back(phi::move(child));
   26|  1.98k|    }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|  4.23k|    {
   18|  4.23k|        m_NodeType = ASTNodeType::ExitStatement;
   19|  4.23k|    }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|  88.8k|    {
   13|  88.8k|        switch (m_NodeType)
   14|  88.8k|        {
   15|  25.4k|            case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:13): [True: 25.4k, False: 63.4k]
  ------------------
   16|  28.9k|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:13): [True: 3.50k, False: 85.3k]
  ------------------
   17|  29.5k|            case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:13): [True: 645, False: 88.2k]
  ------------------
   18|  29.5k|                return true;
   19|       |
   20|  59.2k|            default:
  ------------------
  |  Branch (20:13): [True: 59.2k, False: 29.5k]
  ------------------
   21|  59.2k|                return false;
   22|  88.8k|        }
   23|  88.8k|    }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|  88.8k|    {
   17|  88.8k|        m_NodeType = ASTNodeType::ExpressionStatement;
   18|  88.8k|    }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  6.74k|    {
   17|  6.74k|        m_NodeType = ASTNodeType::FloatLiteral;
   18|  6.74k|    }

_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|  86.5k|    {
   26|  86.5k|        if (m_IsBuiltIn)
  ------------------
  |  Branch (26:13): [True: 1.88k, False: 84.6k]
  ------------------
   27|  1.88k|        {
   28|  1.88k|            return enum_name(m_BuiltInFunction);
   29|  1.88k|        }
   30|       |
   31|  84.6k|        return m_FunctionName;
   32|  86.5k|    }
_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|   132k|    {
   21|   132k|        m_NodeType = ASTNodeType::FunctionCallExpression;
   22|   132k|    }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  10.2k|    {
   25|  10.2k|        m_NodeType = ASTNodeType::IfStatement;
   26|  10.2k|    }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|   230k|    {
   17|   230k|        m_NodeType = ASTNodeType::IntegerLiteral;
   18|   230k|    }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|    782|    {
   19|    782|        m_NodeType = ASTNodeType::KeywordLiteral;
   20|    782|        PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|    782|    }

_ZN10OpenAutoIt18ASTMacroExpressionC2ENS_9TokenKindE:
   18|  1.67k|    {
   19|  1.67k|        m_NodeType = ASTNodeType::MacroExpression;
   20|  1.67k|        PHI_ASSERT(static_cast<phi::size_t>(m_Macro) >= MacroFirst &&
   21|  1.67k|                   static_cast<phi::size_t>(m_Macro) <= MacroLast);
   22|  1.67k|    }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   73|   745k|    virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   71|   745k|    ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   76|  59.2k|    {
   77|  59.2k|        PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   78|  59.2k|        PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   79|       |
   80|  59.2k|        return enum_name(m_NodeType);
   81|  59.2k|    }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   49|  59.2k|{
   50|  59.2k|    switch (node_type)
   51|  59.2k|    {
   52|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   53|      0|    case ASTNodeType::name:                                                                        \
   54|      0|        return "AST" #name;
   55|       |
   56|      0|        OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   14|    441|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   53|    441|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 441, False: 58.8k]
  |  |  |  |  ------------------
  |  |  |  |   54|    441|        return "AST" #name;
  |  |  ------------------
  |  |   15|  10.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   53|  10.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 10.1k, False: 49.1k]
  |  |  |  |  ------------------
  |  |  |  |   54|  10.1k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  10.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|  3.18k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 3.18k, False: 56.1k]
  |  |  |  |  ------------------
  |  |  |  |   54|  3.18k|        return "AST" #name;
  |  |  ------------------
  |  |   17|  3.18k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 59.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   18|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 59.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|  1.12k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   53|  1.12k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 1.12k, False: 58.1k]
  |  |  |  |  ------------------
  |  |  |  |   54|  1.12k|        return "AST" #name;
  |  |  ------------------
  |  |   20|  1.12k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 59.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   21|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 59.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   22|  32.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|  32.2k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 32.2k, False: 27.0k]
  |  |  |  |  ------------------
  |  |  |  |   54|  32.2k|        return "AST" #name;
  |  |  ------------------
  |  |   23|  32.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|    517|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 517, False: 58.7k]
  |  |  |  |  ------------------
  |  |  |  |   54|    517|        return "AST" #name;
  |  |  ------------------
  |  |   24|    913|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(MacroExpression)                                            \
  |  |  ------------------
  |  |  |  |   53|    913|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 913, False: 58.3k]
  |  |  |  |  ------------------
  |  |  |  |   54|    913|        return "AST" #name;
  |  |  ------------------
  |  |   25|  1.65k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   53|  1.65k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 1.65k, False: 57.6k]
  |  |  |  |  ------------------
  |  |  |  |   54|  1.65k|        return "AST" #name;
  |  |  ------------------
  |  |   26|  9.10k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(TernaryIfExpression)                                        \
  |  |  ------------------
  |  |  |  |   53|  9.10k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 9.10k, False: 50.1k]
  |  |  |  |  ------------------
  |  |  |  |   54|  9.10k|        return "AST" #name;
  |  |  ------------------
  |  |   27|  9.10k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 59.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   28|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 59.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   29|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 59.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   30|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 59.2k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   57|       |
   58|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   59|       |
   60|      0|        default:
  ------------------
  |  Branch (60:9): [True: 0, False: 59.2k]
  ------------------
   61|      0|            PHI_ASSERT_NOT_REACHED();
   62|      0|            return "";
   63|  59.2k|    }
   64|  59.2k|}

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  6.89k|    {
   15|  6.89k|        m_NodeType = ASTNodeType::StringLiteral;
   16|  6.89k|    }

_ZN10OpenAutoIt22ASTTernaryIfExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEES5_S5_:
   19|  28.5k|    {
   20|  28.5k|        m_NodeType = ASTNodeType::TernaryIfExpression;
   21|  28.5k|    }

_ZN10OpenAutoIt18ASTUnaryExpressionC2ENS_9TokenKindEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   15|  5.39k|    {
   16|  5.39k|        m_NodeType = ASTNodeType::UnaryExpression;
   17|  5.39k|    }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|  67.7k|    {
   20|  67.7k|        m_NodeType = ASTNodeType::VariableAssignment;
   21|  67.7k|    }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|  56.5k|    {
   15|  56.5k|        m_NodeType = ASTNodeType::VariableExpression;
   16|  56.5k|    }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  6.40k|    {
   18|  6.40k|        m_NodeType = ASTNodeType::WhileStatement;
   19|  6.40k|    }

_ZN10OpenAutoIt17DiagnosticBuilder7WarningIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   55|  47.0k|    {
   56|  47.0k|        m_Diagnostics.emplace_back(Diagnostic{
   57|  47.0k|                id, DiagnosticLevel::Warning, location,
   58|  47.0k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   59|       |
   60|  47.0k|        return *this;
   61|  47.0k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA9_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  53.5k|    {
   66|  53.5k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  53.5k|                id, DiagnosticLevel::Error, location,
   68|  53.5k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  53.5k|        return *this;
   71|  53.5k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA18_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|      8|    {
   66|      8|        m_Diagnostics.emplace_back(Diagnostic{
   67|      8|                id, DiagnosticLevel::Error, location,
   68|      8|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|      8|        return *this;
   71|      8|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA4_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    800|    {
   66|    800|        m_Diagnostics.emplace_back(Diagnostic{
   67|    800|                id, DiagnosticLevel::Error, location,
   68|    800|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    800|        return *this;
   71|    800|    }
_ZN10OpenAutoIt17DiagnosticBuilder4NoteIJEEERS0_NS_14SourceLocationENSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   31|    800|    {
   32|    800|        PHI_ASSERT(!m_Diagnostics.empty());
   33|       |
   34|    800|        m_Diagnostics.back().AddNote(
   35|    800|                Diagnostic{DiagnosticId::None, DiagnosticLevel::Note, location,
   36|    800|                           std::string{fmt::format(fmt::runtime(format_string),
   37|    800|                                                   phi::forward<ArgsT>(args)...)}});
   38|       |
   39|    800|        return *this;
   40|    800|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA25_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    407|    {
   66|    407|        m_Diagnostics.emplace_back(Diagnostic{
   67|    407|                id, DiagnosticLevel::Error, location,
   68|    407|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    407|        return *this;
   71|    407|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  4.18k|    {
   66|  4.18k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  4.18k|                id, DiagnosticLevel::Error, location,
   68|  4.18k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  4.18k|        return *this;
   71|  4.18k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    536|    {
   66|    536|        m_Diagnostics.emplace_back(Diagnostic{
   67|    536|                id, DiagnosticLevel::Error, location,
   68|    536|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    536|        return *this;
   71|    536|    }

_ZN10OpenAutoIt19DiagnosticIdMessageENS_12DiagnosticIdE:
   87|   106k|{
   88|   106k|    PHI_ASSERT(id != DiagnosticId::None);
   89|       |
   90|   106k|    switch (id)
   91|   106k|    {
   92|      0|#define OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EnumName, FlagName, DiagnosticMessage)                 \
   93|      0|    case DiagnosticId::EnumName: {                                                                 \
   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
   95|      0|        return DiagnosticMessage;                                                                  \
   96|      0|    }
   97|       |
   98|      0|        OPENAUTOIT_ENUM_DIAGNOSTIC_IDS()
  ------------------
  |  |   12|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(None, "", "")                                              \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 106k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   13|      0|    /* Lexer warnings */                                                                           \
  |  |   14|  47.0k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(NullCharacter, "-Wnull-character",                         \
  |  |  ------------------
  |  |  |  |   93|  47.0k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 47.0k, False: 59.4k]
  |  |  |  |  ------------------
  |  |  |  |   94|  47.0k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  47.0k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  47.0k|    }
  |  |  ------------------
  |  |   15|  47.0k|                                        "null character ignored")                                  \
  |  |   16|  47.0k|    /* Lexer errors */                                                                             \
  |  |   17|  47.0k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(InvalidFloatLiteral, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 106k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   18|      0|                                        "invalid float literal declaration")                       \
  |  |   19|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FloatHexLiteral, "",                                       \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 106k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   20|      0|                                        "hexadecimal float literal are not allowed")               \
  |  |   21|      0|    /* Parser error */                                                                             \
  |  |   22|      8|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(UnexpectedEndOfFile, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      8|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 8, False: 106k]
  |  |  |  |  ------------------
  |  |  |  |   94|      8|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      8|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      8|    }
  |  |  ------------------
  |  |   23|      8|                                        "unexpected end of file while parsing {:s}")               \
  |  |   24|  54.7k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(Expected, "", "expected {:s}")                             \
  |  |  ------------------
  |  |  |  |   93|  54.7k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 54.7k, False: 51.8k]
  |  |  |  |  ------------------
  |  |  |  |   94|  54.7k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  54.7k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  54.7k|    }
  |  |  ------------------
  |  |   25|  54.7k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IntegerLiteralTooLarge, "",                                \
  |  |  ------------------
  |  |  |  |   93|  3.70k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 3.70k, False: 102k]
  |  |  |  |  ------------------
  |  |  |  |   94|  3.70k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  3.70k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  3.70k|    }
  |  |  ------------------
  |  |   26|  3.70k|                                        "integer literal is too large.")                           \
  |  |   27|  3.70k|    /* Parser fatal error */                                                                       \
  |  |   28|  3.70k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNotFound, "", "'{:s}' file not found")                 \
  |  |  ------------------
  |  |  |  |   93|    492|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 492, False: 106k]
  |  |  |  |  ------------------
  |  |  |  |   94|    492|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    492|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    492|    }
  |  |  ------------------
  |  |   29|    492|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EmptyFilename, "", "empty filename")                       \
  |  |  ------------------
  |  |  |  |   93|    482|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 482, False: 106k]
  |  |  |  |  ------------------
  |  |  |  |   94|    482|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    482|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    482|    }
  |  |  ------------------
  |  |   30|    482|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IncludeNestingTooDeeply, "", "#include nested too deeply") \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 106k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   31|     44|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNameTooLong, "",                                       \
  |  |  ------------------
  |  |  |  |   93|     44|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 44, False: 106k]
  |  |  |  |  ------------------
  |  |  |  |   94|     44|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|     44|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|     44|    }
  |  |  ------------------
  |  |   32|     44|                                        "cannot open file '{:s}': File name too long")
  ------------------
   99|       |
  100|      0|#undef OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL
  101|       |
  102|      0|        default:
  ------------------
  |  Branch (102:9): [True: 0, False: 106k]
  ------------------
  103|      0|            PHI_ASSERT_NOT_REACHED();
  104|   106k|    }
  105|   106k|}

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  1.01M|    {
   46|  1.01M|        Token token{kind,
   47|  1.01M|                    m_Source.substring_view(
   48|  1.01M|                            static_cast<typename phi::string_view::size_type::value_type>(
   49|  1.01M|                                    m_Iterator - m_Source.cbegin()),
   50|  1.01M|                            1u),
   51|  1.01M|                    CurrentSourceLocation()};
   52|       |
   53|       |        // 1 character sized token
   54|  1.01M|        ++m_Column;
   55|       |
   56|  1.01M|        return token;
   57|  1.01M|    }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  1.00M|    {
   61|  1.00M|        Token token{kind, TokenText(token_begin), CurrentSourceLocation()};
   62|       |
   63|       |        // Consume the amount of characters that make up our new token
   64|  1.00M|        m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  1.00M|        return token;
   67|  1.00M|    }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  1.56M|    {
   71|  1.56M|        return m_Source.substring_view(token_begin, m_Iterator);
   72|  1.56M|    }
_ZNK10OpenAutoIt5Lexer21CurrentSourceLocationEv:
   75|  2.06M|    {
   76|  2.06M|        return BuildSourceLocation(m_LineNumber, m_Column);
   77|  2.06M|    }
_ZNK10OpenAutoIt5Lexer19BuildSourceLocationEN3phi7integerImEES3_:
   81|  2.06M|    {
   82|  2.06M|        return {m_SourceFile, line_number, column};
   83|  2.06M|    }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   70|  1.19M|    {
   71|  1.19M|        switch (token_kind)
   72|  1.19M|        {
   73|  16.6k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (73:13): [True: 16.6k, False: 1.17M]
  ------------------
   74|  23.7k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (74:13): [True: 7.14k, False: 1.18M]
  ------------------
   75|  24.1k|            case TokenKind::KW_Not:
  ------------------
  |  Branch (75:13): [True: 394, False: 1.19M]
  ------------------
   76|  24.1k|                return true;
   77|       |
   78|  1.16M|            default:
  ------------------
  |  Branch (78:13): [True: 1.16M, False: 24.1k]
  ------------------
   79|  1.16M|                return false;
   80|  1.19M|        }
   81|  1.19M|    }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   85|   387k|    {
   86|   387k|        switch (token_kind)
   87|   387k|        {
   88|    194|            case TokenKind::KW_And:
  ------------------
  |  Branch (88:13): [True: 194, False: 387k]
  ------------------
   89|    389|            case TokenKind::KW_Or:
  ------------------
  |  Branch (89:13): [True: 195, False: 387k]
  ------------------
   90|  46.4k|            case TokenKind::OP_Equals:
  ------------------
  |  Branch (90:13): [True: 46.1k, False: 341k]
  ------------------
   91|  46.6k|            case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (91:13): [True: 207, False: 387k]
  ------------------
   92|  46.9k|            case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (92:13): [True: 218, False: 387k]
  ------------------
   93|  47.1k|            case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (93:13): [True: 197, False: 387k]
  ------------------
   94|  47.3k|            case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (94:13): [True: 277, False: 387k]
  ------------------
   95|  50.2k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (95:13): [True: 2.81k, False: 385k]
  ------------------
   96|  51.1k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (96:13): [True: 997, False: 386k]
  ------------------
   97|  52.5k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (97:13): [True: 1.31k, False: 386k]
  ------------------
   98|  54.9k|            case TokenKind::OP_Divide:
  ------------------
  |  Branch (98:13): [True: 2.47k, False: 385k]
  ------------------
   99|  55.4k|            case TokenKind::OP_Raise:
  ------------------
  |  Branch (99:13): [True: 481, False: 387k]
  ------------------
  100|  56.2k|            case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (100:13): [True: 761, False: 387k]
  ------------------
  101|  56.4k|            case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (101:13): [True: 235, False: 387k]
  ------------------
  102|  57.0k|            case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (102:13): [True: 591, False: 387k]
  ------------------
  103|  57.2k|            case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (103:13): [True: 230, False: 387k]
  ------------------
  104|  58.1k|            case TokenKind::OP_LessThan:
  ------------------
  |  Branch (104:13): [True: 873, False: 387k]
  ------------------
  105|  58.3k|            case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (105:13): [True: 225, False: 387k]
  ------------------
  106|  62.4k|            case TokenKind::OP_Concatenate:
  ------------------
  |  Branch (106:13): [True: 4.08k, False: 383k]
  ------------------
  107|  63.2k|            case TokenKind::OP_ConcatenateEquals:
  ------------------
  |  Branch (107:13): [True: 738, False: 387k]
  ------------------
  108|  63.2k|                return true;
  109|       |
  110|   324k|            default:
  ------------------
  |  Branch (110:13): [True: 324k, False: 63.2k]
  ------------------
  111|   324k|                return false;
  112|   387k|        }
  113|   387k|    }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  154|  1.98k|    {
  155|  1.98k|        m_Document->AppendFunction(phi::move(function));
  156|  1.98k|    }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  148|  66.8k|    {
  149|  66.8k|        m_Document->AppendStatement(phi::move(statement));
  150|  66.8k|    }

_ZN10OpenAutoIt14SourceLocation7InvalidEv:
   23|  7.09k|    {
   24|  7.09k|        return {nullptr, 1u, 1u};
   25|  7.09k|    }

_ZN10OpenAutoIt13SourceManagerC2Ev:
   21|  7.09k|    SourceManager()          = default;

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_14SourceLocationE:
   27|  2.01M|    {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   39|  12.9M|    {
   40|  12.9M|        return m_Kind;
   41|  12.9M|    }
_ZNK10OpenAutoIt5Token7GetTextEv:
   44|  1.21M|    {
   45|  1.21M|        return m_Text;
   46|  1.21M|    }
_ZNK10OpenAutoIt5Token16GetBeginLocationEv:
   64|  59.0k|    {
   65|  59.0k|        return m_SourceLocation;
   66|  59.0k|    }
_ZNK10OpenAutoIt5Token14GetEndLocationEv:
   69|  1.20k|    {
   70|  1.20k|        return {.source_file = m_SourceLocation.source_file,
   71|  1.20k|                .line_number = m_SourceLocation.line_number,
   72|  1.20k|                .column      = m_SourceLocation.column + m_Text.length()};
   73|  1.20k|    }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   88|   785k|    {
   89|   785k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   90|       |
   91|   785k|        if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (91:13): [True: 6.44k, False: 778k]
  ------------------
   92|   785k|            underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (92:13): [True: 6.44k, False: 0]
  ------------------
   93|  6.44k|        {
   94|  6.44k|            return true;
   95|  6.44k|        }
   96|       |
   97|   778k|        return false;
   98|   785k|    }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
  101|   592k|    {
  102|   592k|        switch (m_Kind)
  103|   592k|        {
  104|    650|            case TokenKind::KW_Default:
  ------------------
  |  Branch (104:13): [True: 650, False: 591k]
  ------------------
  105|  1.56k|            case TokenKind::KW_Null:
  ------------------
  |  Branch (105:13): [True: 914, False: 591k]
  ------------------
  106|  1.56k|                return true;
  107|       |
  108|   590k|            default:
  ------------------
  |  Branch (108:13): [True: 590k, False: 1.56k]
  ------------------
  109|   590k|                return false;
  110|   592k|        }
  111|   592k|    }
_ZNK10OpenAutoIt5Token7IsMacroEv:
  158|   123k|    {
  159|   123k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
  160|       |
  161|   123k|        if (underlying_value >= MacroFirst && underlying_value <= MacroLast)
  ------------------
  |  Branch (161:13): [True: 62.5k, False: 61.3k]
  |  Branch (161:47): [True: 1.67k, False: 60.8k]
  ------------------
  162|  1.67k|        {
  163|  1.67k|            return true;
  164|  1.67k|        }
  165|       |
  166|   122k|        return false;
  167|   123k|    }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  682|   378k|{
  683|   378k|    switch (token_kind)
  684|   378k|    {
  685|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  686|      0|    case TokenKind::name:                                                                          \
  687|      0|        return #name;
  688|       |
  689|      0|        OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  1.32k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  686|  1.32k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.32k, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.32k|        return #name;
  |  |  ------------------
  |  |   13|  27.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  686|  27.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 27.1k, False: 351k]
  |  |  |  |  ------------------
  |  |  |  |  687|  27.1k|        return #name;
  |  |  ------------------
  |  |   14|  27.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   15|  1.99k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  686|  1.99k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.99k, False: 376k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.99k|        return #name;
  |  |  ------------------
  |  |   16|  1.99k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  686|     84|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 84, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     84|        return #name;
  |  |  ------------------
  |  |   17|     84|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   18|  52.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|  52.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 52.4k, False: 325k]
  |  |  |  |  ------------------
  |  |  |  |  687|  52.4k|        return #name;
  |  |  ------------------
  |  |   19|  52.4k|    /* Literals */                                                                                 \
  |  |   20|  61.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  686|  61.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 61.8k, False: 316k]
  |  |  |  |  ------------------
  |  |  |  |  687|  61.8k|        return #name;
  |  |  ------------------
  |  |   21|  61.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  686|  5.99k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.99k, False: 372k]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.99k|        return #name;
  |  |  ------------------
  |  |   22|  5.99k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  686|  1.74k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.74k, False: 376k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.74k|        return #name;
  |  |  ------------------
  |  |   23|  1.74k|    /* Punctuation */                                                                              \
  |  |   24|  3.72k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  686|  3.72k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.72k, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.72k|        return #name;
  |  |  ------------------
  |  |   25|  18.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  18.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18.8k, False: 359k]
  |  |  |  |  ------------------
  |  |  |  |  687|  18.8k|        return #name;
  |  |  ------------------
  |  |   26|  57.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  57.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 57.5k, False: 320k]
  |  |  |  |  ------------------
  |  |  |  |  687|  57.5k|        return #name;
  |  |  ------------------
  |  |   27|  57.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   28|  19.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  19.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19.2k, False: 359k]
  |  |  |  |  ------------------
  |  |  |  |  687|  19.2k|        return #name;
  |  |  ------------------
  |  |   29|  19.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  4.10k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.10k, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.10k|        return #name;
  |  |  ------------------
  |  |   30|  4.10k|    /* Macros */                                                                                   \
  |  |   31|  4.10k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  4.10k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   33|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   34|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   35|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   36|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   37|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   38|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   40|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |   41|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   42|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   43|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   44|    623|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  686|    623|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 623, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|    623|        return #name;
  |  |  ------------------
  |  |   45|    623|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   46|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   47|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   49|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   51|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   52|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   53|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   54|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   55|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   56|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   59|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   60|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   62|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   63|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   65|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   66|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   67|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   70|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   74|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   75|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  686|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 30, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     30|        return #name;
  |  |  ------------------
  |  |   76|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   77|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   81|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   82|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   83|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   84|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   86|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   87|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   88|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   89|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  686|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 42, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     42|        return #name;
  |  |  ------------------
  |  |   90|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   91|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   92|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   93|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   96|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   97|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   98|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  100|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  101|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  102|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  103|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  105|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  106|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  107|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  108|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  109|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  111|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  112|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  113|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  114|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  122|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  123|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  124|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  125|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  127|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  128|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  129|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  130|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  131|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  132|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  133|    172|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  686|    172|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 172, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    172|        return #name;
  |  |  ------------------
  |  |  134|    172|    /* Preprocessor identifiers */                                                                 \
  |  |  135|    172|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|    172|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|    172|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  138|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  139|     16|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  141|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  143|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    352|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|    352|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 352, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    352|        return #name;
  |  |  ------------------
  |  |  145|    352|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|    360|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  686|    360|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 360, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    360|        return #name;
  |  |  ------------------
  |  |  147|    360|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    360|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  686|    346|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 346, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    346|        return #name;
  |  |  ------------------
  |  |  149|    346|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    359|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  686|    359|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 359, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    359|        return #name;
  |  |  ------------------
  |  |  151|    359|    /* Keywords */                                                                                 \
  |  |  152|    359|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    359|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    359|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|  1.76k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  686|  1.76k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.76k, False: 376k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.76k|        return #name;
  |  |  ------------------
  |  |  156|  9.10k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  686|  9.10k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9.10k, False: 369k]
  |  |  |  |  ------------------
  |  |  |  |  687|  9.10k|        return #name;
  |  |  ------------------
  |  |  157|  9.10k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  9.10k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|    255|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  686|    255|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 255, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    255|        return #name;
  |  |  ------------------
  |  |  163|    255|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|    255|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  165|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  166|    351|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  686|    351|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 351, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    351|        return #name;
  |  |  ------------------
  |  |  167|    351|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  168|      3|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  686|     25|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 25, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     25|        return #name;
  |  |  ------------------
  |  |  170|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  171|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  173|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  686|     39|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 39, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     39|        return #name;
  |  |  ------------------
  |  |  175|     39|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  179|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  180|    377|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  686|    377|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 377, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    377|        return #name;
  |  |  ------------------
  |  |  181|    377|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  182|      6|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|    230|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  686|    230|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 230, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    230|        return #name;
  |  |  ------------------
  |  |  184|    230|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  4.48k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  686|  4.48k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.48k, False: 373k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.48k|        return #name;
  |  |  ------------------
  |  |  186|  4.48k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  187|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  188|  1.66k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  686|  1.66k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.66k, False: 376k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.66k|        return #name;
  |  |  ------------------
  |  |  189|  1.66k|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  1.66k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  686|    522|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 522, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|    522|        return #name;
  |  |  ------------------
  |  |  191|  2.79k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  686|  2.79k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.79k, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.79k|        return #name;
  |  |  ------------------
  |  |  192|  2.79k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  686|    721|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 721, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|    721|        return #name;
  |  |  ------------------
  |  |  193|    721|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|    721|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  686|    374|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 374, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    374|        return #name;
  |  |  ------------------
  |  |  195|  5.18k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  686|  5.18k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.18k, False: 373k]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.18k|        return #name;
  |  |  ------------------
  |  |  196|  5.18k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|  5.18k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  686|    324|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 324, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    324|        return #name;
  |  |  ------------------
  |  |  198|    324|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|    324|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  200|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  202|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  203|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  204|      4|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|    172|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  686|    172|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 172, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    172|        return #name;
  |  |  ------------------
  |  |  206|    172|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|    172|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  208|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  213|    494|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|    494|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 494, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|    494|        return #name;
  |  |  ------------------
  |  |  214|    494|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|    494|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  686|     52|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 52, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     52|        return #name;
  |  |  ------------------
  |  |  216|     52|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  219|    290|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  686|    290|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 290, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    290|        return #name;
  |  |  ------------------
  |  |  220|    290|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  686|    185|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 185, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    185|        return #name;
  |  |  ------------------
  |  |  221|    185|    /* Operator */                                                                                 \
  |  |  222|    185|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  29.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)            /* = */                                  \
  |  |  ------------------
  |  |  |  |  686|  29.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29.5k, False: 348k]
  |  |  |  |  ------------------
  |  |  |  |  687|  29.5k|        return #name;
  |  |  ------------------
  |  |  224|  29.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)        /* += */                                 \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  225|     79|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)       /* -= */                                 \
  |  |  ------------------
  |  |  |  |  686|     79|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 79, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     79|        return #name;
  |  |  ------------------
  |  |  226|     79|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)    /* *= */                                 \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  227|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)      /* /= */                                 \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  228|  3.28k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)       /* & */                                  \
  |  |  ------------------
  |  |  |  |  686|  3.28k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.28k, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.28k|        return #name;
  |  |  ------------------
  |  |  229|  3.28k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals) /* &= */                                 \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  230|    212|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)              /* + */                                  \
  |  |  ------------------
  |  |  |  |  686|    212|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 212, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    212|        return #name;
  |  |  ------------------
  |  |  231|    591|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)             /* - */                                  \
  |  |  ------------------
  |  |  |  |  686|    591|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 591, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|    591|        return #name;
  |  |  ------------------
  |  |  232|  2.67k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)          /* * */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.67k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.67k, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.67k|        return #name;
  |  |  ------------------
  |  |  233|  2.67k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)            /* / */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.55k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.55k, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.55k|        return #name;
  |  |  ------------------
  |  |  234|  2.55k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)             /* ^ */                                  \
  |  |  ------------------
  |  |  |  |  686|    853|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 853, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|    853|        return #name;
  |  |  ------------------
  |  |  235|    936|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)      /* == */                                 \
  |  |  ------------------
  |  |  |  |  686|    936|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 936, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|    936|        return #name;
  |  |  ------------------
  |  |  236|    936|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)          /* <> */                                 \
  |  |  ------------------
  |  |  |  |  686|    643|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 643, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|    643|        return #name;
  |  |  ------------------
  |  |  237|  4.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)       /* > */                                  \
  |  |  ------------------
  |  |  |  |  686|  4.29k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.29k, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.29k|        return #name;
  |  |  ------------------
  |  |  238|  4.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)  /* >= */                                 \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  239|  9.54k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)          /* < */                                  \
  |  |  ------------------
  |  |  |  |  686|  9.54k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9.54k, False: 368k]
  |  |  |  |  ------------------
  |  |  |  |  687|  9.54k|        return #name;
  |  |  ------------------
  |  |  240|  9.54k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)     /* <= */                                 \
  |  |  ------------------
  |  |  |  |  686|    255|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 255, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    255|        return #name;
  |  |  ------------------
  |  |  241|  14.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)         /* ? */                                  \
  |  |  ------------------
  |  |  |  |  686|  14.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14.5k, False: 363k]
  |  |  |  |  ------------------
  |  |  |  |  687|  14.5k|        return #name;
  |  |  ------------------
  |  |  242|  18.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)       /* : */                                  \
  |  |  ------------------
  |  |  |  |  686|  18.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18.0k, False: 360k]
  |  |  |  |  ------------------
  |  |  |  |  687|  18.0k|        return #name;
  |  |  ------------------
  |  |  243|  18.0k|    /* Built-in Functions */                                                                       \
  |  |  244|  18.0k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  18.0k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  18.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  686|    882|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 882, False: 377k]
  |  |  |  |  ------------------
  |  |  |  |  687|    882|        return #name;
  |  |  ------------------
  |  |  247|    882|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  248|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  249|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  250|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  251|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  254|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  255|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  256|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  257|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  258|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  259|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  260|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  261|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  263|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  264|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  265|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  270|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  271|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  272|     82|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  686|     82|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 82, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     82|        return #name;
  |  |  ------------------
  |  |  273|     82|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  274|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  275|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  276|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  279|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  280|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  288|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  292|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  293|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  295|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  296|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  297|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  298|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  299|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  300|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  301|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  686|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 46, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     46|        return #name;
  |  |  ------------------
  |  |  302|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  304|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  305|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  307|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  308|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  309|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  312|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  313|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  314|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  315|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  316|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  320|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  321|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  323|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  324|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  325|     74|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  686|     74|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 74, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     74|        return #name;
  |  |  ------------------
  |  |  326|     74|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  327|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  328|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  330|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  331|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  332|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  333|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  334|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  335|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|     48|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 48, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     48|        return #name;
  |  |  ------------------
  |  |  336|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  337|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  338|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  340|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  341|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  343|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  344|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  345|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  347|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  348|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  352|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  353|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  354|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  357|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  358|     53|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  686|     53|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 53, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     53|        return #name;
  |  |  ------------------
  |  |  359|     53|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  686|     29|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     29|        return #name;
  |  |  ------------------
  |  |  360|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  361|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  362|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  363|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  364|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  365|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  366|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  367|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  368|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  369|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  370|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  371|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  373|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  374|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  384|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  385|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  386|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  402|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  403|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  404|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  417|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  418|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  421|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  686|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 46, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     46|        return #name;
  |  |  ------------------
  |  |  422|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  428|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  429|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  430|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  431|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  435|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  436|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  437|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  438|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  440|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  444|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  686|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     28|        return #name;
  |  |  ------------------
  |  |  445|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  448|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  449|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  450|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  451|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  452|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  453|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  454|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  455|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  459|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  460|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  462|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  463|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  466|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  468|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  470|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  471|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  472|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  473|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  474|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  477|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  479|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  480|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  482|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  686|     41|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 41, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     41|        return #name;
  |  |  ------------------
  |  |  483|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  485|     67|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  686|     67|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 67, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     67|        return #name;
  |  |  ------------------
  |  |  486|     67|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  488|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  489|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  491|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  492|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  494|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  495|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  686|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 30, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     30|        return #name;
  |  |  ------------------
  |  |  496|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  497|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  498|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  499|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  500|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  502|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  503|     65|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  686|     65|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 65, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     65|        return #name;
  |  |  ------------------
  |  |  504|     65|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  505|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  507|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  508|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  509|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  510|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  511|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  512|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  517|     93|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  686|     93|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 93, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     93|        return #name;
  |  |  ------------------
  |  |  518|     93|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  519|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  522|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  523|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  525|    235|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  686|    235|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 235, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|    235|        return #name;
  |  |  ------------------
  |  |  526|    235|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  529|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  530|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  533|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  536|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  537|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  538|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  539|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  540|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  541|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  542|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  543|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  544|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  547|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  548|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  549|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  550|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  686|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 40, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     40|        return #name;
  |  |  ------------------
  |  |  551|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  553|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  554|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  562|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  563|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  566|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  567|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  569|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  570|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  573|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  574|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  579|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  580|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  583|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  584|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  585|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  588|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  589|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  590|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  591|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 38, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     38|        return #name;
  |  |  ------------------
  |  |  592|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  596|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  597|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  598|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  600|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  601|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  603|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  604|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  605|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  606|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  686|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 34, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     34|        return #name;
  |  |  ------------------
  |  |  607|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  611|     53|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  686|     53|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 53, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     53|        return #name;
  |  |  ------------------
  |  |  612|     53|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  613|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  614|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  615|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  616|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  618|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  619|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  620|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  621|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  622|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  628|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  629|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  631|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |  632|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  635|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  636|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  638|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  639|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  645|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  646|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  647|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  649|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 378k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  ------------------
  690|       |
  691|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  692|       |
  693|      0|        default:
  ------------------
  |  Branch (693:9): [True: 0, False: 378k]
  ------------------
  694|      0|            PHI_ASSERT_NOT_REACHED();
  695|   378k|    }
  696|   378k|}

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  2.01M|    {
   21|       |#if defined(PHI_DEBUG)
   22|       |        PHI_ASSERT(!m_Finalized);
   23|       |#endif
   24|       |
   25|  2.01M|        m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  2.01M|    }

_ZN10OpenAutoIt10DiagnosticC2ENS_12DiagnosticIdENS_15DiagnosticLevelENS_14SourceLocationEONSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE:
   14|   107k|{}
_ZNK10OpenAutoIt10Diagnostic6IsNoteEv:
   42|   107k|{
   43|   107k|    return m_Level == DiagnosticLevel::Note;
   44|   107k|}
_ZNK10OpenAutoIt10Diagnostic9IsWarningEv:
   47|   106k|{
   48|   106k|    return m_Level == DiagnosticLevel::Warning;
   49|   106k|}
_ZNK10OpenAutoIt10Diagnostic7IsErrorEv:
   52|   106k|{
   53|   106k|    return m_Level == DiagnosticLevel::Error;
   54|   106k|}
_ZNK10OpenAutoIt10Diagnostic12IsFatalErrorEv:
   57|   153k|{
   58|   153k|    return m_Level == DiagnosticLevel::FatalError;
   59|   153k|}
_ZNK10OpenAutoIt10Diagnostic14IsErrorOrFatalEv:
   62|   106k|{
   63|   106k|    return IsError() || IsFatalError();
  ------------------
  |  Branch (63:12): [True: 59.4k, False: 47.0k]
  |  Branch (63:25): [True: 0, False: 47.0k]
  ------------------
   64|   106k|}
_ZN10OpenAutoIt10Diagnostic7AddNoteEOS0_:
   93|    800|{
   94|    800|    PHI_ASSERT(note.IsNote());
   95|       |
   96|    800|    m_Notes.emplace_back(note);
   97|    800|}

_ZN10OpenAutoIt17DiagnosticBuilderC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
   11|   106k|{}
_ZN10OpenAutoIt17DiagnosticBuilderD2Ev:
   14|   106k|{
   15|   106k|    for (auto& diagnostic : m_Diagnostics)
  ------------------
  |  Branch (15:27): [True: 106k, False: 106k]
  ------------------
   16|   106k|    {
   17|   106k|        m_DiagnosticEngine->Report(diagnostic);
   18|   106k|    }
   19|   106k|}

_ZN10OpenAutoIt16DiagnosticEngineC2Ev:
   12|  7.09k|{}
_ZNK10OpenAutoIt16DiagnosticEngine13GetErrorLimitEv:
   29|   397k|{
   30|   397k|    return m_ErrorLimit;
   31|   397k|}
_ZNK10OpenAutoIt16DiagnosticEngine21HasFatalErrorOccurredEv:
   44|   397k|{
   45|   397k|    return m_FatalErrorOccurred;
   46|   397k|}
_ZN10OpenAutoIt16DiagnosticEngine6ReportENS_10DiagnosticE:
   69|   106k|{
   70|   106k|    PHI_ASSERT(!diagnostic.IsNote());
   71|       |
   72|   106k|    if (m_IgnoreAllWarnings)
  ------------------
  |  Branch (72:9): [True: 0, False: 106k]
  ------------------
   73|      0|    {
   74|      0|        diagnostic.IgnoreWarning();
   75|      0|    }
   76|       |
   77|   106k|    if (m_WarningsAsError)
  ------------------
  |  Branch (77:9): [True: 0, False: 106k]
  ------------------
   78|      0|    {
   79|      0|        diagnostic.UpgradeWarningToError();
   80|      0|    }
   81|       |
   82|   106k|    if (diagnostic.IsErrorOrFatal())
  ------------------
  |  Branch (82:9): [True: 59.4k, False: 47.0k]
  ------------------
   83|  59.4k|    {
   84|  59.4k|        m_ErrorOccurred = true;
   85|  59.4k|        ++m_NumberOfErrors;
   86|  59.4k|    }
   87|       |
   88|   106k|    if (diagnostic.IsFatalError())
  ------------------
  |  Branch (88:9): [True: 0, False: 106k]
  ------------------
   89|      0|    {
   90|      0|        m_FatalErrorOccurred = true;
   91|      0|    }
   92|       |
   93|   106k|    if (diagnostic.IsWarning())
  ------------------
  |  Branch (93:9): [True: 47.0k, False: 59.4k]
  ------------------
   94|  47.0k|    {
   95|  47.0k|        ++m_NumberOfWarnings;
   96|  47.0k|    }
   97|       |
   98|   106k|    if (m_Consumer)
  ------------------
  |  Branch (98:9): [True: 0, False: 106k]
  ------------------
   99|      0|    {
  100|      0|        m_Consumer->Report(diagnostic);
  101|      0|    }
  102|   106k|}

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  160|  6.54k|{
  161|  6.54k|    static constexpr auto map =
  162|  6.54k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  163|  6.54k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  164|       |
  165|  6.54k|    std::string str{token.begin(), token.end()};
  166|  6.54k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  167|       |
  168|  6.54k|    return map.at(phi::string_view(str.c_str(), str.size()));
  169|  6.54k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  186|  14.4k|{
  187|  14.4k|    static constexpr auto map =
  188|  14.4k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  189|  14.4k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  190|       |
  191|  14.4k|    std::string str{token.begin(), token.end()};
  192|  14.4k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  193|       |
  194|  14.4k|    return map.at(phi::string_view(str.c_str(), str.size()));
  195|  14.4k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  662|   377k|{
  663|   377k|    static constexpr auto keyword_map =
  664|   377k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  665|   377k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  666|   377k|    static constexpr auto builtin_map =
  667|   377k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  668|   377k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  669|       |
  670|   377k|    std::string str{token.begin(), token.end()};
  671|   377k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  672|       |
  673|   377k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  674|       |
  675|   377k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  676|   377k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (676:9): [True: 224k, False: 152k]
  ------------------
  677|   224k|    {
  678|   224k|        return builtin_map.at(string);
  679|   224k|    }
  680|       |
  681|   152k|    return keyword;
  682|   377k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  707|   304k|{
  708|   304k|    static constexpr auto map =
  709|   304k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  710|   304k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  711|       |
  712|   304k|    return map.at(token);
  713|   304k|}
_ZN10OpenAutoIt5LexerC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
  778|  7.09k|{}
_ZN10OpenAutoIt5Lexer5ResetEv:
  781|  7.09k|{
  782|  7.09k|    m_Iterator = m_Source.begin();
  783|       |
  784|  7.09k|    m_InsideMultiLineComment = false;
  785|       |
  786|  7.09k|    m_LineNumber = 1u;
  787|  7.09k|    m_Column     = 1u;
  788|  7.09k|}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  791|  6.77M|{
  792|  6.77M|    return m_Iterator == m_Source.end();
  793|  6.77M|}
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  796|  2.01M|{
  797|  2.40M|    while (!IsFinished())
  ------------------
  |  Branch (797:12): [True: 2.40M, False: 801]
  ------------------
  798|  2.40M|    {
  799|  2.40M|        char current_character = *m_Iterator;
  800|       |
  801|       |        /* null character */
  802|       |
  803|  2.40M|        if (current_character == '\0')
  ------------------
  |  Branch (803:13): [True: 47.0k, False: 2.35M]
  ------------------
  804|  47.0k|        {
  805|  47.0k|            Diag().Warning(DiagnosticId::NullCharacter, CurrentSourceLocation());
  806|       |
  807|  47.0k|            SkipCurrentCharacter();
  808|  47.0k|        }
  809|       |
  810|       |        /* Multiline comments */
  811|       |
  812|  2.35M|        else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (812:18): [True: 864, False: 2.35M]
  ------------------
  813|    864|        {
  814|    864|            iterator       begin_of_multiline_comment            = m_Iterator;
  815|    864|            const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  816|    864|            const phi::u64 beginning_column_of_multiline_comment = m_Column;
  817|       |
  818|  1.81k|            while (!IsFinished())
  ------------------
  |  Branch (818:20): [True: 1.74k, False: 70]
  ------------------
  819|  1.74k|            {
  820|  1.74k|                current_character = *m_Iterator;
  821|       |
  822|       |                // Check for end comment multiline
  823|  1.74k|                if (current_character == '#')
  ------------------
  |  Branch (823:21): [True: 1.29k, False: 442]
  ------------------
  824|  1.29k|                {
  825|  1.29k|                    iterator begin_of_token = m_Iterator;
  826|  1.29k|                    ConsumeCurrentCharacter();
  827|       |
  828|  7.63k|                    while (!IsFinished())
  ------------------
  |  Branch (828:28): [True: 7.57k, False: 62]
  ------------------
  829|  7.57k|                    {
  830|  7.57k|                        current_character = *m_Iterator;
  831|       |
  832|  7.57k|                        if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (832:29): [True: 6.33k, False: 1.23k]
  ------------------
  833|  6.33k|                        {
  834|  6.33k|                            ConsumeCurrentCharacter();
  835|  6.33k|                            continue;
  836|  6.33k|                        }
  837|       |
  838|  1.23k|                        break;
  839|  7.57k|                    }
  840|       |
  841|  1.29k|                    const TokenKind pre_processor_token_kind =
  842|  1.29k|                            lookup_pre_processor(TokenText(begin_of_token));
  843|       |
  844|  1.29k|                    if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (844:25): [True: 794, False: 504]
  ------------------
  845|    794|                    {
  846|    794|                        m_InsideMultiLineComment = false;
  847|       |
  848|       |                        // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  849|    794|                        m_Iterator -= TokenText(begin_of_token).length().unsafe();
  850|       |
  851|    794|                        Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  852|    794|                                    BuildSourceLocation(beginning_line_of_multiline_comment,
  853|    794|                                                        beginning_column_of_multiline_comment)};
  854|       |
  855|    794|                        return token;
  856|    794|                    }
  857|  1.29k|                }
  858|    442|                else if (current_character == '\n')
  ------------------
  |  Branch (858:26): [True: 194, False: 248]
  ------------------
  859|    194|                {
  860|    194|                    ConsumeCurrentCharacter();
  861|    194|                    AdvanceToNextLine();
  862|    194|                }
  863|    248|                else
  864|    248|                {
  865|       |                    // Otherwise simply consume the character
  866|    248|                    ConsumeCurrentCharacter();
  867|    248|                    m_Column += 1u;
  868|    248|                }
  869|  1.74k|            }
  870|    864|        }
  871|       |
  872|       |        /* Skip characters */
  873|       |
  874|  2.35M|        else if (is_skip_character(current_character))
  ------------------
  |  Branch (874:18): [True: 80.5k, False: 2.27M]
  ------------------
  875|  80.5k|        {
  876|  80.5k|            SkipCurrentCharacter();
  877|  80.5k|        }
  878|       |
  879|       |        /* New Lines */
  880|       |
  881|  2.27M|        else if (current_character == '\n')
  ------------------
  |  Branch (881:18): [True: 64.1k, False: 2.20M]
  ------------------
  882|  64.1k|        {
  883|  64.1k|            Token new_line_token = ConstructToken(TokenKind::NewLine);
  884|       |
  885|  64.1k|            ConsumeCurrentCharacter();
  886|  64.1k|            AdvanceToNextLine();
  887|       |
  888|  64.1k|            return new_line_token;
  889|  64.1k|        }
  890|       |
  891|       |        /* Comment */
  892|       |
  893|  2.20M|        else if (current_character == ';')
  ------------------
  |  Branch (893:18): [True: 811, False: 2.20M]
  ------------------
  894|    811|        {
  895|    811|            iterator begin_of_token = m_Iterator;
  896|    811|            ConsumeCurrentCharacter();
  897|       |
  898|  1.68k|            while (!IsFinished())
  ------------------
  |  Branch (898:20): [True: 1.64k, False: 41]
  ------------------
  899|  1.64k|            {
  900|  1.64k|                current_character = *m_Iterator;
  901|       |
  902|  1.64k|                if (current_character != '\n')
  ------------------
  |  Branch (902:21): [True: 870, False: 770]
  ------------------
  903|    870|                {
  904|    870|                    ConsumeCurrentCharacter();
  905|    870|                    continue;
  906|    870|                }
  907|       |
  908|    770|                break;
  909|  1.64k|            }
  910|       |
  911|    811|            return ConstructToken(TokenKind::Comment, begin_of_token);
  912|    811|        }
  913|       |
  914|       |        /* Macros */
  915|       |
  916|  2.20M|        else if (current_character == '@')
  ------------------
  |  Branch (916:18): [True: 6.54k, False: 2.20M]
  ------------------
  917|  6.54k|        {
  918|  6.54k|            iterator begin_of_token = m_Iterator;
  919|  6.54k|            ConsumeCurrentCharacter();
  920|       |
  921|  65.6k|            while (!IsFinished())
  ------------------
  |  Branch (921:20): [True: 65.4k, False: 208]
  ------------------
  922|  65.4k|            {
  923|  65.4k|                current_character = *m_Iterator;
  924|       |
  925|  65.4k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (925:21): [True: 59.0k, False: 6.33k]
  ------------------
  926|  59.0k|                {
  927|  59.0k|                    ConsumeCurrentCharacter();
  928|  59.0k|                    continue;
  929|  59.0k|                }
  930|       |
  931|  6.33k|                break;
  932|  65.4k|            }
  933|       |
  934|       |            // Emit token
  935|  6.54k|            return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  936|  6.54k|        }
  937|       |
  938|       |        /* Variable identifier */
  939|       |
  940|  2.20M|        else if (current_character == '$')
  ------------------
  |  Branch (940:18): [True: 172k, False: 2.02M]
  ------------------
  941|   172k|        {
  942|   172k|            iterator     begin_of_token = m_Iterator;
  943|   172k|            phi::boolean parsed_something{false};
  944|   172k|            ConsumeCurrentCharacter();
  945|       |
  946|   361k|            while (!IsFinished())
  ------------------
  |  Branch (946:20): [True: 361k, False: 839]
  ------------------
  947|   361k|            {
  948|   361k|                current_character = *m_Iterator;
  949|       |
  950|   361k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (950:21): [True: 189k, False: 171k]
  ------------------
  951|   189k|                {
  952|   189k|                    ConsumeCurrentCharacter();
  953|   189k|                    parsed_something = true;
  954|   189k|                    continue;
  955|   189k|                }
  956|       |
  957|   171k|                break;
  958|   361k|            }
  959|       |
  960|       |            // Ensure that '$' is not a valid variable identifier
  961|   172k|            if (!parsed_something)
  ------------------
  |  Branch (961:17): [True: 34.0k, False: 138k]
  ------------------
  962|  34.0k|            {
  963|  34.0k|                return ConstructToken(TokenKind::Garbage, begin_of_token);
  964|  34.0k|            }
  965|       |
  966|       |            // Emit Token
  967|   138k|            return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  968|   172k|        }
  969|       |
  970|       |        /* PreProcessor directive */
  971|       |
  972|  2.02M|        else if (current_character == '#')
  ------------------
  |  Branch (972:18): [True: 13.1k, False: 2.01M]
  ------------------
  973|  13.1k|        {
  974|  13.1k|            iterator begin_of_token = m_Iterator;
  975|  13.1k|            ConsumeCurrentCharacter();
  976|       |
  977|   118k|            while (!IsFinished())
  ------------------
  |  Branch (977:20): [True: 118k, False: 315]
  ------------------
  978|   118k|            {
  979|   118k|                current_character = *m_Iterator;
  980|       |
  981|   118k|                if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (981:21): [True: 105k, False: 12.8k]
  ------------------
  982|   105k|                {
  983|   105k|                    ConsumeCurrentCharacter();
  984|   105k|                    continue;
  985|   105k|                }
  986|       |
  987|  12.8k|                break;
  988|   118k|            }
  989|       |
  990|       |            // Check for start of multiline comment
  991|  13.1k|            const TokenKind pre_processor_token_kind =
  992|  13.1k|                    lookup_pre_processor(TokenText(begin_of_token));
  993|       |
  994|  13.1k|            if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (994:17): [True: 879, False: 12.2k]
  ------------------
  995|    879|            {
  996|    879|                m_InsideMultiLineComment = true;
  997|    879|            }
  998|       |
  999|  13.1k|            return ConstructToken(pre_processor_token_kind, begin_of_token);
 1000|  13.1k|        }
 1001|       |
 1002|       |        /* SingleQuoteStringLiteral */
 1003|       |
 1004|  2.01M|        else if (current_character == '\'')
  ------------------
  |  Branch (1004:18): [True: 3.09k, False: 2.01M]
  ------------------
 1005|  3.09k|        {
 1006|  3.09k|            iterator     begin_of_token = m_Iterator;
 1007|  3.09k|            phi::boolean did_terminate  = false;
 1008|  3.09k|            ConsumeCurrentCharacter();
 1009|       |
 1010|  4.18k|            while (!IsFinished())
  ------------------
  |  Branch (1010:20): [True: 4.15k, False: 33]
  ------------------
 1011|  4.15k|            {
 1012|  4.15k|                current_character = *m_Iterator;
 1013|  4.15k|                ConsumeCurrentCharacter();
 1014|       |
 1015|  4.15k|                if (current_character == '\'')
  ------------------
  |  Branch (1015:21): [True: 3.06k, False: 1.08k]
  ------------------
 1016|  3.06k|                {
 1017|  3.06k|                    did_terminate = true;
 1018|  3.06k|                    break;
 1019|  3.06k|                }
 1020|  4.15k|            }
 1021|       |
 1022|  3.09k|            if (did_terminate)
  ------------------
  |  Branch (1022:17): [True: 3.06k, False: 33]
  ------------------
 1023|  3.06k|            {
 1024|  3.06k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1025|  3.06k|            }
 1026|       |
 1027|       |            // TODO: Warn unterminated string literal
 1028|  3.09k|        }
 1029|       |
 1030|       |        /* DoubleQuoteStringLiteral */
 1031|       |
 1032|  2.01M|        else if (current_character == '\"')
  ------------------
  |  Branch (1032:18): [True: 5.71k, False: 2.00M]
  ------------------
 1033|  5.71k|        {
 1034|  5.71k|            iterator     begin_of_token = m_Iterator;
 1035|  5.71k|            phi::boolean did_terminate  = false;
 1036|  5.71k|            ConsumeCurrentCharacter();
 1037|       |
 1038|  23.9k|            while (!IsFinished())
  ------------------
  |  Branch (1038:20): [True: 23.8k, False: 85]
  ------------------
 1039|  23.8k|            {
 1040|  23.8k|                current_character = *m_Iterator;
 1041|  23.8k|                ConsumeCurrentCharacter();
 1042|       |
 1043|  23.8k|                if (current_character == '\"')
  ------------------
  |  Branch (1043:21): [True: 5.63k, False: 18.2k]
  ------------------
 1044|  5.63k|                {
 1045|  5.63k|                    did_terminate = true;
 1046|  5.63k|                    break;
 1047|  5.63k|                }
 1048|  23.8k|            }
 1049|       |
 1050|  5.71k|            if (did_terminate)
  ------------------
  |  Branch (1050:17): [True: 5.63k, False: 85]
  ------------------
 1051|  5.63k|            {
 1052|  5.63k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1053|  5.63k|            }
 1054|  5.71k|        }
 1055|       |
 1056|       |        /* Number Literals - IntegerLiteral/FloatLiteral */
 1057|       |
 1058|  2.00M|        else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1058:18): [True: 259k, False: 1.74M]
  |  Branch (1058:18): [True: 269k, False: 1.73M]
  |  Branch (1058:54): [True: 10.1k, False: 1.73M]
  ------------------
 1059|   269k|        {
 1060|   269k|            const phi::boolean start_with_zero{current_character == '0'};
 1061|   269k|            phi::boolean       parsing_hex{false};
 1062|   269k|            phi::boolean       parsing_float{current_character == '.'};
 1063|       |
 1064|   269k|            iterator begin_of_token = m_Iterator;
 1065|   269k|            ConsumeCurrentCharacter();
 1066|       |
 1067|   371k|            while (!IsFinished())
  ------------------
  |  Branch (1067:20): [True: 371k, False: 741]
  ------------------
 1068|   371k|            {
 1069|   371k|                current_character = *m_Iterator;
 1070|       |
 1071|       |                // Is the second character
 1072|   371k|                if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1072:21): [True: 269k, False: 101k]
  |  Branch (1072:58): [True: 78.2k, False: 191k]
  ------------------
 1073|  78.2k|                {
 1074|       |                    // Hex character
 1075|  78.2k|                    if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1075:25): [True: 387, False: 77.8k]
  |  Branch (1075:53): [True: 2.05k, False: 75.7k]
  ------------------
 1076|  2.44k|                    {
 1077|  2.44k|                        parsing_hex = true;
 1078|  2.44k|                        ConsumeCurrentCharacter();
 1079|  2.44k|                        continue;
 1080|  2.44k|                    }
 1081|  78.2k|                }
 1082|       |
 1083|       |                // Actually parsing
 1084|   368k|                if (parsing_hex)
  ------------------
  |  Branch (1084:21): [True: 30.1k, False: 338k]
  ------------------
 1085|  30.1k|                {
 1086|  30.1k|                    if (parsing_float)
  ------------------
  |  Branch (1086:25): [True: 0, False: 30.1k]
  ------------------
 1087|      0|                    {
 1088|       |                        // TODO: Fix include and enable this warning
 1089|       |                        //Diag().Error(DiagnosticId::FloatHexLiteral, CurrentSourceLocation());
 1090|       |
 1091|      0|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1092|      0|                    }
 1093|       |
 1094|  30.1k|                    if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1094:25): [True: 27.8k, False: 2.38k]
  ------------------
 1095|  27.8k|                    {
 1096|  27.8k|                        ConsumeCurrentCharacter();
 1097|  27.8k|                        continue;
 1098|  27.8k|                    }
 1099|  30.1k|                }
 1100|   338k|                else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1100:26): [True: 71.2k, False: 267k]
  ------------------
 1101|  71.2k|                {
 1102|  71.2k|                    ConsumeCurrentCharacter();
 1103|  71.2k|                    continue;
 1104|  71.2k|                }
 1105|       |                // Literal dot
 1106|   267k|                else if (current_character == '.')
  ------------------
  |  Branch (1106:26): [True: 872, False: 266k]
  ------------------
 1107|    872|                {
 1108|    872|                    if (parsing_float)
  ------------------
  |  Branch (1108:25): [True: 515, False: 357]
  ------------------
 1109|    515|                    {
 1110|       |                        //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1111|       |
 1112|    515|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1113|    515|                    }
 1114|       |
 1115|    357|                    parsing_float = true;
 1116|    357|                    ConsumeCurrentCharacter();
 1117|    357|                    continue;
 1118|    872|                }
 1119|       |
 1120|   268k|                break;
 1121|   368k|            }
 1122|       |
 1123|   269k|            if (parsing_float)
  ------------------
  |  Branch (1123:17): [True: 9.96k, False: 259k]
  ------------------
 1124|  9.96k|            {
 1125|       |                // Were not allowed to end with a dot
 1126|       |                // TODO: This is very hacky and looks nasty
 1127|  9.96k|                if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1127:21): [True: 2.20k, False: 7.75k]
  ------------------
 1128|  2.20k|                {
 1129|       |                    //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1130|       |
 1131|  2.20k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
 1132|  2.20k|                }
 1133|       |
 1134|  7.75k|                return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1135|  9.96k|            }
 1136|       |
 1137|   259k|            return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1138|   269k|        }
 1139|       |
 1140|       |        /* Operators */
 1141|       |
 1142|  1.73M|        else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1142:18): [True: 156k, False: 1.58M]
  ------------------
 1143|   156k|        {
 1144|   156k|            iterator begin_of_token = m_Iterator;
 1145|   156k|            ConsumeCurrentCharacter();
 1146|       |
 1147|   156k|            if (!IsFinished())
  ------------------
  |  Branch (1147:17): [True: 155k, False: 410]
  ------------------
 1148|   155k|            {
 1149|   155k|                if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1149:21): [True: 4.45k, False: 151k]
  |  Branch (1149:44): [True: 17.9k, False: 133k]
  |  Branch (1149:70): [True: 1.18k, False: 16.7k]
  ------------------
 1150|  5.63k|                {
 1151|       |                    // We have an actual two part operator
 1152|  5.63k|                    ConsumeCurrentCharacter();
 1153|  5.63k|                }
 1154|   155k|            }
 1155|       |
 1156|   156k|            return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1157|   156k|        }
 1158|       |
 1159|  1.58M|        else if (is_single_operator(current_character))
  ------------------
  |  Branch (1159:18): [True: 148k, False: 1.43M]
  ------------------
 1160|   148k|        {
 1161|   148k|            Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1162|       |
 1163|   148k|            ConsumeCurrentCharacter();
 1164|       |
 1165|   148k|            return token;
 1166|   148k|        }
 1167|       |
 1168|       |        /* Punctioation */
 1169|       |
 1170|  1.43M|        else if (current_character == ',')
  ------------------
  |  Branch (1170:18): [True: 11.0k, False: 1.42M]
  ------------------
 1171|  11.0k|        {
 1172|  11.0k|            Token token = ConstructToken(TokenKind::Comma);
 1173|       |
 1174|  11.0k|            ConsumeCurrentCharacter();
 1175|       |
 1176|  11.0k|            return token;
 1177|  11.0k|        }
 1178|       |
 1179|  1.42M|        else if (current_character == '(')
  ------------------
  |  Branch (1179:18): [True: 217k, False: 1.20M]
  ------------------
 1180|   217k|        {
 1181|   217k|            Token token = ConstructToken(TokenKind::LParen);
 1182|       |
 1183|   217k|            ConsumeCurrentCharacter();
 1184|       |
 1185|   217k|            return token;
 1186|   217k|        }
 1187|       |
 1188|  1.20M|        else if (current_character == ')')
  ------------------
  |  Branch (1188:18): [True: 86.6k, False: 1.11M]
  ------------------
 1189|  86.6k|        {
 1190|  86.6k|            Token token = ConstructToken(TokenKind::RParen);
 1191|       |
 1192|  86.6k|            ConsumeCurrentCharacter();
 1193|       |
 1194|  86.6k|            return token;
 1195|  86.6k|        }
 1196|       |
 1197|  1.11M|        else if (current_character == '.')
  ------------------
  |  Branch (1197:18): [True: 0, False: 1.11M]
  ------------------
 1198|      0|        {
 1199|      0|            Token token = ConstructToken(TokenKind::Dot);
 1200|       |
 1201|      0|            ConsumeCurrentCharacter();
 1202|       |
 1203|      0|            return token;
 1204|      0|        }
 1205|       |
 1206|  1.11M|        else if (current_character == '[')
  ------------------
  |  Branch (1206:18): [True: 480k, False: 636k]
  ------------------
 1207|   480k|        {
 1208|   480k|            Token token = ConstructToken(TokenKind::LSquare);
 1209|       |
 1210|   480k|            ConsumeCurrentCharacter();
 1211|       |
 1212|   480k|            return token;
 1213|   480k|        }
 1214|       |
 1215|   636k|        else if (current_character == ']')
  ------------------
  |  Branch (1215:18): [True: 5.02k, False: 631k]
  ------------------
 1216|  5.02k|        {
 1217|  5.02k|            Token token = ConstructToken(TokenKind::RSquare);
 1218|       |
 1219|  5.02k|            ConsumeCurrentCharacter();
 1220|       |
 1221|  5.02k|            return token;
 1222|  5.02k|        }
 1223|       |
 1224|       |        /* Identifier */
 1225|       |
 1226|   631k|        else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1226:18): [True: 377k, False: 254k]
  ------------------
 1227|   377k|        {
 1228|   377k|            iterator begin_of_token = m_Iterator;
 1229|   377k|            ConsumeCurrentCharacter();
 1230|       |
 1231|  1.23M|            while (!IsFinished())
  ------------------
  |  Branch (1231:20): [True: 1.23M, False: 2.17k]
  ------------------
 1232|  1.23M|            {
 1233|  1.23M|                current_character = *m_Iterator;
 1234|       |
 1235|  1.23M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1235:21): [True: 856k, False: 374k]
  ------------------
 1236|   856k|                {
 1237|   856k|                    ConsumeCurrentCharacter();
 1238|   856k|                    continue;
 1239|   856k|                }
 1240|       |
 1241|   374k|                break;
 1242|  1.23M|            }
 1243|       |
 1244|   377k|            return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1245|   377k|        }
 1246|       |
 1247|       |        /* Unknown/Unexpected character */
 1248|       |
 1249|   254k|        else
 1250|   254k|        {
 1251|       |            // TODO: Warn unexpected character encountered
 1252|   254k|            SkipCurrentCharacter();
 1253|   254k|        }
 1254|  2.40M|    }
 1255|       |
 1256|    801|    return {};
 1257|  2.01M|}
_ZN10OpenAutoIt5Lexer13ProcessStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEES6_:
 1260|  7.09k|{
 1261|  7.09k|    SourceFile fake_source{SourceFile::Type::Basic, file_name.data(), source};
 1262|       |
 1263|  7.09k|    return ProcessFile(&fake_source);
 1264|  7.09k|}
_ZN10OpenAutoIt5Lexer11ProcessFileEN3phi21not_null_observer_ptrIKNS_10SourceFileEEE:
 1267|  7.09k|{
 1268|  7.09k|    TokenStream stream;
 1269|       |
 1270|  7.09k|    m_SourceFile = source_file;
 1271|  7.09k|    m_Source     = m_SourceFile->m_Content;
 1272|  7.09k|    Reset();
 1273|       |
 1274|  2.02M|    while (!IsFinished())
  ------------------
  |  Branch (1274:12): [True: 2.01M, False: 7.09k]
  ------------------
 1275|  2.01M|    {
 1276|  2.01M|        phi::optional<Token> maybe_token = GetNextToken();
 1277|       |
 1278|  2.01M|        if (maybe_token.has_value())
  ------------------
  |  Branch (1278:13): [True: 2.01M, False: 801]
  ------------------
 1279|  2.01M|        {
 1280|  2.01M|            stream.emplace_back(maybe_token.value());
 1281|  2.01M|        }
 1282|  2.01M|    }
 1283|       |
 1284|  7.09k|    stream.finalize();
 1285|  7.09k|    return stream;
 1286|  7.09k|}
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1289|  3.75M|{
 1290|  3.75M|    ++m_Iterator;
 1291|  3.75M|}
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1294|  64.2k|{
 1295|  64.2k|    ++m_LineNumber;
 1296|  64.2k|    m_Column = 1u;
 1297|  64.2k|}
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1300|   381k|{
 1301|   381k|    ConsumeCurrentCharacter();
 1302|   381k|    ++m_Column;
 1303|   381k|}
_ZN10OpenAutoIt5Lexer4DiagEv:
 1306|  47.0k|{
 1307|  47.0k|    return DiagnosticBuilder{m_DiagnosticEngine};
 1308|  47.0k|}
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   37|  6.54k|    {
   38|  6.54k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  6.54k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  6.54k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 2.27k, False: 4.27k]
  ------------------
   42|  2.27k|        {
   43|  2.27k|            return itr->second;
   44|  2.27k|        }
   45|       |
   46|  4.27k|        return m_Default;
   47|  6.54k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   497k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   37|  14.4k|    {
   38|  14.4k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  14.4k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  14.4k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 7.19k, False: 7.26k]
  ------------------
   42|  7.19k|        {
   43|  7.19k|            return itr->second;
   44|  7.19k|        }
   45|       |
   46|  7.26k|        return m_Default;
   47|  14.4k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   107k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   37|   224k|    {
   38|   224k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   224k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   224k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 2.62k, False: 221k]
  ------------------
   42|  2.62k|        {
   43|  2.62k|            return itr->second;
   44|  2.62k|        }
   45|       |
   46|   221k|        return m_Default;
   47|   224k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  89.8M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   37|   377k|    {
   38|   377k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   377k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   377k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 152k, False: 224k]
  ------------------
   42|   152k|        {
   43|   152k|            return itr->second;
   44|   152k|        }
   45|       |
   46|   224k|        return m_Default;
   47|   377k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  12.8M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   37|   304k|    {
   38|   304k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   304k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   304k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 304k, False: 0]
  ------------------
   42|   304k|        {
   43|   304k|            return itr->second;
   44|   304k|        }
   45|       |
   46|      0|        return m_Default;
   47|   304k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  3.68M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  736|   125k|{
  737|   125k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (737:12): [True: 109k, False: 16.2k]
  |  Branch (737:40): [True: 2.14k, False: 14.0k]
  ------------------
  738|   125k|}
_Z17is_skip_characterc:
  716|  2.35M|{
  717|  2.35M|    switch (c)
  718|  2.35M|    {
  719|  75.6k|        case ' ':
  ------------------
  |  Branch (719:9): [True: 75.6k, False: 2.27M]
  ------------------
  720|  76.9k|        case '\v':
  ------------------
  |  Branch (720:9): [True: 1.27k, False: 2.35M]
  ------------------
  721|  77.5k|        case '\t':
  ------------------
  |  Branch (721:9): [True: 551, False: 2.35M]
  ------------------
  722|  78.7k|        case '\b':
  ------------------
  |  Branch (722:9): [True: 1.23k, False: 2.35M]
  ------------------
  723|  80.5k|        case '\f':
  ------------------
  |  Branch (723:9): [True: 1.76k, False: 2.35M]
  ------------------
  724|  80.5k|            return true;
  725|  2.27M|        default:
  ------------------
  |  Branch (725:9): [True: 2.27M, False: 80.5k]
  ------------------
  726|  2.27M|            return false;
  727|  2.35M|    }
  728|  2.35M|}
_Z24is_valid_identifier_charc:
  731|  2.28M|{
  732|  2.28M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (732:12): [True: 1.47M, False: 815k]
  |  Branch (732:40): [True: 8.85k, False: 806k]
  ------------------
  733|  2.28M|}
_Z20is_two_part_operatorc:
  741|  1.73M|{
  742|  1.73M|    switch (c)
  743|  1.73M|    {
  744|  98.9k|        case '=':
  ------------------
  |  Branch (744:9): [True: 98.9k, False: 1.63M]
  ------------------
  745|   110k|        case '+':
  ------------------
  |  Branch (745:9): [True: 11.7k, False: 1.72M]
  ------------------
  746|   116k|        case '-':
  ------------------
  |  Branch (746:9): [True: 5.44k, False: 1.73M]
  ------------------
  747|   119k|        case '*':
  ------------------
  |  Branch (747:9): [True: 3.49k, False: 1.73M]
  ------------------
  748|   124k|        case '/':
  ------------------
  |  Branch (748:9): [True: 5.04k, False: 1.73M]
  ------------------
  749|   131k|        case '&':
  ------------------
  |  Branch (749:9): [True: 7.14k, False: 1.72M]
  ------------------
  750|   150k|        case '<':
  ------------------
  |  Branch (750:9): [True: 18.3k, False: 1.71M]
  ------------------
  751|   156k|        case '>':
  ------------------
  |  Branch (751:9): [True: 5.93k, False: 1.73M]
  ------------------
  752|   156k|            return true;
  753|       |
  754|  1.58M|        default:
  ------------------
  |  Branch (754:9): [True: 1.58M, False: 156k]
  ------------------
  755|  1.58M|            return false;
  756|  1.73M|    }
  757|  1.73M|}
_Z18is_single_operatorc:
  760|  1.58M|{
  761|  1.58M|    switch (c)
  762|  1.58M|    {
  763|  1.15k|        case '^':
  ------------------
  |  Branch (763:9): [True: 1.15k, False: 1.57M]
  ------------------
  764|  72.2k|        case '?':
  ------------------
  |  Branch (764:9): [True: 71.0k, False: 1.50M]
  ------------------
  765|   148k|        case ':':
  ------------------
  |  Branch (765:9): [True: 76.3k, False: 1.50M]
  ------------------
  766|   148k|            return true;
  767|       |
  768|  1.43M|        default:
  ------------------
  |  Branch (768:9): [True: 1.43M, False: 148k]
  ------------------
  769|  1.43M|            return false;
  770|  1.58M|    }
  771|  1.58M|}

_ZN10OpenAutoIt6ParserC2EN3phi21not_null_observer_ptrINS_13SourceManagerEEENS2_INS_16DiagnosticEngineEEENS2_INS_5LexerEEE:
  132|  7.09k|{}
_ZN10OpenAutoIt6Parser16ParseTokenStreamEN3phi21not_null_observer_ptrINS_11ASTDocumentEEEONS_11TokenStreamENS2_IKNS_10SourceFileEEE:
  137|  7.09k|{
  138|  7.09k|    PushParsingContext(phi::move(source_file), phi::move(stream));
  139|       |
  140|  7.09k|    ParseDocument(phi::move(document));
  141|  7.09k|}
_ZN10OpenAutoIt6Parser11ParseStringEN3phi21not_null_observer_ptrINS_11ASTDocumentEEENS1_17basic_string_viewIcNSt3__111char_traitsIcEEEES9_:
  145|  7.09k|{
  146|  7.09k|    TokenStream stream = m_Lexer->ProcessString(file_name, source);
  147|       |
  148|  7.09k|    SourceFile fake_source_file{SourceFile::Type::Basic, std::string_view(file_name),
  149|  7.09k|                                phi::move(source)};
  150|  7.09k|    ParseTokenStream(phi::move(document), phi::move(stream), &fake_source_file);
  151|  7.09k|}
_ZN10OpenAutoIt6Parser13ParseDocumentEN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
  171|  7.09k|{
  172|  7.09k|    m_Document = phi::move(document);
  173|       |
  174|  7.09k|    m_IncludeOnceFiles.clear();
  175|       |
  176|   397k|    while (ShouldContinueParsing())
  ------------------
  |  Branch (176:12): [True: 390k, False: 7.09k]
  ------------------
  177|   390k|    {
  178|   390k|        if (!CurrentTokenStream().has_more())
  ------------------
  |  Branch (178:13): [True: 7.09k, False: 383k]
  ------------------
  179|  7.09k|        {
  180|  7.09k|            PopParsingContext();
  181|  7.09k|            continue;
  182|  7.09k|        }
  183|       |
  184|   383k|        const Token& token = CurrentToken();
  185|       |
  186|       |        // Parse global function definition
  187|   383k|        switch (token.GetTokenKind())
  188|   383k|        {
  189|  12.0k|            case TokenKind::KW_Func: {
  ------------------
  |  Branch (189:13): [True: 12.0k, False: 371k]
  ------------------
  190|  12.0k|                ConsumeCurrent();
  191|       |
  192|  12.0k|                auto function_definition = ParseFunctionDefinition();
  193|  12.0k|                if (!function_definition)
  ------------------
  |  Branch (193:21): [True: 10.0k, False: 1.98k]
  ------------------
  194|  10.0k|                {
  195|  10.0k|                    err("ERR: Failed to parse function definition!\n");
  196|  10.0k|                    continue;
  197|  10.0k|                }
  198|       |
  199|  1.98k|                AppendFunctionToDocument(function_definition.release_not_null());
  200|  1.98k|                break;
  201|  12.0k|            }
  202|       |
  203|    621|            case TokenKind::Comment:
  ------------------
  |  Branch (203:13): [True: 621, False: 382k]
  ------------------
  204|  1.09k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (204:13): [True: 473, False: 382k]
  ------------------
  205|  1.68k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (205:13): [True: 590, False: 382k]
  ------------------
  206|  18.0k|            case TokenKind::NewLine: {
  ------------------
  |  Branch (206:13): [True: 16.3k, False: 366k]
  ------------------
  207|       |                // Simply ignore and consume newlines and comments
  208|  18.0k|                ConsumeCurrent();
  209|  18.0k|                break;
  210|  1.68k|            }
  211|  6.87k|            case TokenKind::NotAToken: {
  ------------------
  |  Branch (211:13): [True: 6.87k, False: 376k]
  ------------------
  212|  6.87k|                err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  213|  6.87k|                                std::string_view(token.GetText())));
  214|  6.87k|                ConsumeCurrent();
  215|  6.87k|                break;
  216|  1.68k|            }
  217|       |
  218|  2.23k|            case TokenKind::PP_Include: {
  ------------------
  |  Branch (218:13): [True: 2.23k, False: 380k]
  ------------------
  219|  2.23k|                ConsumeCurrent();
  220|       |
  221|  2.23k|                ParseIncludeDirective();
  222|       |
  223|  2.23k|                break;
  224|  1.68k|            }
  225|       |
  226|  1.07k|            case TokenKind::PP_IncludeOnce: {
  ------------------
  |  Branch (226:13): [True: 1.07k, False: 382k]
  ------------------
  227|  1.07k|                ConsumeCurrent();
  228|       |
  229|  1.07k|                m_IncludeOnceFiles.emplace(CurrentSourceFile().get());
  230|       |
  231|  1.07k|                RequireNewLine();
  232|       |
  233|  1.07k|                break;
  234|  1.68k|            }
  235|       |
  236|   342k|            default: {
  ------------------
  |  Branch (236:13): [True: 342k, False: 40.2k]
  ------------------
  237|   342k|                auto statement = ParseStatement();
  238|   342k|                if (!statement)
  ------------------
  |  Branch (238:21): [True: 276k, False: 66.8k]
  ------------------
  239|   276k|                {
  240|       |                    // TODO: Proper error reporting
  241|   276k|                    err("ERR: Failed to parse statement!\n");
  242|       |
  243|   276k|                    if (HasMoreTokens())
  ------------------
  |  Branch (243:25): [True: 272k, False: 4.02k]
  ------------------
  244|   272k|                    {
  245|       |                        // Swallow the bad token
  246|   272k|                        ConsumeCurrent();
  247|   272k|                    }
  248|   276k|                    continue;
  249|   276k|                }
  250|       |
  251|  66.8k|                AppendStatementToDocument(statement.release_not_null());
  252|       |
  253|  66.8k|                RequireNewLine();
  254|  66.8k|                break;
  255|   342k|            }
  256|   383k|        }
  257|   383k|    }
  258|  7.09k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamE:
  262|  7.09k|{
  263|  7.09k|    PushParsingContext(phi::move(source_file), phi::move(token_stream), SourceLocation::Invalid());
  264|  7.09k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamENS_14SourceLocationE:
  268|  7.09k|{
  269|  7.09k|    ParsingContext context{.source_file   = phi::move(source_file),
  270|  7.09k|                           .token_stream  = phi::move(token_stream),
  271|  7.09k|                           .included_from = phi::move(included_from)};
  272|       |
  273|  7.09k|    m_ParsingContextStack.emplace(phi::move(context));
  274|  7.09k|    m_SourceManager->SetLocalSearchPath(source_file->m_FilePath.parent_path());
  275|  7.09k|}
_ZN10OpenAutoIt6Parser17PopParsingContextEv:
  278|  7.09k|{
  279|  7.09k|    m_ParsingContextStack.pop();
  280|  7.09k|    if (!m_ParsingContextStack.empty())
  ------------------
  |  Branch (280:9): [True: 0, False: 7.09k]
  ------------------
  281|      0|    {
  282|      0|        m_SourceManager->SetLocalSearchPath(
  283|      0|                m_ParsingContextStack.top().source_file->m_FilePath.parent_path());
  284|      0|    }
  285|  7.09k|    else
  286|  7.09k|    {
  287|  7.09k|        m_SourceManager->SetLocalSearchPath("");
  288|  7.09k|    }
  289|  7.09k|}
_ZN10OpenAutoIt6Parser21CurrentParsingContextEv:
  292|  1.07k|{
  293|  1.07k|    PHI_ASSERT(!m_ParsingContextStack.empty());
  294|       |
  295|  1.07k|    return m_ParsingContextStack.top();
  296|  1.07k|}
_ZN10OpenAutoIt6Parser17CurrentSourceFileEv:
  299|  1.07k|{
  300|  1.07k|    return CurrentParsingContext().source_file.not_null();
  301|  1.07k|}
_ZN10OpenAutoIt6Parser18CurrentTokenStreamEv:
  304|  2.40M|{
  305|  2.40M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  306|       |
  307|  2.40M|    return m_ParsingContextStack.top().token_stream;
  308|  2.40M|}
_ZNK10OpenAutoIt6Parser18CurrentTokenStreamEv:
  311|  14.2M|{
  312|  14.2M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  313|       |
  314|  14.2M|    return m_ParsingContextStack.top().token_stream;
  315|  14.2M|}
_ZNK10OpenAutoIt6Parser13HasMoreTokensEv:
  318|  4.76M|{
  319|  4.76M|    return CurrentTokenStream().has_more();
  320|  4.76M|}
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  323|  4.71M|{
  324|  4.71M|    PHI_ASSERT(CurrentTokenStream().has_more());
  325|       |
  326|  4.71M|    return CurrentTokenStream().look_ahead();
  327|  4.71M|}
_ZNK10OpenAutoIt6Parser13PreviousTokenEv:
  330|  54.3k|{
  331|  54.3k|    return CurrentTokenStream().look_behind();
  332|  54.3k|}
_ZNK10OpenAutoIt6Parser21ShouldContinueParsingEv:
  335|   397k|{
  336|   397k|    const phi::boolean stack_empty          = m_ParsingContextStack.empty();
  337|   397k|    const phi::boolean fatal_error_occurred = m_DiagnosticEngine->HasFatalErrorOccurred();
  338|   397k|    const phi::boolean error_limit_reached =
  339|   397k|            (m_DiagnosticEngine->GetErrorLimit() == 0u ?
  ------------------
  |  Branch (339:14): [True: 397k, False: 0]
  ------------------
  340|   397k|                     false :
  341|   397k|                     m_DiagnosticEngine->GetNumberOfError() >= m_DiagnosticEngine->GetErrorLimit());
  342|       |
  343|   397k|    return !stack_empty && !fatal_error_occurred && !error_limit_reached;
  ------------------
  |  Branch (343:12): [True: 390k, False: 7.09k]
  |  Branch (343:28): [True: 390k, False: 0]
  |  Branch (343:53): [True: 390k, False: 0]
  ------------------
  344|   397k|}
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  347|  2.01M|{
  348|  2.01M|    CurrentTokenStream().consume();
  349|  2.01M|}
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  352|  67.9k|{
  353|  68.8k|    while (HasMoreTokens())
  ------------------
  |  Branch (353:12): [True: 68.2k, False: 561]
  ------------------
  354|  68.2k|    {
  355|  68.2k|        switch (CurrentToken().GetTokenKind())
  356|  68.2k|        {
  357|    392|            case TokenKind::Comment:
  ------------------
  |  Branch (357:13): [True: 392, False: 67.8k]
  ------------------
  358|    596|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (358:13): [True: 204, False: 68.0k]
  ------------------
  359|    869|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (359:13): [True: 273, False: 67.9k]
  ------------------
  360|    869|                ConsumeCurrent();
  361|    869|                break;
  362|       |
  363|  67.3k|            default:
  ------------------
  |  Branch (363:13): [True: 67.3k, False: 869]
  ------------------
  364|  67.3k|                return;
  365|  68.2k|        }
  366|  68.2k|    }
  367|  67.9k|}
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  370|   427k|{
  371|   438k|    while (HasMoreTokens())
  ------------------
  |  Branch (371:12): [True: 438k, False: 311]
  ------------------
  372|   438k|    {
  373|   438k|        switch (CurrentToken().GetTokenKind())
  374|   438k|        {
  375|    437|            case TokenKind::Comment:
  ------------------
  |  Branch (375:13): [True: 437, False: 438k]
  ------------------
  376|    631|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (376:13): [True: 194, False: 438k]
  ------------------
  377|    830|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (377:13): [True: 199, False: 438k]
  ------------------
  378|  11.3k|            case TokenKind::NewLine:
  ------------------
  |  Branch (378:13): [True: 10.5k, False: 428k]
  ------------------
  379|  11.3k|                ConsumeCurrent();
  380|  11.3k|                break;
  381|       |
  382|   427k|            default:
  ------------------
  |  Branch (382:13): [True: 427k, False: 11.3k]
  ------------------
  383|   427k|                return;
  384|   438k|        }
  385|   438k|    }
  386|   427k|}
_ZN10OpenAutoIt6Parser14RequireNewLineEv:
  389|  67.9k|{
  390|  67.9k|    ConsumeComments();
  391|       |
  392|  67.9k|    if (!HasMoreTokens())
  ------------------
  |  Branch (392:9): [True: 561, False: 67.3k]
  ------------------
  393|    561|    {
  394|    561|        return;
  395|    561|    }
  396|       |
  397|  67.3k|    const Token& token = CurrentToken();
  398|       |
  399|  67.3k|    if (token.GetTokenKind() != TokenKind::NewLine)
  ------------------
  |  Branch (399:9): [True: 53.5k, False: 13.8k]
  ------------------
  400|  53.5k|    {
  401|  53.5k|        Diag().Error(DiagnosticId::Expected, PreviousToken().GetBeginLocation(), "new line");
  402|  53.5k|    }
  403|       |
  404|  67.3k|    ConsumeCurrent();
  405|  67.3k|}
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  408|   627k|{
  409|       |    // Do we even have more tokens?
  410|   627k|    if (!HasMoreTokens())
  ------------------
  |  Branch (410:9): [True: 1.04k, False: 626k]
  ------------------
  411|  1.04k|    {
  412|  1.04k|        return {};
  413|  1.04k|    }
  414|       |
  415|   626k|    const Token& token = CurrentToken();
  416|       |
  417|       |    // Is this the correct token kind
  418|   626k|    if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (418:9): [True: 48.2k, False: 578k]
  ------------------
  419|  48.2k|    {
  420|  48.2k|        return {};
  421|  48.2k|    }
  422|       |
  423|   578k|    ConsumeCurrent();
  424|   578k|    return token;
  425|   626k|}
_ZN10OpenAutoIt6Parser4DiagEv:
  441|  59.4k|{
  442|  59.4k|    return {m_DiagnosticEngine};
  443|  59.4k|}
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  446|  12.0k|{
  447|       |    // Next we MUST parse the function name
  448|  12.0k|    auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  449|  12.0k|    if (!function_name_token)
  ------------------
  |  Branch (449:9): [True: 403, False: 11.6k]
  ------------------
  450|    403|    {
  451|    403|        err("Expected identifier for function name");
  452|    403|        return {};
  453|    403|    }
  454|       |
  455|  11.6k|    auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  456|  11.6k|    function_definition->m_FunctionName = function_name_token->GetText();
  457|       |
  458|       |    // Next we MUST parse an opening parenthesis (LParen)
  459|  11.6k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (459:9): [True: 472, False: 11.1k]
  ------------------
  460|    472|    {
  461|    472|        err("Expected opening parenthesis");
  462|    472|        return {};
  463|    472|    }
  464|       |
  465|       |    // Next we parse the function parameter declarations until right parenthesis (RParen)
  466|  15.9k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (466:12): [True: 15.9k, False: 47]
  |  Branch (466:12): [True: 10.5k, False: 5.45k]
  |  Branch (466:31): [True: 10.5k, False: 5.41k]
  ------------------
  467|  10.5k|    {
  468|  10.5k|        phi::optional<FunctionParameter> function_parameter_optional =
  469|  10.5k|                ParseFunctionParameterDefinition();
  470|  10.5k|        if (!function_parameter_optional)
  ------------------
  |  Branch (470:13): [True: 5.67k, False: 4.84k]
  ------------------
  471|  5.67k|        {
  472|       |            // TODO: Proper error reporting
  473|  5.67k|            return {};
  474|  5.67k|        }
  475|  4.84k|        FunctionParameter& function_parameter = function_parameter_optional.value();
  476|       |
  477|  4.84k|        function_definition->m_Parameters.emplace_back(phi::move(function_parameter));
  478|       |
  479|       |        // Parse comma
  480|  4.84k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (480:13): [True: 4.84k, False: 0]
  |  Branch (480:13): [True: 2.06k, False: 2.78k]
  |  Branch (480:32): [True: 2.06k, False: 2.78k]
  ------------------
  481|  2.06k|        {
  482|  2.06k|            ConsumeCurrent();
  483|  2.06k|        }
  484|  4.84k|    }
  485|       |
  486|       |    // Next we MUST parse a right parenthesis (RParen)
  487|  5.45k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (487:9): [True: 47, False: 5.41k]
  ------------------
  488|     47|    {
  489|     47|        err("ERR: Expected ')'");
  490|     47|        return {};
  491|     47|    }
  492|       |
  493|       |    // Next we MUST parse a new line
  494|  5.41k|    if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (494:9): [True: 2.60k, False: 2.80k]
  ------------------
  495|  2.60k|    {
  496|  2.60k|        err("ERR: Missing newline!");
  497|  2.60k|        return {};
  498|  2.60k|    }
  499|       |
  500|       |    // Next parse Statements until EndFunc
  501|  3.93k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (501:12): [True: 3.90k, False: 31]
  |  Branch (501:12): [True: 1.91k, False: 2.01k]
  |  Branch (501:31): [True: 1.91k, False: 1.98k]
  ------------------
  502|  1.91k|    {
  503|  1.91k|        auto statement = ParseStatement();
  504|  1.91k|        if (!statement)
  ------------------
  |  Branch (504:13): [True: 791, False: 1.12k]
  ------------------
  505|    791|        {
  506|    791|            err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  507|    791|                            std::string_view(function_definition->m_FunctionName)));
  508|       |            // TODO: Report proper error
  509|    791|            return {};
  510|    791|        }
  511|       |
  512|  1.12k|        function_definition->m_FunctionBody.emplace_back(phi::move(statement.release_not_null()));
  513|       |
  514|  1.12k|        ConsumeNewLineAndComments();
  515|  1.12k|    }
  516|       |
  517|       |    // Next we MUST parse EndFunc
  518|  2.01k|    if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (518:9): [True: 31, False: 1.98k]
  ------------------
  519|     31|    {
  520|       |        // TODO: Proper error
  521|     31|        return {};
  522|     31|    }
  523|       |
  524|  1.98k|    return phi::move(function_definition);
  525|  2.01k|}
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  528|  10.5k|{
  529|       |    // TODO: This entire function requires more error checks
  530|  10.5k|    FunctionParameter parameter;
  531|       |
  532|  22.4k|    while (HasMoreTokens())
  ------------------
  |  Branch (532:12): [True: 22.3k, False: 71]
  ------------------
  533|  22.3k|    {
  534|  22.3k|        const Token& token = CurrentToken();
  535|       |
  536|  22.3k|        switch (token.GetTokenKind())
  537|  22.3k|        {
  538|  7.06k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (538:13): [True: 7.06k, False: 15.3k]
  ------------------
  539|  7.06k|                parameter.name = token.GetText().substring_view(1u);
  540|  7.06k|                ConsumeCurrent();
  541|  7.06k|                break;
  542|      0|            }
  543|    224|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (543:13): [True: 224, False: 22.1k]
  ------------------
  544|    224|                parameter.as_const = true;
  545|    224|                ConsumeCurrent();
  546|    224|                break;
  547|      0|            }
  548|     66|            case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (548:13): [True: 66, False: 22.3k]
  ------------------
  549|     66|                parameter.by_ref = true;
  550|     66|                ConsumeCurrent();
  551|     66|                break;
  552|      0|            }
  553|  5.78k|            case TokenKind::OP_Equals: {
  ------------------
  |  Branch (553:13): [True: 5.78k, False: 16.5k]
  ------------------
  554|  5.78k|                if (parameter.name.is_empty())
  ------------------
  |  Branch (554:21): [True: 564, False: 5.22k]
  ------------------
  555|    564|                {
  556|       |                    // TODO: PROPER ERROR
  557|    564|                    return {};
  558|    564|                }
  559|       |
  560|       |                // Consume the '='
  561|  5.22k|                ConsumeCurrent();
  562|       |
  563|       |                // Default value is an expression
  564|  5.22k|                auto default_expression = ParseExpression();
  565|  5.22k|                if (!default_expression)
  ------------------
  |  Branch (565:21): [True: 648, False: 4.57k]
  ------------------
  566|    648|                {
  567|       |                    // TODO: Report error
  568|    648|                    return {};
  569|    648|                }
  570|       |
  571|       |                // For default values we artificially create a variable assignment
  572|  4.57k|                auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  573|       |
  574|  4.57k|                default_var_assignment->m_Scope                  = VariableScope::Auto;
  575|  4.57k|                default_var_assignment->m_VariableName           = parameter.name;
  576|  4.57k|                default_var_assignment->m_InitialValueExpression = phi::move(default_expression);
  577|       |
  578|  4.57k|                parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  579|  4.57k|                break;
  580|  5.22k|            }
  581|  2.06k|            case TokenKind::Comma:
  ------------------
  |  Branch (581:13): [True: 2.06k, False: 20.3k]
  ------------------
  582|  4.84k|            case TokenKind::RParen: {
  ------------------
  |  Branch (582:13): [True: 2.78k, False: 19.5k]
  ------------------
  583|  4.84k|                return phi::move(parameter);
  584|  2.06k|            }
  585|  4.39k|            default: {
  ------------------
  |  Branch (585:13): [True: 4.39k, False: 17.9k]
  ------------------
  586|       |                // TODO: Report error
  587|  4.39k|                return {};
  588|  2.06k|            }
  589|  22.3k|        }
  590|  22.3k|    }
  591|       |
  592|       |    // TODO: Report error unexpected EOF
  593|     71|    return {};
  594|  10.5k|}
_ZN10OpenAutoIt6Parser21ParseIncludeDirectiveEv:
  597|  2.23k|{
  598|  2.23k|    if (!HasMoreTokens())
  ------------------
  |  Branch (598:9): [True: 8, False: 2.22k]
  ------------------
  599|      8|    {
  600|      8|        Diag().Error(DiagnosticId::UnexpectedEndOfFile, PreviousToken().GetBeginLocation(),
  601|      8|                     "include directive");
  602|      8|        return;
  603|      8|    }
  604|       |
  605|  2.22k|    const Token&     token = CurrentToken();
  606|  2.22k|    phi::string_view file_name;
  607|  2.22k|    IncludeType      include_type = IncludeType::Local;
  608|       |
  609|       |    // Local include like this '#include "foo.au3"'
  610|  2.22k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (610:9): [True: 536, False: 1.68k]
  ------------------
  611|    536|    {
  612|    536|        ConsumeCurrent();
  613|       |
  614|       |        // Get the file name
  615|    536|        file_name = token.GetText().substring_view(1u, token.GetText().length() - 2u);
  616|    536|    }
  617|       |    // Global include like this '#include <foo.au3>'
  618|  1.68k|    else if (token.GetTokenKind() == TokenKind::OP_LessThan)
  ------------------
  |  Branch (618:14): [True: 1.28k, False: 407]
  ------------------
  619|  1.28k|    {
  620|       |        // FIXME: This is not really a nice way, but we essentially start from after the opening '<' and include everything upto the closing '>'
  621|  1.28k|        ConsumeCurrent();
  622|       |
  623|  1.28k|        include_type = IncludeType::Global;
  624|  1.28k|        file_name    = token.GetText().remove_prefix(1u);
  625|       |
  626|  1.28k|        phi::boolean found_end{false};
  627|  1.28k|        phi::boolean continue_parsing{true};
  628|  3.53k|        while (HasMoreTokens() && continue_parsing)
  ------------------
  |  Branch (628:16): [True: 3.50k, False: 27]
  |  Branch (628:16): [True: 2.25k, False: 1.28k]
  |  Branch (628:35): [True: 2.25k, False: 1.25k]
  ------------------
  629|  2.25k|        {
  630|  2.25k|            const Token& end_token = CurrentToken();
  631|       |
  632|  2.25k|            if (end_token.GetTokenKind() == TokenKind::OP_GreaterThan)
  ------------------
  |  Branch (632:17): [True: 482, False: 1.77k]
  ------------------
  633|    482|            {
  634|    482|                found_end        = true;
  635|    482|                continue_parsing = false;
  636|    482|                const phi::usize difference =
  637|    482|                        phi::narrow_cast<phi::usize>(end_token.GetText().data() - file_name.data());
  638|    482|                file_name.add_postfix(difference);
  639|    482|            }
  640|  1.77k|            else if (end_token.GetTokenKind() == TokenKind::NewLine)
  ------------------
  |  Branch (640:22): [True: 789, False: 983]
  ------------------
  641|    789|            {
  642|       |                // Stop once we hit a newline
  643|    789|                continue_parsing = false;
  644|    789|            }
  645|       |
  646|  2.25k|            ConsumeCurrent();
  647|  2.25k|        }
  648|       |
  649|  1.28k|        if (!found_end)
  ------------------
  |  Branch (649:13): [True: 800, False: 482]
  ------------------
  650|    800|        {
  651|    800|            Diag().Error(DiagnosticId::Expected, PreviousToken().GetEndLocation(), "'>'")
  652|    800|                    .Note(token.GetBeginLocation(), "to match this '<'");
  653|    800|            return;
  654|    800|        }
  655|  1.28k|    }
  656|    407|    else
  657|    407|    {
  658|    407|        Diag().Error(DiagnosticId::Expected, token.GetEndLocation(), "\"Filename\" or <Filename>");
  659|    407|        return;
  660|    407|    }
  661|       |
  662|       |    // Limit include nesting
  663|  1.01k|    if (m_ParsingContextStack.size() >= MaxNumberOfIncludeNesting)
  ------------------
  |  Branch (663:9): [True: 0, False: 1.01k]
  ------------------
  664|      0|    {
  665|      0|        Diag().Error(DiagnosticId::IncludeNestingTooDeeply, token.GetBeginLocation());
  666|      0|        return;
  667|      0|    }
  668|       |
  669|       |    // Emit error for empty file names
  670|  1.01k|    if (file_name.is_empty())
  ------------------
  |  Branch (670:9): [True: 482, False: 536]
  ------------------
  671|    482|    {
  672|    482|        Diag().Error(DiagnosticId::EmptyFilename, token.GetBeginLocation());
  673|    482|        return;
  674|    482|    }
  675|       |
  676|       |    // Emit error if the file name is too long
  677|    536|    if (file_name.length() > 255u)
  ------------------
  |  Branch (677:9): [True: 44, False: 492]
  ------------------
  678|     44|    {
  679|     44|        Diag().Error(DiagnosticId::FileNameTooLong, token.GetBeginLocation(),
  680|     44|                     std::string_view(file_name));
  681|     44|        return;
  682|     44|    }
  683|       |
  684|       |    // Load the file from the SourceManager
  685|    492|    phi::observer_ptr<const SourceFile> include_file =
  686|    492|            m_SourceManager->LoadFile(std::string_view(file_name), include_type);
  687|    492|    if (!include_file)
  ------------------
  |  Branch (687:9): [True: 492, False: 0]
  ------------------
  688|    492|    {
  689|    492|        Diag().Error(DiagnosticId::FileNotFound, token.GetBeginLocation(),
  690|    492|                     std::string_view(file_name));
  691|    492|        return;
  692|    492|    }
  693|       |
  694|      0|    RequireNewLine();
  695|       |
  696|       |    // Append the file
  697|      0|    AppendSourceFileToDocument(include_file.not_null(), token.GetBeginLocation());
  698|      0|}
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  701|   377k|{
  702|   377k|    ConsumeNewLineAndComments();
  703|       |
  704|   377k|    if (!HasMoreTokens())
  ------------------
  |  Branch (704:9): [True: 24, False: 377k]
  ------------------
  705|     24|    {
  706|       |        // TODO: Report proper error
  707|     24|        return {};
  708|     24|    }
  709|       |
  710|   377k|    phi::scope_ptr<ASTStatement> ret_statement;
  711|       |
  712|       |    // Loop until we parse something or there is nothing left to parse
  713|   377k|    const Token& token = CurrentToken();
  714|   377k|    switch (token.GetTokenKind())
  715|   377k|    {
  716|       |        // Variable assignment
  717|  2.41k|        case TokenKind::KW_Const:
  ------------------
  |  Branch (717:9): [True: 2.41k, False: 375k]
  ------------------
  718|  3.98k|        case TokenKind::KW_Local:
  ------------------
  |  Branch (718:9): [True: 1.56k, False: 376k]
  ------------------
  719|  6.68k|        case TokenKind::KW_Global:
  ------------------
  |  Branch (719:9): [True: 2.70k, False: 375k]
  ------------------
  720|  10.6k|        case TokenKind::KW_Static:
  ------------------
  |  Branch (720:9): [True: 3.97k, False: 373k]
  ------------------
  721|  63.2k|        case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (721:9): [True: 52.5k, False: 325k]
  ------------------
  722|  63.2k|            ret_statement = ParseVariableAssignment();
  723|  63.2k|            if (!ret_statement)
  ------------------
  |  Branch (723:17): [True: 15.0k, False: 48.1k]
  ------------------
  724|  15.0k|            {
  725|  15.0k|                err("ERR: Failed to parse variable assignment!\n");
  726|  15.0k|                return {};
  727|  15.0k|            }
  728|  48.1k|            break;
  729|  63.2k|        }
  730|       |
  731|       |        // If Statement
  732|  48.1k|        case TokenKind::KW_If: {
  ------------------
  |  Branch (732:9): [True: 19.4k, False: 358k]
  ------------------
  733|  19.4k|            ret_statement = ParseIfStatement();
  734|  19.4k|            if (!ret_statement)
  ------------------
  |  Branch (734:17): [True: 17.4k, False: 2.04k]
  ------------------
  735|  17.4k|            {
  736|  17.4k|                err("ERR: Failed to parse if statement!\n");
  737|  17.4k|                return {};
  738|  17.4k|            }
  739|  2.04k|            break;
  740|  19.4k|        }
  741|       |
  742|       |        // While statement
  743|  7.09k|        case TokenKind::KW_While: {
  ------------------
  |  Branch (743:9): [True: 7.09k, False: 370k]
  ------------------
  744|  7.09k|            ret_statement = ParseWhileStatement();
  745|  7.09k|            if (!ret_statement)
  ------------------
  |  Branch (745:17): [True: 4.25k, False: 2.84k]
  ------------------
  746|  4.25k|            {
  747|  4.25k|                err("ERR: Failed to parse while statement!\n");
  748|  4.25k|                return {};
  749|  4.25k|            }
  750|  2.84k|            break;
  751|  7.09k|        }
  752|       |
  753|       |        // Exit statement
  754|  4.23k|        case TokenKind::KW_Exit: {
  ------------------
  |  Branch (754:9): [True: 4.23k, False: 373k]
  ------------------
  755|  4.23k|            ret_statement = ParseExitStatement();
  756|  4.23k|            if (!ret_statement)
  ------------------
  |  Branch (756:17): [True: 0, False: 4.23k]
  ------------------
  757|      0|            {
  758|      0|                err("ERR: Failed to parse exit statement!\n");
  759|      0|                return {};
  760|      0|            }
  761|  4.23k|            break;
  762|  4.23k|        }
  763|       |
  764|   283k|        default: {
  ------------------
  |  Branch (764:9): [True: 283k, False: 93.9k]
  ------------------
  765|       |            // Try to parse ExpressionStatement
  766|   283k|            ret_statement = ParseExpressionStatement();
  767|   283k|            if (!ret_statement)
  ------------------
  |  Branch (767:17): [True: 254k, False: 29.5k]
  ------------------
  768|   254k|            {
  769|   254k|                err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  770|   254k|                                enum_name(token.GetTokenKind())));
  771|   254k|                return {};
  772|   254k|            }
  773|  29.5k|            break;
  774|   283k|        }
  775|   377k|    }
  776|       |
  777|  86.8k|    return phi::move(ret_statement);
  778|   377k|}
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  781|  7.09k|{
  782|  7.09k|    const Token& token = CurrentToken();
  783|  7.09k|    if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (783:9): [True: 0, False: 7.09k]
  ------------------
  784|      0|    {
  785|       |        // TODO: Proper error
  786|      0|        return {};
  787|      0|    }
  788|  7.09k|    ConsumeCurrent();
  789|       |
  790|       |    // Next we MUST parse an Expression
  791|  7.09k|    auto while_condition_expression = ParseExpression();
  792|  7.09k|    if (!while_condition_expression)
  ------------------
  |  Branch (792:9): [True: 692, False: 6.40k]
  ------------------
  793|    692|    {
  794|       |        // TODO: Proper error
  795|    692|        return {};
  796|    692|    }
  797|       |
  798|  6.40k|    auto while_statement =
  799|  6.40k|            phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  800|       |
  801|       |    // Parse statements until KW_WEnd
  802|  12.5k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (802:12): [True: 12.4k, False: 71]
  |  Branch (802:12): [True: 9.64k, False: 2.91k]
  |  Branch (802:31): [True: 9.64k, False: 2.84k]
  ------------------
  803|  9.64k|    {
  804|  9.64k|        ConsumeNewLineAndComments();
  805|       |
  806|       |        // Parse statements
  807|  9.64k|        auto statement = ParseStatement();
  808|  9.64k|        if (!statement)
  ------------------
  |  Branch (808:13): [True: 3.49k, False: 6.15k]
  ------------------
  809|  3.49k|        {
  810|       |            // TODO: Propeer error
  811|  3.49k|            return {};
  812|  3.49k|        }
  813|       |
  814|  6.15k|        while_statement->m_Statements.emplace_back(statement.release_not_null());
  815|  6.15k|    }
  816|       |
  817|  2.91k|    if (!HasMoreTokens())
  ------------------
  |  Branch (817:9): [True: 71, False: 2.84k]
  ------------------
  818|     71|    {
  819|       |        // TODO: Proper error
  820|     71|        return {};
  821|     71|    }
  822|       |
  823|       |    // Next token MUST be KW_Wend
  824|  2.84k|    const Token& wend_token = CurrentToken();
  825|  2.84k|    if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (825:9): [True: 0, False: 2.84k]
  ------------------
  826|      0|    {
  827|       |        // TODO: Proper error
  828|      0|        return {};
  829|      0|    }
  830|  2.84k|    ConsumeCurrent();
  831|       |
  832|  2.84k|    return phi::move(while_statement);
  833|  2.84k|}
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  836|  63.2k|{
  837|  63.2k|    auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  838|       |
  839|  63.2k|    phi::boolean parsed_identifier = false;
  840|       |    // Parse all specifiers until we hit a VariableIdentifier
  841|   126k|    while (HasMoreTokens() && !parsed_identifier)
  ------------------
  |  Branch (841:12): [True: 125k, False: 475]
  |  Branch (841:12): [True: 73.7k, False: 52.7k]
  |  Branch (841:31): [True: 73.7k, False: 52.2k]
  ------------------
  842|  73.7k|    {
  843|  73.7k|        const Token& current_token = CurrentToken();
  844|  73.7k|        ConsumeCurrent();
  845|       |
  846|  73.7k|        switch (current_token.GetTokenKind())
  847|  73.7k|        {
  848|  2.61k|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (848:13): [True: 2.61k, False: 71.0k]
  ------------------
  849|  2.61k|                if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (849:21): [True: 194, False: 2.41k]
  ------------------
  850|    194|                {
  851|       |                    // TODO: Error more than one const specifier
  852|    194|                    err("ERR: More than one const specifier given\n");
  853|    194|                    return {};
  854|    194|                }
  855|  2.41k|                variable_declaration->m_IsConst = true;
  856|  2.41k|                break;
  857|  2.61k|            }
  858|       |
  859|  4.17k|            case TokenKind::KW_Static: {
  ------------------
  |  Branch (859:13): [True: 4.17k, False: 69.5k]
  ------------------
  860|  4.17k|                if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (860:21): [True: 206, False: 3.97k]
  ------------------
  861|    206|                {
  862|       |                    // TODO: Error more than one static specifier
  863|    206|                    err("ERR: More than one static specifier given\n");
  864|    206|                    return {};
  865|    206|                }
  866|  3.97k|                variable_declaration->m_IsStatic = true;
  867|  3.97k|                break;
  868|  4.17k|            }
  869|       |
  870|  3.27k|            case TokenKind::KW_Global: {
  ------------------
  |  Branch (870:13): [True: 3.27k, False: 70.4k]
  ------------------
  871|  3.27k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (871:21): [True: 568, False: 2.70k]
  ------------------
  872|    568|                {
  873|       |                    // TODO: Error more than one scope specifier
  874|    568|                    err("ERR: More than one scope specifier given\n");
  875|    568|                    return {};
  876|    568|                }
  877|  2.70k|                variable_declaration->m_Scope = VariableScope::Global;
  878|  2.70k|                break;
  879|  3.27k|            }
  880|       |
  881|  2.08k|            case TokenKind::KW_Local: {
  ------------------
  |  Branch (881:13): [True: 2.08k, False: 71.6k]
  ------------------
  882|  2.08k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (882:21): [True: 514, False: 1.56k]
  ------------------
  883|    514|                {
  884|       |                    // TODO: Error more than one scope specifier
  885|    514|                    err("ERR: More than one scope specifier given\n");
  886|    514|                    return {};
  887|    514|                }
  888|  1.56k|                variable_declaration->m_Scope = VariableScope::Local;
  889|  1.56k|                break;
  890|  2.08k|            }
  891|       |
  892|  52.5k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (892:13): [True: 52.5k, False: 21.1k]
  ------------------
  893|       |                // VariableIdentifiers begin with a '$'
  894|       |                // Like: $MyVariable
  895|       |                // So for the name we ignore the very first character
  896|  52.5k|                PHI_ASSERT(current_token.GetText().length() > 1u);
  897|  52.5k|                variable_declaration->m_VariableName = current_token.GetText().substring_view(1u);
  898|       |
  899|  52.5k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  900|  52.5k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  901|       |
  902|  52.5k|                parsed_identifier = true;
  903|  52.5k|                break;
  904|  2.08k|            }
  905|       |
  906|  8.99k|            default: {
  ------------------
  |  Branch (906:13): [True: 8.99k, False: 64.7k]
  ------------------
  907|       |                // TODO: Error unexpected token
  908|  8.99k|                return {};
  909|  2.08k|            }
  910|  73.7k|        }
  911|  73.7k|    }
  912|       |
  913|  52.7k|    if (!parsed_identifier)
  ------------------
  |  Branch (913:9): [True: 173, False: 52.5k]
  ------------------
  914|    173|    {
  915|       |        // TODO: Error variable declaration ends before the VariableIdentifier
  916|    173|        err("ERR: Missing variable identifier!\n");
  917|    173|        return {};
  918|    173|    }
  919|       |
  920|       |    // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  921|  52.5k|    if (!HasMoreTokens())
  ------------------
  |  Branch (921:9): [True: 302, False: 52.2k]
  ------------------
  922|    302|    {
  923|    302|        return variable_declaration;
  924|    302|    }
  925|       |
  926|       |    // Check for equals
  927|  52.2k|    const Token& next_token = CurrentToken();
  928|       |
  929|  52.2k|    if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (929:9): [True: 19.7k, False: 32.4k]
  ------------------
  930|  19.7k|    {
  931|  19.7k|        ConsumeCurrent();
  932|       |
  933|       |        // Now me MUST parse an expression
  934|  19.7k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
  935|  19.7k|        if (!expression)
  ------------------
  |  Branch (935:13): [True: 4.41k, False: 15.3k]
  ------------------
  936|  4.41k|        {
  937|       |            // TODO: Error failed to parse a valid expression
  938|  4.41k|            err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  939|  4.41k|            return {};
  940|  4.41k|        }
  941|       |
  942|  15.3k|        variable_declaration->m_InitialValueExpression = phi::move(expression);
  943|  15.3k|    }
  944|       |
  945|  47.8k|    return variable_declaration;
  946|  52.2k|}
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  949|   283k|{
  950|   283k|    auto expression = ParseExpression();
  951|   283k|    if (!expression)
  ------------------
  |  Branch (951:9): [True: 195k, False: 88.8k]
  ------------------
  952|   195k|    {
  953|   195k|        return {};
  954|   195k|    }
  955|       |
  956|  88.8k|    auto expression_statement =
  957|  88.8k|            phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  958|       |
  959|  88.8k|    if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (959:9): [True: 59.2k, False: 29.5k]
  ------------------
  960|  59.2k|    {
  961|  59.2k|        err(fmt::format("Expression {:s} is not valid as an statement\n",
  962|  59.2k|                        expression_statement->m_Expression->Name()));
  963|  59.2k|        return {};
  964|  59.2k|    }
  965|       |
  966|  29.5k|    return phi::move(expression_statement);
  967|  88.8k|}
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  970|  19.4k|{
  971|  19.4k|    if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (971:9): [True: 0, False: 19.4k]
  ------------------
  972|      0|    {
  973|      0|        return {};
  974|      0|    }
  975|       |
  976|       |    // Next me MUST parse an expression
  977|  19.4k|    auto if_condition = ParseExpression();
  978|  19.4k|    if (!if_condition)
  ------------------
  |  Branch (978:9): [True: 1.63k, False: 17.8k]
  ------------------
  979|  1.63k|    {
  980|  1.63k|        err("ERR: failed to parse expression!\n");
  981|       |
  982|  1.63k|        return {};
  983|  1.63k|    }
  984|       |
  985|       |    // Next we MUST parse Then
  986|  17.8k|    if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (986:9): [True: 3.44k, False: 14.3k]
  ------------------
  987|  3.44k|    {
  988|  3.44k|        err("ERR: Missing then!\n");
  989|       |
  990|  3.44k|        return {};
  991|  3.44k|    }
  992|       |
  993|  14.3k|    ConsumeNewLineAndComments();
  994|       |
  995|  14.3k|    IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  996|       |
  997|       |    // Next parse statements until we hit and EndIf, ElseIf or Else
  998|  22.2k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (998:12): [True: 22.1k, False: 104]
  |  Branch (998:12): [True: 11.9k, False: 10.2k]
  |  Branch (998:31): [True: 21.9k, False: 214]
  ------------------
  999|  22.2k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (999:12): [True: 14.4k, False: 7.47k]
  ------------------
 1000|  22.2k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1000:12): [True: 11.9k, False: 2.49k]
  ------------------
 1001|  11.9k|    {
 1002|  11.9k|        auto statement = ParseStatement();
 1003|  11.9k|        if (!statement)
  ------------------
  |  Branch (1003:13): [True: 4.09k, False: 7.86k]
  ------------------
 1004|  4.09k|        {
 1005|  4.09k|            err("ERR: Failed to parse statement inside of IF\n");
 1006|  4.09k|            return {};
 1007|  4.09k|        }
 1008|       |
 1009|  7.86k|        if_case.body.emplace_back(statement.release_not_null());
 1010|       |
 1011|  7.86k|        ConsumeNewLineAndComments();
 1012|  7.86k|    }
 1013|       |
 1014|  10.2k|    auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
 1015|       |
 1016|       |    // Handle all ElseIf cases which are optional
 1017|  14.3k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1017:12): [True: 13.9k, False: 356]
  |  Branch (1017:12): [True: 5.13k, False: 9.18k]
  |  Branch (1017:31): [True: 5.13k, False: 8.82k]
  ------------------
 1018|  5.13k|    {
 1019|       |        // Consume KW_ElseIf token
 1020|  5.13k|        ConsumeCurrent();
 1021|       |
 1022|       |        // Parse the condition
 1023|  5.13k|        auto else_if_condition = ParseExpression();
 1024|  5.13k|        if (!else_if_condition)
  ------------------
  |  Branch (1024:13): [True: 1.09k, False: 4.03k]
  ------------------
 1025|  1.09k|        {
 1026|  1.09k|            return {};
 1027|  1.09k|        }
 1028|       |
 1029|       |        // Parse KW_Then
 1030|  4.03k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (1030:13): [True: 2.62k, False: 1.40k]
  ------------------
 1031|  2.62k|        {
 1032|       |            // TODO: Better error message and this error should be recoverable
 1033|  2.62k|            err("ERR: Missing then!\n");
 1034|  2.62k|        }
 1035|       |
 1036|  4.03k|        ConsumeNewLineAndComments();
 1037|       |
 1038|  4.03k|        IfCase else_if_case{.condition{else_if_condition.release_not_null()},
 1039|  4.03k|                            .body{ParseIfCaseStatements()}};
 1040|       |
 1041|       |        // Append our case to the if statement
 1042|  4.03k|        if_statement->m_ElseIfCases.emplace_back(phi::move(else_if_case));
 1043|  4.03k|    }
 1044|       |
 1045|       |    // Handle optional else case
 1046|  9.18k|    if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_Else)
  ------------------
  |  Branch (1046:9): [True: 8.82k, False: 356]
  |  Branch (1046:9): [True: 7.77k, False: 1.40k]
  |  Branch (1046:28): [True: 7.77k, False: 1.05k]
  ------------------
 1047|  7.77k|    {
 1048|       |        // Consume KW_Else token
 1049|  7.77k|        ConsumeCurrent();
 1050|       |
 1051|  7.77k|        ConsumeNewLineAndComments();
 1052|       |
 1053|  7.77k|        if_statement->m_ElseCase = ParseIfCaseStatements();
 1054|  7.77k|    }
 1055|       |
 1056|  9.18k|    if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (1056:9): [True: 7.13k, False: 2.04k]
  ------------------
 1057|  7.13k|    {
 1058|  7.13k|        err("ERR: Missing EndIf!\n");
 1059|       |        // TODO: Proper Error
 1060|  7.13k|        return {};
 1061|  7.13k|    }
 1062|       |
 1063|  2.04k|    return phi::move(if_statement);
 1064|  9.18k|}
_ZN10OpenAutoIt6Parser21ParseIfCaseStatementsEv:
 1067|  11.8k|{
 1068|  11.8k|    std::vector<phi::not_null_scope_ptr<ASTStatement>> statements;
 1069|       |
 1070|       |    // Parse statements until KW_EndIf, KW_Else, KW_ElseIf
 1071|  16.6k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1071:12): [True: 16.5k, False: 135]
  |  Branch (1071:12): [True: 11.4k, False: 5.20k]
  |  Branch (1071:31): [True: 14.7k, False: 1.80k]
  ------------------
 1072|  16.6k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1072:12): [True: 13.8k, False: 814]
  ------------------
 1073|  16.6k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1073:12): [True: 11.4k, False: 2.45k]
  ------------------
 1074|  11.4k|    {
 1075|  11.4k|        auto statement = ParseStatement();
 1076|  11.4k|        if (!statement)
  ------------------
  |  Branch (1076:13): [True: 6.60k, False: 4.83k]
  ------------------
 1077|  6.60k|        {
 1078|  6.60k|            err("ERR: Failed to parse statement inside of IF\n");
 1079|  6.60k|            return {};
 1080|  6.60k|        }
 1081|       |
 1082|  4.83k|        statements.emplace_back(statement.release_not_null());
 1083|       |
 1084|  4.83k|        ConsumeNewLineAndComments();
 1085|  4.83k|    }
 1086|       |
 1087|  5.20k|    return statements;
 1088|  11.8k|}
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
 1091|   234k|{
 1092|   234k|    const Token& token = CurrentToken();
 1093|   234k|    if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1093:9): [True: 0, False: 234k]
  ------------------
 1094|      0|    {
 1095|      0|        return {};
 1096|      0|    }
 1097|       |
 1098|   234k|    phi::int64_t value{0};
 1099|   234k|    phi::boolean parsing_hex{false};
 1100|   553k|    for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (1100:32): [True: 322k, False: 230k]
  ------------------
 1101|   322k|    {
 1102|   322k|        const char character = token.GetText().at(index);
 1103|       |
 1104|       |        // Checking the second character
 1105|   322k|        if (index == 1u)
  ------------------
  |  Branch (1105:13): [True: 20.1k, False: 302k]
  ------------------
 1106|  20.1k|        {
 1107|  20.1k|            if (character == 'x' || character == 'X')
  ------------------
  |  Branch (1107:17): [True: 293, False: 19.8k]
  |  Branch (1107:37): [True: 2.00k, False: 17.8k]
  ------------------
 1108|  2.29k|            {
 1109|  2.29k|                parsing_hex = true;
 1110|  2.29k|                continue;
 1111|  2.29k|            }
 1112|  20.1k|        }
 1113|       |
 1114|   320k|        if (parsing_hex)
  ------------------
  |  Branch (1114:13): [True: 26.1k, False: 294k]
  ------------------
 1115|  26.1k|        {
 1116|  26.1k|            PHI_ASSERT(phi::is_hex_digit(character));
 1117|       |
 1118|  26.1k|            if (phi::detail::will_multiplication_error(phi::detail::unsigned_integer_tag{}, value,
  ------------------
  |  Branch (1118:17): [True: 588, False: 25.5k]
  ------------------
 1119|  26.1k|                                                       phi::int64_t(16)) ||
 1120|  26.1k|                phi::detail::will_addition_error(phi::detail::unsigned_integer_tag{}, value * 16,
  ------------------
  |  Branch (1120:17): [True: 994, False: 24.6k]
  ------------------
 1121|  25.5k|                                                 phi::int64_t(character - '0')))
 1122|  1.58k|            {
 1123|  1.58k|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1124|  1.58k|                ConsumeCurrent();
 1125|  1.58k|                return {};
 1126|  1.58k|            }
 1127|       |
 1128|  24.6k|            value <<= 4;
 1129|  24.6k|            value |= phi::hex_digit_value(character).unsafe();
 1130|  24.6k|        }
 1131|   294k|        else
 1132|   294k|        {
 1133|   294k|            PHI_ASSERT(character >= '0' && character <= '9');
 1134|       |
 1135|   294k|            if (phi::detail::will_multiplication_error(phi::detail::signed_integer_tag{}, value,
  ------------------
  |  Branch (1135:17): [True: 1.28k, False: 293k]
  ------------------
 1136|   294k|                                                       phi::int64_t(10)) ||
 1137|   294k|                phi::detail::will_addition_error(phi::detail::signed_integer_tag{}, value * 10,
  ------------------
  |  Branch (1137:17): [True: 834, False: 292k]
  ------------------
 1138|   293k|                                                 phi::int64_t(character - '0')))
 1139|  2.12k|            {
 1140|  2.12k|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1141|  2.12k|                ConsumeCurrent();
 1142|  2.12k|                return {};
 1143|  2.12k|            }
 1144|       |
 1145|   292k|            value *= 10;
 1146|   292k|            value += (character - '0');
 1147|   292k|        }
 1148|   320k|    }
 1149|       |
 1150|   230k|    ConsumeCurrent();
 1151|   230k|    return phi::make_scope<ASTIntegerLiteral>(value);
 1152|   234k|}
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
 1155|  6.89k|{
 1156|  6.89k|    const Token& token = CurrentToken();
 1157|  6.89k|    if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (1157:9): [True: 0, False: 6.89k]
  ------------------
 1158|      0|    {
 1159|      0|        return {};
 1160|      0|    }
 1161|  6.89k|    ConsumeCurrent();
 1162|       |
 1163|  6.89k|    auto string_literal = phi::make_scope<ASTStringLiteral>();
 1164|       |
 1165|  6.89k|    const phi::usize length = token.GetText().length();
 1166|       |    // Trim the trailing and leading "
 1167|  6.89k|    string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
 1168|       |
 1169|  6.89k|    return phi::move(string_literal);
 1170|  6.89k|}
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
 1173|  1.11M|{
 1174|  1.11M|    phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
 1175|  1.11M|    if (!lhs_expression)
  ------------------
  |  Branch (1175:9): [True: 782k, False: 335k]
  ------------------
 1176|   782k|    {
 1177|   782k|        return {};
 1178|   782k|    }
 1179|       |
 1180|   335k|    return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
 1181|  1.11M|}
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
 1184|  1.18M|{
 1185|  1.18M|    if (!HasMoreTokens())
  ------------------
  |  Branch (1185:9): [True: 687, False: 1.18M]
  ------------------
 1186|    687|    {
 1187|       |        // TODO: Proper error
 1188|    687|        return {};
 1189|    687|    }
 1190|       |
 1191|  1.18M|    const Token& token = CurrentToken();
 1192|  1.18M|    if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (1192:9): [True: 12.0k, False: 1.16M]
  ------------------
 1193|  12.0k|    {
 1194|  12.0k|        const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
 1195|  12.0k|        PHI_UNUSED_VARIABLE(op_precedence);
 1196|  12.0k|        ConsumeCurrent();
 1197|       |
 1198|  12.0k|        phi::scope_ptr<ASTExpression> unary_expression = ParseUnaryExpression(token.GetTokenKind());
 1199|  12.0k|        if (!unary_expression)
  ------------------
  |  Branch (1199:13): [True: 6.68k, False: 5.39k]
  ------------------
 1200|  6.68k|        {
 1201|       |            // TODO: Proper error
 1202|  6.68k|            return {};
 1203|  6.68k|        }
 1204|       |
 1205|  5.39k|        return phi::move(unary_expression);
 1206|  12.0k|    }
 1207|  1.16M|    if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (1207:9): [True: 117k, False: 1.05M]
  ------------------
 1208|   117k|    {
 1209|       |        // Consume the LParen
 1210|   117k|        ConsumeCurrent();
 1211|       |
 1212|   117k|        phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
 1213|   117k|        if (!paren_expression)
  ------------------
  |  Branch (1213:13): [True: 115k, False: 2.34k]
  ------------------
 1214|   115k|        {
 1215|       |            // TODO: Proper error
 1216|   115k|            return {};
 1217|   115k|        }
 1218|       |
 1219|  2.34k|        return phi::move(paren_expression);
 1220|   117k|    }
 1221|  1.05M|    if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1221:9): [True: 234k, False: 816k]
  ------------------
 1222|   234k|    {
 1223|   234k|        phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
 1224|   234k|        if (!int_literal)
  ------------------
  |  Branch (1224:13): [True: 3.70k, False: 230k]
  ------------------
 1225|  3.70k|        {
 1226|       |            // TODO: Error failed to parse integer literal
 1227|  3.70k|            return {};
 1228|  3.70k|        }
 1229|       |
 1230|   230k|        return phi::move(int_literal);
 1231|   234k|    }
 1232|   816k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (1232:9): [True: 6.89k, False: 809k]
  ------------------
 1233|  6.89k|    {
 1234|  6.89k|        auto string_literal_expression = ParseStringLiteral();
 1235|  6.89k|        if (!string_literal_expression)
  ------------------
  |  Branch (1235:13): [True: 0, False: 6.89k]
  ------------------
 1236|      0|        {
 1237|       |            // TODO: Proper error
 1238|      0|            return {};
 1239|      0|        }
 1240|       |
 1241|  6.89k|        return phi::move(string_literal_expression);
 1242|  6.89k|    }
 1243|       |
 1244|       |    // Boolean literal
 1245|   809k|    if (token.GetTokenKind() == TokenKind::KW_True || token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1245:9): [True: 18.6k, False: 790k]
  |  Branch (1245:55): [True: 9.80k, False: 780k]
  ------------------
 1246|  28.4k|    {
 1247|  28.4k|        auto boolean_literal = ParseBooleanLiteral();
 1248|  28.4k|        if (!boolean_literal)
  ------------------
  |  Branch (1248:13): [True: 0, False: 28.4k]
  ------------------
 1249|      0|        {
 1250|       |            // TODO: Proper error
 1251|      0|            return {};
 1252|      0|        }
 1253|       |
 1254|  28.4k|        return phi::move(boolean_literal);
 1255|  28.4k|    }
 1256|       |
 1257|       |    // Function call expression
 1258|   780k|    if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (1258:9): [True: 130k, False: 650k]
  |  Branch (1258:9): [True: 132k, False: 648k]
  |  Branch (1258:66): [True: 2.14k, False: 648k]
  ------------------
 1259|   132k|    {
 1260|   132k|        auto function_call_expression = ParseFunctionCallExpression();
 1261|   132k|        if (!function_call_expression)
  ------------------
  |  Branch (1261:13): [True: 86.5k, False: 46.1k]
  ------------------
 1262|  86.5k|        {
 1263|       |            // TODO: Proper error
 1264|  86.5k|            err("ERR: Failed to parse function call expression!\n");
 1265|  86.5k|            return {};
 1266|  86.5k|        }
 1267|       |
 1268|  46.1k|        return phi::move(function_call_expression);
 1269|   132k|    }
 1270|       |    // Variable expression
 1271|   648k|    if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1271:9): [True: 56.5k, False: 591k]
  ------------------
 1272|  56.5k|    {
 1273|  56.5k|        auto variable_expression = ParseVariableExpression();
 1274|  56.5k|        if (!variable_expression)
  ------------------
  |  Branch (1274:13): [True: 0, False: 56.5k]
  ------------------
 1275|      0|        {
 1276|       |            // TODO: Proper error
 1277|      0|            err("ERR: Failed to parse Variable expression\n");
 1278|      0|            return {};
 1279|      0|        }
 1280|       |
 1281|  56.5k|        return phi::move(variable_expression);
 1282|  56.5k|    }
 1283|       |    // Keyword literal
 1284|   591k|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1284:9): [True: 782, False: 590k]
  ------------------
 1285|    782|    {
 1286|    782|        auto keyword_literal = ParseKeywordLiteral();
 1287|    782|        if (!keyword_literal)
  ------------------
  |  Branch (1287:13): [True: 0, False: 782]
  ------------------
 1288|      0|        {
 1289|       |            // TODO: Proper error
 1290|      0|            err("ERR: Failed to parse keyword literal expression!\n");
 1291|      0|            return {};
 1292|      0|        }
 1293|       |
 1294|    782|        return phi::move(keyword_literal);
 1295|    782|    }
 1296|       |    // Float literal
 1297|   590k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1297:9): [True: 6.74k, False: 584k]
  ------------------
 1298|  6.74k|    {
 1299|  6.74k|        auto float_literal = ParseFloatLiteral();
 1300|  6.74k|        if (!float_literal)
  ------------------
  |  Branch (1300:13): [True: 0, False: 6.74k]
  ------------------
 1301|      0|        {
 1302|       |            // TODO: Proper error
 1303|      0|            err("ERR: Failed to parse float literal expression!\n");
 1304|      0|            return {};
 1305|      0|        }
 1306|       |
 1307|  6.74k|        return phi::move(float_literal);
 1308|  6.74k|    }
 1309|       |    // ArraySubscript expression
 1310|   584k|    if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (1310:9): [True: 460k, False: 123k]
  ------------------
 1311|   460k|    {
 1312|   460k|        auto subscript_expression = ParseArraySubscriptExpression();
 1313|   460k|        if (!subscript_expression)
  ------------------
  |  Branch (1313:13): [True: 458k, False: 2.01k]
  ------------------
 1314|   458k|        {
 1315|   458k|            err("ERR: Failed to parse array subscript expression\n");
 1316|   458k|            return {};
 1317|   458k|        }
 1318|       |
 1319|  2.01k|        return phi::move(subscript_expression);
 1320|   460k|    }
 1321|   123k|    if (token.IsMacro())
  ------------------
  |  Branch (1321:9): [True: 1.67k, False: 122k]
  ------------------
 1322|  1.67k|    {
 1323|  1.67k|        ConsumeCurrent();
 1324|       |
 1325|  1.67k|        phi::scope_ptr<ASTExpression> macro_expression = ParseMacroExpression(token.GetTokenKind());
 1326|  1.67k|        if (!macro_expression)
  ------------------
  |  Branch (1326:13): [True: 0, False: 1.67k]
  ------------------
 1327|      0|        {
 1328|       |            // TODO: Proper error
 1329|      0|            return {};
 1330|      0|        }
 1331|       |
 1332|  1.67k|        return macro_expression;
 1333|  1.67k|    }
 1334|       |
 1335|       |    // TODO: Error Unexpected token
 1336|   122k|    err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
 1337|   122k|                    enum_name(token.GetTokenKind())));
 1338|   122k|    return {};
 1339|   123k|}
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
 1343|   340k|{
 1344|   389k|    while (true)
  ------------------
  |  Branch (1344:12): [Folded - Ignored]
  ------------------
 1345|   389k|    {
 1346|   389k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1346:13): [True: 1.63k, False: 387k]
  ------------------
 1347|  1.63k|        {
 1348|  1.63k|            return phi::move(lhs);
 1349|  1.63k|        }
 1350|       |
 1351|   387k|        const Token& operator_token = CurrentToken();
 1352|   387k|        if (!IsBinaryOperator(operator_token.GetTokenKind()) &&
  ------------------
  |  Branch (1352:13): [True: 324k, False: 63.2k]
  |  Branch (1352:13): [True: 266k, False: 121k]
  ------------------
 1353|   387k|            operator_token.GetTokenKind() != TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1353:13): [True: 266k, False: 58.6k]
  ------------------
 1354|   266k|        {
 1355|       |            // If its not a binary operator and not a ternary just return the lhs expression
 1356|   266k|            return phi::move(lhs);
 1357|   266k|        }
 1358|   121k|        int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
 1359|   121k|        ConsumeCurrent();
 1360|       |
 1361|   121k|        if (token_precedence < precedence)
  ------------------
  |  Branch (1361:13): [True: 282, False: 121k]
  ------------------
 1362|    282|        {
 1363|    282|            return phi::move(lhs);
 1364|    282|        }
 1365|       |
 1366|   121k|        if (operator_token.GetTokenKind() == TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1366:13): [True: 58.6k, False: 62.9k]
  ------------------
 1367|  58.6k|        {
 1368|  58.6k|            phi::scope_ptr<ASTTernaryIfExpression> ternary_if_expression =
 1369|  58.6k|                    ParseTernaryIfExpression(phi::move(lhs));
 1370|  58.6k|            if (!ternary_if_expression)
  ------------------
  |  Branch (1370:17): [True: 30.1k, False: 28.5k]
  ------------------
 1371|  30.1k|            {
 1372|       |                // TODO: Proper error
 1373|  30.1k|                return {};
 1374|  30.1k|            }
 1375|       |
 1376|  28.5k|            return phi::move(ternary_if_expression);
 1377|  58.6k|        }
 1378|       |
 1379|       |        // This must be an binary expression
 1380|  62.9k|        phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
 1381|  62.9k|        if (!rhs_expression)
  ------------------
  |  Branch (1381:13): [True: 11.2k, False: 51.6k]
  ------------------
 1382|  11.2k|        {
 1383|       |            // TODO: Proper error
 1384|  11.2k|            return {};
 1385|  11.2k|        }
 1386|       |
 1387|       |        // Nothing left to parse so directly return from here
 1388|  51.6k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1388:13): [True: 470, False: 51.1k]
  ------------------
 1389|    470|        {
 1390|    470|            return phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1391|    470|                                                                 operator_token.GetTokenKind(),
 1392|    470|                                                                 rhs_expression.release_not_null());
 1393|    470|        }
 1394|       |
 1395|       |        // If BinOp binds less tightly with RHS than the operator after RHS, let
 1396|       |        // the pending operator take RHS as its LHS.
 1397|  51.1k|        const Token& next_token      = CurrentToken();
 1398|  51.1k|        int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1399|       |
 1400|  51.1k|        if (token_precedence < next_precedence)
  ------------------
  |  Branch (1400:13): [True: 4.89k, False: 46.2k]
  ------------------
 1401|  4.89k|        {
 1402|  4.89k|            rhs_expression =
 1403|  4.89k|                    ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1404|  4.89k|            if (!rhs_expression)
  ------------------
  |  Branch (1404:17): [True: 2.30k, False: 2.59k]
  ------------------
 1405|  2.30k|            {
 1406|       |                // TODO: Proper error
 1407|  2.30k|                return {};
 1408|  2.30k|            }
 1409|  4.89k|        }
 1410|       |
 1411|       |        // Merge LHS/RHS.
 1412|  48.8k|        lhs = phi::make_not_null_scope<ASTBinaryExpression>(
 1413|  48.8k|                phi::move(lhs), operator_token.GetTokenKind(), rhs_expression.release_not_null());
 1414|  48.8k|    }
 1415|   340k|}
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
 1418|   132k|{
 1419|       |    // Parse the function name
 1420|   132k|    const Token& function_identifier_token = CurrentToken();
 1421|   132k|    if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1421:9): [True: 2.14k, False: 130k]
  |  Branch (1421:9): [True: 0, False: 132k]
  ------------------
 1422|   132k|        !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1422:9): [True: 0, False: 2.14k]
  ------------------
 1423|      0|    {
 1424|      0|        return {};
 1425|      0|    }
 1426|   132k|    ConsumeCurrent();
 1427|       |
 1428|   132k|    phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1429|   132k|            phi::make_scope<ASTFunctionCallExpression>();
 1430|   132k|    if (!function_call_expression)
  ------------------
  |  Branch (1430:9): [True: 0, False: 132k]
  ------------------
 1431|      0|    {
 1432|       |        // TODO: Proper error
 1433|      0|        return {};
 1434|      0|    }
 1435|       |
 1436|   132k|    if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1436:9): [True: 2.14k, False: 130k]
  ------------------
 1437|  2.14k|    {
 1438|  2.14k|        function_call_expression->m_IsBuiltIn       = true;
 1439|  2.14k|        function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
 1440|  2.14k|    }
 1441|   130k|    else
 1442|   130k|    {
 1443|   130k|        const phi::string_view function_name = function_identifier_token.GetText();
 1444|       |
 1445|   130k|        function_call_expression->m_IsBuiltIn    = false;
 1446|   130k|        function_call_expression->m_FunctionName = function_name;
 1447|   130k|    }
 1448|       |
 1449|       |    // TODO: These 2 checks should be combined
 1450|       |    // Now me MUST parse an LParen
 1451|   132k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1451:9): [True: 1.26k, False: 131k]
  ------------------
 1452|  1.26k|    {
 1453|       |        // TODO: Give proper error
 1454|  1.26k|        err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1455|  1.26k|                        std::string_view{function_call_expression->FunctionName()}));
 1456|  1.26k|        return {};
 1457|  1.26k|    }
 1458|       |
 1459|   131k|    const Token& left_paren_token = CurrentToken();
 1460|   131k|    ConsumeCurrent();
 1461|   131k|    if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1461:9): [True: 65.7k, False: 65.5k]
  ------------------
 1462|  65.7k|    {
 1463|       |        // TODO: Give error
 1464|  65.7k|        err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1465|  65.7k|                        std::string_view{function_call_expression->FunctionName()}));
 1466|  65.7k|        return {};
 1467|  65.7k|    }
 1468|       |
 1469|       |    // Now parse all the arguments (which are expressions) separated by commas or nothing
 1470|  65.5k|    function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1471|       |
 1472|       |    // Finally we MUST parse an RParen
 1473|  65.5k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1473:9): [True: 4.02k, False: 61.5k]
  ------------------
 1474|  4.02k|    {
 1475|  4.02k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1476|  4.02k|                        std::string_view{function_call_expression->FunctionName()}));
 1477|       |        // TODO: Give proper error
 1478|  4.02k|        return {};
 1479|  4.02k|    }
 1480|       |
 1481|  61.5k|    const Token& right_paren_token = CurrentToken();
 1482|  61.5k|    ConsumeCurrent();
 1483|  61.5k|    if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1483:9): [True: 15.4k, False: 46.1k]
  ------------------
 1484|  15.4k|    {
 1485|  15.4k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1486|  15.4k|                        std::string_view{function_call_expression->FunctionName()}));
 1487|       |        // TODO: Give Error
 1488|  15.4k|        return {};
 1489|  15.4k|    }
 1490|       |
 1491|       |    // Return result
 1492|  46.1k|    return function_call_expression;
 1493|  61.5k|}
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1496|  65.5k|{
 1497|  65.5k|    std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1498|       |
 1499|   109k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1499:12): [True: 108k, False: 304]
  |  Branch (1499:12): [True: 84.8k, False: 24.2k]
  |  Branch (1499:31): [True: 84.8k, False: 23.9k]
  ------------------
 1500|  84.8k|    {
 1501|       |        // Parse the expression
 1502|  84.8k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1503|  84.8k|        if (!expression)
  ------------------
  |  Branch (1503:13): [True: 41.3k, False: 43.5k]
  ------------------
 1504|  41.3k|        {
 1505|  41.3k|            arguments.clear();
 1506|  41.3k|            return arguments;
 1507|  41.3k|        }
 1508|       |
 1509|       |        // Add argument to parameters
 1510|  43.5k|        arguments.emplace_back(expression.release_not_null());
 1511|       |
 1512|       |        // Next Token MUST be a comma followed by another expression or RParen
 1513|  43.5k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1513:13): [True: 43.4k, False: 177]
  |  Branch (1513:13): [True: 236, False: 43.3k]
  |  Branch (1513:32): [True: 236, False: 43.1k]
  ------------------
 1514|    236|        {
 1515|    236|            ConsumeCurrent();
 1516|    236|        }
 1517|  43.5k|    }
 1518|       |
 1519|  24.2k|    return arguments;
 1520|  65.5k|}
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1523|  56.5k|{
 1524|  56.5k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1524:9): [True: 0, False: 56.5k]
  ------------------
 1525|      0|    {
 1526|       |        // TODO: Proper error
 1527|      0|        return {};
 1528|      0|    }
 1529|       |
 1530|  56.5k|    const Token& token = CurrentToken();
 1531|  56.5k|    if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1531:9): [True: 0, False: 56.5k]
  ------------------
 1532|      0|    {
 1533|       |        // TODO error
 1534|      0|        return {};
 1535|      0|    }
 1536|       |
 1537|  56.5k|    auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1538|  56.5k|    variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1539|       |
 1540|  56.5k|    ConsumeCurrent();
 1541|       |
 1542|  56.5k|    return phi::move(variable_expression);
 1543|  56.5k|}
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1549|   460k|{
 1550|   460k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1550:9): [True: 0, False: 460k]
  ------------------
 1551|      0|    {
 1552|      0|        return {};
 1553|      0|    }
 1554|       |
 1555|   460k|    if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1555:9): [True: 0, False: 460k]
  ------------------
 1556|      0|    {
 1557|      0|        return {};
 1558|      0|    }
 1559|       |
 1560|   460k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1561|   460k|    if (!expression)
  ------------------
  |  Branch (1561:9): [True: 448k, False: 11.2k]
  ------------------
 1562|   448k|    {
 1563|   448k|        return {};
 1564|   448k|    }
 1565|       |
 1566|  11.2k|    if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1566:9): [True: 9.27k, False: 2.01k]
  ------------------
 1567|  9.27k|    {
 1568|  9.27k|        return {};
 1569|  9.27k|    }
 1570|       |
 1571|  2.01k|    return phi::make_scope<ASTArraySubscriptExpression>(phi::move(expression.release_not_null()));
 1572|  11.2k|}
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1577|   117k|{
 1578|       |    // NOTE: Me MUST have consumed the LParen before this
 1579|       |
 1580|   117k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1581|   117k|    if (!expression)
  ------------------
  |  Branch (1581:9): [True: 103k, False: 14.5k]
  ------------------
 1582|   103k|    {
 1583|       |        // TODO: Proper error
 1584|   103k|        return {};
 1585|   103k|    }
 1586|       |
 1587|  14.5k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1587:9): [True: 12.1k, False: 2.34k]
  ------------------
 1588|  12.1k|    {
 1589|       |        // TODO: Proper error expected closing paren
 1590|  12.1k|        return {};
 1591|  12.1k|    }
 1592|       |
 1593|  2.34k|    return phi::move(expression);
 1594|  14.5k|}
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1597|  4.23k|{
 1598|  4.23k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1598:9): [True: 0, False: 4.23k]
  ------------------
 1599|      0|    {
 1600|      0|        return {};
 1601|      0|    }
 1602|       |
 1603|  4.23k|    if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1603:9): [True: 0, False: 4.23k]
  ------------------
 1604|      0|    {
 1605|      0|        return {};
 1606|      0|    }
 1607|       |
 1608|       |    // Parse optional expression
 1609|  4.23k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1610|       |
 1611|  4.23k|    return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1612|  4.23k|}
_ZN10OpenAutoIt6Parser20ParseUnaryExpressionENS_9TokenKindE:
 1615|  12.0k|{
 1616|  12.0k|    PHI_ASSERT(IsUnaryOperator(operator_kind));
 1617|       |
 1618|  12.0k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1618:9): [True: 37, False: 12.0k]
  ------------------
 1619|     37|    {
 1620|     37|        return {};
 1621|     37|    }
 1622|       |
 1623|       |    // Parse expression
 1624|  12.0k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1625|  12.0k|    if (!expression)
  ------------------
  |  Branch (1625:9): [True: 6.64k, False: 5.39k]
  ------------------
 1626|  6.64k|    {
 1627|       |        // TODO: Proper error
 1628|  6.64k|        return {};
 1629|  6.64k|    }
 1630|       |
 1631|  5.39k|    return phi::make_scope<ASTUnaryExpression>(operator_kind,
 1632|  5.39k|                                               phi::move(expression.release_not_null()));
 1633|  12.0k|}
_ZN10OpenAutoIt6Parser24ParseTernaryIfExpressionEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
 1637|  58.6k|{
 1638|  58.6k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1638:9): [True: 7, False: 58.6k]
  ------------------
 1639|      7|    {
 1640|      7|        return {};
 1641|      7|    }
 1642|       |
 1643|  58.6k|    phi::scope_ptr<ASTExpression> true_expression = ParseExpression();
 1644|  58.6k|    if (!true_expression)
  ------------------
  |  Branch (1644:9): [True: 8.09k, False: 50.5k]
  ------------------
 1645|  8.09k|    {
 1646|  8.09k|        return {};
 1647|  8.09k|    }
 1648|       |
 1649|       |    // Must parse the else part ":"
 1650|  50.5k|    if (!MustParse(TokenKind::OP_TernaryElse))
  ------------------
  |  Branch (1650:9): [True: 11.0k, False: 39.5k]
  ------------------
 1651|  11.0k|    {
 1652|  11.0k|        err("Missing ':' for ternary if\n");
 1653|  11.0k|        return {};
 1654|  11.0k|    }
 1655|       |
 1656|  39.5k|    phi::scope_ptr<ASTExpression> false_expression = ParseExpression();
 1657|  39.5k|    if (!false_expression)
  ------------------
  |  Branch (1657:9): [True: 10.9k, False: 28.5k]
  ------------------
 1658|  10.9k|    {
 1659|  10.9k|        return {};
 1660|  10.9k|    }
 1661|       |
 1662|  28.5k|    return phi::make_scope<ASTTernaryIfExpression>(phi::move(condition),
 1663|  28.5k|                                                   phi::move(true_expression.release_not_null()),
 1664|  28.5k|                                                   phi::move(false_expression.release_not_null()));
 1665|  39.5k|}
_ZN10OpenAutoIt6Parser20ParseMacroExpressionENS_9TokenKindE:
 1668|  1.67k|{
 1669|  1.67k|    const auto macro = static_cast<phi::size_t>(macro_kind);
 1670|  1.67k|    PHI_ASSERT(macro >= MacroFirst && macro <= MacroLast);
 1671|       |
 1672|  1.67k|    return phi::make_scope<ASTMacroExpression>(macro_kind);
 1673|  1.67k|}
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1676|  28.4k|{
 1677|  28.4k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1677:9): [True: 0, False: 28.4k]
  ------------------
 1678|      0|    {
 1679|       |        // TODO: Proper error
 1680|      0|        return {};
 1681|      0|    }
 1682|       |
 1683|       |    // BooleanLiteral is either KW_True or KW_False
 1684|  28.4k|    const Token& token = CurrentToken();
 1685|  28.4k|    if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1685:9): [True: 18.6k, False: 9.80k]
  ------------------
 1686|  18.6k|    {
 1687|  18.6k|        ConsumeCurrent();
 1688|  18.6k|        return phi::make_scope<ASTBooleanLiteral>(true);
 1689|  18.6k|    }
 1690|       |
 1691|  9.80k|    if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1691:9): [True: 9.80k, False: 0]
  ------------------
 1692|  9.80k|    {
 1693|  9.80k|        ConsumeCurrent();
 1694|  9.80k|        return phi::make_scope<ASTBooleanLiteral>(false);
 1695|  9.80k|    }
 1696|       |
 1697|       |    // TODO: Proper error
 1698|      0|    return {};
 1699|  9.80k|}
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1702|    782|{
 1703|    782|    if (!HasMoreTokens())
  ------------------
  |  Branch (1703:9): [True: 0, False: 782]
  ------------------
 1704|      0|    {
 1705|       |        // TODO: Proper error
 1706|      0|        return {};
 1707|      0|    }
 1708|       |
 1709|    782|    const Token& token = CurrentToken();
 1710|    782|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1710:9): [True: 782, False: 0]
  ------------------
 1711|    782|    {
 1712|    782|        ConsumeCurrent();
 1713|    782|        return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1714|    782|    }
 1715|       |
 1716|       |    // TODO: Proper error
 1717|      0|    return {};
 1718|    782|}
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1721|  6.74k|{
 1722|  6.74k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1722:9): [True: 0, False: 6.74k]
  ------------------
 1723|      0|    {
 1724|       |        // TODO: Proper error
 1725|      0|        return {};
 1726|      0|    }
 1727|       |
 1728|  6.74k|    const Token& token = CurrentToken();
 1729|  6.74k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1729:9): [True: 6.74k, False: 0]
  ------------------
 1730|  6.74k|    {
 1731|  6.74k|        ConsumeCurrent();
 1732|       |
 1733|  6.74k|        char*    ptr   = nullptr;
 1734|  6.74k|        phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1735|       |
 1736|  6.74k|        return phi::make_scope<ASTFloatLiteral>(value);
 1737|  6.74k|    }
 1738|       |
 1739|       |    // TODO: Proper error
 1740|      0|    return {};
 1741|  6.74k|}
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   69|   185k|    {
   70|   185k|        int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   71|       |        //PHI_ASSERT(precedence != 0);
   72|       |
   73|   185k|        return precedence;
   74|   185k|    }

_ZN10OpenAutoIt10SourceFileC2ENS0_4TypeENSt3__14__fs10filesystem4pathEN3phi17basic_string_viewIcNS2_11char_traitsIcEEEE:
   12|  14.1k|{}

_ZN10OpenAutoIt13SourceManager18SetLocalSearchPathERKNSt3__14__fs10filesystem4pathE:
   14|  14.1k|{}
_ZN10OpenAutoIt18EmptySourceManager8LoadFileEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_11IncludeTypeE:
  156|    492|{
  157|    492|    return {};
  158|    492|}

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  7.09k|{
   31|       |#if defined(PHI_DEBUG)
   32|       |    PHI_ASSERT(!m_Finalized);
   33|       |#endif
   34|       |
   35|  7.09k|    m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |    m_Finalized = true;
   38|       |#endif
   39|  7.09k|}
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   68|  9.87M|{
   69|       |#if defined(PHI_DEBUG)
   70|       |    PHI_ASSERT(m_Finalized);
   71|       |#endif
   72|       |
   73|  9.87M|    return m_Index < m_Tokens.size();
   74|  9.87M|}
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   77|  6.73M|{
   78|       |#if defined(PHI_DEBUG)
   79|       |    PHI_ASSERT(m_Finalized);
   80|       |#endif
   81|       |
   82|  6.73M|    return m_Index >= m_Tokens.size();
   83|  6.73M|}
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   86|  4.71M|{
   87|  4.71M|    PHI_ASSERT(!reached_end());
   88|       |#if defined(PHI_DEBUG)
   89|       |    PHI_ASSERT(m_Finalized);
   90|       |#endif
   91|       |
   92|  4.71M|    return m_Tokens[m_Index.unsafe()];
   93|  4.71M|}
_ZNK10OpenAutoIt11TokenStream11look_behindEv:
   96|  54.3k|{
   97|  54.3k|    PHI_ASSERT(!m_Tokens.empty());
   98|       |#if defined(PHI_DEBUG)
   99|       |    PHI_ASSERT(m_Finalized);
  100|       |#endif
  101|       |
  102|  54.3k|    if (m_Index == 0u)
  ------------------
  |  Branch (102:9): [True: 0, False: 54.3k]
  ------------------
  103|      0|    {
  104|      0|        return m_Tokens[0u];
  105|      0|    }
  106|       |
  107|  54.3k|    return m_Tokens[m_Index.unsafe() - 1u];
  108|  54.3k|}
_ZN10OpenAutoIt11TokenStream7consumeEv:
  111|  2.01M|{
  112|  2.01M|    PHI_ASSERT(!reached_end());
  113|       |#if defined(PHI_DEBUG)
  114|       |    PHI_ASSERT(m_Finalized);
  115|       |#endif
  116|       |
  117|  2.01M|    m_Index += 1u;
  118|  2.01M|}

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  1.44M|{
  100|  1.44M|    if (output_enabled)
  ------------------
  |  Branch (100:9): [True: 0, False: 1.44M]
  ------------------
  101|      0|    {
  102|      0|        std::cerr << data;
  103|      0|    }
  104|  1.44M|}
_ZN10OpenAutoIt14disable_outputEv:
  107|  7.09k|{
  108|  7.09k|    output_enabled = false;
  109|  7.09k|}

