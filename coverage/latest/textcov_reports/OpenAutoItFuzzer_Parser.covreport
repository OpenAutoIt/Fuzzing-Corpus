_ZN3fmt3v106detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  377|   397k|    typename std::make_unsigned<Int>::type {
  378|   397k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  336|   794k|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (336:35): [Folded - Ignored]
  |  |  |  Branch (336:35): [True: 397k, False: 0]
  |  |  ------------------
  ------------------
  379|   397k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  380|   397k|}
_ZN3fmt3v106detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  304|  3.19M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v1017basic_string_viewIcE4sizeEv:
  445|  2.15M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  304|   397k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE4sizeEv:
  840|   441k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail6bufferIcEC2EPcmm:
  812|   441k|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt3v106detail6bufferIcE3setEPcm:
  818|   441k|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  819|   441k|    ptr_ = buf_data;
  820|   441k|    capacity_ = buf_capacity;
  821|   441k|  }
_ZN3fmt3v106detail13ignore_unusedIJbEEEvDpRKT_:
  304|    179|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE8capacityEv:
  843|    318|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt3v106detail6bufferIcE4dataEv:
  846|   441k|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt3v1017basic_string_viewIcE5beginEv:
  447|   838k|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt3v1017basic_string_viewIcE3endEv:
  448|   838k|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKc:
  428|   441k|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt3v106detail10locale_refC2Ev:
 1536|   804k|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZNK3fmt3v1019basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2759|  43.7k|  FMT_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt3v1016make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJEEENS0_16format_arg_storeIT_JDpNSt3__19remove_cvINS7_16remove_referenceIT0_E4typeEE4typeEEEEDpRSA_:
 1827|  43.7k|    -> format_arg_store<Context, remove_cvref_t<T>...> {
 1828|  43.7k|  return {args...};
 1829|  43.7k|}
_ZN3fmt3v1016format_arg_storeINS0_20basic_format_contextINS0_8appenderEcEEJEEC2IJEEEDpRT_:
 1810|  43.7k|        data_{detail::make_arg<is_packed, Context>(args)...} {
 1811|  43.7k|    if (detail::const_check(num_named_args != 0))
  ------------------
  |  Branch (1811:9): [Folded - Ignored]
  ------------------
 1812|      0|      detail::init_named_args(data_.named_args(), 0, 0, args...);
 1813|  43.7k|  }
_ZN3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EEC2IJEEEDpRKT_:
 1170|  43.7k|  FMT_CONSTEXPR FMT_INLINE arg_data(const U&... init) : args_{init...} {}
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1263|   441k|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt3v109monostateC2Ev:
  279|   441k|  constexpr monostate() {}
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2IJEEERKNS0_16format_arg_storeIS4_JDpT_EEE:
 1911|  43.7k|                          store.data_.args()) {}
_ZNK3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE4argsEv:
 1171|  43.7k|  FMT_CONSTEXPR FMT_INLINE auto args() const -> const T* { return args_; }
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1895|   441k|      : desc_(desc), values_(values) {}
_ZNK3fmt3v1017basic_string_viewIcE4dataEv:
  442|   872k|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKcm:
  413|   872k|      : data_(s), size_(count) {}
_ZN3fmt3v106detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  377|  2.79M|    typename std::make_unsigned<Int>::type {
  378|  2.79M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  336|  5.59M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (336:35): [Folded - Ignored]
  |  |  |  Branch (336:35): [True: 2.79M, False: 0]
  |  |  ------------------
  ------------------
  379|  2.79M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  380|  2.79M|}
_ZN3fmt3v106detail6bufferIcE11try_reserveEm:
  863|  1.20M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  864|  1.20M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (864:9): [True: 179, False: 1.20M]
  ------------------
  865|  1.20M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 1933|   397k|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1934|   397k|    format_arg arg;
 1935|   397k|    if (!is_packed()) {
  ------------------
  |  Branch (1935:9): [True: 0, False: 397k]
  ------------------
 1936|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1936:11): [True: 0, False: 0]
  ------------------
 1937|      0|      return arg;
 1938|      0|    }
 1939|   397k|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1939:9): [True: 0, False: 397k]
  ------------------
 1940|   397k|    arg.type_ = type(id);
 1941|   397k|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1941:9): [True: 0, False: 397k]
  ------------------
 1942|   397k|    arg.value_ = values_[id];
 1943|   397k|    return arg;
 1944|   397k|  }
_ZN3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1644|   397k|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1880|   397k|  constexpr auto is_packed() const -> bool {
 1881|   397k|    return (desc_ & detail::is_unpacked_bit) == 0;
 1882|   397k|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1887|   397k|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1888|   397k|    int shift = index * detail::packed_arg_bits;
 1889|   397k|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1890|   397k|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1891|   397k|  }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1646|   397k|  constexpr explicit operator bool() const noexcept {
 1647|   397k|    return type_ != detail::type::none_type;
 1648|   397k|  }
_ZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  768|  1.23M|    -> Container& {
  769|  1.23M|  using base = std::back_insert_iterator<Container>;
  770|  1.23M|  struct accessor : base {
  771|  1.23M|    accessor(base b) : base(b) {}
  772|  1.23M|    using base::container;
  773|  1.23M|  };
  774|  1.23M|  return *accessor(it).container;
  775|  1.23M|}
_ZZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  771|  1.23M|    accessor(base b) : base(b) {}
_ZNK3fmt3v106detail6fill_tIcE4sizeEv:
 2011|   397k|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt3v106detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1490|  1.23M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1491|  1.23M|  get_container(out).append(begin, end);
 1492|  1.23M|  return out;
 1493|  1.23M|}
_ZN3fmt3v1012format_specsIcEC2Ev:
 2061|   397k|        localized(false) {}
_ZN3fmt3v1026basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  671|   441k|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1733|   441k|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE3outEv:
 1748|  1.23M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2490|   441k|    basic_string_view<Char> format_str, Handler&& handler) {
 2491|   441k|  auto begin = format_str.data();
 2492|   441k|  auto end = begin + format_str.size();
 2493|   441k|  if (end - begin < 32) {
  ------------------
  |  Branch (2493:7): [True: 251k, False: 189k]
  ------------------
 2494|       |    // Use a simple loop instead of memchr for small strings.
 2495|   251k|    const Char* p = begin;
 2496|  6.23M|    while (p != end) {
  ------------------
  |  Branch (2496:12): [True: 5.98M, False: 251k]
  ------------------
 2497|  5.98M|      auto c = *p++;
 2498|  5.98M|      if (c == '{') {
  ------------------
  |  Branch (2498:11): [True: 207k, False: 5.77M]
  ------------------
 2499|   207k|        handler.on_text(begin, p - 1);
 2500|   207k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2501|  5.77M|      } else if (c == '}') {
  ------------------
  |  Branch (2501:18): [True: 0, False: 5.77M]
  ------------------
 2502|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2502:13): [True: 0, False: 0]
  |  Branch (2502:25): [True: 0, False: 0]
  ------------------
 2503|      0|          return handler.on_error("unmatched '}' in format string");
 2504|      0|        handler.on_text(begin, p);
 2505|      0|        begin = ++p;
 2506|      0|      }
 2507|  5.98M|    }
 2508|   251k|    handler.on_text(begin, end);
 2509|   251k|    return;
 2510|   251k|  }
 2511|   189k|  struct writer {
 2512|   189k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2513|   189k|      if (from == to) return;
 2514|   189k|      for (;;) {
 2515|   189k|        const Char* p = nullptr;
 2516|   189k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2517|   189k|          return handler_.on_text(from, to);
 2518|   189k|        ++p;
 2519|   189k|        if (p == to || *p != '}')
 2520|   189k|          return handler_.on_error("unmatched '}' in format string");
 2521|   189k|        handler_.on_text(from, p);
 2522|   189k|        from = p + 1;
 2523|   189k|      }
 2524|   189k|    }
 2525|   189k|    Handler& handler_;
 2526|   189k|  } write = {handler};
 2527|   378k|  while (begin != end) {
  ------------------
  |  Branch (2527:10): [True: 378k, False: 8]
  ------------------
 2528|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2529|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2530|   378k|    const Char* p = begin;
 2531|   378k|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2531:9): [True: 378k, False: 0]
  |  Branch (2531:26): [True: 189k, False: 189k]
  ------------------
 2532|   189k|      return write(begin, end);
 2533|   189k|    write(begin, p);
 2534|   189k|    begin = parse_replacement_field(p, end, handler);
 2535|   189k|  }
 2536|   189k|}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1751|  1.23M|  void advance_to(iterator it) {
 1752|  1.23M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1752:9): [Folded - Ignored]
  ------------------
 1753|  1.23M|  }
_ZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2453|   397k|                                           Handler&& handler) -> const Char* {
 2454|   397k|  struct id_adapter {
 2455|   397k|    Handler& handler;
 2456|   397k|    int arg_id;
 2457|       |
 2458|   397k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2459|   397k|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2460|   397k|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2461|   397k|      arg_id = handler.on_arg_id(id);
 2462|   397k|    }
 2463|   397k|  };
 2464|       |
 2465|   397k|  ++begin;
 2466|   397k|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2466:7): [True: 0, False: 397k]
  ------------------
 2467|   397k|  if (*begin == '}') {
  ------------------
  |  Branch (2467:7): [True: 0, False: 397k]
  ------------------
 2468|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2469|   397k|  } else if (*begin == '{') {
  ------------------
  |  Branch (2469:14): [True: 0, False: 397k]
  ------------------
 2470|      0|    handler.on_text(begin, begin + 1);
 2471|   397k|  } else {
 2472|   397k|    auto adapter = id_adapter{handler, 0};
 2473|   397k|    begin = parse_arg_id(begin, end, adapter);
 2474|   397k|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2474:14): [True: 397k, False: 0]
  ------------------
 2475|   397k|    if (c == '}') {
  ------------------
  |  Branch (2475:9): [True: 0, False: 397k]
  ------------------
 2476|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2477|   397k|    } else if (c == ':') {
  ------------------
  |  Branch (2477:16): [True: 397k, False: 0]
  ------------------
 2478|   397k|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2479|   397k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2479:11): [True: 0, False: 397k]
  |  Branch (2479:27): [True: 0, False: 397k]
  ------------------
 2480|      0|        return handler.on_error("unknown format specifier"), end;
 2481|   397k|    } else {
 2482|      0|      return handler.on_error("missing '}' in format string"), end;
 2483|      0|    }
 2484|   397k|  }
 2485|   397k|  return begin + 1;
 2486|   397k|}
_ZNK3fmt3v1020basic_format_contextINS0_8appenderEcE3argEi:
 1735|   397k|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE6localeEv:
 1755|   397k|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt3v1026basic_format_parse_contextIcE11next_arg_idEv:
  695|   397k|  FMT_CONSTEXPR auto next_arg_id() -> int {
  696|   397k|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (696:9): [True: 0, False: 397k]
  ------------------
  697|      0|      detail::throw_format_error(
  698|      0|          "cannot switch from manual to automatic argument indexing");
  699|      0|      return 0;
  700|      0|    }
  701|   397k|    int id = next_arg_id_++;
  702|   397k|    do_check_arg_id(id);
  703|   397k|    return id;
  704|   397k|  }
_ZN3fmt3v1026basic_format_parse_contextIcE15do_check_arg_idEi:
 1042|   397k|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
 1043|       |  // Argument id is only checked at compile-time during parsing because
 1044|       |  // formatting has its own validation.
 1045|   397k|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (1045:7): [Folded - Ignored]
  ------------------
 1046|   397k|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (1046:8): [Folded - Ignored]
  |  Branch (1046:28): [Folded - Ignored]
  ------------------
 1047|      0|    using context = detail::compile_parse_context<Char>;
 1048|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (1048:9): [True: 0, False: 0]
  ------------------
 1049|      0|      detail::throw_format_error("argument not found");
 1050|      0|  }
 1051|   397k|}
_ZN3fmt3v106detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2209|   397k|                                           Handler&& handler) -> const Char* {
 2210|   397k|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  336|   397k|      fmt::detail::ignore_unused((condition), (message))
  ------------------
 2211|   397k|  Char c = *begin;
 2212|   397k|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2212:7): [True: 397k, False: 0]
  |  Branch (2212:19): [True: 0, False: 397k]
  ------------------
 2213|   397k|  handler.on_auto();
 2214|   397k|  return begin;
 2215|   397k|}
_ZZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2458|   397k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1650|   794k|  auto type() const -> detail::type { return type_; }
_ZN3fmt3v106detail7arg_refIcEC2Ev:
 2070|   794k|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt3v106detail7arg_refIcE5valueC2Ei:
 2085|   794k|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2279|   397k|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2280|   397k|  auto c = '\0';
 2281|   397k|  if (end - begin > 1) {
  ------------------
  |  Branch (2281:7): [True: 397k, False: 0]
  ------------------
 2282|   397k|    auto next = to_ascii(begin[1]);
 2283|   397k|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2283:9): [True: 397k, False: 0]
  ------------------
 2284|   397k|  } else {
 2285|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2285:9): [True: 0, False: 0]
  ------------------
 2286|      0|    c = to_ascii(*begin);
 2287|      0|  }
 2288|       |
 2289|   397k|  struct {
 2290|   397k|    state current_state = state::start;
 2291|   397k|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2292|   397k|      if (current_state >= s || !valid)
 2293|   397k|        throw_format_error("invalid format specifier");
 2294|   397k|      current_state = s;
 2295|   397k|    }
 2296|   397k|  } enter_state;
 2297|       |
 2298|   397k|  using pres = presentation_type;
 2299|   397k|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2300|   397k|  struct {
 2301|   397k|    const Char*& begin;
 2302|   397k|    dynamic_format_specs<Char>& specs;
 2303|   397k|    type arg_type;
 2304|       |
 2305|   397k|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2306|   397k|      if (!in(arg_type, set)) {
 2307|   397k|        if (arg_type == type::none_type) return begin;
 2308|   397k|        throw_format_error("invalid format specifier");
 2309|   397k|      }
 2310|   397k|      specs.type = pres_type;
 2311|   397k|      return begin + 1;
 2312|   397k|    }
 2313|   397k|  } parse_presentation_type{begin, specs, arg_type};
 2314|       |
 2315|   397k|  for (;;) {
 2316|   397k|    switch (c) {
 2317|      0|    case '<':
  ------------------
  |  Branch (2317:5): [True: 0, False: 397k]
  ------------------
 2318|      0|    case '>':
  ------------------
  |  Branch (2318:5): [True: 0, False: 397k]
  ------------------
 2319|      0|    case '^':
  ------------------
  |  Branch (2319:5): [True: 0, False: 397k]
  ------------------
 2320|      0|      enter_state(state::align);
 2321|      0|      specs.align = parse_align(c);
 2322|      0|      ++begin;
 2323|      0|      break;
 2324|      0|    case '+':
  ------------------
  |  Branch (2324:5): [True: 0, False: 397k]
  ------------------
 2325|      0|    case '-':
  ------------------
  |  Branch (2325:5): [True: 0, False: 397k]
  ------------------
 2326|      0|    case ' ':
  ------------------
  |  Branch (2326:5): [True: 0, False: 397k]
  ------------------
 2327|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2327:11): [True: 0, False: 0]
  ------------------
 2328|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2329|      0|      switch (c) {
  ------------------
  |  Branch (2329:15): [True: 0, False: 0]
  ------------------
 2330|      0|      case '+':
  ------------------
  |  Branch (2330:7): [True: 0, False: 0]
  ------------------
 2331|      0|        specs.sign = sign::plus;
 2332|      0|        break;
 2333|      0|      case '-':
  ------------------
  |  Branch (2333:7): [True: 0, False: 0]
  ------------------
 2334|      0|        specs.sign = sign::minus;
 2335|      0|        break;
 2336|      0|      case ' ':
  ------------------
  |  Branch (2336:7): [True: 0, False: 0]
  ------------------
 2337|      0|        specs.sign = sign::space;
 2338|      0|        break;
 2339|      0|      }
 2340|      0|      ++begin;
 2341|      0|      break;
 2342|      0|    case '#':
  ------------------
  |  Branch (2342:5): [True: 0, False: 397k]
  ------------------
 2343|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2343:11): [True: 0, False: 0]
  ------------------
 2344|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2345|      0|      specs.alt = true;
 2346|      0|      ++begin;
 2347|      0|      break;
 2348|      0|    case '0':
  ------------------
  |  Branch (2348:5): [True: 0, False: 397k]
  ------------------
 2349|      0|      enter_state(state::zero);
 2350|      0|      if (!is_arithmetic_type(arg_type)) {
  ------------------
  |  Branch (2350:11): [True: 0, False: 0]
  ------------------
 2351|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2351:13): [True: 0, False: 0]
  ------------------
 2352|      0|        throw_format_error("format specifier requires numeric argument");
 2353|      0|      }
 2354|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2354:11): [True: 0, False: 0]
  ------------------
 2355|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2356|      0|        specs.align = align::numeric;
 2357|      0|        specs.fill[0] = Char('0');
 2358|      0|      }
 2359|      0|      ++begin;
 2360|      0|      break;
 2361|      0|    case '1':
  ------------------
  |  Branch (2361:5): [True: 0, False: 397k]
  ------------------
 2362|      0|    case '2':
  ------------------
  |  Branch (2362:5): [True: 0, False: 397k]
  ------------------
 2363|      0|    case '3':
  ------------------
  |  Branch (2363:5): [True: 0, False: 397k]
  ------------------
 2364|      0|    case '4':
  ------------------
  |  Branch (2364:5): [True: 0, False: 397k]
  ------------------
 2365|      0|    case '5':
  ------------------
  |  Branch (2365:5): [True: 0, False: 397k]
  ------------------
 2366|      0|    case '6':
  ------------------
  |  Branch (2366:5): [True: 0, False: 397k]
  ------------------
 2367|      0|    case '7':
  ------------------
  |  Branch (2367:5): [True: 0, False: 397k]
  ------------------
 2368|      0|    case '8':
  ------------------
  |  Branch (2368:5): [True: 0, False: 397k]
  ------------------
 2369|      0|    case '9':
  ------------------
  |  Branch (2369:5): [True: 0, False: 397k]
  ------------------
 2370|      0|    case '{':
  ------------------
  |  Branch (2370:5): [True: 0, False: 397k]
  ------------------
 2371|      0|      enter_state(state::width);
 2372|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2373|      0|      break;
 2374|      0|    case '.':
  ------------------
  |  Branch (2374:5): [True: 0, False: 397k]
  ------------------
 2375|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2375:11): [True: 0, False: 0]
  ------------------
 2376|      0|      enter_state(state::precision,
 2377|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2378|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2379|      0|                              ctx);
 2380|      0|      break;
 2381|      0|    case 'L':
  ------------------
  |  Branch (2381:5): [True: 0, False: 397k]
  ------------------
 2382|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2382:11): [True: 0, False: 0]
  ------------------
 2383|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2384|      0|      specs.localized = true;
 2385|      0|      ++begin;
 2386|      0|      break;
 2387|      0|    case 'd':
  ------------------
  |  Branch (2387:5): [True: 0, False: 397k]
  ------------------
 2388|      0|      return parse_presentation_type(pres::dec, integral_set);
 2389|      0|    case 'o':
  ------------------
  |  Branch (2389:5): [True: 0, False: 397k]
  ------------------
 2390|      0|      return parse_presentation_type(pres::oct, integral_set);
 2391|      0|    case 'x':
  ------------------
  |  Branch (2391:5): [True: 0, False: 397k]
  ------------------
 2392|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2393|      0|    case 'X':
  ------------------
  |  Branch (2393:5): [True: 0, False: 397k]
  ------------------
 2394|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2395|      0|    case 'b':
  ------------------
  |  Branch (2395:5): [True: 0, False: 397k]
  ------------------
 2396|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2397|      0|    case 'B':
  ------------------
  |  Branch (2397:5): [True: 0, False: 397k]
  ------------------
 2398|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2399|      0|    case 'a':
  ------------------
  |  Branch (2399:5): [True: 0, False: 397k]
  ------------------
 2400|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2401|      0|    case 'A':
  ------------------
  |  Branch (2401:5): [True: 0, False: 397k]
  ------------------
 2402|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2403|      0|    case 'e':
  ------------------
  |  Branch (2403:5): [True: 0, False: 397k]
  ------------------
 2404|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2405|      0|    case 'E':
  ------------------
  |  Branch (2405:5): [True: 0, False: 397k]
  ------------------
 2406|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2407|      0|    case 'f':
  ------------------
  |  Branch (2407:5): [True: 0, False: 397k]
  ------------------
 2408|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2409|      0|    case 'F':
  ------------------
  |  Branch (2409:5): [True: 0, False: 397k]
  ------------------
 2410|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2411|      0|    case 'g':
  ------------------
  |  Branch (2411:5): [True: 0, False: 397k]
  ------------------
 2412|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2413|      0|    case 'G':
  ------------------
  |  Branch (2413:5): [True: 0, False: 397k]
  ------------------
 2414|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2415|      0|    case 'c':
  ------------------
  |  Branch (2415:5): [True: 0, False: 397k]
  ------------------
 2416|      0|      return parse_presentation_type(pres::chr, integral_set);
 2417|   397k|    case 's':
  ------------------
  |  Branch (2417:5): [True: 397k, False: 0]
  ------------------
 2418|   397k|      return parse_presentation_type(pres::string,
 2419|   397k|                                     bool_set | string_set | cstring_set);
 2420|      0|    case 'p':
  ------------------
  |  Branch (2420:5): [True: 0, False: 397k]
  ------------------
 2421|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2422|      0|    case '?':
  ------------------
  |  Branch (2422:5): [True: 0, False: 397k]
  ------------------
 2423|      0|      return parse_presentation_type(pres::debug,
 2424|      0|                                     char_set | string_set | cstring_set);
 2425|      0|    case '}':
  ------------------
  |  Branch (2425:5): [True: 0, False: 397k]
  ------------------
 2426|      0|      return begin;
 2427|      0|    default: {
  ------------------
  |  Branch (2427:5): [True: 0, False: 397k]
  ------------------
 2428|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2428:11): [True: 0, False: 0]
  ------------------
 2429|       |      // Parse fill and alignment.
 2430|      0|      auto fill_end = begin + code_point_length(begin);
 2431|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2431:11): [True: 0, False: 0]
  ------------------
 2432|      0|        throw_format_error("invalid format specifier");
 2433|      0|        return begin;
 2434|      0|      }
 2435|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2435:11): [True: 0, False: 0]
  ------------------
 2436|      0|        throw_format_error("invalid fill character '{'");
 2437|      0|        return begin;
 2438|      0|      }
 2439|      0|      auto align = parse_align(to_ascii(*fill_end));
 2440|      0|      enter_state(state::align, align != align::none);
 2441|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2442|      0|      specs.align = align;
 2443|      0|      begin = fill_end + 1;
 2444|      0|    }
 2445|   397k|    }
 2446|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2446:9): [True: 0, False: 0]
  ------------------
 2447|      0|    c = to_ascii(*begin);
 2448|      0|  }
 2449|   397k|}
_ZN3fmt3v106detail8to_asciiIcLi0EEEcT_:
 2104|   794k|constexpr auto to_ascii(Char c) -> char {
 2105|   794k|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2105:10): [True: 794k, False: 0]
  ------------------
 2106|   794k|}
_ZN3fmt3v106detail11parse_alignEc:
 2162|   397k|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2163|   397k|  switch (c) {
  ------------------
  |  Branch (2163:11): [True: 397k, False: 0]
  ------------------
 2164|      0|  case '<':
  ------------------
  |  Branch (2164:3): [True: 0, False: 397k]
  ------------------
 2165|      0|    return align::left;
 2166|      0|  case '>':
  ------------------
  |  Branch (2166:3): [True: 0, False: 397k]
  ------------------
 2167|      0|    return align::right;
 2168|      0|  case '^':
  ------------------
  |  Branch (2168:3): [True: 0, False: 397k]
  ------------------
 2169|      0|    return align::center;
 2170|   397k|  }
 2171|   397k|  return align::none;
 2172|   397k|}
_ZN3fmt3v106detail2inENS1_4typeEi:
  613|   397k|constexpr auto in(type t, int set) -> bool {
  614|   397k|  return ((set >> static_cast<int>(t)) & 1) != 0;
  615|   397k|}
_ZZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2305|   397k|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2306|   397k|      if (!in(arg_type, set)) {
  ------------------
  |  Branch (2306:11): [True: 0, False: 397k]
  ------------------
 2307|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2307:13): [True: 0, False: 0]
  ------------------
 2308|      0|        throw_format_error("invalid format specifier");
 2309|      0|      }
 2310|   397k|      specs.type = pres_type;
 2311|   397k|      return begin + 1;
 2312|   397k|    }
_ZN3fmt3v1016visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1668|   397k|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1669|   397k|  switch (arg.type_) {
  ------------------
  |  Branch (1669:11): [True: 0, False: 397k]
  ------------------
 1670|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1670:3): [True: 0, False: 397k]
  ------------------
 1671|      0|    break;
 1672|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1672:3): [True: 0, False: 397k]
  ------------------
 1673|      0|    return vis(arg.value_.int_value);
 1674|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1674:3): [True: 0, False: 397k]
  ------------------
 1675|      0|    return vis(arg.value_.uint_value);
 1676|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1676:3): [True: 0, False: 397k]
  ------------------
 1677|      0|    return vis(arg.value_.long_long_value);
 1678|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1678:3): [True: 0, False: 397k]
  ------------------
 1679|      0|    return vis(arg.value_.ulong_long_value);
 1680|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1680:3): [True: 0, False: 397k]
  ------------------
 1681|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1682|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1682:3): [True: 0, False: 397k]
  ------------------
 1683|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1684|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1684:3): [True: 0, False: 397k]
  ------------------
 1685|      0|    return vis(arg.value_.bool_value);
 1686|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1686:3): [True: 0, False: 397k]
  ------------------
 1687|      0|    return vis(arg.value_.char_value);
 1688|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1688:3): [True: 0, False: 397k]
  ------------------
 1689|      0|    return vis(arg.value_.float_value);
 1690|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1690:3): [True: 0, False: 397k]
  ------------------
 1691|      0|    return vis(arg.value_.double_value);
 1692|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1692:3): [True: 0, False: 397k]
  ------------------
 1693|      0|    return vis(arg.value_.long_double_value);
 1694|   363k|  case detail::type::cstring_type:
  ------------------
  |  Branch (1694:3): [True: 363k, False: 33.8k]
  ------------------
 1695|   363k|    return vis(arg.value_.string.data);
 1696|  33.8k|  case detail::type::string_type:
  ------------------
  |  Branch (1696:3): [True: 33.8k, False: 363k]
  ------------------
 1697|  33.8k|    using sv = basic_string_view<typename Context::char_type>;
 1698|  33.8k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1699|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1699:3): [True: 0, False: 397k]
  ------------------
 1700|      0|    return vis(arg.value_.pointer);
 1701|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1701:3): [True: 0, False: 397k]
  ------------------
 1702|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1703|   397k|  }
 1704|      0|  return vis(monostate());
 1705|   397k|}
_ZN3fmt3v106detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2131|   757k|                              const char*& out) -> bool {
 2132|   757k|  out = static_cast<const char*>(
 2133|   757k|      std::memchr(first, value, to_unsigned(last - first)));
 2134|   757k|  return out != nullptr;
 2135|   757k|}
_ZZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2512|   378k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2513|   378k|      if (from == to) return;
  ------------------
  |  Branch (2513:11): [True: 0, False: 378k]
  ------------------
 2514|   378k|      for (;;) {
 2515|   378k|        const Char* p = nullptr;
 2516|   378k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2516:13): [True: 378k, False: 0]
  ------------------
 2517|   378k|          return handler_.on_text(from, to);
 2518|      0|        ++p;
 2519|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2519:13): [True: 0, False: 0]
  |  Branch (2519:24): [True: 0, False: 0]
  ------------------
 2520|      0|          return handler_.on_error("unmatched '}' in format string");
 2521|      0|        handler_.on_text(from, p);
 2522|      0|        from = p + 1;
 2523|      0|      }
 2524|   378k|    }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1279|  33.8k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1280|  33.8k|    string.data = val.data();
 1281|  33.8k|    string.size = val.size();
 1282|  33.8k|  }
_ZN3fmt3v106detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1393|   363k|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1394|   363k|    return val;
 1395|   363k|  }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1275|   363k|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1276|   363k|    string.data = val;
 1277|   363k|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1277:9): [Folded - Ignored]
  ------------------
 1278|   363k|  }
_ZNK3fmt3v106detail6bufferIcE4dataEv:
  847|   441k|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt3v107vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1420|   441k|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1421|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1422|       |  // can be better optimized in fmt::format anyway.
 1423|   441k|  auto buffer = memory_buffer();
 1424|   441k|  detail::vformat_to(buffer, fmt, args);
 1425|   441k|  return to_string(buffer);
 1426|   441k|}

_ZN3fmt3v106detail6bufferIcE6appendIcEEvPKT_S7_:
  875|  1.23M|void buffer<T>::append(const U* begin, const U* end) {
  876|  2.43M|  while (begin != end) {
  ------------------
  |  Branch (876:10): [True: 1.20M, False: 1.23M]
  ------------------
  877|  1.20M|    auto count = to_unsigned(end - begin);
  878|  1.20M|    try_reserve(size_ + count);
  879|  1.20M|    auto free_cap = capacity_ - size_;
  880|  1.20M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (880:9): [True: 0, False: 1.20M]
  ------------------
  881|  1.20M|    std::uninitialized_copy_n(begin, count, ptr_ + size_);
  882|  1.20M|    size_ += count;
  883|  1.20M|    begin += count;
  884|  1.20M|  }
  885|  1.23M|}
_ZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4375|   441k|                typename vformat_args<Char>::type args, locale_ref loc) {
 4376|   441k|  auto out = buffer_appender<Char>(buf);
 4377|   441k|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4377:7): [True: 0, False: 441k]
  |  Branch (4377:26): [True: 0, False: 0]
  ------------------
 4378|      0|    auto arg = args.get(0);
 4379|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4379:9): [True: 0, False: 0]
  ------------------
 4380|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4381|      0|    return;
 4382|      0|  }
 4383|       |
 4384|   441k|  struct format_handler : error_handler {
 4385|   441k|    basic_format_parse_context<Char> parse_context;
 4386|   441k|    buffer_context<Char> context;
 4387|       |
 4388|   441k|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4389|   441k|                   basic_format_args<buffer_context<Char>> p_args,
 4390|   441k|                   locale_ref p_loc)
 4391|   441k|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4392|       |
 4393|   441k|    void on_text(const Char* begin, const Char* end) {
 4394|   441k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4395|   441k|      context.advance_to(write<Char>(context.out(), text));
 4396|   441k|    }
 4397|       |
 4398|   441k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4399|   441k|      return parse_context.next_arg_id();
 4400|   441k|    }
 4401|   441k|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4402|   441k|      return parse_context.check_arg_id(id), id;
 4403|   441k|    }
 4404|   441k|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4405|   441k|      int arg_id = context.arg_id(id);
 4406|   441k|      if (arg_id < 0) on_error("argument not found");
 4407|   441k|      return arg_id;
 4408|   441k|    }
 4409|       |
 4410|   441k|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4411|   441k|      auto arg = get_arg(context, id);
 4412|   441k|      context.advance_to(visit_format_arg(
 4413|   441k|          default_arg_formatter<Char>{context.out(), context.args(),
 4414|   441k|                                      context.locale()},
 4415|   441k|          arg));
 4416|   441k|    }
 4417|       |
 4418|   441k|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4419|   441k|        -> const Char* {
 4420|   441k|      auto arg = get_arg(context, id);
 4421|   441k|      if (arg.type() == type::custom_type) {
 4422|   441k|        parse_context.advance_to(begin);
 4423|   441k|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4424|   441k|        return parse_context.begin();
 4425|   441k|      }
 4426|   441k|      auto specs = detail::dynamic_format_specs<Char>();
 4427|   441k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4428|   441k|      detail::handle_dynamic_spec<detail::width_checker>(
 4429|   441k|          specs.width, specs.width_ref, context);
 4430|   441k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4431|   441k|          specs.precision, specs.precision_ref, context);
 4432|   441k|      if (begin == end || *begin != '}')
 4433|   441k|        on_error("missing '}' in format string");
 4434|   441k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4435|   441k|      context.advance_to(visit_format_arg(f, arg));
 4436|   441k|      return begin;
 4437|   441k|    }
 4438|   441k|  };
 4439|   441k|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4440|   441k|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  965|   441k|      : alloc_(alloc) {
  966|   441k|    this->set(store_, SIZE);
  967|   441k|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (967:9): [Folded - Ignored]
  ------------------
  968|   441k|  }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  936|    179|  FMT_CONSTEXPR20 void grow(size_t size) override {
  937|    179|    detail::abort_fuzzing_if(size > 5000);
  938|    179|    const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  939|    179|    size_t old_capacity = this->capacity();
  940|    179|    size_t new_capacity = old_capacity + old_capacity / 2;
  941|    179|    if (size > new_capacity)
  ------------------
  |  Branch (941:9): [True: 27, False: 152]
  ------------------
  942|     27|      new_capacity = size;
  943|    152|    else if (new_capacity > max_size)
  ------------------
  |  Branch (943:14): [True: 0, False: 152]
  ------------------
  944|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (944:22): [True: 0, False: 0]
  ------------------
  945|    179|    T* old_data = this->data();
  946|    179|    T* new_data =
  947|    179|        std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  948|       |    // Suppress a bogus -Wstringop-overflow in gcc 13.1 (#3481).
  949|    179|    detail::assume(this->size() <= new_capacity);
  950|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  951|    179|    std::uninitialized_copy_n(old_data, this->size(), new_data);
  952|    179|    this->set(new_data, new_capacity);
  953|       |    // deallocate must not throw according to the standard, but even if it does,
  954|       |    // the buffer already uses the new storage and will deallocate it in
  955|       |    // destructor.
  956|    179|    if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (956:9): [True: 40, False: 139]
  ------------------
  957|    179|  }
_ZN3fmt3v106detail16abort_fuzzing_ifEb:
  295|    179|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  296|    179|  ignore_unused(condition);
  297|       |#ifdef FMT_FUZZ
  298|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  299|       |#endif
  300|    179|}
_ZN3fmt3v106detail6assumeEb:
  544|   441k|FMT_INLINE void assume(bool condition) {
  545|   441k|  (void)condition;
  546|   441k|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  547|   441k|  __builtin_assume(condition);
  548|       |#elif FMT_GCC_VERSION
  549|       |  if (!condition) __builtin_unreachable();
  550|       |#endif
  551|   441k|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  969|   441k|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  930|   441k|  FMT_CONSTEXPR20 void deallocate() {
  931|   441k|    T* data = this->data();
  932|   441k|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (932:9): [True: 139, False: 440k]
  ------------------
  933|   441k|  }
_ZN3fmt3v106detail7reserveINS0_8appenderEEERT_S5_m:
  591|  1.23M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  592|  1.23M|  return it;
  593|  1.23M|}
_ZN3fmt3v106detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  619|  1.23M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  620|  1.23M|  return it;
  621|  1.23M|}
_ZN3fmt3v106detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  648|   838k|                                                  OutputIt out) -> OutputIt {
  649|   838k|  return copy_str<OutChar>(begin, end, out);
  650|   838k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3680|   838k|    -> OutputIt {
 3681|   838k|  auto it = reserve(out, value.size());
 3682|   838k|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3683|   838k|  return base_iterator(out, it);
 3684|   838k|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4393|   838k|    void on_text(const Char* begin, const Char* end) {
 4394|   838k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4395|   838k|      context.advance_to(write<Char>(context.out(), text));
 4396|   838k|    }
_ZN3fmt3v106detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEEDTcldtfp_3argfp0_EERT_T0_:
 3858|   397k|FMT_CONSTEXPR auto get_arg(Context& ctx, ID id) -> decltype(ctx.arg(id)) {
 3859|   397k|  auto arg = ctx.arg(id);
 3860|   397k|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3860:7): [True: 0, False: 397k]
  ------------------
 3861|   397k|  return arg;
 3862|   397k|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4398|   397k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4399|   397k|      return parse_context.next_arg_id();
 4400|   397k|    }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4419|   397k|        -> const Char* {
 4420|   397k|      auto arg = get_arg(context, id);
 4421|   397k|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4421:11): [True: 0, False: 397k]
  ------------------
 4422|      0|        parse_context.advance_to(begin);
 4423|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4424|      0|        return parse_context.begin();
 4425|      0|      }
 4426|   397k|      auto specs = detail::dynamic_format_specs<Char>();
 4427|   397k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4428|   397k|      detail::handle_dynamic_spec<detail::width_checker>(
 4429|   397k|          specs.width, specs.width_ref, context);
 4430|   397k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4431|   397k|          specs.precision, specs.precision_ref, context);
 4432|   397k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4432:11): [True: 0, False: 397k]
  |  Branch (4432:27): [True: 0, False: 397k]
  ------------------
 4433|      0|        on_error("missing '}' in format string");
 4434|   397k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4435|   397k|      context.advance_to(visit_format_arg(f, arg));
 4436|   397k|      return begin;
 4437|   397k|    }
_ZN3fmt3v106detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3867|   397k|                                       Context& ctx) {
 3868|   397k|  switch (ref.kind) {
  ------------------
  |  Branch (3868:11): [True: 0, False: 397k]
  ------------------
 3869|   397k|  case arg_id_kind::none:
  ------------------
  |  Branch (3869:3): [True: 397k, False: 0]
  ------------------
 3870|   397k|    break;
 3871|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3871:3): [True: 0, False: 397k]
  ------------------
 3872|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3873|      0|                                              ctx.error_handler());
 3874|      0|    break;
 3875|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3875:3): [True: 0, False: 397k]
  ------------------
 3876|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3877|      0|                                              ctx.error_handler());
 3878|      0|    break;
 3879|   397k|  }
 3880|   397k|}
_ZN3fmt3v106detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3867|   397k|                                       Context& ctx) {
 3868|   397k|  switch (ref.kind) {
  ------------------
  |  Branch (3868:11): [True: 0, False: 397k]
  ------------------
 3869|   397k|  case arg_id_kind::none:
  ------------------
  |  Branch (3869:3): [True: 397k, False: 0]
  ------------------
 3870|   397k|    break;
 3871|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3871:3): [True: 0, False: 397k]
  ------------------
 3872|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3873|      0|                                              ctx.error_handler());
 3874|      0|    break;
 3875|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3875:3): [True: 0, False: 397k]
  ------------------
 3876|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3877|      0|                                              ctx.error_handler());
 3878|      0|    break;
 3879|   397k|  }
 3880|   397k|}
_ZN3fmt3v106detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3788|   363k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3789|   363k|    return detail::write(out, value, specs, locale);
 3790|   363k|  }
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2343|   363k|    -> OutputIt {
 2344|   363k|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2344:10): [True: 363k, False: 0]
  ------------------
 2345|   363k|             ? write(out, basic_string_view<Char>(s), specs, {})
 2346|   363k|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2347|   363k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2337|   397k|    -> OutputIt {
 2338|   397k|  return write(out, s, specs);
 2339|   397k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2314|   397k|                         const format_specs<Char>& specs) -> OutputIt {
 2315|   397k|  auto data = s.data();
 2316|   397k|  auto size = s.size();
 2317|   397k|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2317:7): [True: 0, False: 397k]
  |  Branch (2317:31): [True: 0, False: 0]
  ------------------
 2318|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2319|   397k|  bool is_debug = specs.type == presentation_type::debug;
 2320|   397k|  size_t width = 0;
 2321|   397k|  if (specs.width != 0) {
  ------------------
  |  Branch (2321:7): [True: 0, False: 397k]
  ------------------
 2322|      0|    if (is_debug)
  ------------------
  |  Branch (2322:9): [True: 0, False: 0]
  ------------------
 2323|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2324|      0|    else
 2325|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2326|      0|  }
 2327|   397k|  return write_padded(out, specs, size, width,
 2328|   397k|                      [=](reserve_iterator<OutputIt> it) {
 2329|   397k|                        if (is_debug) return write_escaped_string(it, s);
 2330|   397k|                        return copy_str<Char>(data, data + size, it);
 2331|   397k|                      });
 2332|   397k|}
_ZN3fmt3v106detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1769|   397k|                                size_t size, size_t width, F&& f) -> OutputIt {
 1770|   397k|  static_assert(align == align::left || align == align::right, "");
 1771|   397k|  unsigned spec_width = to_unsigned(specs.width);
 1772|   397k|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1772:20): [True: 0, False: 397k]
  ------------------
 1773|       |  // Shifts are encoded as string literals because static constexpr is not
 1774|       |  // supported in constexpr functions.
 1775|   397k|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1775:18): [Folded - Ignored]
  ------------------
 1776|   397k|  size_t left_padding = padding >> shifts[specs.align];
 1777|   397k|  size_t right_padding = padding - left_padding;
 1778|   397k|  auto it = reserve(out, size + padding * specs.fill.size());
 1779|   397k|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1779:7): [True: 0, False: 397k]
  ------------------
 1780|   397k|  it = f(it);
 1781|   397k|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1781:7): [True: 0, False: 397k]
  ------------------
 1782|   397k|  return base_iterator(out, it);
 1783|   397k|}
_ZZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2328|   397k|                      [=](reserve_iterator<OutputIt> it) {
 2329|   397k|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2329:29): [True: 0, False: 397k]
  ------------------
 2330|   397k|                        return copy_str<Char>(data, data + size, it);
 2331|   397k|                      });
_ZN3fmt3v106detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3788|  33.8k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3789|  33.8k|    return detail::write(out, value, specs, locale);
 3790|  33.8k|  }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4391|   441k|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt3v109to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4357|   441k|    -> std::basic_string<Char> {
 4358|   441k|  auto size = buf.size();
 4359|   441k|  detail::assume(size < std::basic_string<Char>().max_size());
 4360|   441k|  return std::basic_string<Char>(buf.data(), size);
 4361|   441k|}

LLVMFuzzerTestOneInput:
   14|  5.87k|{
   15|  5.87k|    disable_output();
   16|       |
   17|  5.87k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   18|       |
   19|  5.87k|    EmptySourceManager source_manager;
   20|  5.87k|    DiagnosticEngine   diagnostic_engine;
   21|  5.87k|    Lexer              lexer{&diagnostic_engine};
   22|  5.87k|    auto               document = phi::make_not_null_scope<ASTDocument>();
   23|       |
   24|  5.87k|    Parser parser{&source_manager, &diagnostic_engine, &lexer};
   25|  5.87k|    parser.ParseString(document, "Fuzz.au3", source);
   26|       |
   27|  5.87k|    return 0;
   28|  5.87k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  12.1k|    {
   18|  12.1k|        m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|  12.1k|    }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  28.6k|    {
   20|  28.6k|        m_NodeType = ASTNodeType::BinaryExpression;
   21|  28.6k|    }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|    517|    {
   18|    517|        m_NodeType = ASTNodeType::BooleanLiteral;
   19|    517|    }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|  40.0k|    {
   20|  40.0k|        m_Statements.emplace_back(phi::move(child));
   21|  40.0k|    }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  3.10k|    {
   25|  3.10k|        m_Functions.emplace_back(phi::move(child));
   26|  3.10k|    }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|    863|    {
   18|    863|        m_NodeType = ASTNodeType::ExitStatement;
   19|    863|    }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|  82.7k|    {
   13|  82.7k|        switch (m_NodeType)
   14|  82.7k|        {
   15|  10.7k|            case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:13): [True: 10.7k, False: 72.0k]
  ------------------
   16|  19.9k|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:13): [True: 9.23k, False: 73.5k]
  ------------------
   17|  20.8k|            case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:13): [True: 955, False: 81.8k]
  ------------------
   18|  20.8k|                return true;
   19|       |
   20|  61.8k|            default:
  ------------------
  |  Branch (20:13): [True: 61.8k, False: 20.8k]
  ------------------
   21|  61.8k|                return false;
   22|  82.7k|        }
   23|  82.7k|    }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|  82.7k|    {
   17|  82.7k|        m_NodeType = ASTNodeType::ExpressionStatement;
   18|  82.7k|    }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  7.11k|    {
   17|  7.11k|        m_NodeType = ASTNodeType::FloatLiteral;
   18|  7.11k|    }

_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   28|  12.2k|    {
   29|  12.2k|        return m_FunctionReference.FunctionName();
   30|  12.2k|    }
_ZN10OpenAutoIt25ASTFunctionCallExpressionC2ENS_17FunctionReferenceE:
   18|  27.6k|    {
   19|  27.6k|        m_NodeType = ASTNodeType::FunctionCallExpression;
   20|  27.6k|    }

_ZN10OpenAutoIt30ASTFunctionReferenceExpressionC2ENS_17FunctionReferenceE:
   19|  78.3k|    {
   20|  78.3k|        m_NodeType = ASTNodeType::FunctionReferenceExpression;
   21|  78.3k|    }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  4.92k|    {
   25|  4.92k|        m_NodeType = ASTNodeType::IfStatement;
   26|  4.92k|    }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|  93.7k|    {
   17|  93.7k|        m_NodeType = ASTNodeType::IntegerLiteral;
   18|  93.7k|    }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|    784|    {
   19|    784|        m_NodeType = ASTNodeType::KeywordLiteral;
   20|    784|        PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|    784|    }

_ZN10OpenAutoIt18ASTMacroExpressionC2ENS_9TokenKindE:
   18|  6.27k|    {
   19|  6.27k|        m_NodeType = ASTNodeType::MacroExpression;
   20|  6.27k|        PHI_ASSERT(static_cast<phi::size_t>(m_Macro) >= MacroFirst &&
   21|  6.27k|                   static_cast<phi::size_t>(m_Macro) <= MacroLast);
   22|  6.27k|    }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   75|   529k|    virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   73|   529k|    ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   78|  61.8k|    {
   79|  61.8k|        PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   80|  61.8k|        PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   81|       |
   82|  61.8k|        return enum_name(m_NodeType);
   83|  61.8k|    }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   51|  61.8k|{
   52|  61.8k|    switch (node_type)
   53|  61.8k|    {
   54|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   55|      0|    case ASTNodeType::name:                                                                        \
   56|      0|        return "AST" #name;
   57|       |
   58|      0|        OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   15|  1.13k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   55|  1.13k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 1.13k, False: 60.7k]
  |  |  |  |  ------------------
  |  |  |  |   56|  1.13k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  9.34k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   55|  9.34k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 9.34k, False: 52.5k]
  |  |  |  |  ------------------
  |  |  |  |   56|  9.34k|        return "AST" #name;
  |  |  ------------------
  |  |   17|  9.34k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|    331|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 331, False: 61.5k]
  |  |  |  |  ------------------
  |  |  |  |   56|    331|        return "AST" #name;
  |  |  ------------------
  |  |   18|    331|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 61.8k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 61.8k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   20|    890|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   55|    890|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 890, False: 60.9k]
  |  |  |  |  ------------------
  |  |  |  |   56|    890|        return "AST" #name;
  |  |  ------------------
  |  |   21|    890|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 61.8k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   22|  29.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionReferenceExpression)                                \
  |  |  ------------------
  |  |  |  |   55|  29.2k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 29.2k, False: 32.6k]
  |  |  |  |  ------------------
  |  |  |  |   56|  29.2k|        return "AST" #name;
  |  |  ------------------
  |  |   23|  29.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 61.8k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   24|  7.37k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|  7.37k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 7.37k, False: 54.4k]
  |  |  |  |  ------------------
  |  |  |  |   56|  7.37k|        return "AST" #name;
  |  |  ------------------
  |  |   25|  7.37k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|    552|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 552, False: 61.3k]
  |  |  |  |  ------------------
  |  |  |  |   56|    552|        return "AST" #name;
  |  |  ------------------
  |  |   26|  2.82k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(MacroExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|  2.82k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 2.82k, False: 59.0k]
  |  |  |  |  ------------------
  |  |  |  |   56|  2.82k|        return "AST" #name;
  |  |  ------------------
  |  |   27|  4.16k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   55|  4.16k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 4.16k, False: 57.6k]
  |  |  |  |  ------------------
  |  |  |  |   56|  4.16k|        return "AST" #name;
  |  |  ------------------
  |  |   28|  6.04k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(TernaryIfExpression)                                        \
  |  |  ------------------
  |  |  |  |   55|  6.04k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 6.04k, False: 55.8k]
  |  |  |  |  ------------------
  |  |  |  |   56|  6.04k|        return "AST" #name;
  |  |  ------------------
  |  |   29|  6.04k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 61.8k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   30|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 61.8k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   31|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 61.8k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   32|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 61.8k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   59|       |
   60|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   61|       |
   62|      0|        default:
  ------------------
  |  Branch (62:9): [True: 0, False: 61.8k]
  ------------------
   63|      0|            PHI_ASSERT_NOT_REACHED();
   64|      0|            return "";
   65|  61.8k|    }
   66|  61.8k|}

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  14.2k|    {
   15|  14.2k|        m_NodeType = ASTNodeType::StringLiteral;
   16|  14.2k|    }

_ZN10OpenAutoIt22ASTTernaryIfExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEES5_S5_:
   19|  8.23k|    {
   20|  8.23k|        m_NodeType = ASTNodeType::TernaryIfExpression;
   21|  8.23k|    }

_ZN10OpenAutoIt18ASTUnaryExpressionC2ENS_9TokenKindEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   15|  49.2k|    {
   16|  49.2k|        m_NodeType = ASTNodeType::UnaryExpression;
   17|  49.2k|    }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|  61.5k|    {
   20|  61.5k|        m_NodeType = ASTNodeType::VariableAssignment;
   21|  61.5k|    }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|  12.2k|    {
   15|  12.2k|        m_NodeType = ASTNodeType::VariableExpression;
   16|  12.2k|    }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  3.04k|    {
   18|  3.04k|        m_NodeType = ASTNodeType::WhileStatement;
   19|  3.04k|    }

_ZN10OpenAutoIt17DiagnosticBuilder7WarningIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   55|  40.0k|    {
   56|  40.0k|        m_Diagnostics.emplace_back(Diagnostic{
   57|  40.0k|                id, DiagnosticLevel::Warning, location,
   58|  40.0k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   59|       |
   60|  40.0k|        return *this;
   61|  40.0k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA9_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  33.6k|    {
   66|  33.6k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  33.6k|                id, DiagnosticLevel::Error, location,
   68|  33.6k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  33.6k|        return *this;
   71|  33.6k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA18_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|      8|    {
   66|      8|        m_Diagnostics.emplace_back(Diagnostic{
   67|      8|                id, DiagnosticLevel::Error, location,
   68|      8|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|      8|        return *this;
   71|      8|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA4_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  1.05k|    {
   66|  1.05k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  1.05k|                id, DiagnosticLevel::Error, location,
   68|  1.05k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  1.05k|        return *this;
   71|  1.05k|    }
_ZN10OpenAutoIt17DiagnosticBuilder4NoteIJEEERS0_NS_14SourceLocationENSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   31|  1.05k|    {
   32|  1.05k|        PHI_ASSERT(!m_Diagnostics.empty());
   33|       |
   34|  1.05k|        m_Diagnostics.back().AddNote(
   35|  1.05k|                Diagnostic{DiagnosticId::None, DiagnosticLevel::Note, location,
   36|  1.05k|                           std::string{fmt::format(fmt::runtime(format_string),
   37|  1.05k|                                                   phi::forward<ArgsT>(args)...)}});
   38|       |
   39|  1.05k|        return *this;
   40|  1.05k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA25_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    508|    {
   66|    508|        m_Diagnostics.emplace_back(Diagnostic{
   67|    508|                id, DiagnosticLevel::Error, location,
   68|    508|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    508|        return *this;
   71|    508|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  2.66k|    {
   66|  2.66k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  2.66k|                id, DiagnosticLevel::Error, location,
   68|  2.66k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  2.66k|        return *this;
   71|  2.66k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    467|    {
   66|    467|        m_Diagnostics.emplace_back(Diagnostic{
   67|    467|                id, DiagnosticLevel::Error, location,
   68|    467|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    467|        return *this;
   71|    467|    }

_ZN10OpenAutoIt19DiagnosticIdMessageENS_12DiagnosticIdE:
   87|  78.4k|{
   88|  78.4k|    PHI_ASSERT(id != DiagnosticId::None);
   89|       |
   90|  78.4k|    switch (id)
   91|  78.4k|    {
   92|      0|#define OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EnumName, FlagName, DiagnosticMessage)                 \
   93|      0|    case DiagnosticId::EnumName: {                                                                 \
   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
   95|      0|        return DiagnosticMessage;                                                                  \
   96|      0|    }
   97|       |
   98|      0|        OPENAUTOIT_ENUM_DIAGNOSTIC_IDS()
  ------------------
  |  |   12|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(None, "", "")                                              \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 78.4k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   13|      0|    /* Lexer warnings */                                                                           \
  |  |   14|  40.0k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(NullCharacter, "-Wnull-character",                         \
  |  |  ------------------
  |  |  |  |   93|  40.0k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 40.0k, False: 38.3k]
  |  |  |  |  ------------------
  |  |  |  |   94|  40.0k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  40.0k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  40.0k|    }
  |  |  ------------------
  |  |   15|  40.0k|                                        "null character ignored")                                  \
  |  |   16|  40.0k|    /* Lexer errors */                                                                             \
  |  |   17|  40.0k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(InvalidFloatLiteral, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 78.4k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   18|      0|                                        "invalid float literal declaration")                       \
  |  |   19|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FloatHexLiteral, "",                                       \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 78.4k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   20|      0|                                        "hexadecimal float literal are not allowed")               \
  |  |   21|      0|    /* Parser error */                                                                             \
  |  |   22|      8|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(UnexpectedEndOfFile, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      8|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 8, False: 78.3k]
  |  |  |  |  ------------------
  |  |  |  |   94|      8|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      8|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      8|    }
  |  |  ------------------
  |  |   23|      8|                                        "unexpected end of file while parsing {:s}")               \
  |  |   24|  35.2k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(Expected, "", "expected {:s}")                             \
  |  |  ------------------
  |  |  |  |   93|  35.2k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 35.2k, False: 43.1k]
  |  |  |  |  ------------------
  |  |  |  |   94|  35.2k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  35.2k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  35.2k|    }
  |  |  ------------------
  |  |   25|  35.2k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IntegerLiteralTooLarge, "",                                \
  |  |  ------------------
  |  |  |  |   93|  2.21k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 2.21k, False: 76.1k]
  |  |  |  |  ------------------
  |  |  |  |   94|  2.21k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  2.21k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  2.21k|    }
  |  |  ------------------
  |  |   26|  2.21k|                                        "integer literal is too large.")                           \
  |  |   27|  2.21k|    /* Parser fatal error */                                                                       \
  |  |   28|  2.21k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNotFound, "", "'{:s}' file not found")                 \
  |  |  ------------------
  |  |  |  |   93|    362|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 362, False: 78.0k]
  |  |  |  |  ------------------
  |  |  |  |   94|    362|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    362|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    362|    }
  |  |  ------------------
  |  |   29|    450|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EmptyFilename, "", "empty filename")                       \
  |  |  ------------------
  |  |  |  |   93|    450|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 450, False: 77.9k]
  |  |  |  |  ------------------
  |  |  |  |   94|    450|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    450|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    450|    }
  |  |  ------------------
  |  |   30|    450|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IncludeNestingTooDeeply, "", "#include nested too deeply") \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 78.4k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   31|    105|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNameTooLong, "",                                       \
  |  |  ------------------
  |  |  |  |   93|    105|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 105, False: 78.2k]
  |  |  |  |  ------------------
  |  |  |  |   94|    105|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    105|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    105|    }
  |  |  ------------------
  |  |   32|    105|                                        "cannot open file '{:s}': File name too long")
  ------------------
   99|       |
  100|      0|#undef OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL
  101|       |
  102|      0|        default:
  ------------------
  |  Branch (102:9): [True: 0, False: 78.4k]
  ------------------
  103|      0|            PHI_ASSERT_NOT_REACHED();
  104|  78.4k|    }
  105|  78.4k|}

_ZN10OpenAutoIt17FunctionReferenceC2ERKNS_5TokenE:
   23|    939|    {
   24|    939|        PHI_ASSERT(built_in_function.IsBuiltInFunction());
   25|    939|    }
_ZN10OpenAutoIt17FunctionReferenceC2EN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
   18|   105k|    {}
_ZNK10OpenAutoIt17FunctionReference12FunctionNameEv:
   33|  12.2k|    {
   34|  12.2k|        return m_IsBuiltIn ? enum_name(m_BuiltInFunction) : m_FunctionName;
  ------------------
  |  Branch (34:16): [True: 500, False: 11.7k]
  ------------------
   35|  12.2k|    }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|   727k|    {
   46|   727k|        Token token{kind,
   47|   727k|                    m_Source.substring_view(
   48|   727k|                            static_cast<typename phi::string_view::size_type::value_type>(
   49|   727k|                                    m_Iterator - m_Source.cbegin()),
   50|   727k|                            1u),
   51|   727k|                    CurrentSourceLocation()};
   52|       |
   53|       |        // 1 character sized token
   54|   727k|        ++m_Column;
   55|       |
   56|   727k|        return token;
   57|   727k|    }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|   657k|    {
   61|   657k|        Token token{kind, TokenText(token_begin), CurrentSourceLocation()};
   62|       |
   63|       |        // Consume the amount of characters that make up our new token
   64|   657k|        m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|   657k|        return token;
   67|   657k|    }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  1.08M|    {
   71|  1.08M|        return m_Source.substring_view(token_begin, m_Iterator);
   72|  1.08M|    }
_ZNK10OpenAutoIt5Lexer21CurrentSourceLocationEv:
   75|  1.42M|    {
   76|  1.42M|        return BuildSourceLocation(m_LineNumber, m_Column);
   77|  1.42M|    }
_ZNK10OpenAutoIt5Lexer19BuildSourceLocationEN3phi7integerImEES3_:
   81|  1.42M|    {
   82|  1.42M|        return {m_SourceFile, line_number, column};
   83|  1.42M|    }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   71|   915k|    {
   72|   915k|        switch (token_kind)
   73|   915k|        {
   74|  18.8k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (74:13): [True: 18.8k, False: 896k]
  ------------------
   75|   115k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (75:13): [True: 96.9k, False: 818k]
  ------------------
   76|   116k|            case TokenKind::KW_Not:
  ------------------
  |  Branch (76:13): [True: 504, False: 914k]
  ------------------
   77|   116k|                return true;
   78|       |
   79|   798k|            default:
  ------------------
  |  Branch (79:13): [True: 798k, False: 116k]
  ------------------
   80|   798k|                return false;
   81|   915k|        }
   82|   915k|    }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   86|   288k|    {
   87|   288k|        switch (token_kind)
   88|   288k|        {
   89|    194|            case TokenKind::KW_And:
  ------------------
  |  Branch (89:13): [True: 194, False: 288k]
  ------------------
   90|    392|            case TokenKind::KW_Or:
  ------------------
  |  Branch (90:13): [True: 198, False: 288k]
  ------------------
   91|  15.2k|            case TokenKind::OP_Equals:
  ------------------
  |  Branch (91:13): [True: 14.8k, False: 273k]
  ------------------
   92|  15.5k|            case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (92:13): [True: 283, False: 288k]
  ------------------
   93|  15.7k|            case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (93:13): [True: 198, False: 288k]
  ------------------
   94|  15.9k|            case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (94:13): [True: 197, False: 288k]
  ------------------
   95|  16.1k|            case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (95:13): [True: 215, False: 288k]
  ------------------
   96|  18.3k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (96:13): [True: 2.23k, False: 286k]
  ------------------
   97|  28.0k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (97:13): [True: 9.70k, False: 278k]
  ------------------
   98|  28.8k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (98:13): [True: 830, False: 287k]
  ------------------
   99|  29.8k|            case TokenKind::OP_Divide:
  ------------------
  |  Branch (99:13): [True: 921, False: 287k]
  ------------------
  100|  30.3k|            case TokenKind::OP_Raise:
  ------------------
  |  Branch (100:13): [True: 591, False: 287k]
  ------------------
  101|  30.6k|            case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (101:13): [True: 243, False: 288k]
  ------------------
  102|  30.8k|            case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (102:13): [True: 231, False: 288k]
  ------------------
  103|  32.6k|            case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (103:13): [True: 1.75k, False: 286k]
  ------------------
  104|  32.8k|            case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (104:13): [True: 204, False: 288k]
  ------------------
  105|  33.3k|            case TokenKind::OP_LessThan:
  ------------------
  |  Branch (105:13): [True: 539, False: 287k]
  ------------------
  106|  33.5k|            case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (106:13): [True: 194, False: 288k]
  ------------------
  107|  33.9k|            case TokenKind::OP_Concatenate:
  ------------------
  |  Branch (107:13): [True: 427, False: 287k]
  ------------------
  108|  34.4k|            case TokenKind::OP_ConcatenateEquals:
  ------------------
  |  Branch (108:13): [True: 451, False: 287k]
  ------------------
  109|  34.4k|                return true;
  110|       |
  111|   253k|            default:
  ------------------
  |  Branch (111:13): [True: 253k, False: 34.4k]
  ------------------
  112|   253k|                return false;
  113|   288k|        }
  114|   288k|    }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  155|  3.10k|    {
  156|  3.10k|        m_Document->AppendFunction(phi::move(function));
  157|  3.10k|    }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  149|  40.0k|    {
  150|  40.0k|        m_Document->AppendStatement(phi::move(statement));
  151|  40.0k|    }

_ZN10OpenAutoIt14SourceLocation7InvalidEv:
   23|  5.87k|    {
   24|  5.87k|        return {nullptr, 1u, 1u};
   25|  5.87k|    }

_ZN10OpenAutoIt13SourceManagerC2Ev:
   21|  5.87k|    SourceManager()          = default;

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_14SourceLocationE:
   27|  1.38M|    {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   39|  9.72M|    {
   40|  9.72M|        return m_Kind;
   41|  9.72M|    }
_ZNK10OpenAutoIt5Token7GetTextEv:
   44|   689k|    {
   45|   689k|        return m_Text;
   46|   689k|    }
_ZNK10OpenAutoIt5Token16GetBeginLocationEv:
   64|  37.8k|    {
   65|  37.8k|        return m_SourceLocation;
   66|  37.8k|    }
_ZNK10OpenAutoIt5Token14GetEndLocationEv:
   69|  1.56k|    {
   70|  1.56k|        return {.source_file = m_SourceLocation.source_file,
   71|  1.56k|                .line_number = m_SourceLocation.line_number,
   72|  1.56k|                .column      = m_SourceLocation.column + m_Text.length()};
   73|  1.56k|    }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   88|   623k|    {
   89|   623k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   90|       |
   91|   623k|        if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (91:13): [True: 3.75k, False: 619k]
  ------------------
   92|   623k|            underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (92:13): [True: 3.75k, False: 0]
  ------------------
   93|  3.75k|        {
   94|  3.75k|            return true;
   95|  3.75k|        }
   96|       |
   97|   619k|        return false;
   98|   623k|    }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
  101|   503k|    {
  102|   503k|        switch (m_Kind)
  103|   503k|        {
  104|  1.17k|            case TokenKind::KW_Default:
  ------------------
  |  Branch (104:13): [True: 1.17k, False: 501k]
  ------------------
  105|  1.56k|            case TokenKind::KW_Null:
  ------------------
  |  Branch (105:13): [True: 392, False: 502k]
  ------------------
  106|  1.56k|                return true;
  107|       |
  108|   501k|            default:
  ------------------
  |  Branch (108:13): [True: 501k, False: 1.56k]
  ------------------
  109|   501k|                return false;
  110|   503k|        }
  111|   503k|    }
_ZNK10OpenAutoIt5Token7IsMacroEv:
  158|   100k|    {
  159|   100k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
  160|       |
  161|   100k|        if (underlying_value >= MacroFirst && underlying_value <= MacroLast)
  ------------------
  |  Branch (161:13): [True: 48.7k, False: 51.4k]
  |  Branch (161:47): [True: 6.27k, False: 42.4k]
  ------------------
  162|  6.27k|        {
  163|  6.27k|            return true;
  164|  6.27k|        }
  165|       |
  166|  93.9k|        return false;
  167|   100k|    }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  682|   266k|{
  683|   266k|    switch (token_kind)
  684|   266k|    {
  685|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  686|      0|    case TokenKind::name:                                                                          \
  687|      0|        return #name;
  688|       |
  689|      0|        OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  1.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  686|  1.14k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.14k, False: 265k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.14k|        return #name;
  |  |  ------------------
  |  |   13|  26.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  686|  26.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26.0k, False: 240k]
  |  |  |  |  ------------------
  |  |  |  |  687|  26.0k|        return #name;
  |  |  ------------------
  |  |   14|  26.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   15|  2.39k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  686|  2.39k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.39k, False: 264k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.39k|        return #name;
  |  |  ------------------
  |  |   16|  2.39k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |   17|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   18|  45.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|  45.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 45.6k, False: 221k]
  |  |  |  |  ------------------
  |  |  |  |  687|  45.6k|        return #name;
  |  |  ------------------
  |  |   19|  45.6k|    /* Literals */                                                                                 \
  |  |   20|  45.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  686|  14.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14.9k, False: 251k]
  |  |  |  |  ------------------
  |  |  |  |  687|  14.9k|        return #name;
  |  |  ------------------
  |  |   21|  14.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  686|  5.18k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.18k, False: 261k]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.18k|        return #name;
  |  |  ------------------
  |  |   22|  5.18k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  686|  4.38k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.38k, False: 262k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.38k|        return #name;
  |  |  ------------------
  |  |   23|  4.38k|    /* Punctuation */                                                                              \
  |  |   24|  4.91k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  686|  4.91k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.91k, False: 261k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.91k|        return #name;
  |  |  ------------------
  |  |   25|  14.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  14.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14.7k, False: 252k]
  |  |  |  |  ------------------
  |  |  |  |  687|  14.7k|        return #name;
  |  |  ------------------
  |  |   26|  21.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  21.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 21.2k, False: 245k]
  |  |  |  |  ------------------
  |  |  |  |  687|  21.2k|        return #name;
  |  |  ------------------
  |  |   27|  21.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   28|  11.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  11.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11.9k, False: 254k]
  |  |  |  |  ------------------
  |  |  |  |  687|  11.9k|        return #name;
  |  |  ------------------
  |  |   29|  31.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  31.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 31.8k, False: 234k]
  |  |  |  |  ------------------
  |  |  |  |  687|  31.8k|        return #name;
  |  |  ------------------
  |  |   30|  31.8k|    /* Macros */                                                                                   \
  |  |   31|  31.8k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  31.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   33|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   34|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   35|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   36|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   37|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   38|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   39|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   40|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   41|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   42|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   43|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   44|  3.57k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  686|  3.57k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.57k, False: 263k]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.57k|        return #name;
  |  |  ------------------
  |  |   45|  3.57k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   46|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   47|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   48|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |   49|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   51|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   52|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   53|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   54|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   55|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   56|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   59|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   60|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   67|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   70|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   74|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   75|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   76|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   77|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   81|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   82|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   83|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   84|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   86|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   87|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   88|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   89|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   91|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   92|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   93|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   96|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   97|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |   98|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  100|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  686|     35|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 35, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     35|        return #name;
  |  |  ------------------
  |  |  101|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  103|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  105|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  106|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  107|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  108|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  109|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  111|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  112|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  113|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  122|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  123|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  124|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  125|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  127|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  128|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  129|    153|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|    153|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 153, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    153|        return #name;
  |  |  ------------------
  |  |  130|    153|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  131|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  132|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  133|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  138|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  139|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  141|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  143|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    540|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|    540|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 540, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    540|        return #name;
  |  |  ------------------
  |  |  145|    540|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|    540|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  686|    433|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 433, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    433|        return #name;
  |  |  ------------------
  |  |  147|    433|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    433|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  686|    364|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 364, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    364|        return #name;
  |  |  ------------------
  |  |  149|    364|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    372|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  686|    372|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 372, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    372|        return #name;
  |  |  ------------------
  |  |  151|    372|    /* Keywords */                                                                                 \
  |  |  152|    372|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    372|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    372|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|    372|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  686|    176|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 176, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    176|        return #name;
  |  |  ------------------
  |  |  156|    222|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  686|    222|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 222, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    222|        return #name;
  |  |  ------------------
  |  |  157|    222|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|    222|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|    523|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  686|    523|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 523, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    523|        return #name;
  |  |  ------------------
  |  |  163|    523|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|    523|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  165|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  166|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  167|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  168|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  170|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  171|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  173|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  175|      1|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  177|     14|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  179|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  180|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  181|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  686|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 32, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     32|        return #name;
  |  |  ------------------
  |  |  182|     32|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|     78|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  686|     78|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 78, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     78|        return #name;
  |  |  ------------------
  |  |  184|     78|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  8.04k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  686|  8.04k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8.04k, False: 258k]
  |  |  |  |  ------------------
  |  |  |  |  687|  8.04k|        return #name;
  |  |  ------------------
  |  |  186|  8.04k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  187|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  188|  3.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  686|  3.29k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.29k, False: 263k]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.29k|        return #name;
  |  |  ------------------
  |  |  189|  3.29k|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  3.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  686|    110|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 110, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    110|        return #name;
  |  |  ------------------
  |  |  191|    127|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  686|    127|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 127, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    127|        return #name;
  |  |  ------------------
  |  |  192|    127|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  193|     17|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|    511|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  686|    511|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 511, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    511|        return #name;
  |  |  ------------------
  |  |  195|  2.26k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  686|  2.26k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.26k, False: 264k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.26k|        return #name;
  |  |  ------------------
  |  |  196|  2.26k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|  2.26k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  686|     69|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 69, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     69|        return #name;
  |  |  ------------------
  |  |  198|     69|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|     69|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  200|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  202|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  203|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  206|      4|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  208|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  213|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  214|     12|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  216|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  219|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  220|    185|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  686|    185|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 185, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    185|        return #name;
  |  |  ------------------
  |  |  221|    185|    /* Operator */                                                                                 \
  |  |  222|    185|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  34.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)            /* = */                                  \
  |  |  ------------------
  |  |  |  |  686|  34.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 34.3k, False: 232k]
  |  |  |  |  ------------------
  |  |  |  |  687|  34.3k|        return #name;
  |  |  ------------------
  |  |  224|  34.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)        /* += */                                 \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  225|    137|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)       /* -= */                                 \
  |  |  ------------------
  |  |  |  |  686|    137|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 137, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    137|        return #name;
  |  |  ------------------
  |  |  226|    137|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)    /* *= */                                 \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  227|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)      /* /= */                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  228|  1.11k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)       /* & */                                  \
  |  |  ------------------
  |  |  |  |  686|  1.11k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.11k, False: 265k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.11k|        return #name;
  |  |  ------------------
  |  |  229|  1.11k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals) /* &= */                                 \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  230|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)              /* + */                                  \
  |  |  ------------------
  |  |  |  |  686|     66|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 66, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     66|        return #name;
  |  |  ------------------
  |  |  231|  1.46k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)             /* - */                                  \
  |  |  ------------------
  |  |  |  |  686|  1.46k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.46k, False: 265k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.46k|        return #name;
  |  |  ------------------
  |  |  232|  1.64k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)          /* * */                                  \
  |  |  ------------------
  |  |  |  |  686|  1.64k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.64k, False: 265k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.64k|        return #name;
  |  |  ------------------
  |  |  233|  1.64k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)            /* / */                                  \
  |  |  ------------------
  |  |  |  |  686|  1.35k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.35k, False: 265k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.35k|        return #name;
  |  |  ------------------
  |  |  234|  1.35k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)             /* ^ */                                  \
  |  |  ------------------
  |  |  |  |  686|    848|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 848, False: 265k]
  |  |  |  |  ------------------
  |  |  |  |  687|    848|        return #name;
  |  |  ------------------
  |  |  235|    848|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)      /* == */                                 \
  |  |  ------------------
  |  |  |  |  686|    494|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 494, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    494|        return #name;
  |  |  ------------------
  |  |  236|    546|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)          /* <> */                                 \
  |  |  ------------------
  |  |  |  |  686|    546|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 546, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    546|        return #name;
  |  |  ------------------
  |  |  237|  2.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)       /* > */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.14k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.14k, False: 264k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.14k|        return #name;
  |  |  ------------------
  |  |  238|  2.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)  /* >= */                                 \
  |  |  ------------------
  |  |  |  |  686|     86|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 86, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     86|        return #name;
  |  |  ------------------
  |  |  239|  1.27k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)          /* < */                                  \
  |  |  ------------------
  |  |  |  |  686|  1.27k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.27k, False: 265k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.27k|        return #name;
  |  |  ------------------
  |  |  240|  1.27k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)     /* <= */                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  241|  9.81k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)         /* ? */                                  \
  |  |  ------------------
  |  |  |  |  686|  9.81k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9.81k, False: 257k]
  |  |  |  |  ------------------
  |  |  |  |  687|  9.81k|        return #name;
  |  |  ------------------
  |  |  242|  9.81k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)       /* : */                                  \
  |  |  ------------------
  |  |  |  |  686|  4.89k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.89k, False: 261k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.89k|        return #name;
  |  |  ------------------
  |  |  243|  4.89k|    /* Built-in Functions */                                                                       \
  |  |  244|  4.89k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  4.89k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  4.89k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  686|    370|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 370, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|    370|        return #name;
  |  |  ------------------
  |  |  247|    370|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  248|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  249|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  250|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  251|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  254|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  255|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  256|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  257|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  263|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  264|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  265|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  686|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 30, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     30|        return #name;
  |  |  ------------------
  |  |  266|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  270|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  271|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  272|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  273|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  274|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  275|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  276|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  279|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  280|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  288|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  289|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  297|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  298|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  299|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  300|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  301|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  302|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  307|     83|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  686|     83|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 83, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     83|        return #name;
  |  |  ------------------
  |  |  308|     83|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  309|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  312|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  313|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  314|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  315|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  316|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  320|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  321|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  323|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  327|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  328|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  330|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  331|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  332|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  333|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  334|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  335|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  336|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  337|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  338|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  340|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  341|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  343|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  344|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  345|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  347|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  348|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  352|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  357|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  358|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  359|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  361|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  362|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  363|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  364|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  365|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  366|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  367|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  368|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  369|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  370|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  371|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  373|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  374|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  384|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  385|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  402|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  403|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  404|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  417|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  418|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  421|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  422|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  428|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  430|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  435|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  436|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  437|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  438|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  440|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  444|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  445|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  448|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  449|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  450|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  451|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  452|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  453|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  454|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  455|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  462|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  463|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  466|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  468|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  470|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  471|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  472|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  473|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  474|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  477|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  479|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  480|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  482|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  483|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|     21|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 21, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     21|        return #name;
  |  |  ------------------
  |  |  484|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  485|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  686|     50|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 50, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     50|        return #name;
  |  |  ------------------
  |  |  486|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  488|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  489|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  491|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  492|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  494|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  495|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  496|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  497|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  498|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  499|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  500|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  503|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  504|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  505|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  507|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  508|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  509|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  510|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  511|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  512|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  517|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  518|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  519|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  522|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  523|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  525|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |  526|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  529|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  530|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  533|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  536|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  537|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  538|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  539|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  540|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  541|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  542|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  543|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  544|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  548|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  549|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  550|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  551|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  553|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  554|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  562|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  563|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  566|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  567|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  569|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  570|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  579|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  580|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  583|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  584|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  585|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  588|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  589|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  590|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  596|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  597|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  600|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  601|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  603|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  604|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  611|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  612|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  613|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  615|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  616|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  618|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  619|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  620|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  621|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  622|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  628|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  629|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  631|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  632|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  634|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  635|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  636|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  638|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  639|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  645|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  646|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  647|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  649|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  650|      0|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 266k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  ------------------
  690|       |
  691|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  692|       |
  693|      0|        default:
  ------------------
  |  Branch (693:9): [True: 0, False: 266k]
  ------------------
  694|      0|            PHI_ASSERT_NOT_REACHED();
  695|   266k|    }
  696|   266k|}

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  1.38M|    {
   21|       |#if defined(PHI_DEBUG)
   22|       |        PHI_ASSERT(!m_Finalized);
   23|       |#endif
   24|       |
   25|  1.38M|        m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  1.38M|    }

_ZN10OpenAutoIt10DiagnosticC2ENS_12DiagnosticIdENS_15DiagnosticLevelENS_14SourceLocationEONSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE:
   14|  79.4k|{}
_ZNK10OpenAutoIt10Diagnostic6IsNoteEv:
   42|  79.4k|{
   43|  79.4k|    return m_Level == DiagnosticLevel::Note;
   44|  79.4k|}
_ZNK10OpenAutoIt10Diagnostic9IsWarningEv:
   47|  78.4k|{
   48|  78.4k|    return m_Level == DiagnosticLevel::Warning;
   49|  78.4k|}
_ZNK10OpenAutoIt10Diagnostic7IsErrorEv:
   52|  78.4k|{
   53|  78.4k|    return m_Level == DiagnosticLevel::Error;
   54|  78.4k|}
_ZNK10OpenAutoIt10Diagnostic12IsFatalErrorEv:
   57|   118k|{
   58|   118k|    return m_Level == DiagnosticLevel::FatalError;
   59|   118k|}
_ZNK10OpenAutoIt10Diagnostic14IsErrorOrFatalEv:
   62|  78.4k|{
   63|  78.4k|    return IsError() || IsFatalError();
  ------------------
  |  Branch (63:12): [True: 38.3k, False: 40.0k]
  |  Branch (63:25): [True: 0, False: 40.0k]
  ------------------
   64|  78.4k|}
_ZN10OpenAutoIt10Diagnostic7AddNoteEOS0_:
   93|  1.05k|{
   94|  1.05k|    PHI_ASSERT(note.IsNote());
   95|       |
   96|  1.05k|    m_Notes.emplace_back(note);
   97|  1.05k|}

_ZN10OpenAutoIt17DiagnosticBuilderC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
   11|  78.4k|{}
_ZN10OpenAutoIt17DiagnosticBuilderD2Ev:
   14|  78.4k|{
   15|  78.4k|    for (auto& diagnostic : m_Diagnostics)
  ------------------
  |  Branch (15:27): [True: 78.4k, False: 78.4k]
  ------------------
   16|  78.4k|    {
   17|  78.4k|        m_DiagnosticEngine->Report(diagnostic);
   18|  78.4k|    }
   19|  78.4k|}

_ZN10OpenAutoIt16DiagnosticEngineC2Ev:
   12|  5.87k|{}
_ZNK10OpenAutoIt16DiagnosticEngine13GetErrorLimitEv:
   29|   288k|{
   30|   288k|    return m_ErrorLimit;
   31|   288k|}
_ZNK10OpenAutoIt16DiagnosticEngine21HasFatalErrorOccurredEv:
   44|   288k|{
   45|   288k|    return m_FatalErrorOccurred;
   46|   288k|}
_ZN10OpenAutoIt16DiagnosticEngine6ReportENS_10DiagnosticE:
   69|  78.4k|{
   70|  78.4k|    PHI_ASSERT(!diagnostic.IsNote());
   71|       |
   72|  78.4k|    if (m_IgnoreAllWarnings)
  ------------------
  |  Branch (72:9): [True: 0, False: 78.4k]
  ------------------
   73|      0|    {
   74|      0|        diagnostic.IgnoreWarning();
   75|      0|    }
   76|       |
   77|  78.4k|    if (m_WarningsAsError)
  ------------------
  |  Branch (77:9): [True: 0, False: 78.4k]
  ------------------
   78|      0|    {
   79|      0|        diagnostic.UpgradeWarningToError();
   80|      0|    }
   81|       |
   82|  78.4k|    if (diagnostic.IsErrorOrFatal())
  ------------------
  |  Branch (82:9): [True: 38.3k, False: 40.0k]
  ------------------
   83|  38.3k|    {
   84|  38.3k|        m_ErrorOccurred = true;
   85|  38.3k|        ++m_NumberOfErrors;
   86|  38.3k|    }
   87|       |
   88|  78.4k|    if (diagnostic.IsFatalError())
  ------------------
  |  Branch (88:9): [True: 0, False: 78.4k]
  ------------------
   89|      0|    {
   90|      0|        m_FatalErrorOccurred = true;
   91|      0|    }
   92|       |
   93|  78.4k|    if (diagnostic.IsWarning())
  ------------------
  |  Branch (93:9): [True: 40.0k, False: 38.3k]
  ------------------
   94|  40.0k|    {
   95|  40.0k|        ++m_NumberOfWarnings;
   96|  40.0k|    }
   97|       |
   98|  78.4k|    if (m_Consumer)
  ------------------
  |  Branch (98:9): [True: 0, False: 78.4k]
  ------------------
   99|      0|    {
  100|      0|        m_Consumer->Report(diagnostic);
  101|      0|    }
  102|  78.4k|}

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  160|  17.9k|{
  161|  17.9k|    static constexpr auto map =
  162|  17.9k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  163|  17.9k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  164|       |
  165|  17.9k|    std::string str{token.begin(), token.end()};
  166|  17.9k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  167|       |
  168|  17.9k|    return map.at(phi::string_view(str.c_str(), str.size()));
  169|  17.9k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  186|  13.9k|{
  187|  13.9k|    static constexpr auto map =
  188|  13.9k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  189|  13.9k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  190|       |
  191|  13.9k|    std::string str{token.begin(), token.end()};
  192|  13.9k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  193|       |
  194|  13.9k|    return map.at(phi::string_view(str.c_str(), str.size()));
  195|  13.9k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  662|   250k|{
  663|   250k|    static constexpr auto keyword_map =
  664|   250k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  665|   250k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  666|   250k|    static constexpr auto builtin_map =
  667|   250k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  668|   250k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  669|       |
  670|   250k|    std::string str{token.begin(), token.end()};
  671|   250k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  672|       |
  673|   250k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  674|       |
  675|   250k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  676|   250k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (676:9): [True: 169k, False: 81.4k]
  ------------------
  677|   169k|    {
  678|   169k|        return builtin_map.at(string);
  679|   169k|    }
  680|       |
  681|  81.4k|    return keyword;
  682|   250k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  707|   184k|{
  708|   184k|    static constexpr auto map =
  709|   184k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  710|   184k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  711|       |
  712|   184k|    return map.at(token);
  713|   184k|}
_ZN10OpenAutoIt5LexerC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
  778|  5.87k|{}
_ZN10OpenAutoIt5Lexer5ResetEv:
  781|  5.87k|{
  782|  5.87k|    m_Iterator = m_Source.begin();
  783|       |
  784|  5.87k|    m_InsideMultiLineComment = false;
  785|       |
  786|  5.87k|    m_LineNumber = 1u;
  787|  5.87k|    m_Column     = 1u;
  788|  5.87k|}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  791|  4.75M|{
  792|  4.75M|    return m_Iterator == m_Source.end();
  793|  4.75M|}
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  796|  1.38M|{
  797|  1.68M|    while (!IsFinished())
  ------------------
  |  Branch (797:12): [True: 1.68M, False: 862]
  ------------------
  798|  1.68M|    {
  799|  1.68M|        char current_character = *m_Iterator;
  800|       |
  801|       |        /* null character */
  802|       |
  803|  1.68M|        if (current_character == '\0')
  ------------------
  |  Branch (803:13): [True: 40.0k, False: 1.64M]
  ------------------
  804|  40.0k|        {
  805|  40.0k|            Diag().Warning(DiagnosticId::NullCharacter, CurrentSourceLocation());
  806|       |
  807|  40.0k|            SkipCurrentCharacter();
  808|  40.0k|        }
  809|       |
  810|       |        /* Multiline comments */
  811|       |
  812|  1.64M|        else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (812:18): [True: 900, False: 1.64M]
  ------------------
  813|    900|        {
  814|    900|            iterator       begin_of_multiline_comment            = m_Iterator;
  815|    900|            const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  816|    900|            const phi::u64 beginning_column_of_multiline_comment = m_Column;
  817|       |
  818|  1.82k|            while (!IsFinished())
  ------------------
  |  Branch (818:20): [True: 1.76k, False: 63]
  ------------------
  819|  1.76k|            {
  820|  1.76k|                current_character = *m_Iterator;
  821|       |
  822|       |                // Check for end comment multiline
  823|  1.76k|                if (current_character == '#')
  ------------------
  |  Branch (823:21): [True: 1.33k, False: 426]
  ------------------
  824|  1.33k|                {
  825|  1.33k|                    iterator begin_of_token = m_Iterator;
  826|  1.33k|                    ConsumeCurrentCharacter();
  827|       |
  828|  7.74k|                    while (!IsFinished())
  ------------------
  |  Branch (828:28): [True: 7.68k, False: 61]
  ------------------
  829|  7.68k|                    {
  830|  7.68k|                        current_character = *m_Iterator;
  831|       |
  832|  7.68k|                        if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (832:29): [True: 6.41k, False: 1.27k]
  ------------------
  833|  6.41k|                        {
  834|  6.41k|                            ConsumeCurrentCharacter();
  835|  6.41k|                            continue;
  836|  6.41k|                        }
  837|       |
  838|  1.27k|                        break;
  839|  7.68k|                    }
  840|       |
  841|  1.33k|                    const TokenKind pre_processor_token_kind =
  842|  1.33k|                            lookup_pre_processor(TokenText(begin_of_token));
  843|       |
  844|  1.33k|                    if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (844:25): [True: 837, False: 499]
  ------------------
  845|    837|                    {
  846|    837|                        m_InsideMultiLineComment = false;
  847|       |
  848|       |                        // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  849|    837|                        m_Iterator -= TokenText(begin_of_token).length().unsafe();
  850|       |
  851|    837|                        Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  852|    837|                                    BuildSourceLocation(beginning_line_of_multiline_comment,
  853|    837|                                                        beginning_column_of_multiline_comment)};
  854|       |
  855|    837|                        return token;
  856|    837|                    }
  857|  1.33k|                }
  858|    426|                else if (current_character == '\n')
  ------------------
  |  Branch (858:26): [True: 194, False: 232]
  ------------------
  859|    194|                {
  860|    194|                    ConsumeCurrentCharacter();
  861|    194|                    AdvanceToNextLine();
  862|    194|                }
  863|    232|                else
  864|    232|                {
  865|       |                    // Otherwise simply consume the character
  866|    232|                    ConsumeCurrentCharacter();
  867|    232|                    m_Column += 1u;
  868|    232|                }
  869|  1.76k|            }
  870|    900|        }
  871|       |
  872|       |        /* Skip characters */
  873|       |
  874|  1.64M|        else if (is_skip_character(current_character))
  ------------------
  |  Branch (874:18): [True: 64.6k, False: 1.58M]
  ------------------
  875|  64.6k|        {
  876|  64.6k|            SkipCurrentCharacter();
  877|  64.6k|        }
  878|       |
  879|       |        /* New Lines */
  880|       |
  881|  1.58M|        else if (current_character == '\n')
  ------------------
  |  Branch (881:18): [True: 61.5k, False: 1.52M]
  ------------------
  882|  61.5k|        {
  883|  61.5k|            Token new_line_token = ConstructToken(TokenKind::NewLine);
  884|       |
  885|  61.5k|            ConsumeCurrentCharacter();
  886|  61.5k|            AdvanceToNextLine();
  887|       |
  888|  61.5k|            return new_line_token;
  889|  61.5k|        }
  890|       |
  891|       |        /* Comment */
  892|       |
  893|  1.52M|        else if (current_character == ';')
  ------------------
  |  Branch (893:18): [True: 956, False: 1.52M]
  ------------------
  894|    956|        {
  895|    956|            iterator begin_of_token = m_Iterator;
  896|    956|            ConsumeCurrentCharacter();
  897|       |
  898|  2.87k|            while (!IsFinished())
  ------------------
  |  Branch (898:20): [True: 2.77k, False: 95]
  ------------------
  899|  2.77k|            {
  900|  2.77k|                current_character = *m_Iterator;
  901|       |
  902|  2.77k|                if (current_character != '\n')
  ------------------
  |  Branch (902:21): [True: 1.91k, False: 861]
  ------------------
  903|  1.91k|                {
  904|  1.91k|                    ConsumeCurrentCharacter();
  905|  1.91k|                    continue;
  906|  1.91k|                }
  907|       |
  908|    861|                break;
  909|  2.77k|            }
  910|       |
  911|    956|            return ConstructToken(TokenKind::Comment, begin_of_token);
  912|    956|        }
  913|       |
  914|       |        /* Macros */
  915|       |
  916|  1.52M|        else if (current_character == '@')
  ------------------
  |  Branch (916:18): [True: 17.9k, False: 1.50M]
  ------------------
  917|  17.9k|        {
  918|  17.9k|            iterator begin_of_token = m_Iterator;
  919|  17.9k|            ConsumeCurrentCharacter();
  920|       |
  921|   101k|            while (!IsFinished())
  ------------------
  |  Branch (921:20): [True: 101k, False: 260]
  ------------------
  922|   101k|            {
  923|   101k|                current_character = *m_Iterator;
  924|       |
  925|   101k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (925:21): [True: 83.6k, False: 17.6k]
  ------------------
  926|  83.6k|                {
  927|  83.6k|                    ConsumeCurrentCharacter();
  928|  83.6k|                    continue;
  929|  83.6k|                }
  930|       |
  931|  17.6k|                break;
  932|   101k|            }
  933|       |
  934|       |            // Emit token
  935|  17.9k|            return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  936|  17.9k|        }
  937|       |
  938|       |        /* Variable identifier */
  939|       |
  940|  1.50M|        else if (current_character == '$')
  ------------------
  |  Branch (940:18): [True: 99.5k, False: 1.40M]
  ------------------
  941|  99.5k|        {
  942|  99.5k|            iterator     begin_of_token = m_Iterator;
  943|  99.5k|            phi::boolean parsed_something{false};
  944|  99.5k|            ConsumeCurrentCharacter();
  945|       |
  946|   224k|            while (!IsFinished())
  ------------------
  |  Branch (946:20): [True: 224k, False: 293]
  ------------------
  947|   224k|            {
  948|   224k|                current_character = *m_Iterator;
  949|       |
  950|   224k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (950:21): [True: 125k, False: 99.2k]
  ------------------
  951|   125k|                {
  952|   125k|                    ConsumeCurrentCharacter();
  953|   125k|                    parsed_something = true;
  954|   125k|                    continue;
  955|   125k|                }
  956|       |
  957|  99.2k|                break;
  958|   224k|            }
  959|       |
  960|       |            // Ensure that '$' is not a valid variable identifier
  961|  99.5k|            if (!parsed_something)
  ------------------
  |  Branch (961:17): [True: 14.8k, False: 84.7k]
  ------------------
  962|  14.8k|            {
  963|  14.8k|                return ConstructToken(TokenKind::Garbage, begin_of_token);
  964|  14.8k|            }
  965|       |
  966|       |            // Emit Token
  967|  84.7k|            return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  968|  99.5k|        }
  969|       |
  970|       |        /* PreProcessor directive */
  971|       |
  972|  1.40M|        else if (current_character == '#')
  ------------------
  |  Branch (972:18): [True: 12.5k, False: 1.39M]
  ------------------
  973|  12.5k|        {
  974|  12.5k|            iterator begin_of_token = m_Iterator;
  975|  12.5k|            ConsumeCurrentCharacter();
  976|       |
  977|   140k|            while (!IsFinished())
  ------------------
  |  Branch (977:20): [True: 139k, False: 321]
  ------------------
  978|   139k|            {
  979|   139k|                current_character = *m_Iterator;
  980|       |
  981|   139k|                if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (981:21): [True: 127k, False: 12.2k]
  ------------------
  982|   127k|                {
  983|   127k|                    ConsumeCurrentCharacter();
  984|   127k|                    continue;
  985|   127k|                }
  986|       |
  987|  12.2k|                break;
  988|   139k|            }
  989|       |
  990|       |            // Check for start of multiline comment
  991|  12.5k|            const TokenKind pre_processor_token_kind =
  992|  12.5k|                    lookup_pre_processor(TokenText(begin_of_token));
  993|       |
  994|  12.5k|            if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (994:17): [True: 915, False: 11.6k]
  ------------------
  995|    915|            {
  996|    915|                m_InsideMultiLineComment = true;
  997|    915|            }
  998|       |
  999|  12.5k|            return ConstructToken(pre_processor_token_kind, begin_of_token);
 1000|  12.5k|        }
 1001|       |
 1002|       |        /* SingleQuoteStringLiteral */
 1003|       |
 1004|  1.39M|        else if (current_character == '\'')
  ------------------
  |  Branch (1004:18): [True: 1.73k, False: 1.38M]
  ------------------
 1005|  1.73k|        {
 1006|  1.73k|            iterator     begin_of_token = m_Iterator;
 1007|  1.73k|            phi::boolean did_terminate  = false;
 1008|  1.73k|            ConsumeCurrentCharacter();
 1009|       |
 1010|  9.41k|            while (!IsFinished())
  ------------------
  |  Branch (1010:20): [True: 9.39k, False: 16]
  ------------------
 1011|  9.39k|            {
 1012|  9.39k|                current_character = *m_Iterator;
 1013|  9.39k|                ConsumeCurrentCharacter();
 1014|       |
 1015|  9.39k|                if (current_character == '\'')
  ------------------
  |  Branch (1015:21): [True: 1.71k, False: 7.68k]
  ------------------
 1016|  1.71k|                {
 1017|  1.71k|                    did_terminate = true;
 1018|  1.71k|                    break;
 1019|  1.71k|                }
 1020|  9.39k|            }
 1021|       |
 1022|  1.73k|            if (did_terminate)
  ------------------
  |  Branch (1022:17): [True: 1.71k, False: 16]
  ------------------
 1023|  1.71k|            {
 1024|  1.71k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1025|  1.71k|            }
 1026|       |
 1027|       |            // TODO: Warn unterminated string literal
 1028|  1.73k|        }
 1029|       |
 1030|       |        /* DoubleQuoteStringLiteral */
 1031|       |
 1032|  1.38M|        else if (current_character == '\"')
  ------------------
  |  Branch (1032:18): [True: 17.9k, False: 1.37M]
  ------------------
 1033|  17.9k|        {
 1034|  17.9k|            iterator     begin_of_token = m_Iterator;
 1035|  17.9k|            phi::boolean did_terminate  = false;
 1036|  17.9k|            ConsumeCurrentCharacter();
 1037|       |
 1038|  77.0k|            while (!IsFinished())
  ------------------
  |  Branch (1038:20): [True: 76.9k, False: 133]
  ------------------
 1039|  76.9k|            {
 1040|  76.9k|                current_character = *m_Iterator;
 1041|  76.9k|                ConsumeCurrentCharacter();
 1042|       |
 1043|  76.9k|                if (current_character == '\"')
  ------------------
  |  Branch (1043:21): [True: 17.7k, False: 59.1k]
  ------------------
 1044|  17.7k|                {
 1045|  17.7k|                    did_terminate = true;
 1046|  17.7k|                    break;
 1047|  17.7k|                }
 1048|  76.9k|            }
 1049|       |
 1050|  17.9k|            if (did_terminate)
  ------------------
  |  Branch (1050:17): [True: 17.7k, False: 133]
  ------------------
 1051|  17.7k|            {
 1052|  17.7k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1053|  17.7k|            }
 1054|  17.9k|        }
 1055|       |
 1056|       |        /* Number Literals - IntegerLiteral/FloatLiteral */
 1057|       |
 1058|  1.37M|        else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1058:18): [True: 99.8k, False: 1.27M]
  |  Branch (1058:18): [True: 110k, False: 1.26M]
  |  Branch (1058:54): [True: 10.9k, False: 1.26M]
  ------------------
 1059|   110k|        {
 1060|   110k|            const phi::boolean start_with_zero{current_character == '0'};
 1061|   110k|            phi::boolean       parsing_hex{false};
 1062|   110k|            phi::boolean       parsing_float{current_character == '.'};
 1063|       |
 1064|   110k|            iterator begin_of_token = m_Iterator;
 1065|   110k|            ConsumeCurrentCharacter();
 1066|       |
 1067|   169k|            while (!IsFinished())
  ------------------
  |  Branch (1067:20): [True: 168k, False: 510]
  ------------------
 1068|   168k|            {
 1069|   168k|                current_character = *m_Iterator;
 1070|       |
 1071|       |                // Is the second character
 1072|   168k|                if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1072:21): [True: 110k, False: 58.3k]
  |  Branch (1072:58): [True: 34.5k, False: 75.8k]
  ------------------
 1073|  34.5k|                {
 1074|       |                    // Hex character
 1075|  34.5k|                    if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1075:25): [True: 421, False: 34.1k]
  |  Branch (1075:53): [True: 1.23k, False: 32.9k]
  ------------------
 1076|  1.65k|                    {
 1077|  1.65k|                        parsing_hex = true;
 1078|  1.65k|                        ConsumeCurrentCharacter();
 1079|  1.65k|                        continue;
 1080|  1.65k|                    }
 1081|  34.5k|                }
 1082|       |
 1083|       |                // Actually parsing
 1084|   167k|                if (parsing_hex)
  ------------------
  |  Branch (1084:21): [True: 17.8k, False: 149k]
  ------------------
 1085|  17.8k|                {
 1086|  17.8k|                    if (parsing_float)
  ------------------
  |  Branch (1086:25): [True: 0, False: 17.8k]
  ------------------
 1087|      0|                    {
 1088|       |                        // TODO: Fix include and enable this warning
 1089|       |                        //Diag().Error(DiagnosticId::FloatHexLiteral, CurrentSourceLocation());
 1090|       |
 1091|      0|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1092|      0|                    }
 1093|       |
 1094|  17.8k|                    if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1094:25): [True: 16.2k, False: 1.59k]
  ------------------
 1095|  16.2k|                    {
 1096|  16.2k|                        ConsumeCurrentCharacter();
 1097|  16.2k|                        continue;
 1098|  16.2k|                    }
 1099|  17.8k|                }
 1100|   149k|                else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1100:26): [True: 39.9k, False: 109k]
  ------------------
 1101|  39.9k|                {
 1102|  39.9k|                    ConsumeCurrentCharacter();
 1103|  39.9k|                    continue;
 1104|  39.9k|                }
 1105|       |                // Literal dot
 1106|   109k|                else if (current_character == '.')
  ------------------
  |  Branch (1106:26): [True: 1.01k, False: 108k]
  ------------------
 1107|  1.01k|                {
 1108|  1.01k|                    if (parsing_float)
  ------------------
  |  Branch (1108:25): [True: 398, False: 620]
  ------------------
 1109|    398|                    {
 1110|       |                        //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1111|       |
 1112|    398|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1113|    398|                    }
 1114|       |
 1115|    620|                    parsing_float = true;
 1116|    620|                    ConsumeCurrentCharacter();
 1117|    620|                    continue;
 1118|  1.01k|                }
 1119|       |
 1120|   109k|                break;
 1121|   167k|            }
 1122|       |
 1123|   110k|            if (parsing_float)
  ------------------
  |  Branch (1123:17): [True: 11.1k, False: 99.2k]
  ------------------
 1124|  11.1k|            {
 1125|       |                // Were not allowed to end with a dot
 1126|       |                // TODO: This is very hacky and looks nasty
 1127|  11.1k|                if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1127:21): [True: 3.32k, False: 7.83k]
  ------------------
 1128|  3.32k|                {
 1129|       |                    //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1130|       |
 1131|  3.32k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
 1132|  3.32k|                }
 1133|       |
 1134|  7.83k|                return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1135|  11.1k|            }
 1136|       |
 1137|  99.2k|            return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1138|   110k|        }
 1139|       |
 1140|       |        /* Operators */
 1141|       |
 1142|  1.26M|        else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1142:18): [True: 145k, False: 1.11M]
  ------------------
 1143|   145k|        {
 1144|   145k|            iterator begin_of_token = m_Iterator;
 1145|   145k|            ConsumeCurrentCharacter();
 1146|       |
 1147|   145k|            if (!IsFinished())
  ------------------
  |  Branch (1147:17): [True: 145k, False: 366]
  ------------------
 1148|   145k|            {
 1149|   145k|                if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1149:21): [True: 2.40k, False: 143k]
  |  Branch (1149:44): [True: 3.70k, False: 139k]
  |  Branch (1149:70): [True: 519, False: 3.18k]
  ------------------
 1150|  2.92k|                {
 1151|       |                    // We have an actual two part operator
 1152|  2.92k|                    ConsumeCurrentCharacter();
 1153|  2.92k|                }
 1154|   145k|            }
 1155|       |
 1156|   145k|            return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1157|   145k|        }
 1158|       |
 1159|  1.11M|        else if (is_single_operator(current_character))
  ------------------
  |  Branch (1159:18): [True: 38.3k, False: 1.07M]
  ------------------
 1160|  38.3k|        {
 1161|  38.3k|            Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1162|       |
 1163|  38.3k|            ConsumeCurrentCharacter();
 1164|       |
 1165|  38.3k|            return token;
 1166|  38.3k|        }
 1167|       |
 1168|       |        /* Punctioation */
 1169|       |
 1170|  1.07M|        else if (current_character == ',')
  ------------------
  |  Branch (1170:18): [True: 27.2k, False: 1.04M]
  ------------------
 1171|  27.2k|        {
 1172|  27.2k|            Token token = ConstructToken(TokenKind::Comma);
 1173|       |
 1174|  27.2k|            ConsumeCurrentCharacter();
 1175|       |
 1176|  27.2k|            return token;
 1177|  27.2k|        }
 1178|       |
 1179|  1.04M|        else if (current_character == '(')
  ------------------
  |  Branch (1179:18): [True: 121k, False: 927k]
  ------------------
 1180|   121k|        {
 1181|   121k|            Token token = ConstructToken(TokenKind::LParen);
 1182|       |
 1183|   121k|            ConsumeCurrentCharacter();
 1184|       |
 1185|   121k|            return token;
 1186|   121k|        }
 1187|       |
 1188|   927k|        else if (current_character == ')')
  ------------------
  |  Branch (1188:18): [True: 51.5k, False: 875k]
  ------------------
 1189|  51.5k|        {
 1190|  51.5k|            Token token = ConstructToken(TokenKind::RParen);
 1191|       |
 1192|  51.5k|            ConsumeCurrentCharacter();
 1193|       |
 1194|  51.5k|            return token;
 1195|  51.5k|        }
 1196|       |
 1197|   875k|        else if (current_character == '.')
  ------------------
  |  Branch (1197:18): [True: 0, False: 875k]
  ------------------
 1198|      0|        {
 1199|      0|            Token token = ConstructToken(TokenKind::Dot);
 1200|       |
 1201|      0|            ConsumeCurrentCharacter();
 1202|       |
 1203|      0|            return token;
 1204|      0|        }
 1205|       |
 1206|   875k|        else if (current_character == '[')
  ------------------
  |  Branch (1206:18): [True: 396k, False: 479k]
  ------------------
 1207|   396k|        {
 1208|   396k|            Token token = ConstructToken(TokenKind::LSquare);
 1209|       |
 1210|   396k|            ConsumeCurrentCharacter();
 1211|       |
 1212|   396k|            return token;
 1213|   396k|        }
 1214|       |
 1215|   479k|        else if (current_character == ']')
  ------------------
  |  Branch (1215:18): [True: 30.7k, False: 448k]
  ------------------
 1216|  30.7k|        {
 1217|  30.7k|            Token token = ConstructToken(TokenKind::RSquare);
 1218|       |
 1219|  30.7k|            ConsumeCurrentCharacter();
 1220|       |
 1221|  30.7k|            return token;
 1222|  30.7k|        }
 1223|       |
 1224|       |        /* Identifier */
 1225|       |
 1226|   448k|        else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1226:18): [True: 250k, False: 197k]
  ------------------
 1227|   250k|        {
 1228|   250k|            iterator begin_of_token = m_Iterator;
 1229|   250k|            ConsumeCurrentCharacter();
 1230|       |
 1231|   791k|            while (!IsFinished())
  ------------------
  |  Branch (1231:20): [True: 789k, False: 1.98k]
  ------------------
 1232|   789k|            {
 1233|   789k|                current_character = *m_Iterator;
 1234|       |
 1235|   789k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1235:21): [True: 541k, False: 248k]
  ------------------
 1236|   541k|                {
 1237|   541k|                    ConsumeCurrentCharacter();
 1238|   541k|                    continue;
 1239|   541k|                }
 1240|       |
 1241|   248k|                break;
 1242|   789k|            }
 1243|       |
 1244|   250k|            return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1245|   250k|        }
 1246|       |
 1247|       |        /* Unknown/Unexpected character */
 1248|       |
 1249|   197k|        else
 1250|   197k|        {
 1251|       |            // TODO: Warn unexpected character encountered
 1252|   197k|            SkipCurrentCharacter();
 1253|   197k|        }
 1254|  1.68M|    }
 1255|       |
 1256|    862|    return {};
 1257|  1.38M|}
_ZN10OpenAutoIt5Lexer13ProcessStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEES6_:
 1260|  5.87k|{
 1261|  5.87k|    SourceFile fake_source{SourceFile::Type::Basic, file_name.data(), source};
 1262|       |
 1263|  5.87k|    return ProcessFile(&fake_source);
 1264|  5.87k|}
_ZN10OpenAutoIt5Lexer11ProcessFileEN3phi21not_null_observer_ptrIKNS_10SourceFileEEE:
 1267|  5.87k|{
 1268|  5.87k|    TokenStream stream;
 1269|       |
 1270|  5.87k|    m_SourceFile = source_file;
 1271|  5.87k|    m_Source     = m_SourceFile->m_Content;
 1272|  5.87k|    Reset();
 1273|       |
 1274|  1.39M|    while (!IsFinished())
  ------------------
  |  Branch (1274:12): [True: 1.38M, False: 5.87k]
  ------------------
 1275|  1.38M|    {
 1276|  1.38M|        phi::optional<Token> maybe_token = GetNextToken();
 1277|       |
 1278|  1.38M|        if (maybe_token.has_value())
  ------------------
  |  Branch (1278:13): [True: 1.38M, False: 862]
  ------------------
 1279|  1.38M|        {
 1280|  1.38M|            stream.emplace_back(maybe_token.value());
 1281|  1.38M|        }
 1282|  1.38M|    }
 1283|       |
 1284|  5.87k|    stream.finalize();
 1285|  5.87k|    return stream;
 1286|  5.87k|}
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1289|  2.72M|{
 1290|  2.72M|    ++m_Iterator;
 1291|  2.72M|}
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1294|  61.7k|{
 1295|  61.7k|    ++m_LineNumber;
 1296|  61.7k|    m_Column = 1u;
 1297|  61.7k|}
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1300|   302k|{
 1301|   302k|    ConsumeCurrentCharacter();
 1302|   302k|    ++m_Column;
 1303|   302k|}
_ZN10OpenAutoIt5Lexer4DiagEv:
 1306|  40.0k|{
 1307|  40.0k|    return DiagnosticBuilder{m_DiagnosticEngine};
 1308|  40.0k|}
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   37|  17.9k|    {
   38|  17.9k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  17.9k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  17.9k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 8.95k, False: 8.99k]
  ------------------
   42|  8.95k|        {
   43|  8.95k|            return itr->second;
   44|  8.95k|        }
   45|       |
   46|  8.99k|        return m_Default;
   47|  17.9k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  1.05M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   37|  13.9k|    {
   38|  13.9k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  13.9k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  13.9k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 7.26k, False: 6.64k]
  ------------------
   42|  7.26k|        {
   43|  7.26k|            return itr->second;
   44|  7.26k|        }
   45|       |
   46|  6.64k|        return m_Default;
   47|  13.9k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   101k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   37|   169k|    {
   38|   169k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   169k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   169k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 1.60k, False: 167k]
  ------------------
   42|  1.60k|        {
   43|  1.60k|            return itr->second;
   44|  1.60k|        }
   45|       |
   46|   167k|        return m_Default;
   47|   169k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  67.8M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   37|   250k|    {
   38|   250k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   250k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   250k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 81.4k, False: 169k]
  ------------------
   42|  81.4k|        {
   43|  81.4k|            return itr->second;
   44|  81.4k|        }
   45|       |
   46|   169k|        return m_Default;
   47|   250k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  9.30M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   37|   184k|    {
   38|   184k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   184k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   184k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 184k, False: 0]
  ------------------
   42|   184k|        {
   43|   184k|            return itr->second;
   44|   184k|        }
   45|       |
   46|      0|        return m_Default;
   47|   184k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  1.59M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  736|   147k|{
  737|   147k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (737:12): [True: 132k, False: 15.1k]
  |  Branch (737:40): [True: 1.64k, False: 13.5k]
  ------------------
  738|   147k|}
_Z17is_skip_characterc:
  716|  1.64M|{
  717|  1.64M|    switch (c)
  718|  1.64M|    {
  719|  56.8k|        case ' ':
  ------------------
  |  Branch (719:9): [True: 56.8k, False: 1.59M]
  ------------------
  720|  62.5k|        case '\v':
  ------------------
  |  Branch (720:9): [True: 5.63k, False: 1.64M]
  ------------------
  721|  63.0k|        case '\t':
  ------------------
  |  Branch (721:9): [True: 572, False: 1.64M]
  ------------------
  722|  64.0k|        case '\b':
  ------------------
  |  Branch (722:9): [True: 992, False: 1.64M]
  ------------------
  723|  64.6k|        case '\f':
  ------------------
  |  Branch (723:9): [True: 515, False: 1.64M]
  ------------------
  724|  64.6k|            return true;
  725|  1.58M|        default:
  ------------------
  |  Branch (725:9): [True: 1.58M, False: 64.6k]
  ------------------
  726|  1.58M|            return false;
  727|  1.64M|    }
  728|  1.64M|}
_Z24is_valid_identifier_charc:
  731|  1.56M|{
  732|  1.56M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (732:12): [True: 997k, False: 566k]
  |  Branch (732:40): [True: 2.80k, False: 563k]
  ------------------
  733|  1.56M|}
_Z20is_two_part_operatorc:
  741|  1.26M|{
  742|  1.26M|    switch (c)
  743|  1.26M|    {
  744|  61.3k|        case '=':
  ------------------
  |  Branch (744:9): [True: 61.3k, False: 1.19M]
  ------------------
  745|  73.3k|        case '+':
  ------------------
  |  Branch (745:9): [True: 11.9k, False: 1.24M]
  ------------------
  746|   132k|        case '-':
  ------------------
  |  Branch (746:9): [True: 59.1k, False: 1.20M]
  ------------------
  747|   134k|        case '*':
  ------------------
  |  Branch (747:9): [True: 2.07k, False: 1.25M]
  ------------------
  748|   136k|        case '/':
  ------------------
  |  Branch (748:9): [True: 1.97k, False: 1.25M]
  ------------------
  749|   138k|        case '&':
  ------------------
  |  Branch (749:9): [True: 1.56k, False: 1.25M]
  ------------------
  750|   142k|        case '<':
  ------------------
  |  Branch (750:9): [True: 3.93k, False: 1.25M]
  ------------------
  751|   145k|        case '>':
  ------------------
  |  Branch (751:9): [True: 3.80k, False: 1.25M]
  ------------------
  752|   145k|            return true;
  753|       |
  754|  1.11M|        default:
  ------------------
  |  Branch (754:9): [True: 1.11M, False: 145k]
  ------------------
  755|  1.11M|            return false;
  756|  1.26M|    }
  757|  1.26M|}
_Z18is_single_operatorc:
  760|  1.11M|{
  761|  1.11M|    switch (c)
  762|  1.11M|    {
  763|  1.12k|        case '^':
  ------------------
  |  Branch (763:9): [True: 1.12k, False: 1.11M]
  ------------------
  764|  25.4k|        case '?':
  ------------------
  |  Branch (764:9): [True: 24.3k, False: 1.09M]
  ------------------
  765|  38.3k|        case ':':
  ------------------
  |  Branch (765:9): [True: 12.8k, False: 1.10M]
  ------------------
  766|  38.3k|            return true;
  767|       |
  768|  1.07M|        default:
  ------------------
  |  Branch (768:9): [True: 1.07M, False: 38.3k]
  ------------------
  769|  1.07M|            return false;
  770|  1.11M|    }
  771|  1.11M|}

_ZN10OpenAutoIt6ParserC2EN3phi21not_null_observer_ptrINS_13SourceManagerEEENS2_INS_16DiagnosticEngineEEENS2_INS_5LexerEEE:
  135|  5.87k|{}
_ZN10OpenAutoIt6Parser16ParseTokenStreamEN3phi21not_null_observer_ptrINS_11ASTDocumentEEEONS_11TokenStreamENS2_IKNS_10SourceFileEEE:
  140|  5.87k|{
  141|  5.87k|    PushParsingContext(phi::move(source_file), phi::move(stream));
  142|       |
  143|  5.87k|    ParseDocument(phi::move(document));
  144|  5.87k|}
_ZN10OpenAutoIt6Parser11ParseStringEN3phi21not_null_observer_ptrINS_11ASTDocumentEEENS1_17basic_string_viewIcNSt3__111char_traitsIcEEEES9_:
  148|  5.87k|{
  149|  5.87k|    TokenStream stream = m_Lexer->ProcessString(file_name, source);
  150|       |
  151|  5.87k|    SourceFile fake_source_file{SourceFile::Type::Basic, std::string_view(file_name),
  152|  5.87k|                                phi::move(source)};
  153|  5.87k|    ParseTokenStream(phi::move(document), phi::move(stream), &fake_source_file);
  154|  5.87k|}
_ZN10OpenAutoIt6Parser13ParseDocumentEN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
  174|  5.87k|{
  175|  5.87k|    m_Document = phi::move(document);
  176|       |
  177|  5.87k|    m_IncludeOnceFiles.clear();
  178|       |
  179|   288k|    while (ShouldContinueParsing())
  ------------------
  |  Branch (179:12): [True: 283k, False: 5.87k]
  ------------------
  180|   283k|    {
  181|   283k|        if (!CurrentTokenStream().has_more())
  ------------------
  |  Branch (181:13): [True: 5.87k, False: 277k]
  ------------------
  182|  5.87k|        {
  183|  5.87k|            PopParsingContext();
  184|  5.87k|            continue;
  185|  5.87k|        }
  186|       |
  187|   277k|        const Token& token = CurrentToken();
  188|       |
  189|       |        // Parse global function definition
  190|   277k|        switch (token.GetTokenKind())
  191|   277k|        {
  192|  32.3k|            case TokenKind::KW_Func: {
  ------------------
  |  Branch (192:13): [True: 32.3k, False: 244k]
  ------------------
  193|  32.3k|                ConsumeCurrent();
  194|       |
  195|  32.3k|                auto function_definition = ParseFunctionDefinition();
  196|  32.3k|                if (!function_definition)
  ------------------
  |  Branch (196:21): [True: 29.2k, False: 3.10k]
  ------------------
  197|  29.2k|                {
  198|  29.2k|                    err("ERR: Failed to parse function definition!\n");
  199|  29.2k|                    continue;
  200|  29.2k|                }
  201|       |
  202|  3.10k|                AppendFunctionToDocument(function_definition.release_not_null());
  203|  3.10k|                break;
  204|  32.3k|            }
  205|       |
  206|    777|            case TokenKind::Comment:
  ------------------
  |  Branch (206:13): [True: 777, False: 276k]
  ------------------
  207|  1.29k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (207:13): [True: 513, False: 276k]
  ------------------
  208|  1.85k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (208:13): [True: 565, False: 276k]
  ------------------
  209|  22.6k|            case TokenKind::NewLine: {
  ------------------
  |  Branch (209:13): [True: 20.8k, False: 256k]
  ------------------
  210|       |                // Simply ignore and consume newlines and comments
  211|  22.6k|                ConsumeCurrent();
  212|  22.6k|                break;
  213|  1.85k|            }
  214|  9.76k|            case TokenKind::NotAToken: {
  ------------------
  |  Branch (214:13): [True: 9.76k, False: 267k]
  ------------------
  215|  9.76k|                err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  216|  9.76k|                                std::string_view(token.GetText())));
  217|  9.76k|                ConsumeCurrent();
  218|  9.76k|                break;
  219|  1.85k|            }
  220|       |
  221|  2.49k|            case TokenKind::PP_Include: {
  ------------------
  |  Branch (221:13): [True: 2.49k, False: 274k]
  ------------------
  222|  2.49k|                ConsumeCurrent();
  223|       |
  224|  2.49k|                ParseIncludeDirective();
  225|       |
  226|  2.49k|                break;
  227|  1.85k|            }
  228|       |
  229|    703|            case TokenKind::PP_IncludeOnce: {
  ------------------
  |  Branch (229:13): [True: 703, False: 276k]
  ------------------
  230|    703|                ConsumeCurrent();
  231|       |
  232|    703|                m_IncludeOnceFiles.emplace(CurrentSourceFile().get());
  233|       |
  234|    703|                RequireNewLine();
  235|       |
  236|    703|                break;
  237|  1.85k|            }
  238|       |
  239|   209k|            default: {
  ------------------
  |  Branch (239:13): [True: 209k, False: 68.0k]
  ------------------
  240|   209k|                auto statement = ParseStatement();
  241|   209k|                if (!statement)
  ------------------
  |  Branch (241:21): [True: 169k, False: 40.0k]
  ------------------
  242|   169k|                {
  243|       |                    // TODO: Proper error reporting
  244|   169k|                    err("ERR: Failed to parse statement!\n");
  245|       |
  246|   169k|                    if (HasMoreTokens())
  ------------------
  |  Branch (246:25): [True: 166k, False: 3.03k]
  ------------------
  247|   166k|                    {
  248|       |                        // Swallow the bad token
  249|   166k|                        ConsumeCurrent();
  250|   166k|                    }
  251|   169k|                    continue;
  252|   169k|                }
  253|       |
  254|  40.0k|                AppendStatementToDocument(statement.release_not_null());
  255|       |
  256|  40.0k|                RequireNewLine();
  257|  40.0k|                break;
  258|   209k|            }
  259|   277k|        }
  260|   277k|    }
  261|  5.87k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamE:
  265|  5.87k|{
  266|  5.87k|    PushParsingContext(phi::move(source_file), phi::move(token_stream), SourceLocation::Invalid());
  267|  5.87k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamENS_14SourceLocationE:
  271|  5.87k|{
  272|  5.87k|    ParsingContext context{.source_file   = phi::move(source_file),
  273|  5.87k|                           .token_stream  = phi::move(token_stream),
  274|  5.87k|                           .included_from = phi::move(included_from)};
  275|       |
  276|  5.87k|    m_ParsingContextStack.emplace(phi::move(context));
  277|  5.87k|    m_SourceManager->SetLocalSearchPath(source_file->m_FilePath.parent_path());
  278|  5.87k|}
_ZN10OpenAutoIt6Parser17PopParsingContextEv:
  281|  5.87k|{
  282|  5.87k|    m_ParsingContextStack.pop();
  283|  5.87k|    if (!m_ParsingContextStack.empty())
  ------------------
  |  Branch (283:9): [True: 0, False: 5.87k]
  ------------------
  284|      0|    {
  285|      0|        m_SourceManager->SetLocalSearchPath(
  286|      0|                m_ParsingContextStack.top().source_file->m_FilePath.parent_path());
  287|      0|    }
  288|  5.87k|    else
  289|  5.87k|    {
  290|  5.87k|        m_SourceManager->SetLocalSearchPath("");
  291|  5.87k|    }
  292|  5.87k|}
_ZN10OpenAutoIt6Parser21CurrentParsingContextEv:
  295|    703|{
  296|    703|    PHI_ASSERT(!m_ParsingContextStack.empty());
  297|       |
  298|    703|    return m_ParsingContextStack.top();
  299|    703|}
_ZN10OpenAutoIt6Parser17CurrentSourceFileEv:
  302|    703|{
  303|    703|    return CurrentParsingContext().source_file.not_null();
  304|    703|}
_ZN10OpenAutoIt6Parser18CurrentTokenStreamEv:
  307|  1.66M|{
  308|  1.66M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  309|       |
  310|  1.66M|    return m_ParsingContextStack.top().token_stream;
  311|  1.66M|}
_ZNK10OpenAutoIt6Parser18CurrentTokenStreamEv:
  314|  10.4M|{
  315|  10.4M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  316|       |
  317|  10.4M|    return m_ParsingContextStack.top().token_stream;
  318|  10.4M|}
_ZNK10OpenAutoIt6Parser13HasMoreTokensEv:
  321|  3.58M|{
  322|  3.58M|    return CurrentTokenStream().has_more();
  323|  3.58M|}
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  326|  3.40M|{
  327|  3.40M|    PHI_ASSERT(CurrentTokenStream().has_more());
  328|       |
  329|  3.40M|    return CurrentTokenStream().look_ahead();
  330|  3.40M|}
_ZNK10OpenAutoIt6Parser13PreviousTokenEv:
  333|  34.7k|{
  334|  34.7k|    return CurrentTokenStream().look_behind();
  335|  34.7k|}
_ZNK10OpenAutoIt6Parser21ShouldContinueParsingEv:
  338|   288k|{
  339|   288k|    const phi::boolean stack_empty          = m_ParsingContextStack.empty();
  340|   288k|    const phi::boolean fatal_error_occurred = m_DiagnosticEngine->HasFatalErrorOccurred();
  341|   288k|    const phi::boolean error_limit_reached =
  342|   288k|            (m_DiagnosticEngine->GetErrorLimit() == 0u ?
  ------------------
  |  Branch (342:14): [True: 288k, False: 0]
  ------------------
  343|   288k|                     false :
  344|   288k|                     m_DiagnosticEngine->GetNumberOfError() >= m_DiagnosticEngine->GetErrorLimit());
  345|       |
  346|   288k|    return !stack_empty && !fatal_error_occurred && !error_limit_reached;
  ------------------
  |  Branch (346:12): [True: 283k, False: 5.87k]
  |  Branch (346:28): [True: 283k, False: 0]
  |  Branch (346:53): [True: 283k, False: 0]
  ------------------
  347|   288k|}
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  350|  1.38M|{
  351|  1.38M|    CurrentTokenStream().consume();
  352|  1.38M|}
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  355|  40.7k|{
  356|  41.6k|    while (HasMoreTokens())
  ------------------
  |  Branch (356:12): [True: 41.2k, False: 423]
  ------------------
  357|  41.2k|    {
  358|  41.2k|        switch (CurrentToken().GetTokenKind())
  359|  41.2k|        {
  360|    409|            case TokenKind::Comment:
  ------------------
  |  Branch (360:13): [True: 409, False: 40.8k]
  ------------------
  361|    613|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (361:13): [True: 204, False: 41.0k]
  ------------------
  362|    868|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (362:13): [True: 255, False: 40.9k]
  ------------------
  363|    868|                ConsumeCurrent();
  364|    868|                break;
  365|       |
  366|  40.3k|            default:
  ------------------
  |  Branch (366:13): [True: 40.3k, False: 868]
  ------------------
  367|  40.3k|                return;
  368|  41.2k|        }
  369|  41.2k|    }
  370|  40.7k|}
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  373|   313k|{
  374|   322k|    while (HasMoreTokens())
  ------------------
  |  Branch (374:12): [True: 322k, False: 300]
  ------------------
  375|   322k|    {
  376|   322k|        switch (CurrentToken().GetTokenKind())
  377|   322k|        {
  378|    535|            case TokenKind::Comment:
  ------------------
  |  Branch (378:13): [True: 535, False: 321k]
  ------------------
  379|    729|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (379:13): [True: 194, False: 322k]
  ------------------
  380|    928|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (380:13): [True: 199, False: 322k]
  ------------------
  381|  9.03k|            case TokenKind::NewLine:
  ------------------
  |  Branch (381:13): [True: 8.10k, False: 314k]
  ------------------
  382|  9.03k|                ConsumeCurrent();
  383|  9.03k|                break;
  384|       |
  385|   313k|            default:
  ------------------
  |  Branch (385:13): [True: 313k, False: 9.03k]
  ------------------
  386|   313k|                return;
  387|   322k|        }
  388|   322k|    }
  389|   313k|}
_ZN10OpenAutoIt6Parser14RequireNewLineEv:
  392|  40.7k|{
  393|  40.7k|    ConsumeComments();
  394|       |
  395|  40.7k|    if (!HasMoreTokens())
  ------------------
  |  Branch (395:9): [True: 423, False: 40.3k]
  ------------------
  396|    423|    {
  397|    423|        return;
  398|    423|    }
  399|       |
  400|  40.3k|    const Token& token = CurrentToken();
  401|       |
  402|  40.3k|    if (token.GetTokenKind() != TokenKind::NewLine)
  ------------------
  |  Branch (402:9): [True: 33.6k, False: 6.69k]
  ------------------
  403|  33.6k|    {
  404|  33.6k|        Diag().Error(DiagnosticId::Expected, PreviousToken().GetBeginLocation(), "new line");
  405|  33.6k|    }
  406|       |
  407|  40.3k|    ConsumeCurrent();
  408|  40.3k|}
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  411|   701k|{
  412|       |    // Do we even have more tokens?
  413|   701k|    if (!HasMoreTokens())
  ------------------
  |  Branch (413:9): [True: 6.42k, False: 695k]
  ------------------
  414|  6.42k|    {
  415|  6.42k|        return {};
  416|  6.42k|    }
  417|       |
  418|   695k|    const Token& token = CurrentToken();
  419|       |
  420|       |    // Is this the correct token kind
  421|   695k|    if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (421:9): [True: 127k, False: 568k]
  ------------------
  422|   127k|    {
  423|   127k|        return {};
  424|   127k|    }
  425|       |
  426|   568k|    ConsumeCurrent();
  427|   568k|    return token;
  428|   695k|}
_ZN10OpenAutoIt6Parser4DiagEv:
  444|  38.3k|{
  445|  38.3k|    return {m_DiagnosticEngine};
  446|  38.3k|}
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  449|  32.3k|{
  450|       |    // Next we MUST parse the function name
  451|  32.3k|    auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  452|  32.3k|    if (!function_name_token)
  ------------------
  |  Branch (452:9): [True: 1.66k, False: 30.7k]
  ------------------
  453|  1.66k|    {
  454|  1.66k|        err("Expected identifier for function name");
  455|  1.66k|        return {};
  456|  1.66k|    }
  457|       |
  458|  30.7k|    auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  459|  30.7k|    function_definition->m_FunctionName = function_name_token->GetText();
  460|       |
  461|       |    // Next we MUST parse an opening parenthesis (LParen)
  462|  30.7k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (462:9): [True: 7.22k, False: 23.4k]
  ------------------
  463|  7.22k|    {
  464|  7.22k|        err("Expected opening parenthesis");
  465|  7.22k|        return {};
  466|  7.22k|    }
  467|       |
  468|       |    // Next we parse the function parameter declarations until right parenthesis (RParen)
  469|  26.5k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (469:12): [True: 26.4k, False: 45]
  |  Branch (469:12): [True: 9.01k, False: 17.4k]
  |  Branch (469:31): [True: 9.01k, False: 17.4k]
  ------------------
  470|  9.01k|    {
  471|  9.01k|        phi::optional<FunctionParameter> function_parameter_optional =
  472|  9.01k|                ParseFunctionParameterDefinition();
  473|  9.01k|        if (!function_parameter_optional)
  ------------------
  |  Branch (473:13): [True: 5.98k, False: 3.02k]
  ------------------
  474|  5.98k|        {
  475|       |            // TODO: Proper error reporting
  476|  5.98k|            return {};
  477|  5.98k|        }
  478|  3.02k|        FunctionParameter& function_parameter = function_parameter_optional.value();
  479|       |
  480|  3.02k|        function_definition->m_Parameters.emplace_back(phi::move(function_parameter));
  481|       |
  482|       |        // Parse comma
  483|  3.02k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (483:13): [True: 3.02k, False: 0]
  |  Branch (483:13): [True: 1.49k, False: 1.53k]
  |  Branch (483:32): [True: 1.49k, False: 1.53k]
  ------------------
  484|  1.49k|        {
  485|  1.49k|            ConsumeCurrent();
  486|  1.49k|        }
  487|  3.02k|    }
  488|       |
  489|       |    // Next we MUST parse a right parenthesis (RParen)
  490|  17.4k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (490:9): [True: 45, False: 17.4k]
  ------------------
  491|     45|    {
  492|     45|        err("ERR: Expected ')'");
  493|     45|        return {};
  494|     45|    }
  495|       |
  496|       |    // Next we MUST parse a new line
  497|  17.4k|    if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (497:9): [True: 2.99k, False: 14.4k]
  ------------------
  498|  2.99k|    {
  499|  2.99k|        err("ERR: Missing newline!");
  500|  2.99k|        return {};
  501|  2.99k|    }
  502|       |
  503|       |    // Next parse Statements until EndFunc
  504|  40.6k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (504:12): [True: 40.5k, False: 54]
  |  Branch (504:12): [True: 37.4k, False: 3.15k]
  |  Branch (504:31): [True: 37.4k, False: 3.10k]
  ------------------
  505|  37.4k|    {
  506|  37.4k|        auto statement = ParseStatement();
  507|  37.4k|        if (!statement)
  ------------------
  |  Branch (507:13): [True: 11.3k, False: 26.1k]
  ------------------
  508|  11.3k|        {
  509|  11.3k|            err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  510|  11.3k|                            std::string_view(function_definition->m_FunctionName)));
  511|       |            // TODO: Report proper error
  512|  11.3k|            return {};
  513|  11.3k|        }
  514|       |
  515|  26.1k|        function_definition->m_FunctionBody.emplace_back(phi::move(statement.release_not_null()));
  516|       |
  517|  26.1k|        ConsumeNewLineAndComments();
  518|  26.1k|    }
  519|       |
  520|       |    // Next we MUST parse EndFunc
  521|  3.15k|    if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (521:9): [True: 54, False: 3.10k]
  ------------------
  522|     54|    {
  523|       |        // TODO: Proper error
  524|     54|        return {};
  525|     54|    }
  526|       |
  527|  3.10k|    return phi::move(function_definition);
  528|  3.15k|}
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  531|  9.01k|{
  532|       |    // TODO: This entire function requires more error checks
  533|  9.01k|    FunctionParameter parameter;
  534|       |
  535|  24.7k|    while (HasMoreTokens())
  ------------------
  |  Branch (535:12): [True: 24.6k, False: 86]
  ------------------
  536|  24.6k|    {
  537|  24.6k|        const Token& token = CurrentToken();
  538|       |
  539|  24.6k|        switch (token.GetTokenKind())
  540|  24.6k|        {
  541|  8.96k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (541:13): [True: 8.96k, False: 15.7k]
  ------------------
  542|  8.96k|                parameter.name = token.GetText().substring_view(1u);
  543|  8.96k|                ConsumeCurrent();
  544|  8.96k|                break;
  545|      0|            }
  546|    194|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (546:13): [True: 194, False: 24.4k]
  ------------------
  547|    194|                parameter.as_const = true;
  548|    194|                ConsumeCurrent();
  549|    194|                break;
  550|      0|            }
  551|     66|            case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (551:13): [True: 66, False: 24.6k]
  ------------------
  552|     66|                parameter.by_ref = true;
  553|     66|                ConsumeCurrent();
  554|     66|                break;
  555|      0|            }
  556|  7.64k|            case TokenKind::OP_Equals: {
  ------------------
  |  Branch (556:13): [True: 7.64k, False: 17.0k]
  ------------------
  557|  7.64k|                if (parameter.name.is_empty())
  ------------------
  |  Branch (557:21): [True: 456, False: 7.18k]
  ------------------
  558|    456|                {
  559|       |                    // TODO: PROPER ERROR
  560|    456|                    return {};
  561|    456|                }
  562|       |
  563|       |                // Consume the '='
  564|  7.18k|                ConsumeCurrent();
  565|       |
  566|       |                // Default value is an expression
  567|  7.18k|                auto default_expression = ParseExpression();
  568|  7.18k|                if (!default_expression)
  ------------------
  |  Branch (568:21): [True: 670, False: 6.51k]
  ------------------
  569|    670|                {
  570|       |                    // TODO: Report error
  571|    670|                    return {};
  572|    670|                }
  573|       |
  574|       |                // For default values we artificially create a variable assignment
  575|  6.51k|                auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  576|       |
  577|  6.51k|                default_var_assignment->m_Scope                  = VariableScope::Auto;
  578|  6.51k|                default_var_assignment->m_VariableName           = parameter.name;
  579|  6.51k|                default_var_assignment->m_InitialValueExpression = phi::move(default_expression);
  580|       |
  581|  6.51k|                parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  582|  6.51k|                break;
  583|  7.18k|            }
  584|  1.49k|            case TokenKind::Comma:
  ------------------
  |  Branch (584:13): [True: 1.49k, False: 23.1k]
  ------------------
  585|  3.02k|            case TokenKind::RParen: {
  ------------------
  |  Branch (585:13): [True: 1.53k, False: 23.1k]
  ------------------
  586|  3.02k|                return phi::move(parameter);
  587|  1.49k|            }
  588|  4.77k|            default: {
  ------------------
  |  Branch (588:13): [True: 4.77k, False: 19.8k]
  ------------------
  589|       |                // TODO: Report error
  590|  4.77k|                return {};
  591|  1.49k|            }
  592|  24.6k|        }
  593|  24.6k|    }
  594|       |
  595|       |    // TODO: Report error unexpected EOF
  596|     86|    return {};
  597|  9.01k|}
_ZN10OpenAutoIt6Parser21ParseIncludeDirectiveEv:
  600|  2.49k|{
  601|  2.49k|    if (!HasMoreTokens())
  ------------------
  |  Branch (601:9): [True: 8, False: 2.48k]
  ------------------
  602|      8|    {
  603|      8|        Diag().Error(DiagnosticId::UnexpectedEndOfFile, PreviousToken().GetBeginLocation(),
  604|      8|                     "include directive");
  605|      8|        return;
  606|      8|    }
  607|       |
  608|  2.48k|    const Token&     token = CurrentToken();
  609|  2.48k|    phi::string_view file_name;
  610|  2.48k|    IncludeType      include_type = IncludeType::Local;
  611|       |
  612|       |    // Local include like this '#include "foo.au3"'
  613|  2.48k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (613:9): [True: 563, False: 1.92k]
  ------------------
  614|    563|    {
  615|    563|        ConsumeCurrent();
  616|       |
  617|       |        // Get the file name
  618|    563|        file_name = token.GetText().substring_view(1u, token.GetText().length() - 2u);
  619|    563|    }
  620|       |    // Global include like this '#include <foo.au3>'
  621|  1.92k|    else if (token.GetTokenKind() == TokenKind::OP_LessThan)
  ------------------
  |  Branch (621:14): [True: 1.41k, False: 508]
  ------------------
  622|  1.41k|    {
  623|       |        // FIXME: This is not really a nice way, but we essentially start from after the opening '<' and include everything upto the closing '>'
  624|  1.41k|        ConsumeCurrent();
  625|       |
  626|  1.41k|        include_type = IncludeType::Global;
  627|  1.41k|        file_name    = token.GetText().remove_prefix(1u);
  628|       |
  629|  1.41k|        phi::boolean found_end{false};
  630|  1.41k|        phi::boolean continue_parsing{true};
  631|  3.89k|        while (HasMoreTokens() && continue_parsing)
  ------------------
  |  Branch (631:16): [True: 3.86k, False: 28]
  |  Branch (631:16): [True: 2.48k, False: 1.41k]
  |  Branch (631:35): [True: 2.48k, False: 1.38k]
  ------------------
  632|  2.48k|        {
  633|  2.48k|            const Token& end_token = CurrentToken();
  634|       |
  635|  2.48k|            if (end_token.GetTokenKind() == TokenKind::OP_GreaterThan)
  ------------------
  |  Branch (635:17): [True: 354, False: 2.12k]
  ------------------
  636|    354|            {
  637|    354|                found_end        = true;
  638|    354|                continue_parsing = false;
  639|    354|                const phi::usize difference =
  640|    354|                        phi::narrow_cast<phi::usize>(end_token.GetText().data() - file_name.data());
  641|    354|                file_name.add_postfix(difference);
  642|    354|            }
  643|  2.12k|            else if (end_token.GetTokenKind() == TokenKind::NewLine)
  ------------------
  |  Branch (643:22): [True: 1.03k, False: 1.09k]
  ------------------
  644|  1.03k|            {
  645|       |                // Stop once we hit a newline
  646|  1.03k|                continue_parsing = false;
  647|  1.03k|            }
  648|       |
  649|  2.48k|            ConsumeCurrent();
  650|  2.48k|        }
  651|       |
  652|  1.41k|        if (!found_end)
  ------------------
  |  Branch (652:13): [True: 1.05k, False: 354]
  ------------------
  653|  1.05k|        {
  654|  1.05k|            Diag().Error(DiagnosticId::Expected, PreviousToken().GetEndLocation(), "'>'")
  655|  1.05k|                    .Note(token.GetBeginLocation(), "to match this '<'");
  656|  1.05k|            return;
  657|  1.05k|        }
  658|  1.41k|    }
  659|    508|    else
  660|    508|    {
  661|    508|        Diag().Error(DiagnosticId::Expected, token.GetEndLocation(), "\"Filename\" or <Filename>");
  662|    508|        return;
  663|    508|    }
  664|       |
  665|       |    // Limit include nesting
  666|    917|    if (m_ParsingContextStack.size() >= MaxNumberOfIncludeNesting)
  ------------------
  |  Branch (666:9): [True: 0, False: 917]
  ------------------
  667|      0|    {
  668|      0|        Diag().Error(DiagnosticId::IncludeNestingTooDeeply, token.GetBeginLocation());
  669|      0|        return;
  670|      0|    }
  671|       |
  672|       |    // Emit error for empty file names
  673|    917|    if (file_name.is_empty())
  ------------------
  |  Branch (673:9): [True: 450, False: 467]
  ------------------
  674|    450|    {
  675|    450|        Diag().Error(DiagnosticId::EmptyFilename, token.GetBeginLocation());
  676|    450|        return;
  677|    450|    }
  678|       |
  679|       |    // Emit error if the file name is too long
  680|    467|    if (file_name.length() > 255u)
  ------------------
  |  Branch (680:9): [True: 105, False: 362]
  ------------------
  681|    105|    {
  682|    105|        Diag().Error(DiagnosticId::FileNameTooLong, token.GetBeginLocation(),
  683|    105|                     std::string_view(file_name));
  684|    105|        return;
  685|    105|    }
  686|       |
  687|       |    // Load the file from the SourceManager
  688|    362|    phi::observer_ptr<const SourceFile> include_file =
  689|    362|            m_SourceManager->LoadFile(std::string_view(file_name), include_type);
  690|    362|    if (!include_file)
  ------------------
  |  Branch (690:9): [True: 362, False: 0]
  ------------------
  691|    362|    {
  692|    362|        Diag().Error(DiagnosticId::FileNotFound, token.GetBeginLocation(),
  693|    362|                     std::string_view(file_name));
  694|    362|        return;
  695|    362|    }
  696|       |
  697|      0|    RequireNewLine();
  698|       |
  699|       |    // Append the file
  700|      0|    AppendSourceFileToDocument(include_file.not_null(), token.GetBeginLocation());
  701|      0|}
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  704|   262k|{
  705|   262k|    ConsumeNewLineAndComments();
  706|       |
  707|   262k|    if (!HasMoreTokens())
  ------------------
  |  Branch (707:9): [True: 26, False: 262k]
  ------------------
  708|     26|    {
  709|       |        // TODO: Report proper error
  710|     26|        return {};
  711|     26|    }
  712|       |
  713|   262k|    phi::scope_ptr<ASTStatement> ret_statement;
  714|       |
  715|       |    // Loop until we parse something or there is nothing left to parse
  716|   262k|    const Token& token = CurrentToken();
  717|   262k|    switch (token.GetTokenKind())
  718|   262k|    {
  719|       |        // Variable assignment
  720|    364|        case TokenKind::KW_Const:
  ------------------
  |  Branch (720:9): [True: 364, False: 262k]
  ------------------
  721|  1.21k|        case TokenKind::KW_Local:
  ------------------
  |  Branch (721:9): [True: 846, False: 261k]
  ------------------
  722|  1.43k|        case TokenKind::KW_Global:
  ------------------
  |  Branch (722:9): [True: 226, False: 262k]
  ------------------
  723|  1.95k|        case TokenKind::KW_Static:
  ------------------
  |  Branch (723:9): [True: 520, False: 261k]
  ------------------
  724|  55.0k|        case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (724:9): [True: 53.1k, False: 209k]
  ------------------
  725|  55.0k|            ret_statement = ParseVariableAssignment();
  726|  55.0k|            if (!ret_statement)
  ------------------
  |  Branch (726:17): [True: 3.66k, False: 51.4k]
  ------------------
  727|  3.66k|            {
  728|  3.66k|                err("ERR: Failed to parse variable assignment!\n");
  729|  3.66k|                return {};
  730|  3.66k|            }
  731|  51.4k|            break;
  732|  55.0k|        }
  733|       |
  734|       |        // If Statement
  735|  51.4k|        case TokenKind::KW_If: {
  ------------------
  |  Branch (735:9): [True: 9.68k, False: 252k]
  ------------------
  736|  9.68k|            ret_statement = ParseIfStatement();
  737|  9.68k|            if (!ret_statement)
  ------------------
  |  Branch (737:17): [True: 9.29k, False: 388]
  ------------------
  738|  9.29k|            {
  739|  9.29k|                err("ERR: Failed to parse if statement!\n");
  740|  9.29k|                return {};
  741|  9.29k|            }
  742|    388|            break;
  743|  9.68k|        }
  744|       |
  745|       |        // While statement
  746|  3.45k|        case TokenKind::KW_While: {
  ------------------
  |  Branch (746:9): [True: 3.45k, False: 258k]
  ------------------
  747|  3.45k|            ret_statement = ParseWhileStatement();
  748|  3.45k|            if (!ret_statement)
  ------------------
  |  Branch (748:17): [True: 2.72k, False: 733]
  ------------------
  749|  2.72k|            {
  750|  2.72k|                err("ERR: Failed to parse while statement!\n");
  751|  2.72k|                return {};
  752|  2.72k|            }
  753|    733|            break;
  754|  3.45k|        }
  755|       |
  756|       |        // Exit statement
  757|    863|        case TokenKind::KW_Exit: {
  ------------------
  |  Branch (757:9): [True: 863, False: 261k]
  ------------------
  758|    863|            ret_statement = ParseExitStatement();
  759|    863|            if (!ret_statement)
  ------------------
  |  Branch (759:17): [True: 0, False: 863]
  ------------------
  760|      0|            {
  761|      0|                err("ERR: Failed to parse exit statement!\n");
  762|      0|                return {};
  763|      0|            }
  764|    863|            break;
  765|    863|        }
  766|       |
  767|   193k|        default: {
  ------------------
  |  Branch (767:9): [True: 193k, False: 69.0k]
  ------------------
  768|       |            // Try to parse ExpressionStatement
  769|   193k|            ret_statement = ParseExpressionStatement();
  770|   193k|            if (!ret_statement)
  ------------------
  |  Branch (770:17): [True: 172k, False: 20.8k]
  ------------------
  771|   172k|            {
  772|   172k|                err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  773|   172k|                                enum_name(token.GetTokenKind())));
  774|   172k|                return {};
  775|   172k|            }
  776|  20.8k|            break;
  777|   193k|        }
  778|   262k|    }
  779|       |
  780|  74.2k|    return phi::move(ret_statement);
  781|   262k|}
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  784|  3.45k|{
  785|  3.45k|    const Token& token = CurrentToken();
  786|  3.45k|    if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (786:9): [True: 0, False: 3.45k]
  ------------------
  787|      0|    {
  788|       |        // TODO: Proper error
  789|      0|        return {};
  790|      0|    }
  791|  3.45k|    ConsumeCurrent();
  792|       |
  793|       |    // Next we MUST parse an Expression
  794|  3.45k|    auto while_condition_expression = ParseExpression();
  795|  3.45k|    if (!while_condition_expression)
  ------------------
  |  Branch (795:9): [True: 416, False: 3.04k]
  ------------------
  796|    416|    {
  797|       |        // TODO: Proper error
  798|    416|        return {};
  799|    416|    }
  800|       |
  801|  3.04k|    auto while_statement =
  802|  3.04k|            phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  803|       |
  804|       |    // Parse statements until KW_WEnd
  805|  5.97k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (805:12): [True: 5.91k, False: 52]
  |  Branch (805:12): [True: 5.18k, False: 785]
  |  Branch (805:31): [True: 5.18k, False: 733]
  ------------------
  806|  5.18k|    {
  807|  5.18k|        ConsumeNewLineAndComments();
  808|       |
  809|       |        // Parse statements
  810|  5.18k|        auto statement = ParseStatement();
  811|  5.18k|        if (!statement)
  ------------------
  |  Branch (811:13): [True: 2.25k, False: 2.92k]
  ------------------
  812|  2.25k|        {
  813|       |            // TODO: Propeer error
  814|  2.25k|            return {};
  815|  2.25k|        }
  816|       |
  817|  2.92k|        while_statement->m_Statements.emplace_back(statement.release_not_null());
  818|  2.92k|    }
  819|       |
  820|    785|    if (!HasMoreTokens())
  ------------------
  |  Branch (820:9): [True: 52, False: 733]
  ------------------
  821|     52|    {
  822|       |        // TODO: Proper error
  823|     52|        return {};
  824|     52|    }
  825|       |
  826|       |    // Next token MUST be KW_Wend
  827|    733|    const Token& wend_token = CurrentToken();
  828|    733|    if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (828:9): [True: 0, False: 733]
  ------------------
  829|      0|    {
  830|       |        // TODO: Proper error
  831|      0|        return {};
  832|      0|    }
  833|    733|    ConsumeCurrent();
  834|       |
  835|    733|    return phi::move(while_statement);
  836|    733|}
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  839|  55.0k|{
  840|  55.0k|    auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  841|       |
  842|  55.0k|    phi::boolean parsed_identifier = false;
  843|       |    // Parse all specifiers until we hit a VariableIdentifier
  844|   110k|    while (HasMoreTokens() && !parsed_identifier)
  ------------------
  |  Branch (844:12): [True: 109k, False: 201]
  |  Branch (844:12): [True: 57.0k, False: 53.1k]
  |  Branch (844:31): [True: 57.0k, False: 52.9k]
  ------------------
  845|  57.0k|    {
  846|  57.0k|        const Token& current_token = CurrentToken();
  847|  57.0k|        ConsumeCurrent();
  848|       |
  849|  57.0k|        switch (current_token.GetTokenKind())
  850|  57.0k|        {
  851|    558|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (851:13): [True: 558, False: 56.4k]
  ------------------
  852|    558|                if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (852:21): [True: 194, False: 364]
  ------------------
  853|    194|                {
  854|       |                    // TODO: Error more than one const specifier
  855|    194|                    err("ERR: More than one const specifier given\n");
  856|    194|                    return {};
  857|    194|                }
  858|    364|                variable_declaration->m_IsConst = true;
  859|    364|                break;
  860|    558|            }
  861|       |
  862|    842|            case TokenKind::KW_Static: {
  ------------------
  |  Branch (862:13): [True: 842, False: 56.1k]
  ------------------
  863|    842|                if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (863:21): [True: 322, False: 520]
  ------------------
  864|    322|                {
  865|       |                    // TODO: Error more than one static specifier
  866|    322|                    err("ERR: More than one static specifier given\n");
  867|    322|                    return {};
  868|    322|                }
  869|    520|                variable_declaration->m_IsStatic = true;
  870|    520|                break;
  871|    842|            }
  872|       |
  873|    292|            case TokenKind::KW_Global: {
  ------------------
  |  Branch (873:13): [True: 292, False: 56.7k]
  ------------------
  874|    292|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (874:21): [True: 66, False: 226]
  ------------------
  875|     66|                {
  876|       |                    // TODO: Error more than one scope specifier
  877|     66|                    err("ERR: More than one scope specifier given\n");
  878|     66|                    return {};
  879|     66|                }
  880|    226|                variable_declaration->m_Scope = VariableScope::Global;
  881|    226|                break;
  882|    292|            }
  883|       |
  884|  1.58k|            case TokenKind::KW_Local: {
  ------------------
  |  Branch (884:13): [True: 1.58k, False: 55.4k]
  ------------------
  885|  1.58k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (885:21): [True: 741, False: 846]
  ------------------
  886|    741|                {
  887|       |                    // TODO: Error more than one scope specifier
  888|    741|                    err("ERR: More than one scope specifier given\n");
  889|    741|                    return {};
  890|    741|                }
  891|    846|                variable_declaration->m_Scope = VariableScope::Local;
  892|    846|                break;
  893|  1.58k|            }
  894|       |
  895|  53.1k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (895:13): [True: 53.1k, False: 3.88k]
  ------------------
  896|       |                // VariableIdentifiers begin with a '$'
  897|       |                // Like: $MyVariable
  898|       |                // So for the name we ignore the very first character
  899|  53.1k|                PHI_ASSERT(current_token.GetText().length() > 1u);
  900|  53.1k|                variable_declaration->m_VariableName = current_token.GetText().substring_view(1u);
  901|       |
  902|  53.1k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  903|  53.1k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  904|       |
  905|  53.1k|                parsed_identifier = true;
  906|  53.1k|                break;
  907|  1.58k|            }
  908|       |
  909|    608|            default: {
  ------------------
  |  Branch (909:13): [True: 608, False: 56.3k]
  ------------------
  910|       |                // TODO: Error unexpected token
  911|    608|                return {};
  912|  1.58k|            }
  913|  57.0k|        }
  914|  57.0k|    }
  915|       |
  916|  53.1k|    if (!parsed_identifier)
  ------------------
  |  Branch (916:9): [True: 25, False: 53.1k]
  ------------------
  917|     25|    {
  918|       |        // TODO: Error variable declaration ends before the VariableIdentifier
  919|     25|        err("ERR: Missing variable identifier!\n");
  920|     25|        return {};
  921|     25|    }
  922|       |
  923|       |    // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  924|  53.1k|    if (!HasMoreTokens())
  ------------------
  |  Branch (924:9): [True: 176, False: 52.9k]
  ------------------
  925|    176|    {
  926|    176|        return variable_declaration;
  927|    176|    }
  928|       |
  929|       |    // Check for equals
  930|  52.9k|    const Token& next_token = CurrentToken();
  931|       |
  932|  52.9k|    if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (932:9): [True: 18.7k, False: 34.1k]
  ------------------
  933|  18.7k|    {
  934|  18.7k|        ConsumeCurrent();
  935|       |
  936|       |        // Now me MUST parse an expression
  937|  18.7k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
  938|  18.7k|        if (!expression)
  ------------------
  |  Branch (938:13): [True: 1.71k, False: 17.0k]
  ------------------
  939|  1.71k|        {
  940|       |            // TODO: Error failed to parse a valid expression
  941|  1.71k|            err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  942|  1.71k|            return {};
  943|  1.71k|        }
  944|       |
  945|  17.0k|        variable_declaration->m_InitialValueExpression = phi::move(expression);
  946|  17.0k|    }
  947|       |
  948|  51.2k|    return variable_declaration;
  949|  52.9k|}
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  952|   193k|{
  953|   193k|    auto expression = ParseExpression();
  954|   193k|    if (!expression)
  ------------------
  |  Branch (954:9): [True: 110k, False: 82.7k]
  ------------------
  955|   110k|    {
  956|   110k|        return {};
  957|   110k|    }
  958|       |
  959|  82.7k|    auto expression_statement =
  960|  82.7k|            phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  961|       |
  962|  82.7k|    if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (962:9): [True: 61.8k, False: 20.8k]
  ------------------
  963|  61.8k|    {
  964|  61.8k|        err(fmt::format("Expression {:s} is not valid as an statement\n",
  965|  61.8k|                        expression_statement->m_Expression->Name()));
  966|  61.8k|        return {};
  967|  61.8k|    }
  968|       |
  969|  20.8k|    return phi::move(expression_statement);
  970|  82.7k|}
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  973|  9.68k|{
  974|  9.68k|    if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (974:9): [True: 0, False: 9.68k]
  ------------------
  975|      0|    {
  976|      0|        return {};
  977|      0|    }
  978|       |
  979|       |    // Next me MUST parse an expression
  980|  9.68k|    auto if_condition = ParseExpression();
  981|  9.68k|    if (!if_condition)
  ------------------
  |  Branch (981:9): [True: 738, False: 8.94k]
  ------------------
  982|    738|    {
  983|    738|        err("ERR: failed to parse expression!\n");
  984|       |
  985|    738|        return {};
  986|    738|    }
  987|       |
  988|       |    // Next we MUST parse Then
  989|  8.94k|    if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (989:9): [True: 2.09k, False: 6.85k]
  ------------------
  990|  2.09k|    {
  991|  2.09k|        err("ERR: Missing then!\n");
  992|       |
  993|  2.09k|        return {};
  994|  2.09k|    }
  995|       |
  996|  6.85k|    ConsumeNewLineAndComments();
  997|       |
  998|  6.85k|    IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  999|       |
 1000|       |    // Next parse statements until we hit and EndIf, ElseIf or Else
 1001|  9.45k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1001:12): [True: 9.40k, False: 55]
  |  Branch (1001:12): [True: 4.52k, False: 4.92k]
  |  Branch (1001:31): [True: 9.20k, False: 194]
  ------------------
 1002|  9.45k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1002:12): [True: 7.27k, False: 1.93k]
  ------------------
 1003|  9.45k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1003:12): [True: 4.52k, False: 2.74k]
  ------------------
 1004|  4.52k|    {
 1005|  4.52k|        auto statement = ParseStatement();
 1006|  4.52k|        if (!statement)
  ------------------
  |  Branch (1006:13): [True: 1.92k, False: 2.60k]
  ------------------
 1007|  1.92k|        {
 1008|  1.92k|            err("ERR: Failed to parse statement inside of IF\n");
 1009|  1.92k|            return {};
 1010|  1.92k|        }
 1011|       |
 1012|  2.60k|        if_case.body.emplace_back(statement.release_not_null());
 1013|       |
 1014|  2.60k|        ConsumeNewLineAndComments();
 1015|  2.60k|    }
 1016|       |
 1017|  4.92k|    auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
 1018|       |
 1019|       |    // Handle all ElseIf cases which are optional
 1020|  10.4k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1020:12): [True: 10.0k, False: 345]
  |  Branch (1020:12): [True: 6.11k, False: 4.32k]
  |  Branch (1020:31): [True: 6.11k, False: 3.97k]
  ------------------
 1021|  6.11k|    {
 1022|       |        // Consume KW_ElseIf token
 1023|  6.11k|        ConsumeCurrent();
 1024|       |
 1025|       |        // Parse the condition
 1026|  6.11k|        auto else_if_condition = ParseExpression();
 1027|  6.11k|        if (!else_if_condition)
  ------------------
  |  Branch (1027:13): [True: 606, False: 5.50k]
  ------------------
 1028|    606|        {
 1029|    606|            return {};
 1030|    606|        }
 1031|       |
 1032|       |        // Parse KW_Then
 1033|  5.50k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (1033:13): [True: 3.91k, False: 1.58k]
  ------------------
 1034|  3.91k|        {
 1035|       |            // TODO: Better error message and this error should be recoverable
 1036|  3.91k|            err("ERR: Missing then!\n");
 1037|  3.91k|        }
 1038|       |
 1039|  5.50k|        ConsumeNewLineAndComments();
 1040|       |
 1041|  5.50k|        IfCase else_if_case{.condition{else_if_condition.release_not_null()},
 1042|  5.50k|                            .body{ParseIfCaseStatements()}};
 1043|       |
 1044|       |        // Append our case to the if statement
 1045|  5.50k|        if_statement->m_ElseIfCases.emplace_back(phi::move(else_if_case));
 1046|  5.50k|    }
 1047|       |
 1048|       |    // Handle optional else case
 1049|  4.32k|    if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_Else)
  ------------------
  |  Branch (1049:9): [True: 3.97k, False: 345]
  |  Branch (1049:9): [True: 2.34k, False: 1.97k]
  |  Branch (1049:28): [True: 2.34k, False: 1.63k]
  ------------------
 1050|  2.34k|    {
 1051|       |        // Consume KW_Else token
 1052|  2.34k|        ConsumeCurrent();
 1053|       |
 1054|  2.34k|        ConsumeNewLineAndComments();
 1055|       |
 1056|  2.34k|        if_statement->m_ElseCase = ParseIfCaseStatements();
 1057|  2.34k|    }
 1058|       |
 1059|  4.32k|    if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (1059:9): [True: 3.93k, False: 388]
  ------------------
 1060|  3.93k|    {
 1061|  3.93k|        err("ERR: Missing EndIf!\n");
 1062|       |        // TODO: Proper Error
 1063|  3.93k|        return {};
 1064|  3.93k|    }
 1065|       |
 1066|    388|    return phi::move(if_statement);
 1067|  4.32k|}
_ZN10OpenAutoIt6Parser21ParseIfCaseStatementsEv:
 1070|  7.85k|{
 1071|  7.85k|    std::vector<phi::not_null_scope_ptr<ASTStatement>> statements;
 1072|       |
 1073|       |    // Parse statements until KW_EndIf, KW_Else, KW_ElseIf
 1074|  10.3k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1074:12): [True: 10.2k, False: 146]
  |  Branch (1074:12): [True: 6.04k, False: 4.31k]
  |  Branch (1074:31): [True: 10.0k, False: 194]
  ------------------
 1075|  10.3k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1075:12): [True: 9.10k, False: 923]
  ------------------
 1076|  10.3k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1076:12): [True: 6.04k, False: 3.05k]
  ------------------
 1077|  6.04k|    {
 1078|  6.04k|        auto statement = ParseStatement();
 1079|  6.04k|        if (!statement)
  ------------------
  |  Branch (1079:13): [True: 3.53k, False: 2.51k]
  ------------------
 1080|  3.53k|        {
 1081|  3.53k|            err("ERR: Failed to parse statement inside of IF\n");
 1082|  3.53k|            return {};
 1083|  3.53k|        }
 1084|       |
 1085|  2.51k|        statements.emplace_back(statement.release_not_null());
 1086|       |
 1087|  2.51k|        ConsumeNewLineAndComments();
 1088|  2.51k|    }
 1089|       |
 1090|  4.31k|    return statements;
 1091|  7.85k|}
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
 1094|  95.9k|{
 1095|  95.9k|    const Token& token = CurrentToken();
 1096|  95.9k|    if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1096:9): [True: 0, False: 95.9k]
  ------------------
 1097|      0|    {
 1098|      0|        return {};
 1099|      0|    }
 1100|       |
 1101|  95.9k|    phi::int64_t value{0};
 1102|  95.9k|    phi::boolean parsing_hex{false};
 1103|   235k|    for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (1103:32): [True: 142k, False: 93.7k]
  ------------------
 1104|   142k|    {
 1105|   142k|        const char character = token.GetText().at(index);
 1106|       |
 1107|       |        // Checking the second character
 1108|   142k|        if (index == 1u)
  ------------------
  |  Branch (1108:13): [True: 4.68k, False: 137k]
  ------------------
 1109|  4.68k|        {
 1110|  4.68k|            if (character == 'x' || character == 'X')
  ------------------
  |  Branch (1110:17): [True: 319, False: 4.36k]
  |  Branch (1110:37): [True: 1.22k, False: 3.14k]
  ------------------
 1111|  1.54k|            {
 1112|  1.54k|                parsing_hex = true;
 1113|  1.54k|                continue;
 1114|  1.54k|            }
 1115|  4.68k|        }
 1116|       |
 1117|   140k|        if (parsing_hex)
  ------------------
  |  Branch (1117:13): [True: 15.2k, False: 125k]
  ------------------
 1118|  15.2k|        {
 1119|  15.2k|            PHI_ASSERT(phi::is_hex_digit(character));
 1120|       |
 1121|  15.2k|            if (phi::detail::will_multiplication_error(phi::detail::unsigned_integer_tag{}, value,
  ------------------
  |  Branch (1121:17): [True: 588, False: 14.6k]
  ------------------
 1122|  15.2k|                                                       phi::int64_t(16)) ||
 1123|  15.2k|                phi::detail::will_addition_error(phi::detail::unsigned_integer_tag{}, value * 16,
  ------------------
  |  Branch (1123:17): [True: 322, False: 14.3k]
  ------------------
 1124|  14.6k|                                                 phi::int64_t(character - '0')))
 1125|    910|            {
 1126|    910|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1127|    910|                ConsumeCurrent();
 1128|    910|                return {};
 1129|    910|            }
 1130|       |
 1131|  14.3k|            value <<= 4;
 1132|  14.3k|            value |= phi::hex_digit_value(character).unsafe();
 1133|  14.3k|        }
 1134|   125k|        else
 1135|   125k|        {
 1136|   125k|            PHI_ASSERT(character >= '0' && character <= '9');
 1137|       |
 1138|   125k|            if (phi::detail::will_multiplication_error(phi::detail::signed_integer_tag{}, value,
  ------------------
  |  Branch (1138:17): [True: 340, False: 125k]
  ------------------
 1139|   125k|                                                       phi::int64_t(10)) ||
 1140|   125k|                phi::detail::will_addition_error(phi::detail::signed_integer_tag{}, value * 10,
  ------------------
  |  Branch (1140:17): [True: 963, False: 124k]
  ------------------
 1141|   125k|                                                 phi::int64_t(character - '0')))
 1142|  1.30k|            {
 1143|  1.30k|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1144|  1.30k|                ConsumeCurrent();
 1145|  1.30k|                return {};
 1146|  1.30k|            }
 1147|       |
 1148|   124k|            value *= 10;
 1149|   124k|            value += (character - '0');
 1150|   124k|        }
 1151|   140k|    }
 1152|       |
 1153|  93.7k|    ConsumeCurrent();
 1154|  93.7k|    return phi::make_scope<ASTIntegerLiteral>(value);
 1155|  95.9k|}
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
 1158|  14.2k|{
 1159|  14.2k|    const Token& token = CurrentToken();
 1160|  14.2k|    if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (1160:9): [True: 0, False: 14.2k]
  ------------------
 1161|      0|    {
 1162|      0|        return {};
 1163|      0|    }
 1164|  14.2k|    ConsumeCurrent();
 1165|       |
 1166|  14.2k|    auto string_literal = phi::make_scope<ASTStringLiteral>();
 1167|       |
 1168|  14.2k|    const phi::usize length = token.GetText().length();
 1169|       |    // Trim the trailing and leading "
 1170|  14.2k|    string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
 1171|       |
 1172|  14.2k|    return phi::move(string_literal);
 1173|  14.2k|}
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
 1176|   823k|{
 1177|   823k|    phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
 1178|   823k|    if (!lhs_expression)
  ------------------
  |  Branch (1178:9): [True: 561k, False: 262k]
  ------------------
 1179|   561k|    {
 1180|   561k|        return {};
 1181|   561k|    }
 1182|       |
 1183|   262k|    return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
 1184|   823k|}
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
 1187|   857k|{
 1188|   857k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1188:9): [True: 609, False: 857k]
  ------------------
 1189|    609|    {
 1190|       |        // TODO: Proper error
 1191|    609|        return {};
 1192|    609|    }
 1193|       |
 1194|   857k|    const Token& token = CurrentToken();
 1195|   857k|    if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (1195:9): [True: 58.1k, False: 798k]
  ------------------
 1196|  58.1k|    {
 1197|  58.1k|        const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
 1198|  58.1k|        PHI_UNUSED_VARIABLE(op_precedence);
 1199|  58.1k|        ConsumeCurrent();
 1200|       |
 1201|  58.1k|        phi::scope_ptr<ASTExpression> unary_expression = ParseUnaryExpression(token.GetTokenKind());
 1202|  58.1k|        if (!unary_expression)
  ------------------
  |  Branch (1202:13): [True: 8.92k, False: 49.2k]
  ------------------
 1203|  8.92k|        {
 1204|       |            // TODO: Proper error
 1205|  8.92k|            return {};
 1206|  8.92k|        }
 1207|       |
 1208|  49.2k|        return phi::move(unary_expression);
 1209|  58.1k|    }
 1210|   798k|    if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (1210:9): [True: 67.6k, False: 731k]
  ------------------
 1211|  67.6k|    {
 1212|       |        // Consume the LParen
 1213|  67.6k|        ConsumeCurrent();
 1214|       |
 1215|  67.6k|        phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
 1216|  67.6k|        if (!paren_expression)
  ------------------
  |  Branch (1216:13): [True: 66.6k, False: 1.06k]
  ------------------
 1217|  66.6k|        {
 1218|       |            // TODO: Proper error
 1219|  66.6k|            return {};
 1220|  66.6k|        }
 1221|       |
 1222|  1.06k|        return phi::move(paren_expression);
 1223|  67.6k|    }
 1224|   731k|    if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1224:9): [True: 95.9k, False: 635k]
  ------------------
 1225|  95.9k|    {
 1226|  95.9k|        phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
 1227|  95.9k|        if (!int_literal)
  ------------------
  |  Branch (1227:13): [True: 2.21k, False: 93.7k]
  ------------------
 1228|  2.21k|        {
 1229|       |            // TODO: Error failed to parse integer literal
 1230|  2.21k|            return {};
 1231|  2.21k|        }
 1232|       |
 1233|  93.7k|        return phi::move(int_literal);
 1234|  95.9k|    }
 1235|   635k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (1235:9): [True: 14.2k, False: 621k]
  ------------------
 1236|  14.2k|    {
 1237|  14.2k|        auto string_literal_expression = ParseStringLiteral();
 1238|  14.2k|        if (!string_literal_expression)
  ------------------
  |  Branch (1238:13): [True: 0, False: 14.2k]
  ------------------
 1239|      0|        {
 1240|       |            // TODO: Proper error
 1241|      0|            return {};
 1242|      0|        }
 1243|       |
 1244|  14.2k|        return phi::move(string_literal_expression);
 1245|  14.2k|    }
 1246|       |
 1247|       |    // Boolean literal
 1248|   621k|    if (token.GetTokenKind() == TokenKind::KW_True || token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1248:9): [True: 323, False: 620k]
  |  Branch (1248:55): [True: 194, False: 620k]
  ------------------
 1249|    517|    {
 1250|    517|        auto boolean_literal = ParseBooleanLiteral();
 1251|    517|        if (!boolean_literal)
  ------------------
  |  Branch (1251:13): [True: 0, False: 517]
  ------------------
 1252|      0|        {
 1253|       |            // TODO: Proper error
 1254|      0|            return {};
 1255|      0|        }
 1256|       |
 1257|    517|        return phi::move(boolean_literal);
 1258|    517|    }
 1259|       |
 1260|       |    // Function call/reference expression
 1261|   620k|    if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (1261:9): [True: 105k, False: 515k]
  |  Branch (1261:9): [True: 106k, False: 514k]
  |  Branch (1261:66): [True: 939, False: 514k]
  ------------------
 1262|   106k|    {
 1263|   106k|        auto function_expression = ParseFunctionExpression();
 1264|   106k|        if (!function_expression)
  ------------------
  |  Branch (1264:13): [True: 12.2k, False: 93.7k]
  ------------------
 1265|  12.2k|        {
 1266|       |            // TODO: Proper error
 1267|  12.2k|            err("ERR: Failed to parse function expression!\n");
 1268|  12.2k|            return {};
 1269|  12.2k|        }
 1270|       |
 1271|  93.7k|        return phi::move(function_expression);
 1272|   106k|    }
 1273|       |    // Variable expression
 1274|   514k|    if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1274:9): [True: 12.2k, False: 502k]
  ------------------
 1275|  12.2k|    {
 1276|  12.2k|        auto variable_expression = ParseVariableExpression();
 1277|  12.2k|        if (!variable_expression)
  ------------------
  |  Branch (1277:13): [True: 0, False: 12.2k]
  ------------------
 1278|      0|        {
 1279|       |            // TODO: Proper error
 1280|      0|            err("ERR: Failed to parse Variable expression\n");
 1281|      0|            return {};
 1282|      0|        }
 1283|       |
 1284|  12.2k|        return phi::move(variable_expression);
 1285|  12.2k|    }
 1286|       |    // Keyword literal
 1287|   502k|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1287:9): [True: 784, False: 501k]
  ------------------
 1288|    784|    {
 1289|    784|        auto keyword_literal = ParseKeywordLiteral();
 1290|    784|        if (!keyword_literal)
  ------------------
  |  Branch (1290:13): [True: 0, False: 784]
  ------------------
 1291|      0|        {
 1292|       |            // TODO: Proper error
 1293|      0|            err("ERR: Failed to parse keyword literal expression!\n");
 1294|      0|            return {};
 1295|      0|        }
 1296|       |
 1297|    784|        return phi::move(keyword_literal);
 1298|    784|    }
 1299|       |    // Float literal
 1300|   501k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1300:9): [True: 7.11k, False: 494k]
  ------------------
 1301|  7.11k|    {
 1302|  7.11k|        auto float_literal = ParseFloatLiteral();
 1303|  7.11k|        if (!float_literal)
  ------------------
  |  Branch (1303:13): [True: 0, False: 7.11k]
  ------------------
 1304|      0|        {
 1305|       |            // TODO: Proper error
 1306|      0|            err("ERR: Failed to parse float literal expression!\n");
 1307|      0|            return {};
 1308|      0|        }
 1309|       |
 1310|  7.11k|        return phi::move(float_literal);
 1311|  7.11k|    }
 1312|       |    // ArraySubscript expression
 1313|   494k|    if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (1313:9): [True: 394k, False: 100k]
  ------------------
 1314|   394k|    {
 1315|   394k|        auto subscript_expression = ParseArraySubscriptExpression();
 1316|   394k|        if (!subscript_expression)
  ------------------
  |  Branch (1316:13): [True: 381k, False: 12.1k]
  ------------------
 1317|   381k|        {
 1318|   381k|            err("ERR: Failed to parse array subscript expression\n");
 1319|   381k|            return {};
 1320|   381k|        }
 1321|       |
 1322|  12.1k|        return phi::move(subscript_expression);
 1323|   394k|    }
 1324|   100k|    if (token.IsMacro())
  ------------------
  |  Branch (1324:9): [True: 6.27k, False: 93.9k]
  ------------------
 1325|  6.27k|    {
 1326|  6.27k|        ConsumeCurrent();
 1327|       |
 1328|  6.27k|        phi::scope_ptr<ASTExpression> macro_expression = ParseMacroExpression(token.GetTokenKind());
 1329|  6.27k|        if (!macro_expression)
  ------------------
  |  Branch (1329:13): [True: 0, False: 6.27k]
  ------------------
 1330|      0|        {
 1331|       |            // TODO: Proper error
 1332|      0|            return {};
 1333|      0|        }
 1334|       |
 1335|  6.27k|        return macro_expression;
 1336|  6.27k|    }
 1337|       |
 1338|       |    // TODO: Error Unexpected token
 1339|  93.9k|    err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
 1340|  93.9k|                    enum_name(token.GetTokenKind())));
 1341|  93.9k|    return {};
 1342|   100k|}
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
 1346|   263k|{
 1347|   291k|    while (true)
  ------------------
  |  Branch (1347:12): [Folded - Ignored]
  ------------------
 1348|   291k|    {
 1349|   291k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1349:13): [True: 3.10k, False: 288k]
  ------------------
 1350|  3.10k|        {
 1351|  3.10k|            return phi::move(lhs);
 1352|  3.10k|        }
 1353|       |
 1354|   288k|        const Token& operator_token = CurrentToken();
 1355|   288k|        if (!IsBinaryOperator(operator_token.GetTokenKind()) &&
  ------------------
  |  Branch (1355:13): [True: 253k, False: 34.4k]
  |  Branch (1355:13): [True: 234k, False: 53.5k]
  ------------------
 1356|   288k|            operator_token.GetTokenKind() != TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1356:13): [True: 234k, False: 19.1k]
  ------------------
 1357|   234k|        {
 1358|       |            // If its not a binary operator and not a ternary just return the lhs expression
 1359|   234k|            return phi::move(lhs);
 1360|   234k|        }
 1361|  53.5k|        int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
 1362|  53.5k|        ConsumeCurrent();
 1363|       |
 1364|  53.5k|        if (token_precedence < precedence)
  ------------------
  |  Branch (1364:13): [True: 262, False: 53.2k]
  ------------------
 1365|    262|        {
 1366|    262|            return phi::move(lhs);
 1367|    262|        }
 1368|       |
 1369|  53.2k|        if (operator_token.GetTokenKind() == TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1369:13): [True: 19.1k, False: 34.1k]
  ------------------
 1370|  19.1k|        {
 1371|  19.1k|            phi::scope_ptr<ASTTernaryIfExpression> ternary_if_expression =
 1372|  19.1k|                    ParseTernaryIfExpression(phi::move(lhs));
 1373|  19.1k|            if (!ternary_if_expression)
  ------------------
  |  Branch (1373:17): [True: 10.8k, False: 8.23k]
  ------------------
 1374|  10.8k|            {
 1375|       |                // TODO: Proper error
 1376|  10.8k|                return {};
 1377|  10.8k|            }
 1378|       |
 1379|  8.23k|            return phi::move(ternary_if_expression);
 1380|  19.1k|        }
 1381|       |
 1382|       |        // This must be an binary expression
 1383|  34.1k|        phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
 1384|  34.1k|        if (!rhs_expression)
  ------------------
  |  Branch (1384:13): [True: 5.21k, False: 28.9k]
  ------------------
 1385|  5.21k|        {
 1386|       |            // TODO: Proper error
 1387|  5.21k|            return {};
 1388|  5.21k|        }
 1389|       |
 1390|       |        // Nothing left to parse so directly return from here
 1391|  28.9k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1391:13): [True: 492, False: 28.4k]
  ------------------
 1392|    492|        {
 1393|    492|            return phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1394|    492|                                                                 operator_token.GetTokenKind(),
 1395|    492|                                                                 rhs_expression.release_not_null());
 1396|    492|        }
 1397|       |
 1398|       |        // If BinOp binds less tightly with RHS than the operator after RHS, let
 1399|       |        // the pending operator take RHS as its LHS.
 1400|  28.4k|        const Token& next_token      = CurrentToken();
 1401|  28.4k|        int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1402|       |
 1403|  28.4k|        if (token_precedence < next_precedence)
  ------------------
  |  Branch (1403:13): [True: 1.03k, False: 27.4k]
  ------------------
 1404|  1.03k|        {
 1405|  1.03k|            rhs_expression =
 1406|  1.03k|                    ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1407|  1.03k|            if (!rhs_expression)
  ------------------
  |  Branch (1407:17): [True: 277, False: 762]
  ------------------
 1408|    277|            {
 1409|       |                // TODO: Proper error
 1410|    277|                return {};
 1411|    277|            }
 1412|  1.03k|        }
 1413|       |
 1414|       |        // Merge LHS/RHS.
 1415|  28.1k|        lhs = phi::make_not_null_scope<ASTBinaryExpression>(
 1416|  28.1k|                phi::move(lhs), operator_token.GetTokenKind(), rhs_expression.release_not_null());
 1417|  28.1k|    }
 1418|   263k|}
_ZN10OpenAutoIt6Parser23ParseFunctionExpressionEv:
 1421|   106k|{
 1422|       |    // Parse the function name
 1423|   106k|    const Token& function_identifier_token = CurrentToken();
 1424|   106k|    if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1424:9): [True: 939, False: 105k]
  |  Branch (1424:9): [True: 0, False: 106k]
  ------------------
 1425|   106k|        !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1425:9): [True: 0, False: 939]
  ------------------
 1426|      0|    {
 1427|      0|        return {};
 1428|      0|    }
 1429|   106k|    ConsumeCurrent();
 1430|       |
 1431|   106k|    const FunctionReference function_reference =
 1432|   106k|            function_identifier_token.IsBuiltInFunction() ?
  ------------------
  |  Branch (1432:13): [True: 939, False: 105k]
  ------------------
 1433|    939|                    FunctionReference{function_identifier_token} :
 1434|   106k|                    FunctionReference{function_identifier_token.GetText()};
 1435|       |
 1436|       |    // If we parse an opening parenthesis we have a function call expression otherwise just a function reference
 1437|   106k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (1437:9): [True: 78.3k, False: 27.6k]
  ------------------
 1438|  78.3k|    {
 1439|  78.3k|        return phi::make_scope<ASTFunctionReferenceExpression>(function_reference);
 1440|  78.3k|    }
 1441|       |
 1442|  27.6k|    phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1443|  27.6k|            phi::make_scope<ASTFunctionCallExpression>(function_reference);
 1444|  27.6k|    if (!function_call_expression)
  ------------------
  |  Branch (1444:9): [True: 0, False: 27.6k]
  ------------------
 1445|      0|    {
 1446|       |        // TODO: Proper error
 1447|      0|        return {};
 1448|      0|    }
 1449|       |
 1450|       |    // Now parse all the arguments (which are expressions) separated by commas or nothing
 1451|  27.6k|    function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1452|       |
 1453|       |    // Finally we MUST parse an RParen
 1454|  27.6k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1454:9): [True: 12.2k, False: 15.4k]
  ------------------
 1455|  12.2k|    {
 1456|  12.2k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1457|  12.2k|                        std::string_view{function_call_expression->FunctionName()}));
 1458|       |        // TODO: Give proper error
 1459|  12.2k|        return {};
 1460|  12.2k|    }
 1461|       |
 1462|       |    // Return result
 1463|  15.4k|    return function_call_expression;
 1464|  27.6k|}
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1467|  27.6k|{
 1468|  27.6k|    std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1469|       |
 1470|  48.5k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1470:12): [True: 48.2k, False: 322]
  |  Branch (1470:12): [True: 35.8k, False: 12.7k]
  |  Branch (1470:31): [True: 35.8k, False: 12.4k]
  ------------------
 1471|  35.8k|    {
 1472|       |        // Parse the expression
 1473|  35.8k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1474|  35.8k|        if (!expression)
  ------------------
  |  Branch (1474:13): [True: 14.9k, False: 20.9k]
  ------------------
 1475|  14.9k|        {
 1476|  14.9k|            arguments.clear();
 1477|  14.9k|            return arguments;
 1478|  14.9k|        }
 1479|       |
 1480|       |        // Add argument to parameters
 1481|  20.9k|        arguments.emplace_back(expression.release_not_null());
 1482|       |
 1483|       |        // Next Token MUST be a comma followed by another expression or RParen
 1484|  20.9k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1484:13): [True: 20.6k, False: 217]
  |  Branch (1484:13): [True: 216, False: 20.6k]
  |  Branch (1484:32): [True: 216, False: 20.4k]
  ------------------
 1485|    216|        {
 1486|    216|            ConsumeCurrent();
 1487|    216|        }
 1488|  20.9k|    }
 1489|       |
 1490|  12.7k|    return arguments;
 1491|  27.6k|}
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1494|  12.2k|{
 1495|  12.2k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1495:9): [True: 0, False: 12.2k]
  ------------------
 1496|      0|    {
 1497|       |        // TODO: Proper error
 1498|      0|        return {};
 1499|      0|    }
 1500|       |
 1501|  12.2k|    const Token& token = CurrentToken();
 1502|  12.2k|    if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1502:9): [True: 0, False: 12.2k]
  ------------------
 1503|      0|    {
 1504|       |        // TODO error
 1505|      0|        return {};
 1506|      0|    }
 1507|       |
 1508|  12.2k|    auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1509|  12.2k|    variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1510|       |
 1511|  12.2k|    ConsumeCurrent();
 1512|       |
 1513|  12.2k|    return phi::move(variable_expression);
 1514|  12.2k|}
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1520|   394k|{
 1521|   394k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1521:9): [True: 0, False: 394k]
  ------------------
 1522|      0|    {
 1523|      0|        return {};
 1524|      0|    }
 1525|       |
 1526|   394k|    if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1526:9): [True: 0, False: 394k]
  ------------------
 1527|      0|    {
 1528|      0|        return {};
 1529|      0|    }
 1530|       |
 1531|   394k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1532|   394k|    if (!expression)
  ------------------
  |  Branch (1532:9): [True: 377k, False: 17.1k]
  ------------------
 1533|   377k|    {
 1534|   377k|        return {};
 1535|   377k|    }
 1536|       |
 1537|  17.1k|    if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1537:9): [True: 4.92k, False: 12.1k]
  ------------------
 1538|  4.92k|    {
 1539|  4.92k|        return {};
 1540|  4.92k|    }
 1541|       |
 1542|  12.1k|    return phi::make_scope<ASTArraySubscriptExpression>(phi::move(expression.release_not_null()));
 1543|  17.1k|}
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1548|  67.6k|{
 1549|       |    // NOTE: Me MUST have consumed the LParen before this
 1550|       |
 1551|  67.6k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1552|  67.6k|    if (!expression)
  ------------------
  |  Branch (1552:9): [True: 56.6k, False: 11.0k]
  ------------------
 1553|  56.6k|    {
 1554|       |        // TODO: Proper error
 1555|  56.6k|        return {};
 1556|  56.6k|    }
 1557|       |
 1558|  11.0k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1558:9): [True: 10.0k, False: 1.06k]
  ------------------
 1559|  10.0k|    {
 1560|       |        // TODO: Proper error expected closing paren
 1561|  10.0k|        return {};
 1562|  10.0k|    }
 1563|       |
 1564|  1.06k|    return phi::move(expression);
 1565|  11.0k|}
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1568|    863|{
 1569|    863|    if (!HasMoreTokens())
  ------------------
  |  Branch (1569:9): [True: 0, False: 863]
  ------------------
 1570|      0|    {
 1571|      0|        return {};
 1572|      0|    }
 1573|       |
 1574|    863|    if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1574:9): [True: 0, False: 863]
  ------------------
 1575|      0|    {
 1576|      0|        return {};
 1577|      0|    }
 1578|       |
 1579|       |    // Parse optional expression
 1580|    863|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1581|       |
 1582|    863|    return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1583|    863|}
_ZN10OpenAutoIt6Parser20ParseUnaryExpressionENS_9TokenKindE:
 1586|  58.1k|{
 1587|  58.1k|    PHI_ASSERT(IsUnaryOperator(operator_kind));
 1588|       |
 1589|  58.1k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1589:9): [True: 106, False: 58.0k]
  ------------------
 1590|    106|    {
 1591|    106|        return {};
 1592|    106|    }
 1593|       |
 1594|       |    // Parse expression
 1595|  58.0k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1596|  58.0k|    if (!expression)
  ------------------
  |  Branch (1596:9): [True: 8.81k, False: 49.2k]
  ------------------
 1597|  8.81k|    {
 1598|       |        // TODO: Proper error
 1599|  8.81k|        return {};
 1600|  8.81k|    }
 1601|       |
 1602|  49.2k|    return phi::make_scope<ASTUnaryExpression>(operator_kind,
 1603|  49.2k|                                               phi::move(expression.release_not_null()));
 1604|  58.0k|}
_ZN10OpenAutoIt6Parser24ParseTernaryIfExpressionEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
 1608|  19.1k|{
 1609|  19.1k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1609:9): [True: 23, False: 19.0k]
  ------------------
 1610|     23|    {
 1611|     23|        return {};
 1612|     23|    }
 1613|       |
 1614|  19.0k|    phi::scope_ptr<ASTExpression> true_expression = ParseExpression();
 1615|  19.0k|    if (!true_expression)
  ------------------
  |  Branch (1615:9): [True: 3.72k, False: 15.3k]
  ------------------
 1616|  3.72k|    {
 1617|  3.72k|        return {};
 1618|  3.72k|    }
 1619|       |
 1620|       |    // Must parse the else part ":"
 1621|  15.3k|    if (!MustParse(TokenKind::OP_TernaryElse))
  ------------------
  |  Branch (1621:9): [True: 6.01k, False: 9.34k]
  ------------------
 1622|  6.01k|    {
 1623|  6.01k|        err("Missing ':' for ternary if\n");
 1624|  6.01k|        return {};
 1625|  6.01k|    }
 1626|       |
 1627|  9.34k|    phi::scope_ptr<ASTExpression> false_expression = ParseExpression();
 1628|  9.34k|    if (!false_expression)
  ------------------
  |  Branch (1628:9): [True: 1.11k, False: 8.23k]
  ------------------
 1629|  1.11k|    {
 1630|  1.11k|        return {};
 1631|  1.11k|    }
 1632|       |
 1633|  8.23k|    return phi::make_scope<ASTTernaryIfExpression>(phi::move(condition),
 1634|  8.23k|                                                   phi::move(true_expression.release_not_null()),
 1635|  8.23k|                                                   phi::move(false_expression.release_not_null()));
 1636|  9.34k|}
_ZN10OpenAutoIt6Parser20ParseMacroExpressionENS_9TokenKindE:
 1639|  6.27k|{
 1640|  6.27k|    const auto macro = static_cast<phi::size_t>(macro_kind);
 1641|  6.27k|    PHI_ASSERT(macro >= MacroFirst && macro <= MacroLast);
 1642|       |
 1643|  6.27k|    return phi::make_scope<ASTMacroExpression>(macro_kind);
 1644|  6.27k|}
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1647|    517|{
 1648|    517|    if (!HasMoreTokens())
  ------------------
  |  Branch (1648:9): [True: 0, False: 517]
  ------------------
 1649|      0|    {
 1650|       |        // TODO: Proper error
 1651|      0|        return {};
 1652|      0|    }
 1653|       |
 1654|       |    // BooleanLiteral is either KW_True or KW_False
 1655|    517|    const Token& token = CurrentToken();
 1656|    517|    if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1656:9): [True: 323, False: 194]
  ------------------
 1657|    323|    {
 1658|    323|        ConsumeCurrent();
 1659|    323|        return phi::make_scope<ASTBooleanLiteral>(true);
 1660|    323|    }
 1661|       |
 1662|    194|    if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1662:9): [True: 194, False: 0]
  ------------------
 1663|    194|    {
 1664|    194|        ConsumeCurrent();
 1665|    194|        return phi::make_scope<ASTBooleanLiteral>(false);
 1666|    194|    }
 1667|       |
 1668|       |    // TODO: Proper error
 1669|      0|    return {};
 1670|    194|}
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1673|    784|{
 1674|    784|    if (!HasMoreTokens())
  ------------------
  |  Branch (1674:9): [True: 0, False: 784]
  ------------------
 1675|      0|    {
 1676|       |        // TODO: Proper error
 1677|      0|        return {};
 1678|      0|    }
 1679|       |
 1680|    784|    const Token& token = CurrentToken();
 1681|    784|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1681:9): [True: 784, False: 0]
  ------------------
 1682|    784|    {
 1683|    784|        ConsumeCurrent();
 1684|    784|        return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1685|    784|    }
 1686|       |
 1687|       |    // TODO: Proper error
 1688|      0|    return {};
 1689|    784|}
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1692|  7.11k|{
 1693|  7.11k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1693:9): [True: 0, False: 7.11k]
  ------------------
 1694|      0|    {
 1695|       |        // TODO: Proper error
 1696|      0|        return {};
 1697|      0|    }
 1698|       |
 1699|  7.11k|    const Token& token = CurrentToken();
 1700|  7.11k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1700:9): [True: 7.11k, False: 0]
  ------------------
 1701|  7.11k|    {
 1702|  7.11k|        ConsumeCurrent();
 1703|       |
 1704|  7.11k|        char*    ptr   = nullptr;
 1705|  7.11k|        phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1706|       |
 1707|  7.11k|        return phi::make_scope<ASTFloatLiteral>(value);
 1708|  7.11k|    }
 1709|       |
 1710|       |    // TODO: Proper error
 1711|      0|    return {};
 1712|  7.11k|}
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   72|   140k|    {
   73|   140k|        int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   74|       |        //PHI_ASSERT(precedence != 0);
   75|       |
   76|   140k|        return precedence;
   77|   140k|    }

_ZN10OpenAutoIt10SourceFileC2ENS0_4TypeENSt3__14__fs10filesystem4pathEN3phi17basic_string_viewIcNS2_11char_traitsIcEEEE:
   12|  11.7k|{}

_ZN10OpenAutoIt13SourceManager18SetLocalSearchPathERKNSt3__14__fs10filesystem4pathE:
   14|  11.7k|{}
_ZN10OpenAutoIt18EmptySourceManager8LoadFileEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_11IncludeTypeE:
  156|    362|{
  157|    362|    return {};
  158|    362|}

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  5.87k|{
   31|       |#if defined(PHI_DEBUG)
   32|       |    PHI_ASSERT(!m_Finalized);
   33|       |#endif
   34|       |
   35|  5.87k|    m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |    m_Finalized = true;
   38|       |#endif
   39|  5.87k|}
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   68|  7.27M|{
   69|       |#if defined(PHI_DEBUG)
   70|       |    PHI_ASSERT(m_Finalized);
   71|       |#endif
   72|       |
   73|  7.27M|    return m_Index < m_Tokens.size();
   74|  7.27M|}
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   77|  4.79M|{
   78|       |#if defined(PHI_DEBUG)
   79|       |    PHI_ASSERT(m_Finalized);
   80|       |#endif
   81|       |
   82|  4.79M|    return m_Index >= m_Tokens.size();
   83|  4.79M|}
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   86|  3.40M|{
   87|  3.40M|    PHI_ASSERT(!reached_end());
   88|       |#if defined(PHI_DEBUG)
   89|       |    PHI_ASSERT(m_Finalized);
   90|       |#endif
   91|       |
   92|  3.40M|    return m_Tokens[m_Index.unsafe()];
   93|  3.40M|}
_ZNK10OpenAutoIt11TokenStream11look_behindEv:
   96|  34.7k|{
   97|  34.7k|    PHI_ASSERT(!m_Tokens.empty());
   98|       |#if defined(PHI_DEBUG)
   99|       |    PHI_ASSERT(m_Finalized);
  100|       |#endif
  101|       |
  102|  34.7k|    if (m_Index == 0u)
  ------------------
  |  Branch (102:9): [True: 0, False: 34.7k]
  ------------------
  103|      0|    {
  104|      0|        return m_Tokens[0u];
  105|      0|    }
  106|       |
  107|  34.7k|    return m_Tokens[m_Index.unsafe() - 1u];
  108|  34.7k|}
_ZN10OpenAutoIt11TokenStream7consumeEv:
  111|  1.38M|{
  112|  1.38M|    PHI_ASSERT(!reached_end());
  113|       |#if defined(PHI_DEBUG)
  114|       |    PHI_ASSERT(m_Finalized);
  115|       |#endif
  116|       |
  117|  1.38M|    m_Index += 1u;
  118|  1.38M|}

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  1.00M|{
  100|  1.00M|    if (output_enabled)
  ------------------
  |  Branch (100:9): [True: 0, False: 1.00M]
  ------------------
  101|      0|    {
  102|      0|        std::cerr << data;
  103|      0|    }
  104|  1.00M|}
_ZN10OpenAutoIt14disable_outputEv:
  107|  5.87k|{
  108|  5.87k|    output_enabled = false;
  109|  5.87k|}

