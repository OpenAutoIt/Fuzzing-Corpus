_ZN3fmt3v106detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  392|  34.9k|    typename std::make_unsigned<Int>::type {
  393|  34.9k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  351|  69.8k|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (351:35): [Folded - Ignored]
  |  |  |  Branch (351:35): [True: 34.9k, False: 0]
  |  |  ------------------
  ------------------
  394|  34.9k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  395|  34.9k|}
_ZN3fmt3v106detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  319|   290k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v1017basic_string_viewIcE4sizeEv:
  460|   189k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  319|  34.9k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE4sizeEv:
  857|  37.9k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail6bufferIcEC2EPcmm:
  828|  37.6k|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt3v106detail6bufferIcE3setEPcm:
  834|  37.8k|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  835|  37.8k|    ptr_ = buf_data;
  836|  37.8k|    capacity_ = buf_capacity;
  837|  37.8k|  }
_ZN3fmt3v106detail13ignore_unusedIJbEEEvDpRKT_:
  319|    157|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE8capacityEv:
  860|    274|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt3v106detail6bufferIcE4dataEv:
  863|  37.8k|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt3v1017basic_string_viewIcE5beginEv:
  462|  72.6k|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt3v1017basic_string_viewIcE3endEv:
  463|  72.6k|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKc:
  443|  33.8k|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt3v106detail10locale_refC2Ev:
 1558|  66.1k|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZNK3fmt3v1019basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2795|  2.73k|  FMT_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt3v1016make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJEEENS0_16format_arg_storeIT_JDpNSt3__19remove_cvINS7_16remove_referenceIT0_E4typeEE4typeEEEEDpRSA_:
 1859|  2.73k|    -> format_arg_store<Context, remove_cvref_t<T>...> {
 1860|  2.73k|  return {args...};
 1861|  2.73k|}
_ZN3fmt3v1016format_arg_storeINS0_20basic_format_contextINS0_8appenderEcEEJEEC2IJEEEDpRT_:
 1842|  2.73k|        data_{detail::make_arg<is_packed, Context>(args)...} {
 1843|  2.73k|    if (detail::const_check(num_named_args != 0))
  ------------------
  |  Branch (1843:9): [Folded - Ignored]
  ------------------
 1844|      0|      detail::init_named_args(data_.named_args(), 0, 0, args...);
 1845|  2.73k|  }
_ZN3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EEC2IJEEEDpRKT_:
 1187|  2.73k|  FMT_CONSTEXPR FMT_INLINE arg_data(const U&... init) : args_{init...} {}
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1280|  37.6k|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt3v109monostateC2Ev:
  294|  37.6k|  constexpr monostate() {}
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2IJEEERKNS0_16format_arg_storeIS4_JDpT_EEE:
 1943|  2.73k|                          store.data_.args()) {}
_ZNK3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE4argsEv:
 1188|  2.73k|  FMT_CONSTEXPR FMT_INLINE auto args() const -> const T* { return args_; }
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1927|  37.6k|      : desc_(desc), values_(values) {}
_ZNK3fmt3v1017basic_string_viewIcE4dataEv:
  457|  79.1k|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKcm:
  428|  79.1k|      : data_(s), size_(count) {}
_ZN3fmt3v106detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  392|   255k|    typename std::make_unsigned<Int>::type {
  393|   255k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  351|   511k|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (351:35): [Folded - Ignored]
  |  |  |  Branch (351:35): [True: 255k, False: 0]
  |  |  ------------------
  ------------------
  394|   255k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  395|   255k|}
_ZN3fmt3v106detail6bufferIcE11try_reserveEm:
  880|   104k|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  881|   104k|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (881:9): [True: 157, False: 104k]
  ------------------
  882|   104k|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 1965|  34.9k|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1966|  34.9k|    format_arg arg;
 1967|  34.9k|    if (!is_packed()) {
  ------------------
  |  Branch (1967:9): [True: 0, False: 34.9k]
  ------------------
 1968|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1968:11): [True: 0, False: 0]
  ------------------
 1969|      0|      return arg;
 1970|      0|    }
 1971|  34.9k|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1971:9): [True: 0, False: 34.9k]
  ------------------
 1972|  34.9k|    arg.type_ = type(id);
 1973|  34.9k|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1973:9): [True: 0, False: 34.9k]
  ------------------
 1974|  34.9k|    arg.value_ = values_[id];
 1975|  34.9k|    return arg;
 1976|  34.9k|  }
_ZN3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1666|  34.9k|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1912|  34.9k|  constexpr auto is_packed() const -> bool {
 1913|  34.9k|    return (desc_ & detail::is_unpacked_bit) == 0;
 1914|  34.9k|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1919|  34.9k|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1920|  34.9k|    int shift = index * detail::packed_arg_bits;
 1921|  34.9k|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1922|  34.9k|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1923|  34.9k|  }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1668|  34.9k|  constexpr explicit operator bool() const noexcept {
 1669|  34.9k|    return type_ != detail::type::none_type;
 1670|  34.9k|  }
_ZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  784|   107k|    -> Container& {
  785|   107k|  using base = std::back_insert_iterator<Container>;
  786|   107k|  struct accessor : base {
  787|   107k|    accessor(base b) : base(b) {}
  788|   107k|    using base::container;
  789|   107k|  };
  790|   107k|  return *accessor(it).container;
  791|   107k|}
_ZZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  787|   107k|    accessor(base b) : base(b) {}
_ZNK3fmt3v106detail6fill_tIcE4sizeEv:
 2043|  34.9k|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt3v106detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1510|   107k|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1511|   107k|  get_container(out).append(begin, end);
 1512|   107k|  return out;
 1513|   107k|}
_ZN3fmt3v1012format_specsIcEC2Ev:
 2093|  34.9k|        localized(false) {}
_ZN3fmt3v1026basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  687|  37.6k|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1764|  37.6k|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE3outEv:
 1780|   107k|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2524|  37.6k|    basic_string_view<Char> format_str, Handler&& handler) {
 2525|  37.6k|  auto begin = format_str.data();
 2526|  37.6k|  auto end = begin + format_str.size();
 2527|  37.6k|  if (end - begin < 32) {
  ------------------
  |  Branch (2527:7): [True: 18.1k, False: 19.5k]
  ------------------
 2528|       |    // Use a simple loop instead of memchr for small strings.
 2529|  18.1k|    const Char* p = begin;
 2530|   448k|    while (p != end) {
  ------------------
  |  Branch (2530:12): [True: 430k, False: 18.1k]
  ------------------
 2531|   430k|      auto c = *p++;
 2532|   430k|      if (c == '{') {
  ------------------
  |  Branch (2532:11): [True: 15.3k, False: 415k]
  ------------------
 2533|  15.3k|        handler.on_text(begin, p - 1);
 2534|  15.3k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2535|   415k|      } else if (c == '}') {
  ------------------
  |  Branch (2535:18): [True: 0, False: 415k]
  ------------------
 2536|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2536:13): [True: 0, False: 0]
  |  Branch (2536:25): [True: 0, False: 0]
  ------------------
 2537|      0|          return handler.on_error("unmatched '}' in format string");
 2538|      0|        handler.on_text(begin, p);
 2539|      0|        begin = ++p;
 2540|      0|      }
 2541|   430k|    }
 2542|  18.1k|    handler.on_text(begin, end);
 2543|  18.1k|    return;
 2544|  18.1k|  }
 2545|  19.5k|  struct writer {
 2546|  19.5k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2547|  19.5k|      if (from == to) return;
 2548|  19.5k|      for (;;) {
 2549|  19.5k|        const Char* p = nullptr;
 2550|  19.5k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2551|  19.5k|          return handler_.on_text(from, to);
 2552|  19.5k|        ++p;
 2553|  19.5k|        if (p == to || *p != '}')
 2554|  19.5k|          return handler_.on_error("unmatched '}' in format string");
 2555|  19.5k|        handler_.on_text(from, p);
 2556|  19.5k|        from = p + 1;
 2557|  19.5k|      }
 2558|  19.5k|    }
 2559|  19.5k|    Handler& handler_;
 2560|  19.5k|  } write = {handler};
 2561|  39.1k|  while (begin != end) {
  ------------------
  |  Branch (2561:10): [True: 39.1k, False: 8]
  ------------------
 2562|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2563|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2564|  39.1k|    const Char* p = begin;
 2565|  39.1k|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2565:9): [True: 39.1k, False: 0]
  |  Branch (2565:26): [True: 19.5k, False: 19.5k]
  ------------------
 2566|  19.5k|      return write(begin, end);
 2567|  19.5k|    write(begin, p);
 2568|  19.5k|    begin = parse_replacement_field(p, end, handler);
 2569|  19.5k|  }
 2570|  19.5k|}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1783|   107k|  void advance_to(iterator it) {
 1784|   107k|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1784:9): [Folded - Ignored]
  ------------------
 1785|   107k|  }
_ZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2487|  34.9k|                                           Handler&& handler) -> const Char* {
 2488|  34.9k|  struct id_adapter {
 2489|  34.9k|    Handler& handler;
 2490|  34.9k|    int arg_id;
 2491|       |
 2492|  34.9k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2493|  34.9k|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2494|  34.9k|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2495|  34.9k|      arg_id = handler.on_arg_id(id);
 2496|  34.9k|    }
 2497|  34.9k|  };
 2498|       |
 2499|  34.9k|  ++begin;
 2500|  34.9k|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2500:7): [True: 0, False: 34.9k]
  ------------------
 2501|  34.9k|  if (*begin == '}') {
  ------------------
  |  Branch (2501:7): [True: 0, False: 34.9k]
  ------------------
 2502|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2503|  34.9k|  } else if (*begin == '{') {
  ------------------
  |  Branch (2503:14): [True: 0, False: 34.9k]
  ------------------
 2504|      0|    handler.on_text(begin, begin + 1);
 2505|  34.9k|  } else {
 2506|  34.9k|    auto adapter = id_adapter{handler, 0};
 2507|  34.9k|    begin = parse_arg_id(begin, end, adapter);
 2508|  34.9k|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2508:14): [True: 34.9k, False: 0]
  ------------------
 2509|  34.9k|    if (c == '}') {
  ------------------
  |  Branch (2509:9): [True: 0, False: 34.9k]
  ------------------
 2510|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2511|  34.9k|    } else if (c == ':') {
  ------------------
  |  Branch (2511:16): [True: 34.9k, False: 0]
  ------------------
 2512|  34.9k|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2513|  34.9k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2513:11): [True: 0, False: 34.9k]
  |  Branch (2513:27): [True: 0, False: 34.9k]
  ------------------
 2514|      0|        return handler.on_error("unknown format specifier"), end;
 2515|  34.9k|    } else {
 2516|      0|      return handler.on_error("missing '}' in format string"), end;
 2517|      0|    }
 2518|  34.9k|  }
 2519|  34.9k|  return begin + 1;
 2520|  34.9k|}
_ZNK3fmt3v1020basic_format_contextINS0_8appenderEcE3argEi:
 1766|  34.9k|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE6localeEv:
 1787|  34.9k|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt3v1026basic_format_parse_contextIcE11next_arg_idEv:
  711|  34.9k|  FMT_CONSTEXPR auto next_arg_id() -> int {
  712|  34.9k|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (712:9): [True: 0, False: 34.9k]
  ------------------
  713|      0|      detail::throw_format_error(
  714|      0|          "cannot switch from manual to automatic argument indexing");
  715|      0|      return 0;
  716|      0|    }
  717|  34.9k|    int id = next_arg_id_++;
  718|  34.9k|    do_check_arg_id(id);
  719|  34.9k|    return id;
  720|  34.9k|  }
_ZN3fmt3v1026basic_format_parse_contextIcE15do_check_arg_idEi:
 1059|  34.9k|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
 1060|       |  // Argument id is only checked at compile-time during parsing because
 1061|       |  // formatting has its own validation.
 1062|  34.9k|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (1062:7): [Folded - Ignored]
  ------------------
 1063|  34.9k|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (1063:8): [Folded - Ignored]
  |  Branch (1063:28): [Folded - Ignored]
  ------------------
 1064|      0|    using context = detail::compile_parse_context<Char>;
 1065|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (1065:9): [True: 0, False: 0]
  ------------------
 1066|      0|      detail::throw_format_error("argument not found");
 1067|      0|  }
 1068|  34.9k|}
_ZN3fmt3v106detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2241|  34.9k|                                           Handler&& handler) -> const Char* {
 2242|  34.9k|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  351|  34.9k|      fmt::detail::ignore_unused((condition), (message))
  ------------------
 2243|  34.9k|  Char c = *begin;
 2244|  34.9k|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2244:7): [True: 34.9k, False: 0]
  |  Branch (2244:19): [True: 0, False: 34.9k]
  ------------------
 2245|  34.9k|  handler.on_auto();
 2246|  34.9k|  return begin;
 2247|  34.9k|}
_ZZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2492|  34.9k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZN3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE13format_customEPKcRNS0_26basic_format_parse_contextIcEERS4_:
 1681|  34.9k|                                Context& ctx) -> bool {
 1682|  34.9k|    if (type_ != detail::type::custom_type) return false;
  ------------------
  |  Branch (1682:9): [True: 34.9k, False: 0]
  ------------------
 1683|      0|    parse_ctx.advance_to(parse_begin);
 1684|      0|    value_.custom.format(value_.custom.value, parse_ctx, ctx);
 1685|      0|    return true;
 1686|  34.9k|  }
_ZN3fmt3v106detail7arg_refIcEC2Ev:
 2102|  69.8k|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt3v106detail7arg_refIcE5valueC2Ei:
 2117|  69.8k|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2311|  34.9k|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2312|  34.9k|  auto c = '\0';
 2313|  34.9k|  if (end - begin > 1) {
  ------------------
  |  Branch (2313:7): [True: 34.9k, False: 0]
  ------------------
 2314|  34.9k|    auto next = to_ascii(begin[1]);
 2315|  34.9k|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2315:9): [True: 34.9k, False: 0]
  ------------------
 2316|  34.9k|  } else {
 2317|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2317:9): [True: 0, False: 0]
  ------------------
 2318|      0|    c = to_ascii(*begin);
 2319|      0|  }
 2320|       |
 2321|  34.9k|  struct {
 2322|  34.9k|    state current_state = state::start;
 2323|  34.9k|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2324|  34.9k|      if (current_state >= s || !valid)
 2325|  34.9k|        throw_format_error("invalid format specifier");
 2326|  34.9k|      current_state = s;
 2327|  34.9k|    }
 2328|  34.9k|  } enter_state;
 2329|       |
 2330|  34.9k|  using pres = presentation_type;
 2331|  34.9k|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2332|  34.9k|  struct {
 2333|  34.9k|    const Char*& begin;
 2334|  34.9k|    dynamic_format_specs<Char>& specs;
 2335|  34.9k|    type arg_type;
 2336|       |
 2337|  34.9k|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2338|  34.9k|      if (!in(arg_type, set)) {
 2339|  34.9k|        if (arg_type == type::none_type) return begin;
 2340|  34.9k|        throw_format_error("invalid format specifier");
 2341|  34.9k|      }
 2342|  34.9k|      specs.type = pres_type;
 2343|  34.9k|      return begin + 1;
 2344|  34.9k|    }
 2345|  34.9k|  } parse_presentation_type{begin, specs, arg_type};
 2346|       |
 2347|  34.9k|  for (;;) {
 2348|  34.9k|    switch (c) {
 2349|      0|    case '<':
  ------------------
  |  Branch (2349:5): [True: 0, False: 34.9k]
  ------------------
 2350|      0|    case '>':
  ------------------
  |  Branch (2350:5): [True: 0, False: 34.9k]
  ------------------
 2351|      0|    case '^':
  ------------------
  |  Branch (2351:5): [True: 0, False: 34.9k]
  ------------------
 2352|      0|      enter_state(state::align);
 2353|      0|      specs.align = parse_align(c);
 2354|      0|      ++begin;
 2355|      0|      break;
 2356|      0|    case '+':
  ------------------
  |  Branch (2356:5): [True: 0, False: 34.9k]
  ------------------
 2357|      0|    case '-':
  ------------------
  |  Branch (2357:5): [True: 0, False: 34.9k]
  ------------------
 2358|      0|    case ' ':
  ------------------
  |  Branch (2358:5): [True: 0, False: 34.9k]
  ------------------
 2359|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2359:11): [True: 0, False: 0]
  ------------------
 2360|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2361|      0|      switch (c) {
  ------------------
  |  Branch (2361:15): [True: 0, False: 0]
  ------------------
 2362|      0|      case '+':
  ------------------
  |  Branch (2362:7): [True: 0, False: 0]
  ------------------
 2363|      0|        specs.sign = sign::plus;
 2364|      0|        break;
 2365|      0|      case '-':
  ------------------
  |  Branch (2365:7): [True: 0, False: 0]
  ------------------
 2366|      0|        specs.sign = sign::minus;
 2367|      0|        break;
 2368|      0|      case ' ':
  ------------------
  |  Branch (2368:7): [True: 0, False: 0]
  ------------------
 2369|      0|        specs.sign = sign::space;
 2370|      0|        break;
 2371|      0|      }
 2372|      0|      ++begin;
 2373|      0|      break;
 2374|      0|    case '#':
  ------------------
  |  Branch (2374:5): [True: 0, False: 34.9k]
  ------------------
 2375|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2375:11): [True: 0, False: 0]
  ------------------
 2376|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2377|      0|      specs.alt = true;
 2378|      0|      ++begin;
 2379|      0|      break;
 2380|      0|    case '0':
  ------------------
  |  Branch (2380:5): [True: 0, False: 34.9k]
  ------------------
 2381|      0|      enter_state(state::zero);
 2382|      0|      if (!is_arithmetic_type(arg_type)) {
  ------------------
  |  Branch (2382:11): [True: 0, False: 0]
  ------------------
 2383|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2383:13): [True: 0, False: 0]
  ------------------
 2384|      0|        throw_format_error("format specifier requires numeric argument");
 2385|      0|      }
 2386|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2386:11): [True: 0, False: 0]
  ------------------
 2387|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2388|      0|        specs.align = align::numeric;
 2389|      0|        specs.fill[0] = Char('0');
 2390|      0|      }
 2391|      0|      ++begin;
 2392|      0|      break;
 2393|      0|    case '1':
  ------------------
  |  Branch (2393:5): [True: 0, False: 34.9k]
  ------------------
 2394|      0|    case '2':
  ------------------
  |  Branch (2394:5): [True: 0, False: 34.9k]
  ------------------
 2395|      0|    case '3':
  ------------------
  |  Branch (2395:5): [True: 0, False: 34.9k]
  ------------------
 2396|      0|    case '4':
  ------------------
  |  Branch (2396:5): [True: 0, False: 34.9k]
  ------------------
 2397|      0|    case '5':
  ------------------
  |  Branch (2397:5): [True: 0, False: 34.9k]
  ------------------
 2398|      0|    case '6':
  ------------------
  |  Branch (2398:5): [True: 0, False: 34.9k]
  ------------------
 2399|      0|    case '7':
  ------------------
  |  Branch (2399:5): [True: 0, False: 34.9k]
  ------------------
 2400|      0|    case '8':
  ------------------
  |  Branch (2400:5): [True: 0, False: 34.9k]
  ------------------
 2401|      0|    case '9':
  ------------------
  |  Branch (2401:5): [True: 0, False: 34.9k]
  ------------------
 2402|      0|    case '{':
  ------------------
  |  Branch (2402:5): [True: 0, False: 34.9k]
  ------------------
 2403|      0|      enter_state(state::width);
 2404|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2405|      0|      break;
 2406|      0|    case '.':
  ------------------
  |  Branch (2406:5): [True: 0, False: 34.9k]
  ------------------
 2407|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2407:11): [True: 0, False: 0]
  ------------------
 2408|      0|      enter_state(state::precision,
 2409|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2410|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2411|      0|                              ctx);
 2412|      0|      break;
 2413|      0|    case 'L':
  ------------------
  |  Branch (2413:5): [True: 0, False: 34.9k]
  ------------------
 2414|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2414:11): [True: 0, False: 0]
  ------------------
 2415|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2416|      0|      specs.localized = true;
 2417|      0|      ++begin;
 2418|      0|      break;
 2419|      0|    case 'd':
  ------------------
  |  Branch (2419:5): [True: 0, False: 34.9k]
  ------------------
 2420|      0|      return parse_presentation_type(pres::dec, integral_set);
 2421|      0|    case 'o':
  ------------------
  |  Branch (2421:5): [True: 0, False: 34.9k]
  ------------------
 2422|      0|      return parse_presentation_type(pres::oct, integral_set);
 2423|      0|    case 'x':
  ------------------
  |  Branch (2423:5): [True: 0, False: 34.9k]
  ------------------
 2424|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2425|      0|    case 'X':
  ------------------
  |  Branch (2425:5): [True: 0, False: 34.9k]
  ------------------
 2426|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2427|      0|    case 'b':
  ------------------
  |  Branch (2427:5): [True: 0, False: 34.9k]
  ------------------
 2428|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2429|      0|    case 'B':
  ------------------
  |  Branch (2429:5): [True: 0, False: 34.9k]
  ------------------
 2430|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2431|      0|    case 'a':
  ------------------
  |  Branch (2431:5): [True: 0, False: 34.9k]
  ------------------
 2432|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2433|      0|    case 'A':
  ------------------
  |  Branch (2433:5): [True: 0, False: 34.9k]
  ------------------
 2434|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2435|      0|    case 'e':
  ------------------
  |  Branch (2435:5): [True: 0, False: 34.9k]
  ------------------
 2436|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2437|      0|    case 'E':
  ------------------
  |  Branch (2437:5): [True: 0, False: 34.9k]
  ------------------
 2438|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2439|      0|    case 'f':
  ------------------
  |  Branch (2439:5): [True: 0, False: 34.9k]
  ------------------
 2440|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2441|      0|    case 'F':
  ------------------
  |  Branch (2441:5): [True: 0, False: 34.9k]
  ------------------
 2442|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2443|      0|    case 'g':
  ------------------
  |  Branch (2443:5): [True: 0, False: 34.9k]
  ------------------
 2444|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2445|      0|    case 'G':
  ------------------
  |  Branch (2445:5): [True: 0, False: 34.9k]
  ------------------
 2446|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2447|      0|    case 'c':
  ------------------
  |  Branch (2447:5): [True: 0, False: 34.9k]
  ------------------
 2448|      0|      if (arg_type == type::bool_type)
  ------------------
  |  Branch (2448:11): [True: 0, False: 0]
  ------------------
 2449|      0|        throw_format_error("invalid format specifier");
 2450|      0|      return parse_presentation_type(pres::chr, integral_set);
 2451|  34.9k|    case 's':
  ------------------
  |  Branch (2451:5): [True: 34.9k, False: 0]
  ------------------
 2452|  34.9k|      return parse_presentation_type(pres::string,
 2453|  34.9k|                                     bool_set | string_set | cstring_set);
 2454|      0|    case 'p':
  ------------------
  |  Branch (2454:5): [True: 0, False: 34.9k]
  ------------------
 2455|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2456|      0|    case '?':
  ------------------
  |  Branch (2456:5): [True: 0, False: 34.9k]
  ------------------
 2457|      0|      return parse_presentation_type(pres::debug,
 2458|      0|                                     char_set | string_set | cstring_set);
 2459|      0|    case '}':
  ------------------
  |  Branch (2459:5): [True: 0, False: 34.9k]
  ------------------
 2460|      0|      return begin;
 2461|      0|    default: {
  ------------------
  |  Branch (2461:5): [True: 0, False: 34.9k]
  ------------------
 2462|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2462:11): [True: 0, False: 0]
  ------------------
 2463|       |      // Parse fill and alignment.
 2464|      0|      auto fill_end = begin + code_point_length(begin);
 2465|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2465:11): [True: 0, False: 0]
  ------------------
 2466|      0|        throw_format_error("invalid format specifier");
 2467|      0|        return begin;
 2468|      0|      }
 2469|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2469:11): [True: 0, False: 0]
  ------------------
 2470|      0|        throw_format_error("invalid fill character '{'");
 2471|      0|        return begin;
 2472|      0|      }
 2473|      0|      auto align = parse_align(to_ascii(*fill_end));
 2474|      0|      enter_state(state::align, align != align::none);
 2475|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2476|      0|      specs.align = align;
 2477|      0|      begin = fill_end + 1;
 2478|      0|    }
 2479|  34.9k|    }
 2480|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2480:9): [True: 0, False: 0]
  ------------------
 2481|      0|    c = to_ascii(*begin);
 2482|      0|  }
 2483|  34.9k|}
_ZN3fmt3v106detail8to_asciiIcLi0EEEcT_:
 2136|  69.8k|constexpr auto to_ascii(Char c) -> char {
 2137|  69.8k|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2137:10): [True: 69.8k, False: 0]
  ------------------
 2138|  69.8k|}
_ZN3fmt3v106detail11parse_alignEc:
 2194|  34.9k|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2195|  34.9k|  switch (c) {
  ------------------
  |  Branch (2195:11): [True: 34.9k, False: 0]
  ------------------
 2196|      0|  case '<':
  ------------------
  |  Branch (2196:3): [True: 0, False: 34.9k]
  ------------------
 2197|      0|    return align::left;
 2198|      0|  case '>':
  ------------------
  |  Branch (2198:3): [True: 0, False: 34.9k]
  ------------------
 2199|      0|    return align::right;
 2200|      0|  case '^':
  ------------------
  |  Branch (2200:3): [True: 0, False: 34.9k]
  ------------------
 2201|      0|    return align::center;
 2202|  34.9k|  }
 2203|  34.9k|  return align::none;
 2204|  34.9k|}
_ZN3fmt3v106detail2inENS1_4typeEi:
  628|  34.9k|constexpr auto in(type t, int set) -> bool {
  629|  34.9k|  return ((set >> static_cast<int>(t)) & 1) != 0;
  630|  34.9k|}
_ZZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2337|  34.9k|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2338|  34.9k|      if (!in(arg_type, set)) {
  ------------------
  |  Branch (2338:11): [True: 0, False: 34.9k]
  ------------------
 2339|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2339:13): [True: 0, False: 0]
  ------------------
 2340|      0|        throw_format_error("invalid format specifier");
 2341|      0|      }
 2342|  34.9k|      specs.type = pres_type;
 2343|  34.9k|      return begin + 1;
 2344|  34.9k|    }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1672|  34.9k|  auto type() const -> detail::type { return type_; }
_ZN3fmt3v1016visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1699|  34.9k|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1700|  34.9k|  switch (arg.type_) {
  ------------------
  |  Branch (1700:11): [True: 0, False: 34.9k]
  ------------------
 1701|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1701:3): [True: 0, False: 34.9k]
  ------------------
 1702|      0|    break;
 1703|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1703:3): [True: 0, False: 34.9k]
  ------------------
 1704|      0|    return vis(arg.value_.int_value);
 1705|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1705:3): [True: 0, False: 34.9k]
  ------------------
 1706|      0|    return vis(arg.value_.uint_value);
 1707|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1707:3): [True: 0, False: 34.9k]
  ------------------
 1708|      0|    return vis(arg.value_.long_long_value);
 1709|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1709:3): [True: 0, False: 34.9k]
  ------------------
 1710|      0|    return vis(arg.value_.ulong_long_value);
 1711|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1711:3): [True: 0, False: 34.9k]
  ------------------
 1712|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1713|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1713:3): [True: 0, False: 34.9k]
  ------------------
 1714|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1715|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1715:3): [True: 0, False: 34.9k]
  ------------------
 1716|      0|    return vis(arg.value_.bool_value);
 1717|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1717:3): [True: 0, False: 34.9k]
  ------------------
 1718|      0|    return vis(arg.value_.char_value);
 1719|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1719:3): [True: 0, False: 34.9k]
  ------------------
 1720|      0|    return vis(arg.value_.float_value);
 1721|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1721:3): [True: 0, False: 34.9k]
  ------------------
 1722|      0|    return vis(arg.value_.double_value);
 1723|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1723:3): [True: 0, False: 34.9k]
  ------------------
 1724|      0|    return vis(arg.value_.long_double_value);
 1725|  28.4k|  case detail::type::cstring_type:
  ------------------
  |  Branch (1725:3): [True: 28.4k, False: 6.48k]
  ------------------
 1726|  28.4k|    return vis(arg.value_.string.data);
 1727|  6.48k|  case detail::type::string_type:
  ------------------
  |  Branch (1727:3): [True: 6.48k, False: 28.4k]
  ------------------
 1728|  6.48k|    using sv = basic_string_view<typename Context::char_type>;
 1729|  6.48k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1730|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1730:3): [True: 0, False: 34.9k]
  ------------------
 1731|      0|    return vis(arg.value_.pointer);
 1732|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1732:3): [True: 0, False: 34.9k]
  ------------------
 1733|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1734|  34.9k|  }
 1735|      0|  return vis(monostate());
 1736|  34.9k|}
_ZN3fmt3v106detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2163|  78.2k|                              const char*& out) -> bool {
 2164|  78.2k|  out = static_cast<const char*>(
 2165|  78.2k|      std::memchr(first, value, to_unsigned(last - first)));
 2166|  78.2k|  return out != nullptr;
 2167|  78.2k|}
_ZZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2546|  39.1k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2547|  39.1k|      if (from == to) return;
  ------------------
  |  Branch (2547:11): [True: 0, False: 39.1k]
  ------------------
 2548|  39.1k|      for (;;) {
 2549|  39.1k|        const Char* p = nullptr;
 2550|  39.1k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2550:13): [True: 39.1k, False: 0]
  ------------------
 2551|  39.1k|          return handler_.on_text(from, to);
 2552|      0|        ++p;
 2553|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2553:13): [True: 0, False: 0]
  |  Branch (2553:24): [True: 0, False: 0]
  ------------------
 2554|      0|          return handler_.on_error("unmatched '}' in format string");
 2555|      0|        handler_.on_text(from, p);
 2556|      0|        from = p + 1;
 2557|      0|      }
 2558|  39.1k|    }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1296|  6.48k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1297|  6.48k|    string.data = val.data();
 1298|  6.48k|    string.size = val.size();
 1299|  6.48k|  }
_ZN3fmt3v106detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1411|  28.4k|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1412|  28.4k|    return val;
 1413|  28.4k|  }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1292|  28.4k|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1293|  28.4k|    string.data = val;
 1294|  28.4k|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1294:9): [Folded - Ignored]
  ------------------
 1295|  28.4k|  }
_ZNK3fmt3v106detail6bufferIcE4dataEv:
  864|  37.6k|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt3v107vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1426|  37.6k|FMT_FUNC auto vformat(string_view fmt, format_args args) -> std::string {
 1427|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1428|       |  // can be better optimized in fmt::format anyway.
 1429|  37.6k|  auto buffer = memory_buffer();
 1430|  37.6k|  detail::vformat_to(buffer, fmt, args);
 1431|  37.6k|  return to_string(buffer);
 1432|  37.6k|}

_ZN3fmt3v106detail6bufferIcE6appendIcEEvPKT_S7_:
  836|   107k|void buffer<T>::append(const U* begin, const U* end) {
  837|   212k|  while (begin != end) {
  ------------------
  |  Branch (837:10): [True: 104k, False: 107k]
  ------------------
  838|   104k|    auto count = to_unsigned(end - begin);
  839|   104k|    try_reserve(size_ + count);
  840|   104k|    auto free_cap = capacity_ - size_;
  841|   104k|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (841:9): [True: 0, False: 104k]
  ------------------
  842|   104k|    std::uninitialized_copy_n(begin, count, ptr_ + size_);
  843|   104k|    size_ += count;
  844|   104k|    begin += count;
  845|   104k|  }
  846|   107k|}
_ZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4354|  37.6k|                typename vformat_args<Char>::type args, locale_ref loc) {
 4355|  37.6k|  auto out = buffer_appender<Char>(buf);
 4356|  37.6k|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4356:7): [True: 0, False: 37.6k]
  |  Branch (4356:26): [True: 0, False: 0]
  ------------------
 4357|      0|    auto arg = args.get(0);
 4358|      0|    if (!arg) throw_format_error("argument not found");
  ------------------
  |  Branch (4358:9): [True: 0, False: 0]
  ------------------
 4359|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4360|      0|    return;
 4361|      0|  }
 4362|       |
 4363|  37.6k|  struct format_handler : error_handler {
 4364|  37.6k|    basic_format_parse_context<Char> parse_context;
 4365|  37.6k|    buffer_context<Char> context;
 4366|       |
 4367|  37.6k|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4368|  37.6k|                   basic_format_args<buffer_context<Char>> p_args,
 4369|  37.6k|                   locale_ref p_loc)
 4370|  37.6k|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4371|       |
 4372|  37.6k|    void on_text(const Char* begin, const Char* end) {
 4373|  37.6k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4374|  37.6k|      context.advance_to(write<Char>(context.out(), text));
 4375|  37.6k|    }
 4376|       |
 4377|  37.6k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4378|  37.6k|      return parse_context.next_arg_id();
 4379|  37.6k|    }
 4380|  37.6k|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4381|  37.6k|      return parse_context.check_arg_id(id), id;
 4382|  37.6k|    }
 4383|  37.6k|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4384|  37.6k|      int arg_id = context.arg_id(id);
 4385|  37.6k|      if (arg_id < 0) throw_format_error("argument not found");
 4386|  37.6k|      return arg_id;
 4387|  37.6k|    }
 4388|       |
 4389|  37.6k|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4390|  37.6k|      auto arg = get_arg(context, id);
 4391|  37.6k|      context.advance_to(visit_format_arg(
 4392|  37.6k|          default_arg_formatter<Char>{context.out(), context.args(),
 4393|  37.6k|                                      context.locale()},
 4394|  37.6k|          arg));
 4395|  37.6k|    }
 4396|       |
 4397|  37.6k|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4398|  37.6k|        -> const Char* {
 4399|  37.6k|      auto arg = get_arg(context, id);
 4400|       |      // Not using a visitor for custom types gives better codegen.
 4401|  37.6k|      if (arg.format_custom(begin, parse_context, context))
 4402|  37.6k|        return parse_context.begin();
 4403|  37.6k|      auto specs = detail::dynamic_format_specs<Char>();
 4404|  37.6k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4405|  37.6k|      detail::handle_dynamic_spec<detail::width_checker>(
 4406|  37.6k|          specs.width, specs.width_ref, context);
 4407|  37.6k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4408|  37.6k|          specs.precision, specs.precision_ref, context);
 4409|  37.6k|      if (begin == end || *begin != '}')
 4410|  37.6k|        throw_format_error("missing '}' in format string");
 4411|  37.6k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4412|  37.6k|      context.advance_to(visit_format_arg(f, arg));
 4413|  37.6k|      return begin;
 4414|  37.6k|    }
 4415|  37.6k|  };
 4416|  37.6k|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4417|  37.6k|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  926|  37.6k|      : alloc_(alloc) {
  927|  37.6k|    this->set(store_, SIZE);
  928|  37.6k|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (928:9): [Folded - Ignored]
  ------------------
  929|  37.6k|  }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  897|    157|  FMT_CONSTEXPR20 void grow(size_t size) override {
  898|    157|    detail::abort_fuzzing_if(size > 5000);
  899|    157|    const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  900|    157|    size_t old_capacity = this->capacity();
  901|    157|    size_t new_capacity = old_capacity + old_capacity / 2;
  902|    157|    if (size > new_capacity)
  ------------------
  |  Branch (902:9): [True: 28, False: 129]
  ------------------
  903|     28|      new_capacity = size;
  904|    129|    else if (new_capacity > max_size)
  ------------------
  |  Branch (904:14): [True: 0, False: 129]
  ------------------
  905|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (905:22): [True: 0, False: 0]
  ------------------
  906|    157|    T* old_data = this->data();
  907|    157|    T* new_data =
  908|    157|        std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  909|       |    // Suppress a bogus -Wstringop-overflow in gcc 13.1 (#3481).
  910|    157|    detail::assume(this->size() <= new_capacity);
  911|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  912|    157|    std::uninitialized_copy_n(old_data, this->size(), new_data);
  913|    157|    this->set(new_data, new_capacity);
  914|       |    // deallocate must not throw according to the standard, but even if it does,
  915|       |    // the buffer already uses the new storage and will deallocate it in
  916|       |    // destructor.
  917|    157|    if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (917:9): [True: 40, False: 117]
  ------------------
  918|    157|  }
_ZN3fmt3v106detail16abort_fuzzing_ifEb:
  282|    157|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  283|    157|  ignore_unused(condition);
  284|       |#ifdef FMT_FUZZ
  285|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  286|       |#endif
  287|    157|}
_ZN3fmt3v106detail6assumeEb:
  500|  37.8k|FMT_INLINE void assume(bool condition) {
  501|  37.8k|  (void)condition;
  502|  37.8k|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  503|  37.8k|  __builtin_assume(condition);
  504|       |#elif FMT_GCC_VERSION
  505|       |  if (!condition) __builtin_unreachable();
  506|       |#endif
  507|  37.8k|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  930|  37.6k|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  891|  37.6k|  FMT_CONSTEXPR20 void deallocate() {
  892|  37.6k|    T* data = this->data();
  893|  37.6k|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (893:9): [True: 117, False: 37.5k]
  ------------------
  894|  37.6k|  }
_ZN3fmt3v106detail7reserveINS0_8appenderEEERT_S5_m:
  547|   107k|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  548|   107k|  return it;
  549|   107k|}
_ZN3fmt3v106detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  575|   107k|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  576|   107k|  return it;
  577|   107k|}
_ZN3fmt3v106detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  604|  72.6k|                                                  OutputIt out) -> OutputIt {
  605|  72.6k|  return copy_str<OutChar>(begin, end, out);
  606|  72.6k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3683|  72.6k|    -> OutputIt {
 3684|  72.6k|  auto it = reserve(out, value.size());
 3685|  72.6k|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3686|  72.6k|  return base_iterator(out, it);
 3687|  72.6k|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4372|  72.6k|    void on_text(const Char* begin, const Char* end) {
 4373|  72.6k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4374|  72.6k|      context.advance_to(write<Char>(context.out(), text));
 4375|  72.6k|    }
_ZN3fmt3v106detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEEDTcldtfp_3argfp0_EERT_T0_:
 3841|  34.9k|FMT_CONSTEXPR auto get_arg(Context& ctx, ID id) -> decltype(ctx.arg(id)) {
 3842|  34.9k|  auto arg = ctx.arg(id);
 3843|  34.9k|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3843:7): [True: 0, False: 34.9k]
  ------------------
 3844|  34.9k|  return arg;
 3845|  34.9k|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4377|  34.9k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4378|  34.9k|      return parse_context.next_arg_id();
 4379|  34.9k|    }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4398|  34.9k|        -> const Char* {
 4399|  34.9k|      auto arg = get_arg(context, id);
 4400|       |      // Not using a visitor for custom types gives better codegen.
 4401|  34.9k|      if (arg.format_custom(begin, parse_context, context))
  ------------------
  |  Branch (4401:11): [True: 0, False: 34.9k]
  ------------------
 4402|      0|        return parse_context.begin();
 4403|  34.9k|      auto specs = detail::dynamic_format_specs<Char>();
 4404|  34.9k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4405|  34.9k|      detail::handle_dynamic_spec<detail::width_checker>(
 4406|  34.9k|          specs.width, specs.width_ref, context);
 4407|  34.9k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4408|  34.9k|          specs.precision, specs.precision_ref, context);
 4409|  34.9k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4409:11): [True: 0, False: 34.9k]
  |  Branch (4409:27): [True: 0, False: 34.9k]
  ------------------
 4410|      0|        throw_format_error("missing '}' in format string");
 4411|  34.9k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4412|  34.9k|      context.advance_to(visit_format_arg(f, arg));
 4413|  34.9k|      return begin;
 4414|  34.9k|    }
_ZN3fmt3v106detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3850|  34.9k|                                       Context& ctx) {
 3851|  34.9k|  switch (ref.kind) {
  ------------------
  |  Branch (3851:11): [True: 0, False: 34.9k]
  ------------------
 3852|  34.9k|  case arg_id_kind::none:
  ------------------
  |  Branch (3852:3): [True: 34.9k, False: 0]
  ------------------
 3853|  34.9k|    break;
 3854|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3854:3): [True: 0, False: 34.9k]
  ------------------
 3855|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index));
 3856|      0|    break;
 3857|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3857:3): [True: 0, False: 34.9k]
  ------------------
 3858|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name));
 3859|      0|    break;
 3860|  34.9k|  }
 3861|  34.9k|}
_ZN3fmt3v106detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3850|  34.9k|                                       Context& ctx) {
 3851|  34.9k|  switch (ref.kind) {
  ------------------
  |  Branch (3851:11): [True: 0, False: 34.9k]
  ------------------
 3852|  34.9k|  case arg_id_kind::none:
  ------------------
  |  Branch (3852:3): [True: 34.9k, False: 0]
  ------------------
 3853|  34.9k|    break;
 3854|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3854:3): [True: 0, False: 34.9k]
  ------------------
 3855|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index));
 3856|      0|    break;
 3857|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3857:3): [True: 0, False: 34.9k]
  ------------------
 3858|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name));
 3859|      0|    break;
 3860|  34.9k|  }
 3861|  34.9k|}
_ZN3fmt3v106detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3794|  28.4k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3795|  28.4k|    return detail::write(out, value, specs, locale);
 3796|  28.4k|  }
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2343|  28.4k|    -> OutputIt {
 2344|  28.4k|  if (specs.type == presentation_type::pointer)
  ------------------
  |  Branch (2344:7): [True: 0, False: 28.4k]
  ------------------
 2345|      0|    return write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2346|  28.4k|  if (!s) throw_format_error("string pointer is null");
  ------------------
  |  Branch (2346:7): [True: 0, False: 28.4k]
  ------------------
 2347|  28.4k|  return write(out, basic_string_view<Char>(s), specs, {});
 2348|  28.4k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2337|  34.9k|    -> OutputIt {
 2338|  34.9k|  return write(out, s, specs);
 2339|  34.9k|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2314|  34.9k|                         const format_specs<Char>& specs) -> OutputIt {
 2315|  34.9k|  auto data = s.data();
 2316|  34.9k|  auto size = s.size();
 2317|  34.9k|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2317:7): [True: 0, False: 34.9k]
  |  Branch (2317:31): [True: 0, False: 0]
  ------------------
 2318|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2319|  34.9k|  bool is_debug = specs.type == presentation_type::debug;
 2320|  34.9k|  size_t width = 0;
 2321|  34.9k|  if (specs.width != 0) {
  ------------------
  |  Branch (2321:7): [True: 0, False: 34.9k]
  ------------------
 2322|      0|    if (is_debug)
  ------------------
  |  Branch (2322:9): [True: 0, False: 0]
  ------------------
 2323|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2324|      0|    else
 2325|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2326|      0|  }
 2327|  34.9k|  return write_padded(out, specs, size, width,
 2328|  34.9k|                      [=](reserve_iterator<OutputIt> it) {
 2329|  34.9k|                        if (is_debug) return write_escaped_string(it, s);
 2330|  34.9k|                        return copy_str<Char>(data, data + size, it);
 2331|  34.9k|                      });
 2332|  34.9k|}
_ZN3fmt3v106detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1730|  34.9k|                                size_t size, size_t width, F&& f) -> OutputIt {
 1731|  34.9k|  static_assert(align == align::left || align == align::right, "");
 1732|  34.9k|  unsigned spec_width = to_unsigned(specs.width);
 1733|  34.9k|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1733:20): [True: 0, False: 34.9k]
  ------------------
 1734|       |  // Shifts are encoded as string literals because static constexpr is not
 1735|       |  // supported in constexpr functions.
 1736|  34.9k|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1736:18): [Folded - Ignored]
  ------------------
 1737|  34.9k|  size_t left_padding = padding >> shifts[specs.align];
 1738|  34.9k|  size_t right_padding = padding - left_padding;
 1739|  34.9k|  auto it = reserve(out, size + padding * specs.fill.size());
 1740|  34.9k|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1740:7): [True: 0, False: 34.9k]
  ------------------
 1741|  34.9k|  it = f(it);
 1742|  34.9k|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1742:7): [True: 0, False: 34.9k]
  ------------------
 1743|  34.9k|  return base_iterator(out, it);
 1744|  34.9k|}
_ZZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2328|  34.9k|                      [=](reserve_iterator<OutputIt> it) {
 2329|  34.9k|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2329:29): [True: 0, False: 34.9k]
  ------------------
 2330|  34.9k|                        return copy_str<Char>(data, data + size, it);
 2331|  34.9k|                      });
_ZN3fmt3v106detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3794|  6.48k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3795|  6.48k|    return detail::write(out, value, specs, locale);
 3796|  6.48k|  }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4370|  37.6k|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt3v109to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4336|  37.6k|    -> std::basic_string<Char> {
 4337|  37.6k|  auto size = buf.size();
 4338|  37.6k|  detail::assume(size < std::basic_string<Char>().max_size());
 4339|  37.6k|  return std::basic_string<Char>(buf.data(), size);
 4340|  37.6k|}

LLVMFuzzerTestOneInput:
   14|  2.59k|{
   15|  2.59k|    disable_output();
   16|       |
   17|  2.59k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   18|       |
   19|  2.59k|    EmptySourceManager source_manager;
   20|  2.59k|    DiagnosticEngine   diagnostic_engine;
   21|  2.59k|    Lexer              lexer{&diagnostic_engine};
   22|  2.59k|    auto               document = phi::make_not_null_scope<ASTDocument>();
   23|       |
   24|  2.59k|    Parser parser{&source_manager, &diagnostic_engine, &lexer};
   25|  2.59k|    parser.ParseString(document, "Fuzz.au3", source);
   26|       |
   27|  2.59k|    return 0;
   28|  2.59k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|    388|    {
   18|    388|        m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|    388|    }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  5.23k|    {
   20|  5.23k|        m_NodeType = ASTNodeType::BinaryExpression;
   21|  5.23k|    }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|    549|    {
   18|    549|        m_NodeType = ASTNodeType::BooleanLiteral;
   19|    549|    }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|  3.30k|    {
   20|  3.30k|        m_Statements.emplace_back(phi::move(child));
   21|  3.30k|    }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|    508|    {
   25|    508|        m_Functions.emplace_back(phi::move(child));
   26|    508|    }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|    608|    {
   18|    608|        m_NodeType = ASTNodeType::ExitStatement;
   19|    608|    }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|  5.94k|    {
   13|  5.94k|        switch (m_NodeType)
   14|  5.94k|        {
   15|  1.16k|            case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:13): [True: 1.16k, False: 4.78k]
  ------------------
   16|  1.67k|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:13): [True: 511, False: 5.43k]
  ------------------
   17|  1.97k|            case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:13): [True: 302, False: 5.64k]
  ------------------
   18|  1.97k|                return true;
   19|       |
   20|  3.97k|            default:
  ------------------
  |  Branch (20:13): [True: 3.97k, False: 1.97k]
  ------------------
   21|  3.97k|                return false;
   22|  5.94k|        }
   23|  5.94k|    }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|  5.94k|    {
   17|  5.94k|        m_NodeType = ASTNodeType::ExpressionStatement;
   18|  5.94k|    }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|    373|    {
   17|    373|        m_NodeType = ASTNodeType::FloatLiteral;
   18|    373|    }

_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   28|  1.76k|    {
   29|  1.76k|        return m_FunctionReference.FunctionName();
   30|  1.76k|    }
_ZN10OpenAutoIt25ASTFunctionCallExpressionC2ENS_17FunctionReferenceE:
   18|  3.75k|    {
   19|  3.75k|        m_NodeType = ASTNodeType::FunctionCallExpression;
   20|  3.75k|    }

_ZN10OpenAutoIt30ASTFunctionReferenceExpressionC2ENS_17FunctionReferenceE:
   19|  1.99k|    {
   20|  1.99k|        m_NodeType = ASTNodeType::FunctionReferenceExpression;
   21|  1.99k|    }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  2.37k|    {
   25|  2.37k|        m_NodeType = ASTNodeType::IfStatement;
   26|  2.37k|    }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|  18.9k|    {
   17|  18.9k|        m_NodeType = ASTNodeType::IntegerLiteral;
   18|  18.9k|    }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|    388|    {
   19|    388|        m_NodeType = ASTNodeType::KeywordLiteral;
   20|    388|        PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|    388|    }

_ZN10OpenAutoIt18ASTMacroExpressionC2ENS_9TokenKindE:
   18|    494|    {
   19|    494|        m_NodeType = ASTNodeType::MacroExpression;
   20|    494|        PHI_ASSERT(static_cast<phi::size_t>(m_Macro) >= MacroFirst &&
   21|    494|                   static_cast<phi::size_t>(m_Macro) <= MacroLast);
   22|    494|    }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   75|  62.3k|    virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   73|  62.3k|    ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   78|  3.97k|    {
   79|  3.97k|        PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   80|  3.97k|        PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   81|       |
   82|  3.97k|        return enum_name(m_NodeType);
   83|  3.97k|    }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   51|  3.97k|{
   52|  3.97k|    switch (node_type)
   53|  3.97k|    {
   54|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   55|      0|    case ASTNodeType::name:                                                                        \
   56|      0|        return "AST" #name;
   57|       |
   58|      0|        OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   15|    233|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   55|    233|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 233, False: 3.73k]
  |  |  |  |  ------------------
  |  |  |  |   56|    233|        return "AST" #name;
  |  |  ------------------
  |  |   16|    476|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   55|    476|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 476, False: 3.49k]
  |  |  |  |  ------------------
  |  |  |  |   56|    476|        return "AST" #name;
  |  |  ------------------
  |  |   17|    476|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|    363|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 363, False: 3.60k]
  |  |  |  |  ------------------
  |  |  |  |   56|    363|        return "AST" #name;
  |  |  ------------------
  |  |   18|    363|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 3.97k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 3.97k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   20|    195|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   55|    195|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 195, False: 3.77k]
  |  |  |  |  ------------------
  |  |  |  |   56|    195|        return "AST" #name;
  |  |  ------------------
  |  |   21|    195|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 3.97k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   22|    995|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionReferenceExpression)                                \
  |  |  ------------------
  |  |  |  |   55|    995|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 995, False: 2.97k]
  |  |  |  |  ------------------
  |  |  |  |   56|    995|        return "AST" #name;
  |  |  ------------------
  |  |   23|    995|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 3.97k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   24|    518|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|    518|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 518, False: 3.45k]
  |  |  |  |  ------------------
  |  |  |  |   56|    518|        return "AST" #name;
  |  |  ------------------
  |  |   25|    518|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|    291|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 291, False: 3.67k]
  |  |  |  |  ------------------
  |  |  |  |   56|    291|        return "AST" #name;
  |  |  ------------------
  |  |   26|    306|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(MacroExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|    306|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 306, False: 3.66k]
  |  |  |  |  ------------------
  |  |  |  |   56|    306|        return "AST" #name;
  |  |  ------------------
  |  |   27|    392|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   55|    392|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 392, False: 3.57k]
  |  |  |  |  ------------------
  |  |  |  |   56|    392|        return "AST" #name;
  |  |  ------------------
  |  |   28|    392|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(TernaryIfExpression)                                        \
  |  |  ------------------
  |  |  |  |   55|    201|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 201, False: 3.76k]
  |  |  |  |  ------------------
  |  |  |  |   56|    201|        return "AST" #name;
  |  |  ------------------
  |  |   29|    201|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 3.97k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   30|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 3.97k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   31|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 3.97k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   32|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 3.97k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   59|       |
   60|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   61|       |
   62|      0|        default:
  ------------------
  |  Branch (62:9): [True: 0, False: 3.97k]
  ------------------
   63|      0|            PHI_ASSERT_NOT_REACHED();
   64|      0|            return "";
   65|  3.97k|    }
   66|  3.97k|}

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  1.85k|    {
   15|  1.85k|        m_NodeType = ASTNodeType::StringLiteral;
   16|  1.85k|    }

_ZN10OpenAutoIt22ASTTernaryIfExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEES5_S5_:
   19|    387|    {
   20|    387|        m_NodeType = ASTNodeType::TernaryIfExpression;
   21|    387|    }

_ZN10OpenAutoIt18ASTUnaryExpressionC2ENS_9TokenKindEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   15|  1.27k|    {
   16|  1.27k|        m_NodeType = ASTNodeType::UnaryExpression;
   17|  1.27k|    }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|  9.85k|    {
   20|  9.85k|        m_NodeType = ASTNodeType::VariableAssignment;
   21|  9.85k|    }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|  1.09k|    {
   15|  1.09k|        m_NodeType = ASTNodeType::VariableExpression;
   16|  1.09k|    }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  1.16k|    {
   18|  1.16k|        m_NodeType = ASTNodeType::WhileStatement;
   19|  1.16k|    }

_ZN10OpenAutoIt17DiagnosticBuilder7WarningIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   55|  1.48k|    {
   56|  1.48k|        m_Diagnostics.emplace_back(Diagnostic{
   57|  1.48k|                id, DiagnosticLevel::Warning, location,
   58|  1.48k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   59|       |
   60|  1.48k|        return *this;
   61|  1.48k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA9_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  2.13k|    {
   66|  2.13k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  2.13k|                id, DiagnosticLevel::Error, location,
   68|  2.13k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  2.13k|        return *this;
   71|  2.13k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA18_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|      8|    {
   66|      8|        m_Diagnostics.emplace_back(Diagnostic{
   67|      8|                id, DiagnosticLevel::Error, location,
   68|      8|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|      8|        return *this;
   71|      8|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA4_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    266|    {
   66|    266|        m_Diagnostics.emplace_back(Diagnostic{
   67|    266|                id, DiagnosticLevel::Error, location,
   68|    266|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    266|        return *this;
   71|    266|    }
_ZN10OpenAutoIt17DiagnosticBuilder4NoteIJEEERS0_NS_14SourceLocationENSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   31|    266|    {
   32|    266|        PHI_ASSERT(!m_Diagnostics.empty());
   33|       |
   34|    266|        m_Diagnostics.back().AddNote(
   35|    266|                Diagnostic{DiagnosticId::None, DiagnosticLevel::Note, location,
   36|    266|                           std::string{fmt::format(fmt::runtime(format_string),
   37|    266|                                                   phi::forward<ArgsT>(args)...)}});
   38|       |
   39|    266|        return *this;
   40|    266|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA25_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    283|    {
   66|    283|        m_Diagnostics.emplace_back(Diagnostic{
   67|    283|                id, DiagnosticLevel::Error, location,
   68|    283|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    283|        return *this;
   71|    283|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    979|    {
   66|    979|        m_Diagnostics.emplace_back(Diagnostic{
   67|    979|                id, DiagnosticLevel::Error, location,
   68|    979|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    979|        return *this;
   71|    979|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    266|    {
   66|    266|        m_Diagnostics.emplace_back(Diagnostic{
   67|    266|                id, DiagnosticLevel::Error, location,
   68|    266|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    266|        return *this;
   71|    266|    }

_ZN10OpenAutoIt19DiagnosticIdMessageENS_12DiagnosticIdE:
   87|  5.42k|{
   88|  5.42k|    PHI_ASSERT(id != DiagnosticId::None);
   89|       |
   90|  5.42k|    switch (id)
   91|  5.42k|    {
   92|      0|#define OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EnumName, FlagName, DiagnosticMessage)                 \
   93|      0|    case DiagnosticId::EnumName: {                                                                 \
   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
   95|      0|        return DiagnosticMessage;                                                                  \
   96|      0|    }
   97|       |
   98|      0|        OPENAUTOIT_ENUM_DIAGNOSTIC_IDS()
  ------------------
  |  |   12|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(None, "", "")                                              \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 5.42k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   13|      0|    /* Lexer warnings */                                                                           \
  |  |   14|  1.48k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(NullCharacter, "-Wnull-character",                         \
  |  |  ------------------
  |  |  |  |   93|  1.48k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 1.48k, False: 3.93k]
  |  |  |  |  ------------------
  |  |  |  |   94|  1.48k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  1.48k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  1.48k|    }
  |  |  ------------------
  |  |   15|  1.48k|                                        "null character ignored")                                  \
  |  |   16|  1.48k|    /* Lexer errors */                                                                             \
  |  |   17|  1.48k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(InvalidFloatLiteral, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 5.42k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   18|      0|                                        "invalid float literal declaration")                       \
  |  |   19|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FloatHexLiteral, "",                                       \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 5.42k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   20|      0|                                        "hexadecimal float literal are not allowed")               \
  |  |   21|      0|    /* Parser error */                                                                             \
  |  |   22|      8|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(UnexpectedEndOfFile, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      8|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 8, False: 5.41k]
  |  |  |  |  ------------------
  |  |  |  |   94|      8|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      8|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      8|    }
  |  |  ------------------
  |  |   23|      8|                                        "unexpected end of file while parsing {:s}")               \
  |  |   24|  2.68k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(Expected, "", "expected {:s}")                             \
  |  |  ------------------
  |  |  |  |   93|  2.68k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 2.68k, False: 2.73k]
  |  |  |  |  ------------------
  |  |  |  |   94|  2.68k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  2.68k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  2.68k|    }
  |  |  ------------------
  |  |   25|  2.68k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IntegerLiteralTooLarge, "",                                \
  |  |  ------------------
  |  |  |  |   93|    785|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 785, False: 4.63k]
  |  |  |  |  ------------------
  |  |  |  |   94|    785|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    785|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    785|    }
  |  |  ------------------
  |  |   26|    785|                                        "integer literal is too large.")                           \
  |  |   27|    785|    /* Parser fatal error */                                                                       \
  |  |   28|    785|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNotFound, "", "'{:s}' file not found")                 \
  |  |  ------------------
  |  |  |  |   93|    194|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 194, False: 5.22k]
  |  |  |  |  ------------------
  |  |  |  |   94|    194|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    194|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    194|    }
  |  |  ------------------
  |  |   29|    194|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EmptyFilename, "", "empty filename")                       \
  |  |  ------------------
  |  |  |  |   93|    194|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 194, False: 5.22k]
  |  |  |  |  ------------------
  |  |  |  |   94|    194|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    194|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    194|    }
  |  |  ------------------
  |  |   30|    194|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IncludeNestingTooDeeply, "", "#include nested too deeply") \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 5.42k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   31|     72|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNameTooLong, "",                                       \
  |  |  ------------------
  |  |  |  |   93|     72|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 72, False: 5.34k]
  |  |  |  |  ------------------
  |  |  |  |   94|     72|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|     72|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|     72|    }
  |  |  ------------------
  |  |   32|     72|                                        "cannot open file '{:s}': File name too long")
  ------------------
   99|       |
  100|      0|#undef OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL
  101|       |
  102|      0|        default:
  ------------------
  |  Branch (102:9): [True: 0, False: 5.42k]
  ------------------
  103|      0|            PHI_ASSERT_NOT_REACHED();
  104|  5.42k|    }
  105|  5.42k|}

_ZN10OpenAutoIt17FunctionReferenceC2ERKNS_5TokenE:
   23|    480|    {
   24|    480|        PHI_ASSERT(built_in_function.IsBuiltInFunction());
   25|    480|    }
_ZN10OpenAutoIt17FunctionReferenceC2EN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
   18|  5.26k|    {}
_ZNK10OpenAutoIt17FunctionReference12FunctionNameEv:
   33|  1.76k|    {
   34|  1.76k|        return m_IsBuiltIn ? enum_name(m_BuiltInFunction) : m_FunctionName;
  ------------------
  |  Branch (34:16): [True: 458, False: 1.30k]
  ------------------
   35|  1.76k|    }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  80.3k|    {
   46|  80.3k|        Token token{kind,
   47|  80.3k|                    m_Source.substring_view(
   48|  80.3k|                            static_cast<typename phi::string_view::size_type::value_type>(
   49|  80.3k|                                    m_Iterator - m_Source.cbegin()),
   50|  80.3k|                            1u),
   51|  80.3k|                    CurrentSourceLocation()};
   52|       |
   53|       |        // 1 character sized token
   54|  80.3k|        ++m_Column;
   55|       |
   56|  80.3k|        return token;
   57|  80.3k|    }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  94.2k|    {
   61|  94.2k|        Token token{kind, TokenText(token_begin), CurrentSourceLocation()};
   62|       |
   63|       |        // Consume the amount of characters that make up our new token
   64|  94.2k|        m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  94.2k|        return token;
   67|  94.2k|    }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|   154k|    {
   71|   154k|        return m_Source.substring_view(token_begin, m_Iterator);
   72|   154k|    }
_ZNK10OpenAutoIt5Lexer21CurrentSourceLocationEv:
   75|   176k|    {
   76|   176k|        return BuildSourceLocation(m_LineNumber, m_Column);
   77|   176k|    }
_ZNK10OpenAutoIt5Lexer19BuildSourceLocationEN3phi7integerImEES3_:
   81|   176k|    {
   82|   176k|        return {m_SourceFile, line_number, column};
   83|   176k|    }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   71|  98.1k|    {
   72|  98.1k|        switch (token_kind)
   73|  98.1k|        {
   74|  1.68k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (74:13): [True: 1.68k, False: 96.4k]
  ------------------
   75|  4.58k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (75:13): [True: 2.89k, False: 95.2k]
  ------------------
   76|  4.97k|            case TokenKind::KW_Not:
  ------------------
  |  Branch (76:13): [True: 388, False: 97.7k]
  ------------------
   77|  4.97k|                return true;
   78|       |
   79|  93.1k|            default:
  ------------------
  |  Branch (79:13): [True: 93.1k, False: 4.97k]
  ------------------
   80|  93.1k|                return false;
   81|  98.1k|        }
   82|  98.1k|    }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   86|  28.7k|    {
   87|  28.7k|        switch (token_kind)
   88|  28.7k|        {
   89|    194|            case TokenKind::KW_And:
  ------------------
  |  Branch (89:13): [True: 194, False: 28.5k]
  ------------------
   90|    388|            case TokenKind::KW_Or:
  ------------------
  |  Branch (90:13): [True: 194, False: 28.5k]
  ------------------
   91|  1.82k|            case TokenKind::OP_Equals:
  ------------------
  |  Branch (91:13): [True: 1.43k, False: 27.3k]
  ------------------
   92|  2.02k|            case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (92:13): [True: 197, False: 28.5k]
  ------------------
   93|  2.21k|            case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (93:13): [True: 194, False: 28.5k]
  ------------------
   94|  2.41k|            case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (94:13): [True: 194, False: 28.5k]
  ------------------
   95|  2.61k|            case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (95:13): [True: 204, False: 28.5k]
  ------------------
   96|  3.36k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (96:13): [True: 748, False: 28.0k]
  ------------------
   97|  4.25k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (97:13): [True: 896, False: 27.8k]
  ------------------
   98|  4.52k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (98:13): [True: 261, False: 28.5k]
  ------------------
   99|  5.12k|            case TokenKind::OP_Divide:
  ------------------
  |  Branch (99:13): [True: 600, False: 28.1k]
  ------------------
  100|  5.52k|            case TokenKind::OP_Raise:
  ------------------
  |  Branch (100:13): [True: 407, False: 28.3k]
  ------------------
  101|  5.73k|            case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (101:13): [True: 204, False: 28.5k]
  ------------------
  102|  5.92k|            case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (102:13): [True: 195, False: 28.5k]
  ------------------
  103|  6.34k|            case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (103:13): [True: 422, False: 28.3k]
  ------------------
  104|  6.54k|            case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (104:13): [True: 197, False: 28.5k]
  ------------------
  105|  6.90k|            case TokenKind::OP_LessThan:
  ------------------
  |  Branch (105:13): [True: 364, False: 28.4k]
  ------------------
  106|  7.10k|            case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (106:13): [True: 194, False: 28.5k]
  ------------------
  107|  7.30k|            case TokenKind::OP_Concatenate:
  ------------------
  |  Branch (107:13): [True: 206, False: 28.5k]
  ------------------
  108|  7.50k|            case TokenKind::OP_ConcatenateEquals:
  ------------------
  |  Branch (108:13): [True: 194, False: 28.5k]
  ------------------
  109|  7.50k|                return true;
  110|       |
  111|  21.2k|            default:
  ------------------
  |  Branch (111:13): [True: 21.2k, False: 7.50k]
  ------------------
  112|  21.2k|                return false;
  113|  28.7k|        }
  114|  28.7k|    }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  155|    508|    {
  156|    508|        m_Document->AppendFunction(phi::move(function));
  157|    508|    }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  149|  3.30k|    {
  150|  3.30k|        m_Document->AppendStatement(phi::move(statement));
  151|  3.30k|    }

_ZN10OpenAutoIt14SourceLocation7InvalidEv:
   23|  2.59k|    {
   24|  2.59k|        return {nullptr, 1u, 1u};
   25|  2.59k|    }

_ZN10OpenAutoIt13SourceManagerC2Ev:
   21|  2.59k|    SourceManager()          = default;

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_14SourceLocationE:
   27|   175k|    {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   39|  1.14M|    {
   40|  1.14M|        return m_Kind;
   41|  1.14M|    }
_ZNK10OpenAutoIt5Token7GetTextEv:
   44|   125k|    {
   45|   125k|        return m_Text;
   46|   125k|    }
_ZNK10OpenAutoIt5Token16GetBeginLocationEv:
   64|  3.65k|    {
   65|  3.65k|        return m_SourceLocation;
   66|  3.65k|    }
_ZNK10OpenAutoIt5Token14GetEndLocationEv:
   69|    549|    {
   70|    549|        return {.source_file = m_SourceLocation.source_file,
   71|    549|                .line_number = m_SourceLocation.line_number,
   72|    549|                .column      = m_SourceLocation.column + m_Text.length()};
   73|    549|    }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   88|  69.5k|    {
   89|  69.5k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   90|       |
   91|  69.5k|        if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (91:13): [True: 1.92k, False: 67.5k]
  ------------------
   92|  69.5k|            underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (92:13): [True: 1.92k, False: 0]
  ------------------
   93|  1.92k|        {
   94|  1.92k|            return true;
   95|  1.92k|        }
   96|       |
   97|  67.5k|        return false;
   98|  69.5k|    }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
  101|  61.6k|    {
  102|  61.6k|        switch (m_Kind)
  103|  61.6k|        {
  104|    388|            case TokenKind::KW_Default:
  ------------------
  |  Branch (104:13): [True: 388, False: 61.2k]
  ------------------
  105|    776|            case TokenKind::KW_Null:
  ------------------
  |  Branch (105:13): [True: 388, False: 61.2k]
  ------------------
  106|    776|                return true;
  107|       |
  108|  60.8k|            default:
  ------------------
  |  Branch (108:13): [True: 60.8k, False: 776]
  ------------------
  109|  60.8k|                return false;
  110|  61.6k|        }
  111|  61.6k|    }
_ZNK10OpenAutoIt5Token7IsMacroEv:
  158|  9.79k|    {
  159|  9.79k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
  160|       |
  161|  9.79k|        if (underlying_value >= MacroFirst && underlying_value <= MacroLast)
  ------------------
  |  Branch (161:13): [True: 6.61k, False: 3.17k]
  |  Branch (161:47): [True: 494, False: 6.12k]
  ------------------
  162|    494|        {
  163|    494|            return true;
  164|    494|        }
  165|       |
  166|  9.29k|        return false;
  167|  9.79k|    }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  682|  22.2k|{
  683|  22.2k|    switch (token_kind)
  684|  22.2k|    {
  685|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  686|      0|    case TokenKind::name:                                                                          \
  687|      0|        return #name;
  688|       |
  689|      0|        OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|    310|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  686|    310|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 310, False: 21.9k]
  |  |  |  |  ------------------
  |  |  |  |  687|    310|        return #name;
  |  |  ------------------
  |  |   13|  1.95k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  686|  1.95k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.95k, False: 20.3k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.95k|        return #name;
  |  |  ------------------
  |  |   14|  1.95k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   15|    511|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  686|    511|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 511, False: 21.7k]
  |  |  |  |  ------------------
  |  |  |  |  687|    511|        return #name;
  |  |  ------------------
  |  |   16|    511|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   17|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   18|  1.24k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|  1.24k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.24k, False: 21.0k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.24k|        return #name;
  |  |  ------------------
  |  |   19|  1.24k|    /* Literals */                                                                                 \
  |  |   20|  2.49k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  686|  2.49k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.49k, False: 19.7k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.49k|        return #name;
  |  |  ------------------
  |  |   21|  2.49k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  686|    279|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 279, False: 21.9k]
  |  |  |  |  ------------------
  |  |  |  |  687|    279|        return #name;
  |  |  ------------------
  |  |   22|    395|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  686|    395|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 395, False: 21.8k]
  |  |  |  |  ------------------
  |  |  |  |  687|    395|        return #name;
  |  |  ------------------
  |  |   23|    395|    /* Punctuation */                                                                              \
  |  |   24|    395|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  686|    326|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 326, False: 21.9k]
  |  |  |  |  ------------------
  |  |  |  |  687|    326|        return #name;
  |  |  ------------------
  |  |   25|    335|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|    335|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 335, False: 21.9k]
  |  |  |  |  ------------------
  |  |  |  |  687|    335|        return #name;
  |  |  ------------------
  |  |   26|  1.07k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  1.07k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.07k, False: 21.1k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.07k|        return #name;
  |  |  ------------------
  |  |   27|  1.07k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   28|    493|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|    493|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 493, False: 21.7k]
  |  |  |  |  ------------------
  |  |  |  |  687|    493|        return #name;
  |  |  ------------------
  |  |   29|    657|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|    657|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 657, False: 21.6k]
  |  |  |  |  ------------------
  |  |  |  |  687|    657|        return #name;
  |  |  ------------------
  |  |   30|    657|    /* Macros */                                                                                   \
  |  |   31|    657|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|    657|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   33|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   34|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   35|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   36|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   37|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   38|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   40|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   41|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   42|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   43|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   44|    292|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  686|    292|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 292, False: 21.9k]
  |  |  |  |  ------------------
  |  |  |  |  687|    292|        return #name;
  |  |  ------------------
  |  |   45|    292|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   46|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   47|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   49|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   51|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   52|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   53|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   54|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   55|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   56|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   59|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   60|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   67|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   70|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   74|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   75|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   76|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   77|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   81|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   82|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   83|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   84|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   86|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   87|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   88|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   89|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   91|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   92|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   93|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   96|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   97|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   98|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  100|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  101|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  103|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  105|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  106|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  107|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  108|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  109|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  111|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  112|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  113|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  122|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  123|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  124|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  125|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  127|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  128|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  129|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  130|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  131|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  132|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  133|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  138|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  139|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  141|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  143|      1|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    388|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|    388|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 388, False: 21.8k]
  |  |  |  |  ------------------
  |  |  |  |  687|    388|        return #name;
  |  |  ------------------
  |  |  145|    388|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|    388|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  686|    386|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 386, False: 21.8k]
  |  |  |  |  ------------------
  |  |  |  |  687|    386|        return #name;
  |  |  ------------------
  |  |  147|    386|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    386|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  686|    376|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 376, False: 21.8k]
  |  |  |  |  ------------------
  |  |  |  |  687|    376|        return #name;
  |  |  ------------------
  |  |  149|    376|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    380|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  686|    380|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 380, False: 21.8k]
  |  |  |  |  ------------------
  |  |  |  |  687|    380|        return #name;
  |  |  ------------------
  |  |  151|    380|    /* Keywords */                                                                                 \
  |  |  152|    380|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    380|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    380|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|    380|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  686|    176|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 176, False: 22.0k]
  |  |  |  |  ------------------
  |  |  |  |  687|    176|        return #name;
  |  |  ------------------
  |  |  156|    252|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  686|    252|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 252, False: 22.0k]
  |  |  |  |  ------------------
  |  |  |  |  687|    252|        return #name;
  |  |  ------------------
  |  |  157|    252|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|    252|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|    139|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  686|    139|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 139, False: 22.1k]
  |  |  |  |  ------------------
  |  |  |  |  687|    139|        return #name;
  |  |  ------------------
  |  |  163|    139|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|    139|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  165|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  166|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  167|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  168|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  170|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  171|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  173|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  175|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  179|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  180|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  181|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  182|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  184|      9|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  1.32k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  686|  1.32k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.32k, False: 20.9k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.32k|        return #name;
  |  |  ------------------
  |  |  186|  1.32k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  187|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  188|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  189|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  191|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  192|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  193|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  195|     55|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  686|     55|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 55, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|     55|        return #name;
  |  |  ------------------
  |  |  196|     55|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|    190|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  686|    190|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 190, False: 22.0k]
  |  |  |  |  ------------------
  |  |  |  |  687|    190|        return #name;
  |  |  ------------------
  |  |  198|    190|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|    190|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  200|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  202|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  203|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  206|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  208|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  213|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  214|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  216|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  219|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  220|    185|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  686|    185|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 185, False: 22.0k]
  |  |  |  |  ------------------
  |  |  |  |  687|    185|        return #name;
  |  |  ------------------
  |  |  221|    185|    /* Operator */                                                                                 \
  |  |  222|    185|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|    901|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)            /* = */                                  \
  |  |  ------------------
  |  |  |  |  686|    901|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 901, False: 21.3k]
  |  |  |  |  ------------------
  |  |  |  |  687|    901|        return #name;
  |  |  ------------------
  |  |  224|    901|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)        /* += */                                 \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  225|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)       /* -= */                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  226|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)    /* *= */                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  227|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)      /* /= */                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  228|    498|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)       /* & */                                  \
  |  |  ------------------
  |  |  |  |  686|    498|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 498, False: 21.7k]
  |  |  |  |  ------------------
  |  |  |  |  687|    498|        return #name;
  |  |  ------------------
  |  |  229|    498|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals) /* &= */                                 \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  230|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)              /* + */                                  \
  |  |  ------------------
  |  |  |  |  686|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|     19|        return #name;
  |  |  ------------------
  |  |  231|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)             /* - */                                  \
  |  |  ------------------
  |  |  |  |  686|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 42, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|     42|        return #name;
  |  |  ------------------
  |  |  232|    665|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)          /* * */                                  \
  |  |  ------------------
  |  |  |  |  686|    665|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 665, False: 21.5k]
  |  |  |  |  ------------------
  |  |  |  |  687|    665|        return #name;
  |  |  ------------------
  |  |  233|    774|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)            /* / */                                  \
  |  |  ------------------
  |  |  |  |  686|    774|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 774, False: 21.4k]
  |  |  |  |  ------------------
  |  |  |  |  687|    774|        return #name;
  |  |  ------------------
  |  |  234|    774|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)             /* ^ */                                  \
  |  |  ------------------
  |  |  |  |  686|    747|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 747, False: 21.5k]
  |  |  |  |  ------------------
  |  |  |  |  687|    747|        return #name;
  |  |  ------------------
  |  |  235|    747|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)      /* == */                                 \
  |  |  ------------------
  |  |  |  |  686|    426|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 426, False: 21.8k]
  |  |  |  |  ------------------
  |  |  |  |  687|    426|        return #name;
  |  |  ------------------
  |  |  236|    426|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)          /* <> */                                 \
  |  |  ------------------
  |  |  |  |  686|    388|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 388, False: 21.8k]
  |  |  |  |  ------------------
  |  |  |  |  687|    388|        return #name;
  |  |  ------------------
  |  |  237|    623|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)       /* > */                                  \
  |  |  ------------------
  |  |  |  |  686|    623|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 623, False: 21.6k]
  |  |  |  |  ------------------
  |  |  |  |  687|    623|        return #name;
  |  |  ------------------
  |  |  238|    623|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)  /* >= */                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  239|    823|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)          /* < */                                  \
  |  |  ------------------
  |  |  |  |  686|    823|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 823, False: 21.4k]
  |  |  |  |  ------------------
  |  |  |  |  687|    823|        return #name;
  |  |  ------------------
  |  |  240|    823|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)     /* <= */                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  241|    498|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)         /* ? */                                  \
  |  |  ------------------
  |  |  |  |  686|    498|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 498, False: 21.7k]
  |  |  |  |  ------------------
  |  |  |  |  687|    498|        return #name;
  |  |  ------------------
  |  |  242|  1.04k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)       /* : */                                  \
  |  |  ------------------
  |  |  |  |  686|  1.04k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.04k, False: 21.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.04k|        return #name;
  |  |  ------------------
  |  |  243|  1.04k|    /* Built-in Functions */                                                                       \
  |  |  244|  1.04k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  1.04k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  1.04k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  686|    345|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 345, False: 21.9k]
  |  |  |  |  ------------------
  |  |  |  |  687|    345|        return #name;
  |  |  ------------------
  |  |  247|    345|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  248|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  249|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  250|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  251|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  254|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  255|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  256|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  257|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  263|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  264|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  265|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  270|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  271|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  272|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  273|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  274|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  275|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  276|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  279|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  280|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  288|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  297|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  298|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  299|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  300|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  301|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  302|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  307|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  308|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  309|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  312|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  313|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  314|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  315|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  316|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  320|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  321|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  323|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  327|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  328|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  330|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  331|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  332|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  333|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  334|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  335|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  336|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  337|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  338|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  340|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  341|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  343|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  344|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  345|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  347|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  348|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  352|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  357|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  358|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  359|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  361|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  362|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  363|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  364|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  365|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  366|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  367|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  368|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  369|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  370|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  371|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  373|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  374|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  384|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  385|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  402|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  403|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  404|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  417|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  418|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  421|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  422|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  428|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  430|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  435|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  436|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  437|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  438|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  440|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  444|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  445|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  448|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  449|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  450|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  451|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  452|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  453|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  454|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  455|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  462|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  463|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  466|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  468|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  470|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  471|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  472|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  473|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  474|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  477|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  479|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  480|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  482|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  483|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  485|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  686|     50|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 50, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|     50|        return #name;
  |  |  ------------------
  |  |  486|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  488|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  489|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  491|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  492|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  494|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  495|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  496|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  497|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  498|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  499|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  500|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  503|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  686|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|     19|        return #name;
  |  |  ------------------
  |  |  504|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  505|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  507|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  508|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  509|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  510|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  511|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  512|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  517|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  518|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  519|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  522|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  523|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  525|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  526|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  529|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  530|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  533|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  536|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  537|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  538|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  539|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  540|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  541|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  542|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  543|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  544|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  548|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  549|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  550|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  551|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  553|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  554|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  562|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  563|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  566|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  567|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  569|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  570|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  579|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  580|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  583|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  584|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  585|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  588|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  589|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  590|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  596|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  597|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  600|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  601|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  603|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  604|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  611|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  686|     29|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|     29|        return #name;
  |  |  ------------------
  |  |  612|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  613|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  615|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  616|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  618|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  619|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  620|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  621|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  622|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  628|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  629|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  631|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  632|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  635|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  636|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  638|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  639|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  645|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  646|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  647|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  649|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  650|      0|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 22.2k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  ------------------
  690|       |
  691|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  692|       |
  693|      0|        default:
  ------------------
  |  Branch (693:9): [True: 0, False: 22.2k]
  ------------------
  694|      0|            PHI_ASSERT_NOT_REACHED();
  695|  22.2k|    }
  696|  22.2k|}

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|   175k|    {
   21|       |#if defined(PHI_DEBUG)
   22|       |        PHI_ASSERT(!m_Finalized);
   23|       |#endif
   24|       |
   25|   175k|        m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|   175k|    }

_ZN10OpenAutoIt10DiagnosticC2ENS_12DiagnosticIdENS_15DiagnosticLevelENS_14SourceLocationEONSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE:
   14|  5.68k|{}
_ZNK10OpenAutoIt10Diagnostic6IsNoteEv:
   42|  5.68k|{
   43|  5.68k|    return m_Level == DiagnosticLevel::Note;
   44|  5.68k|}
_ZNK10OpenAutoIt10Diagnostic9IsWarningEv:
   47|  5.42k|{
   48|  5.42k|    return m_Level == DiagnosticLevel::Warning;
   49|  5.42k|}
_ZNK10OpenAutoIt10Diagnostic7IsErrorEv:
   52|  5.42k|{
   53|  5.42k|    return m_Level == DiagnosticLevel::Error;
   54|  5.42k|}
_ZNK10OpenAutoIt10Diagnostic12IsFatalErrorEv:
   57|  6.90k|{
   58|  6.90k|    return m_Level == DiagnosticLevel::FatalError;
   59|  6.90k|}
_ZNK10OpenAutoIt10Diagnostic14IsErrorOrFatalEv:
   62|  5.42k|{
   63|  5.42k|    return IsError() || IsFatalError();
  ------------------
  |  Branch (63:12): [True: 3.93k, False: 1.48k]
  |  Branch (63:25): [True: 0, False: 1.48k]
  ------------------
   64|  5.42k|}
_ZN10OpenAutoIt10Diagnostic7AddNoteEOS0_:
   93|    266|{
   94|    266|    PHI_ASSERT(note.IsNote());
   95|       |
   96|    266|    m_Notes.emplace_back(note);
   97|    266|}

_ZN10OpenAutoIt17DiagnosticBuilderC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
   11|  5.42k|{}
_ZN10OpenAutoIt17DiagnosticBuilderD2Ev:
   14|  5.42k|{
   15|  5.42k|    for (auto& diagnostic : m_Diagnostics)
  ------------------
  |  Branch (15:27): [True: 5.42k, False: 5.42k]
  ------------------
   16|  5.42k|    {
   17|  5.42k|        m_DiagnosticEngine->Report(diagnostic);
   18|  5.42k|    }
   19|  5.42k|}

_ZN10OpenAutoIt16DiagnosticEngineC2Ev:
   12|  2.59k|{}
_ZNK10OpenAutoIt16DiagnosticEngine13GetErrorLimitEv:
   29|  35.5k|{
   30|  35.5k|    return m_ErrorLimit;
   31|  35.5k|}
_ZNK10OpenAutoIt16DiagnosticEngine21HasFatalErrorOccurredEv:
   44|  35.5k|{
   45|  35.5k|    return m_FatalErrorOccurred;
   46|  35.5k|}
_ZN10OpenAutoIt16DiagnosticEngine6ReportENS_10DiagnosticE:
   69|  5.42k|{
   70|  5.42k|    PHI_ASSERT(!diagnostic.IsNote());
   71|       |
   72|  5.42k|    if (m_IgnoreAllWarnings)
  ------------------
  |  Branch (72:9): [True: 0, False: 5.42k]
  ------------------
   73|      0|    {
   74|      0|        diagnostic.IgnoreWarning();
   75|      0|    }
   76|       |
   77|  5.42k|    if (m_WarningsAsError)
  ------------------
  |  Branch (77:9): [True: 0, False: 5.42k]
  ------------------
   78|      0|    {
   79|      0|        diagnostic.UpgradeWarningToError();
   80|      0|    }
   81|       |
   82|  5.42k|    if (diagnostic.IsErrorOrFatal())
  ------------------
  |  Branch (82:9): [True: 3.93k, False: 1.48k]
  ------------------
   83|  3.93k|    {
   84|  3.93k|        m_ErrorOccurred = true;
   85|  3.93k|        ++m_NumberOfErrors;
   86|  3.93k|    }
   87|       |
   88|  5.42k|    if (diagnostic.IsFatalError())
  ------------------
  |  Branch (88:9): [True: 0, False: 5.42k]
  ------------------
   89|      0|    {
   90|      0|        m_FatalErrorOccurred = true;
   91|      0|    }
   92|       |
   93|  5.42k|    if (diagnostic.IsWarning())
  ------------------
  |  Branch (93:9): [True: 1.48k, False: 3.93k]
  ------------------
   94|  1.48k|    {
   95|  1.48k|        ++m_NumberOfWarnings;
   96|  1.48k|    }
   97|       |
   98|  5.42k|    if (m_Consumer)
  ------------------
  |  Branch (98:9): [True: 0, False: 5.42k]
  ------------------
   99|      0|    {
  100|      0|        m_Consumer->Report(diagnostic);
  101|      0|    }
  102|  5.42k|}

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  160|  2.58k|{
  161|  2.58k|    static constexpr auto map =
  162|  2.58k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  163|  2.58k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  164|       |
  165|  2.58k|    std::string str{token.begin(), token.end()};
  166|  2.58k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  167|       |
  168|  2.58k|    return map.at(phi::string_view(str.c_str(), str.size()));
  169|  2.58k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  186|  7.89k|{
  187|  7.89k|    static constexpr auto map =
  188|  7.89k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  189|  7.89k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  190|       |
  191|  7.89k|    std::string str{token.begin(), token.end()};
  192|  7.89k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  193|       |
  194|  7.89k|    return map.at(phi::string_view(str.c_str(), str.size()));
  195|  7.89k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  662|  31.9k|{
  663|  31.9k|    static constexpr auto keyword_map =
  664|  31.9k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  665|  31.9k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  666|  31.9k|    static constexpr auto builtin_map =
  667|  31.9k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  668|  31.9k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  669|       |
  670|  31.9k|    std::string str{token.begin(), token.end()};
  671|  31.9k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  672|       |
  673|  31.9k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  674|       |
  675|  31.9k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  676|  31.9k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (676:9): [True: 11.0k, False: 20.8k]
  ------------------
  677|  11.0k|    {
  678|  11.0k|        return builtin_map.at(string);
  679|  11.0k|    }
  680|       |
  681|  20.8k|    return keyword;
  682|  31.9k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  707|  20.3k|{
  708|  20.3k|    static constexpr auto map =
  709|  20.3k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  710|  20.3k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  711|       |
  712|  20.3k|    return map.at(token);
  713|  20.3k|}
_ZN10OpenAutoIt5LexerC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
  778|  2.59k|{}
_ZN10OpenAutoIt5Lexer5ResetEv:
  781|  2.59k|{
  782|  2.59k|    m_Iterator = m_Source.begin();
  783|       |
  784|  2.59k|    m_InsideMultiLineComment = false;
  785|       |
  786|  2.59k|    m_LineNumber = 1u;
  787|  2.59k|    m_Column     = 1u;
  788|  2.59k|}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  791|   785k|{
  792|   785k|    return m_Iterator == m_Source.end();
  793|   785k|}
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  796|   175k|{
  797|   197k|    while (!IsFinished())
  ------------------
  |  Branch (797:12): [True: 197k, False: 184]
  ------------------
  798|   197k|    {
  799|   197k|        char current_character = *m_Iterator;
  800|       |
  801|       |        /* null character */
  802|       |
  803|   197k|        if (current_character == '\0')
  ------------------
  |  Branch (803:13): [True: 1.48k, False: 195k]
  ------------------
  804|  1.48k|        {
  805|  1.48k|            Diag().Warning(DiagnosticId::NullCharacter, CurrentSourceLocation());
  806|       |
  807|  1.48k|            SkipCurrentCharacter();
  808|  1.48k|        }
  809|       |
  810|       |        /* Multiline comments */
  811|       |
  812|   195k|        else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (812:18): [True: 812, False: 194k]
  ------------------
  813|    812|        {
  814|    812|            iterator       begin_of_multiline_comment            = m_Iterator;
  815|    812|            const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  816|    812|            const phi::u64 beginning_column_of_multiline_comment = m_Column;
  817|       |
  818|  1.70k|            while (!IsFinished())
  ------------------
  |  Branch (818:20): [True: 1.64k, False: 62]
  ------------------
  819|  1.64k|            {
  820|  1.64k|                current_character = *m_Iterator;
  821|       |
  822|       |                // Check for end comment multiline
  823|  1.64k|                if (current_character == '#')
  ------------------
  |  Branch (823:21): [True: 1.22k, False: 419]
  ------------------
  824|  1.22k|                {
  825|  1.22k|                    iterator begin_of_token = m_Iterator;
  826|  1.22k|                    ConsumeCurrentCharacter();
  827|       |
  828|  7.02k|                    while (!IsFinished())
  ------------------
  |  Branch (828:28): [True: 6.96k, False: 55]
  ------------------
  829|  6.96k|                    {
  830|  6.96k|                        current_character = *m_Iterator;
  831|       |
  832|  6.96k|                        if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (832:29): [True: 5.79k, False: 1.17k]
  ------------------
  833|  5.79k|                        {
  834|  5.79k|                            ConsumeCurrentCharacter();
  835|  5.79k|                            continue;
  836|  5.79k|                        }
  837|       |
  838|  1.17k|                        break;
  839|  6.96k|                    }
  840|       |
  841|  1.22k|                    const TokenKind pre_processor_token_kind =
  842|  1.22k|                            lookup_pre_processor(TokenText(begin_of_token));
  843|       |
  844|  1.22k|                    if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (844:25): [True: 750, False: 477]
  ------------------
  845|    750|                    {
  846|    750|                        m_InsideMultiLineComment = false;
  847|       |
  848|       |                        // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  849|    750|                        m_Iterator -= TokenText(begin_of_token).length().unsafe();
  850|       |
  851|    750|                        Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  852|    750|                                    BuildSourceLocation(beginning_line_of_multiline_comment,
  853|    750|                                                        beginning_column_of_multiline_comment)};
  854|       |
  855|    750|                        return token;
  856|    750|                    }
  857|  1.22k|                }
  858|    419|                else if (current_character == '\n')
  ------------------
  |  Branch (858:26): [True: 194, False: 225]
  ------------------
  859|    194|                {
  860|    194|                    ConsumeCurrentCharacter();
  861|    194|                    AdvanceToNextLine();
  862|    194|                }
  863|    225|                else
  864|    225|                {
  865|       |                    // Otherwise simply consume the character
  866|    225|                    ConsumeCurrentCharacter();
  867|    225|                    m_Column += 1u;
  868|    225|                }
  869|  1.64k|            }
  870|    812|        }
  871|       |
  872|       |        /* Skip characters */
  873|       |
  874|   194k|        else if (is_skip_character(current_character))
  ------------------
  |  Branch (874:18): [True: 9.19k, False: 185k]
  ------------------
  875|  9.19k|        {
  876|  9.19k|            SkipCurrentCharacter();
  877|  9.19k|        }
  878|       |
  879|       |        /* New Lines */
  880|       |
  881|   185k|        else if (current_character == '\n')
  ------------------
  |  Branch (881:18): [True: 7.24k, False: 178k]
  ------------------
  882|  7.24k|        {
  883|  7.24k|            Token new_line_token = ConstructToken(TokenKind::NewLine);
  884|       |
  885|  7.24k|            ConsumeCurrentCharacter();
  886|  7.24k|            AdvanceToNextLine();
  887|       |
  888|  7.24k|            return new_line_token;
  889|  7.24k|        }
  890|       |
  891|       |        /* Comment */
  892|       |
  893|   178k|        else if (current_character == ';')
  ------------------
  |  Branch (893:18): [True: 607, False: 177k]
  ------------------
  894|    607|        {
  895|    607|            iterator begin_of_token = m_Iterator;
  896|    607|            ConsumeCurrentCharacter();
  897|       |
  898|    803|            while (!IsFinished())
  ------------------
  |  Branch (898:20): [True: 774, False: 29]
  ------------------
  899|    774|            {
  900|    774|                current_character = *m_Iterator;
  901|       |
  902|    774|                if (current_character != '\n')
  ------------------
  |  Branch (902:21): [True: 196, False: 578]
  ------------------
  903|    196|                {
  904|    196|                    ConsumeCurrentCharacter();
  905|    196|                    continue;
  906|    196|                }
  907|       |
  908|    578|                break;
  909|    774|            }
  910|       |
  911|    607|            return ConstructToken(TokenKind::Comment, begin_of_token);
  912|    607|        }
  913|       |
  914|       |        /* Macros */
  915|       |
  916|   177k|        else if (current_character == '@')
  ------------------
  |  Branch (916:18): [True: 2.58k, False: 175k]
  ------------------
  917|  2.58k|        {
  918|  2.58k|            iterator begin_of_token = m_Iterator;
  919|  2.58k|            ConsumeCurrentCharacter();
  920|       |
  921|  41.7k|            while (!IsFinished())
  ------------------
  |  Branch (921:20): [True: 41.6k, False: 154]
  ------------------
  922|  41.6k|            {
  923|  41.6k|                current_character = *m_Iterator;
  924|       |
  925|  41.6k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (925:21): [True: 39.1k, False: 2.43k]
  ------------------
  926|  39.1k|                {
  927|  39.1k|                    ConsumeCurrentCharacter();
  928|  39.1k|                    continue;
  929|  39.1k|                }
  930|       |
  931|  2.43k|                break;
  932|  41.6k|            }
  933|       |
  934|       |            // Emit token
  935|  2.58k|            return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  936|  2.58k|        }
  937|       |
  938|       |        /* Variable identifier */
  939|       |
  940|   175k|        else if (current_character == '$')
  ------------------
  |  Branch (940:18): [True: 11.3k, False: 163k]
  ------------------
  941|  11.3k|        {
  942|  11.3k|            iterator     begin_of_token = m_Iterator;
  943|  11.3k|            phi::boolean parsed_something{false};
  944|  11.3k|            ConsumeCurrentCharacter();
  945|       |
  946|  22.9k|            while (!IsFinished())
  ------------------
  |  Branch (946:20): [True: 22.6k, False: 240]
  ------------------
  947|  22.6k|            {
  948|  22.6k|                current_character = *m_Iterator;
  949|       |
  950|  22.6k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (950:21): [True: 11.5k, False: 11.1k]
  ------------------
  951|  11.5k|                {
  952|  11.5k|                    ConsumeCurrentCharacter();
  953|  11.5k|                    parsed_something = true;
  954|  11.5k|                    continue;
  955|  11.5k|                }
  956|       |
  957|  11.1k|                break;
  958|  22.6k|            }
  959|       |
  960|       |            // Ensure that '$' is not a valid variable identifier
  961|  11.3k|            if (!parsed_something)
  ------------------
  |  Branch (961:17): [True: 838, False: 10.5k]
  ------------------
  962|    838|            {
  963|    838|                return ConstructToken(TokenKind::Garbage, begin_of_token);
  964|    838|            }
  965|       |
  966|       |            // Emit Token
  967|  10.5k|            return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  968|  11.3k|        }
  969|       |
  970|       |        /* PreProcessor directive */
  971|       |
  972|   163k|        else if (current_character == '#')
  ------------------
  |  Branch (972:18): [True: 6.66k, False: 157k]
  ------------------
  973|  6.66k|        {
  974|  6.66k|            iterator begin_of_token = m_Iterator;
  975|  6.66k|            ConsumeCurrentCharacter();
  976|       |
  977|   103k|            while (!IsFinished())
  ------------------
  |  Branch (977:20): [True: 102k, False: 272]
  ------------------
  978|   102k|            {
  979|   102k|                current_character = *m_Iterator;
  980|       |
  981|   102k|                if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (981:21): [True: 96.5k, False: 6.39k]
  ------------------
  982|  96.5k|                {
  983|  96.5k|                    ConsumeCurrentCharacter();
  984|  96.5k|                    continue;
  985|  96.5k|                }
  986|       |
  987|  6.39k|                break;
  988|   102k|            }
  989|       |
  990|       |            // Check for start of multiline comment
  991|  6.66k|            const TokenKind pre_processor_token_kind =
  992|  6.66k|                    lookup_pre_processor(TokenText(begin_of_token));
  993|       |
  994|  6.66k|            if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (994:17): [True: 828, False: 5.83k]
  ------------------
  995|    828|            {
  996|    828|                m_InsideMultiLineComment = true;
  997|    828|            }
  998|       |
  999|  6.66k|            return ConstructToken(pre_processor_token_kind, begin_of_token);
 1000|  6.66k|        }
 1001|       |
 1002|       |        /* SingleQuoteStringLiteral */
 1003|       |
 1004|   157k|        else if (current_character == '\'')
  ------------------
  |  Branch (1004:18): [True: 1.30k, False: 155k]
  ------------------
 1005|  1.30k|        {
 1006|  1.30k|            iterator     begin_of_token = m_Iterator;
 1007|  1.30k|            phi::boolean did_terminate  = false;
 1008|  1.30k|            ConsumeCurrentCharacter();
 1009|       |
 1010|  1.50k|            while (!IsFinished())
  ------------------
  |  Branch (1010:20): [True: 1.49k, False: 8]
  ------------------
 1011|  1.49k|            {
 1012|  1.49k|                current_character = *m_Iterator;
 1013|  1.49k|                ConsumeCurrentCharacter();
 1014|       |
 1015|  1.49k|                if (current_character == '\'')
  ------------------
  |  Branch (1015:21): [True: 1.30k, False: 194]
  ------------------
 1016|  1.30k|                {
 1017|  1.30k|                    did_terminate = true;
 1018|  1.30k|                    break;
 1019|  1.30k|                }
 1020|  1.49k|            }
 1021|       |
 1022|  1.30k|            if (did_terminate)
  ------------------
  |  Branch (1022:17): [True: 1.30k, False: 8]
  ------------------
 1023|  1.30k|            {
 1024|  1.30k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1025|  1.30k|            }
 1026|       |
 1027|       |            // TODO: Warn unterminated string literal
 1028|  1.30k|        }
 1029|       |
 1030|       |        /* DoubleQuoteStringLiteral */
 1031|       |
 1032|   155k|        else if (current_character == '\"')
  ------------------
  |  Branch (1032:18): [True: 1.13k, False: 154k]
  ------------------
 1033|  1.13k|        {
 1034|  1.13k|            iterator     begin_of_token = m_Iterator;
 1035|  1.13k|            phi::boolean did_terminate  = false;
 1036|  1.13k|            ConsumeCurrentCharacter();
 1037|       |
 1038|  32.9k|            while (!IsFinished())
  ------------------
  |  Branch (1038:20): [True: 32.9k, False: 9]
  ------------------
 1039|  32.9k|            {
 1040|  32.9k|                current_character = *m_Iterator;
 1041|  32.9k|                ConsumeCurrentCharacter();
 1042|       |
 1043|  32.9k|                if (current_character == '\"')
  ------------------
  |  Branch (1043:21): [True: 1.12k, False: 31.8k]
  ------------------
 1044|  1.12k|                {
 1045|  1.12k|                    did_terminate = true;
 1046|  1.12k|                    break;
 1047|  1.12k|                }
 1048|  32.9k|            }
 1049|       |
 1050|  1.13k|            if (did_terminate)
  ------------------
  |  Branch (1050:17): [True: 1.12k, False: 9]
  ------------------
 1051|  1.12k|            {
 1052|  1.12k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1053|  1.12k|            }
 1054|  1.13k|        }
 1055|       |
 1056|       |        /* Number Literals - IntegerLiteral/FloatLiteral */
 1057|       |
 1058|   154k|        else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1058:18): [True: 20.6k, False: 134k]
  |  Branch (1058:18): [True: 22.0k, False: 132k]
  |  Branch (1058:54): [True: 1.33k, False: 132k]
  ------------------
 1059|  22.0k|        {
 1060|  22.0k|            const phi::boolean start_with_zero{current_character == '0'};
 1061|  22.0k|            phi::boolean       parsing_hex{false};
 1062|  22.0k|            phi::boolean       parsing_float{current_character == '.'};
 1063|       |
 1064|  22.0k|            iterator begin_of_token = m_Iterator;
 1065|  22.0k|            ConsumeCurrentCharacter();
 1066|       |
 1067|  39.2k|            while (!IsFinished())
  ------------------
  |  Branch (1067:20): [True: 38.9k, False: 306]
  ------------------
 1068|  38.9k|            {
 1069|  38.9k|                current_character = *m_Iterator;
 1070|       |
 1071|       |                // Is the second character
 1072|  38.9k|                if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1072:21): [True: 21.8k, False: 17.0k]
  |  Branch (1072:58): [True: 7.27k, False: 14.5k]
  ------------------
 1073|  7.27k|                {
 1074|       |                    // Hex character
 1075|  7.27k|                    if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1075:25): [True: 368, False: 6.90k]
  |  Branch (1075:53): [True: 660, False: 6.24k]
  ------------------
 1076|  1.02k|                    {
 1077|  1.02k|                        parsing_hex = true;
 1078|  1.02k|                        ConsumeCurrentCharacter();
 1079|  1.02k|                        continue;
 1080|  1.02k|                    }
 1081|  7.27k|                }
 1082|       |
 1083|       |                // Actually parsing
 1084|  37.8k|                if (parsing_hex)
  ------------------
  |  Branch (1084:21): [True: 8.34k, False: 29.5k]
  ------------------
 1085|  8.34k|                {
 1086|  8.34k|                    if (parsing_float)
  ------------------
  |  Branch (1086:25): [True: 0, False: 8.34k]
  ------------------
 1087|      0|                    {
 1088|       |                        // TODO: Fix include and enable this warning
 1089|       |                        //Diag().Error(DiagnosticId::FloatHexLiteral, CurrentSourceLocation());
 1090|       |
 1091|      0|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1092|      0|                    }
 1093|       |
 1094|  8.34k|                    if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1094:25): [True: 7.37k, False: 969]
  ------------------
 1095|  7.37k|                    {
 1096|  7.37k|                        ConsumeCurrentCharacter();
 1097|  7.37k|                        continue;
 1098|  7.37k|                    }
 1099|  8.34k|                }
 1100|  29.5k|                else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1100:26): [True: 8.60k, False: 20.9k]
  ------------------
 1101|  8.60k|                {
 1102|  8.60k|                    ConsumeCurrentCharacter();
 1103|  8.60k|                    continue;
 1104|  8.60k|                }
 1105|       |                // Literal dot
 1106|  20.9k|                else if (current_character == '.')
  ------------------
  |  Branch (1106:26): [True: 390, False: 20.5k]
  ------------------
 1107|    390|                {
 1108|    390|                    if (parsing_float)
  ------------------
  |  Branch (1108:25): [True: 196, False: 194]
  ------------------
 1109|    196|                    {
 1110|       |                        //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1111|       |
 1112|    196|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1113|    196|                    }
 1114|       |
 1115|    194|                    parsing_float = true;
 1116|    194|                    ConsumeCurrentCharacter();
 1117|    194|                    continue;
 1118|    390|                }
 1119|       |
 1120|  21.5k|                break;
 1121|  37.8k|            }
 1122|       |
 1123|  21.8k|            if (parsing_float)
  ------------------
  |  Branch (1123:17): [True: 1.33k, False: 20.4k]
  ------------------
 1124|  1.33k|            {
 1125|       |                // Were not allowed to end with a dot
 1126|       |                // TODO: This is very hacky and looks nasty
 1127|  1.33k|                if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1127:21): [True: 961, False: 373]
  ------------------
 1128|    961|                {
 1129|       |                    //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1130|       |
 1131|    961|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
 1132|    961|                }
 1133|       |
 1134|    373|                return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1135|  1.33k|            }
 1136|       |
 1137|  20.4k|            return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1138|  21.8k|        }
 1139|       |
 1140|       |        /* Operators */
 1141|       |
 1142|   132k|        else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1142:18): [True: 16.6k, False: 116k]
  ------------------
 1143|  16.6k|        {
 1144|  16.6k|            iterator begin_of_token = m_Iterator;
 1145|  16.6k|            ConsumeCurrentCharacter();
 1146|       |
 1147|  16.6k|            if (!IsFinished())
  ------------------
  |  Branch (1147:17): [True: 16.3k, False: 271]
  ------------------
 1148|  16.3k|            {
 1149|  16.3k|                if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1149:21): [True: 1.80k, False: 14.5k]
  |  Branch (1149:44): [True: 2.08k, False: 12.4k]
  |  Branch (1149:70): [True: 389, False: 1.69k]
  ------------------
 1150|  2.19k|                {
 1151|       |                    // We have an actual two part operator
 1152|  2.19k|                    ConsumeCurrentCharacter();
 1153|  2.19k|                }
 1154|  16.3k|            }
 1155|       |
 1156|  16.6k|            return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1157|  16.6k|        }
 1158|       |
 1159|   116k|        else if (is_single_operator(current_character))
  ------------------
  |  Branch (1159:18): [True: 3.77k, False: 112k]
  ------------------
 1160|  3.77k|        {
 1161|  3.77k|            Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1162|       |
 1163|  3.77k|            ConsumeCurrentCharacter();
 1164|       |
 1165|  3.77k|            return token;
 1166|  3.77k|        }
 1167|       |
 1168|       |        /* Punctioation */
 1169|       |
 1170|   112k|        else if (current_character == ',')
  ------------------
  |  Branch (1170:18): [True: 2.65k, False: 109k]
  ------------------
 1171|  2.65k|        {
 1172|  2.65k|            Token token = ConstructToken(TokenKind::Comma);
 1173|       |
 1174|  2.65k|            ConsumeCurrentCharacter();
 1175|       |
 1176|  2.65k|            return token;
 1177|  2.65k|        }
 1178|       |
 1179|   109k|        else if (current_character == '(')
  ------------------
  |  Branch (1179:18): [True: 9.72k, False: 100k]
  ------------------
 1180|  9.72k|        {
 1181|  9.72k|            Token token = ConstructToken(TokenKind::LParen);
 1182|       |
 1183|  9.72k|            ConsumeCurrentCharacter();
 1184|       |
 1185|  9.72k|            return token;
 1186|  9.72k|        }
 1187|       |
 1188|   100k|        else if (current_character == ')')
  ------------------
  |  Branch (1188:18): [True: 5.10k, False: 94.9k]
  ------------------
 1189|  5.10k|        {
 1190|  5.10k|            Token token = ConstructToken(TokenKind::RParen);
 1191|       |
 1192|  5.10k|            ConsumeCurrentCharacter();
 1193|       |
 1194|  5.10k|            return token;
 1195|  5.10k|        }
 1196|       |
 1197|  94.9k|        else if (current_character == '.')
  ------------------
  |  Branch (1197:18): [True: 0, False: 94.9k]
  ------------------
 1198|      0|        {
 1199|      0|            Token token = ConstructToken(TokenKind::Dot);
 1200|       |
 1201|      0|            ConsumeCurrentCharacter();
 1202|       |
 1203|      0|            return token;
 1204|      0|        }
 1205|       |
 1206|  94.9k|        else if (current_character == '[')
  ------------------
  |  Branch (1206:18): [True: 51.0k, False: 43.9k]
  ------------------
 1207|  51.0k|        {
 1208|  51.0k|            Token token = ConstructToken(TokenKind::LSquare);
 1209|       |
 1210|  51.0k|            ConsumeCurrentCharacter();
 1211|       |
 1212|  51.0k|            return token;
 1213|  51.0k|        }
 1214|       |
 1215|  43.9k|        else if (current_character == ']')
  ------------------
  |  Branch (1215:18): [True: 809, False: 43.1k]
  ------------------
 1216|    809|        {
 1217|    809|            Token token = ConstructToken(TokenKind::RSquare);
 1218|       |
 1219|    809|            ConsumeCurrentCharacter();
 1220|       |
 1221|    809|            return token;
 1222|    809|        }
 1223|       |
 1224|       |        /* Identifier */
 1225|       |
 1226|  43.1k|        else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1226:18): [True: 31.9k, False: 11.1k]
  ------------------
 1227|  31.9k|        {
 1228|  31.9k|            iterator begin_of_token = m_Iterator;
 1229|  31.9k|            ConsumeCurrentCharacter();
 1230|       |
 1231|   142k|            while (!IsFinished())
  ------------------
  |  Branch (1231:20): [True: 141k, False: 562]
  ------------------
 1232|   141k|            {
 1233|   141k|                current_character = *m_Iterator;
 1234|       |
 1235|   141k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1235:21): [True: 110k, False: 31.3k]
  ------------------
 1236|   110k|                {
 1237|   110k|                    ConsumeCurrentCharacter();
 1238|   110k|                    continue;
 1239|   110k|                }
 1240|       |
 1241|  31.3k|                break;
 1242|   141k|            }
 1243|       |
 1244|  31.9k|            return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1245|  31.9k|        }
 1246|       |
 1247|       |        /* Unknown/Unexpected character */
 1248|       |
 1249|  11.1k|        else
 1250|  11.1k|        {
 1251|       |            // TODO: Warn unexpected character encountered
 1252|  11.1k|            SkipCurrentCharacter();
 1253|  11.1k|        }
 1254|   197k|    }
 1255|       |
 1256|    184|    return {};
 1257|   175k|}
_ZN10OpenAutoIt5Lexer13ProcessStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEES6_:
 1260|  2.59k|{
 1261|  2.59k|    SourceFile fake_source{SourceFile::Type::Basic, file_name.data(), source};
 1262|       |
 1263|  2.59k|    return ProcessFile(&fake_source);
 1264|  2.59k|}
_ZN10OpenAutoIt5Lexer11ProcessFileEN3phi21not_null_observer_ptrIKNS_10SourceFileEEE:
 1267|  2.59k|{
 1268|  2.59k|    TokenStream stream;
 1269|       |
 1270|  2.59k|    m_SourceFile = source_file;
 1271|  2.59k|    m_Source     = m_SourceFile->m_Content;
 1272|  2.59k|    Reset();
 1273|       |
 1274|   178k|    while (!IsFinished())
  ------------------
  |  Branch (1274:12): [True: 175k, False: 2.59k]
  ------------------
 1275|   175k|    {
 1276|   175k|        phi::optional<Token> maybe_token = GetNextToken();
 1277|       |
 1278|   175k|        if (maybe_token.has_value())
  ------------------
  |  Branch (1278:13): [True: 175k, False: 184]
  ------------------
 1279|   175k|        {
 1280|   175k|            stream.emplace_back(maybe_token.value());
 1281|   175k|        }
 1282|   175k|    }
 1283|       |
 1284|  2.59k|    stream.finalize();
 1285|  2.59k|    return stream;
 1286|  2.59k|}
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1289|   515k|{
 1290|   515k|    ++m_Iterator;
 1291|   515k|}
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1294|  7.43k|{
 1295|  7.43k|    ++m_LineNumber;
 1296|  7.43k|    m_Column = 1u;
 1297|  7.43k|}
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1300|  21.8k|{
 1301|  21.8k|    ConsumeCurrentCharacter();
 1302|  21.8k|    ++m_Column;
 1303|  21.8k|}
_ZN10OpenAutoIt5Lexer4DiagEv:
 1306|  1.48k|{
 1307|  1.48k|    return DiagnosticBuilder{m_DiagnosticEngine};
 1308|  1.48k|}
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   37|  2.58k|    {
   38|  2.58k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  2.58k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  2.58k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 591, False: 1.99k]
  ------------------
   42|    591|        {
   43|    591|            return itr->second;
   44|    591|        }
   45|       |
   46|  1.99k|        return m_Default;
   47|  2.58k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   211k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   37|  7.89k|    {
   38|  7.89k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  7.89k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  7.89k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 4.90k, False: 2.99k]
  ------------------
   42|  4.90k|        {
   43|  4.90k|            return itr->second;
   44|  4.90k|        }
   45|       |
   46|  2.99k|        return m_Default;
   47|  7.89k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  52.9k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   37|  11.0k|    {
   38|  11.0k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  11.0k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  11.0k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 484, False: 10.6k]
  ------------------
   42|    484|        {
   43|    484|            return itr->second;
   44|    484|        }
   45|       |
   46|  10.6k|        return m_Default;
   47|  11.0k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  4.32M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   37|  31.9k|    {
   38|  31.9k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  31.9k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  31.9k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 20.8k, False: 11.0k]
  ------------------
   42|  20.8k|        {
   43|  20.8k|            return itr->second;
   44|  20.8k|        }
   45|       |
   46|  11.0k|        return m_Default;
   47|  31.9k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   987k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   37|  20.3k|    {
   38|  20.3k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  20.3k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  20.3k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 20.3k, False: 0]
  ------------------
   42|  20.3k|        {
   43|  20.3k|            return itr->second;
   44|  20.3k|        }
   45|       |
   46|      0|        return m_Default;
   47|  20.3k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   197k|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  736|   109k|{
  737|   109k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (737:12): [True: 101k, False: 8.69k]
  |  Branch (737:40): [True: 1.12k, False: 7.56k]
  ------------------
  738|   109k|}
_Z17is_skip_characterc:
  716|   194k|{
  717|   194k|    switch (c)
  718|   194k|    {
  719|  8.08k|        case ' ':
  ------------------
  |  Branch (719:9): [True: 8.08k, False: 186k]
  ------------------
  720|  8.44k|        case '\v':
  ------------------
  |  Branch (720:9): [True: 366, False: 194k]
  ------------------
  721|  8.70k|        case '\t':
  ------------------
  |  Branch (721:9): [True: 258, False: 194k]
  ------------------
  722|  8.94k|        case '\b':
  ------------------
  |  Branch (722:9): [True: 240, False: 194k]
  ------------------
  723|  9.19k|        case '\f':
  ------------------
  |  Branch (723:9): [True: 249, False: 194k]
  ------------------
  724|  9.19k|            return true;
  725|   185k|        default:
  ------------------
  |  Branch (725:9): [True: 185k, False: 9.19k]
  ------------------
  726|   185k|            return false;
  727|   194k|    }
  728|   194k|}
_Z24is_valid_identifier_charc:
  731|   249k|{
  732|   249k|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (732:12): [True: 191k, False: 57.4k]
  |  Branch (732:40): [True: 1.32k, False: 56.1k]
  ------------------
  733|   249k|}
_Z20is_two_part_operatorc:
  741|   132k|{
  742|   132k|    switch (c)
  743|   132k|    {
  744|  5.58k|        case '=':
  ------------------
  |  Branch (744:9): [True: 5.58k, False: 127k]
  ------------------
  745|  7.39k|        case '+':
  ------------------
  |  Branch (745:9): [True: 1.80k, False: 130k]
  ------------------
  746|  10.0k|        case '-':
  ------------------
  |  Branch (746:9): [True: 2.61k, False: 130k]
  ------------------
  747|  10.9k|        case '*':
  ------------------
  |  Branch (747:9): [True: 940, False: 131k]
  ------------------
  748|  12.2k|        case '/':
  ------------------
  |  Branch (748:9): [True: 1.30k, False: 131k]
  ------------------
  749|  12.9k|        case '&':
  ------------------
  |  Branch (749:9): [True: 719, False: 132k]
  ------------------
  750|  15.2k|        case '<':
  ------------------
  |  Branch (750:9): [True: 2.31k, False: 130k]
  ------------------
  751|  16.6k|        case '>':
  ------------------
  |  Branch (751:9): [True: 1.31k, False: 131k]
  ------------------
  752|  16.6k|            return true;
  753|       |
  754|   116k|        default:
  ------------------
  |  Branch (754:9): [True: 116k, False: 16.6k]
  ------------------
  755|   116k|            return false;
  756|   132k|    }
  757|   132k|}
_Z18is_single_operatorc:
  760|   116k|{
  761|   116k|    switch (c)
  762|   116k|    {
  763|    869|        case '^':
  ------------------
  |  Branch (763:9): [True: 869, False: 115k]
  ------------------
  764|  2.43k|        case '?':
  ------------------
  |  Branch (764:9): [True: 1.56k, False: 114k]
  ------------------
  765|  3.77k|        case ':':
  ------------------
  |  Branch (765:9): [True: 1.34k, False: 114k]
  ------------------
  766|  3.77k|            return true;
  767|       |
  768|   112k|        default:
  ------------------
  |  Branch (768:9): [True: 112k, False: 3.77k]
  ------------------
  769|   112k|            return false;
  770|   116k|    }
  771|   116k|}

_ZN10OpenAutoIt6ParserC2EN3phi21not_null_observer_ptrINS_13SourceManagerEEENS2_INS_16DiagnosticEngineEEENS2_INS_5LexerEEE:
  135|  2.59k|{}
_ZN10OpenAutoIt6Parser16ParseTokenStreamEN3phi21not_null_observer_ptrINS_11ASTDocumentEEEONS_11TokenStreamENS2_IKNS_10SourceFileEEE:
  140|  2.59k|{
  141|  2.59k|    PushParsingContext(phi::move(source_file), phi::move(stream));
  142|       |
  143|  2.59k|    ParseDocument(phi::move(document));
  144|  2.59k|}
_ZN10OpenAutoIt6Parser11ParseStringEN3phi21not_null_observer_ptrINS_11ASTDocumentEEENS1_17basic_string_viewIcNSt3__111char_traitsIcEEEES9_:
  148|  2.59k|{
  149|  2.59k|    TokenStream stream = m_Lexer->ProcessString(file_name, source);
  150|       |
  151|  2.59k|    SourceFile fake_source_file{SourceFile::Type::Basic, std::string_view(file_name),
  152|  2.59k|                                phi::move(source)};
  153|  2.59k|    ParseTokenStream(phi::move(document), phi::move(stream), &fake_source_file);
  154|  2.59k|}
_ZN10OpenAutoIt6Parser13ParseDocumentEN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
  174|  2.59k|{
  175|  2.59k|    m_Document = phi::move(document);
  176|       |
  177|  2.59k|    m_IncludeOnceFiles.clear();
  178|       |
  179|  35.5k|    while (ShouldContinueParsing())
  ------------------
  |  Branch (179:12): [True: 32.9k, False: 2.59k]
  ------------------
  180|  32.9k|    {
  181|  32.9k|        if (!CurrentTokenStream().has_more())
  ------------------
  |  Branch (181:13): [True: 2.59k, False: 30.3k]
  ------------------
  182|  2.59k|        {
  183|  2.59k|            PopParsingContext();
  184|  2.59k|            continue;
  185|  2.59k|        }
  186|       |
  187|  30.3k|        const Token& token = CurrentToken();
  188|       |
  189|       |        // Parse global function definition
  190|  30.3k|        switch (token.GetTokenKind())
  191|  30.3k|        {
  192|  3.25k|            case TokenKind::KW_Func: {
  ------------------
  |  Branch (192:13): [True: 3.25k, False: 27.1k]
  ------------------
  193|  3.25k|                ConsumeCurrent();
  194|       |
  195|  3.25k|                auto function_definition = ParseFunctionDefinition();
  196|  3.25k|                if (!function_definition)
  ------------------
  |  Branch (196:21): [True: 2.74k, False: 508]
  ------------------
  197|  2.74k|                {
  198|  2.74k|                    err("ERR: Failed to parse function definition!\n");
  199|  2.74k|                    continue;
  200|  2.74k|                }
  201|       |
  202|    508|                AppendFunctionToDocument(function_definition.release_not_null());
  203|    508|                break;
  204|  3.25k|            }
  205|       |
  206|    568|            case TokenKind::Comment:
  ------------------
  |  Branch (206:13): [True: 568, False: 29.8k]
  ------------------
  207|    995|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (207:13): [True: 427, False: 29.9k]
  ------------------
  208|  1.42k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (208:13): [True: 425, False: 29.9k]
  ------------------
  209|  2.97k|            case TokenKind::NewLine: {
  ------------------
  |  Branch (209:13): [True: 1.55k, False: 28.8k]
  ------------------
  210|       |                // Simply ignore and consume newlines and comments
  211|  2.97k|                ConsumeCurrent();
  212|  2.97k|                break;
  213|  1.42k|            }
  214|  3.92k|            case TokenKind::NotAToken: {
  ------------------
  |  Branch (214:13): [True: 3.92k, False: 26.4k]
  ------------------
  215|  3.92k|                err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  216|  3.92k|                                std::string_view(token.GetText())));
  217|  3.92k|                ConsumeCurrent();
  218|  3.92k|                break;
  219|  1.42k|            }
  220|       |
  221|  1.01k|            case TokenKind::PP_Include: {
  ------------------
  |  Branch (221:13): [True: 1.01k, False: 29.3k]
  ------------------
  222|  1.01k|                ConsumeCurrent();
  223|       |
  224|  1.01k|                ParseIncludeDirective();
  225|       |
  226|  1.01k|                break;
  227|  1.42k|            }
  228|       |
  229|    311|            case TokenKind::PP_IncludeOnce: {
  ------------------
  |  Branch (229:13): [True: 311, False: 30.0k]
  ------------------
  230|    311|                ConsumeCurrent();
  231|       |
  232|    311|                m_IncludeOnceFiles.emplace(CurrentSourceFile().get());
  233|       |
  234|    311|                RequireNewLine();
  235|       |
  236|    311|                break;
  237|  1.42k|            }
  238|       |
  239|  18.8k|            default: {
  ------------------
  |  Branch (239:13): [True: 18.8k, False: 11.4k]
  ------------------
  240|  18.8k|                auto statement = ParseStatement();
  241|  18.8k|                if (!statement)
  ------------------
  |  Branch (241:21): [True: 15.5k, False: 3.30k]
  ------------------
  242|  15.5k|                {
  243|       |                    // TODO: Proper error reporting
  244|  15.5k|                    err("ERR: Failed to parse statement!\n");
  245|       |
  246|  15.5k|                    if (HasMoreTokens())
  ------------------
  |  Branch (246:25): [True: 14.3k, False: 1.20k]
  ------------------
  247|  14.3k|                    {
  248|       |                        // Swallow the bad token
  249|  14.3k|                        ConsumeCurrent();
  250|  14.3k|                    }
  251|  15.5k|                    continue;
  252|  15.5k|                }
  253|       |
  254|  3.30k|                AppendStatementToDocument(statement.release_not_null());
  255|       |
  256|  3.30k|                RequireNewLine();
  257|  3.30k|                break;
  258|  18.8k|            }
  259|  30.3k|        }
  260|  30.3k|    }
  261|  2.59k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamE:
  265|  2.59k|{
  266|  2.59k|    PushParsingContext(phi::move(source_file), phi::move(token_stream), SourceLocation::Invalid());
  267|  2.59k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamENS_14SourceLocationE:
  271|  2.59k|{
  272|  2.59k|    ParsingContext context{.source_file   = phi::move(source_file),
  273|  2.59k|                           .token_stream  = phi::move(token_stream),
  274|  2.59k|                           .included_from = phi::move(included_from)};
  275|       |
  276|  2.59k|    m_ParsingContextStack.emplace(phi::move(context));
  277|  2.59k|    m_SourceManager->SetLocalSearchPath(source_file->m_FilePath.parent_path());
  278|  2.59k|}
_ZN10OpenAutoIt6Parser17PopParsingContextEv:
  281|  2.59k|{
  282|  2.59k|    m_ParsingContextStack.pop();
  283|  2.59k|    if (!m_ParsingContextStack.empty())
  ------------------
  |  Branch (283:9): [True: 0, False: 2.59k]
  ------------------
  284|      0|    {
  285|      0|        m_SourceManager->SetLocalSearchPath(
  286|      0|                m_ParsingContextStack.top().source_file->m_FilePath.parent_path());
  287|      0|    }
  288|  2.59k|    else
  289|  2.59k|    {
  290|  2.59k|        m_SourceManager->SetLocalSearchPath("");
  291|  2.59k|    }
  292|  2.59k|}
_ZN10OpenAutoIt6Parser21CurrentParsingContextEv:
  295|    311|{
  296|    311|    PHI_ASSERT(!m_ParsingContextStack.empty());
  297|       |
  298|    311|    return m_ParsingContextStack.top();
  299|    311|}
_ZN10OpenAutoIt6Parser17CurrentSourceFileEv:
  302|    311|{
  303|    311|    return CurrentParsingContext().source_file.not_null();
  304|    311|}
_ZN10OpenAutoIt6Parser18CurrentTokenStreamEv:
  307|   208k|{
  308|   208k|    PHI_ASSERT(!m_ParsingContextStack.empty());
  309|       |
  310|   208k|    return m_ParsingContextStack.top().token_stream;
  311|   208k|}
_ZNK10OpenAutoIt6Parser18CurrentTokenStreamEv:
  314|  1.30M|{
  315|  1.30M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  316|       |
  317|  1.30M|    return m_ParsingContextStack.top().token_stream;
  318|  1.30M|}
_ZNK10OpenAutoIt6Parser13HasMoreTokensEv:
  321|   438k|{
  322|   438k|    return CurrentTokenStream().has_more();
  323|   438k|}
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  326|   429k|{
  327|   429k|    PHI_ASSERT(CurrentTokenStream().has_more());
  328|       |
  329|   429k|    return CurrentTokenStream().look_ahead();
  330|   429k|}
_ZNK10OpenAutoIt6Parser13PreviousTokenEv:
  333|  2.40k|{
  334|  2.40k|    return CurrentTokenStream().look_behind();
  335|  2.40k|}
_ZNK10OpenAutoIt6Parser21ShouldContinueParsingEv:
  338|  35.5k|{
  339|  35.5k|    const phi::boolean stack_empty          = m_ParsingContextStack.empty();
  340|  35.5k|    const phi::boolean fatal_error_occurred = m_DiagnosticEngine->HasFatalErrorOccurred();
  341|  35.5k|    const phi::boolean error_limit_reached =
  342|  35.5k|            (m_DiagnosticEngine->GetErrorLimit() == 0u ?
  ------------------
  |  Branch (342:14): [True: 35.5k, False: 0]
  ------------------
  343|  35.5k|                     false :
  344|  35.5k|                     m_DiagnosticEngine->GetNumberOfError() >= m_DiagnosticEngine->GetErrorLimit());
  345|       |
  346|  35.5k|    return !stack_empty && !fatal_error_occurred && !error_limit_reached;
  ------------------
  |  Branch (346:12): [True: 32.9k, False: 2.59k]
  |  Branch (346:28): [True: 32.9k, False: 0]
  |  Branch (346:53): [True: 32.9k, False: 0]
  ------------------
  347|  35.5k|}
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  350|   175k|{
  351|   175k|    CurrentTokenStream().consume();
  352|   175k|}
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  355|  3.61k|{
  356|  4.46k|    while (HasMoreTokens())
  ------------------
  |  Branch (356:12): [True: 4.25k, False: 213]
  ------------------
  357|  4.25k|    {
  358|  4.25k|        switch (CurrentToken().GetTokenKind())
  359|  4.25k|        {
  360|    392|            case TokenKind::Comment:
  ------------------
  |  Branch (360:13): [True: 392, False: 3.85k]
  ------------------
  361|    596|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (361:13): [True: 204, False: 4.04k]
  ------------------
  362|    851|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (362:13): [True: 255, False: 3.99k]
  ------------------
  363|    851|                ConsumeCurrent();
  364|    851|                break;
  365|       |
  366|  3.39k|            default:
  ------------------
  |  Branch (366:13): [True: 3.39k, False: 851]
  ------------------
  367|  3.39k|                return;
  368|  4.25k|        }
  369|  4.25k|    }
  370|  3.61k|}
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  373|  41.0k|{
  374|  43.8k|    while (HasMoreTokens())
  ------------------
  |  Branch (374:12): [True: 43.5k, False: 217]
  ------------------
  375|  43.5k|    {
  376|  43.5k|        switch (CurrentToken().GetTokenKind())
  377|  43.5k|        {
  378|    394|            case TokenKind::Comment:
  ------------------
  |  Branch (378:13): [True: 394, False: 43.2k]
  ------------------
  379|    588|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (379:13): [True: 194, False: 43.4k]
  ------------------
  380|    787|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (380:13): [True: 199, False: 43.3k]
  ------------------
  381|  2.75k|            case TokenKind::NewLine:
  ------------------
  |  Branch (381:13): [True: 1.96k, False: 41.6k]
  ------------------
  382|  2.75k|                ConsumeCurrent();
  383|  2.75k|                break;
  384|       |
  385|  40.8k|            default:
  ------------------
  |  Branch (385:13): [True: 40.8k, False: 2.75k]
  ------------------
  386|  40.8k|                return;
  387|  43.5k|        }
  388|  43.5k|    }
  389|  41.0k|}
_ZN10OpenAutoIt6Parser14RequireNewLineEv:
  392|  3.61k|{
  393|  3.61k|    ConsumeComments();
  394|       |
  395|  3.61k|    if (!HasMoreTokens())
  ------------------
  |  Branch (395:9): [True: 213, False: 3.39k]
  ------------------
  396|    213|    {
  397|    213|        return;
  398|    213|    }
  399|       |
  400|  3.39k|    const Token& token = CurrentToken();
  401|       |
  402|  3.39k|    if (token.GetTokenKind() != TokenKind::NewLine)
  ------------------
  |  Branch (402:9): [True: 2.13k, False: 1.26k]
  ------------------
  403|  2.13k|    {
  404|  2.13k|        Diag().Error(DiagnosticId::Expected, PreviousToken().GetBeginLocation(), "new line");
  405|  2.13k|    }
  406|       |
  407|  3.39k|    ConsumeCurrent();
  408|  3.39k|}
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  411|  82.7k|{
  412|       |    // Do we even have more tokens?
  413|  82.7k|    if (!HasMoreTokens())
  ------------------
  |  Branch (413:9): [True: 2.48k, False: 80.2k]
  ------------------
  414|  2.48k|    {
  415|  2.48k|        return {};
  416|  2.48k|    }
  417|       |
  418|  80.2k|    const Token& token = CurrentToken();
  419|       |
  420|       |    // Is this the correct token kind
  421|  80.2k|    if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (421:9): [True: 6.04k, False: 74.2k]
  ------------------
  422|  6.04k|    {
  423|  6.04k|        return {};
  424|  6.04k|    }
  425|       |
  426|  74.2k|    ConsumeCurrent();
  427|  74.2k|    return token;
  428|  80.2k|}
_ZN10OpenAutoIt6Parser4DiagEv:
  444|  3.93k|{
  445|  3.93k|    return {m_DiagnosticEngine};
  446|  3.93k|}
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  449|  3.25k|{
  450|       |    // Next we MUST parse the function name
  451|  3.25k|    auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  452|  3.25k|    if (!function_name_token)
  ------------------
  |  Branch (452:9): [True: 196, False: 3.05k]
  ------------------
  453|    196|    {
  454|    196|        err("Expected identifier for function name");
  455|    196|        return {};
  456|    196|    }
  457|       |
  458|  3.05k|    auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  459|  3.05k|    function_definition->m_FunctionName = function_name_token->GetText();
  460|       |
  461|       |    // Next we MUST parse an opening parenthesis (LParen)
  462|  3.05k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (462:9): [True: 197, False: 2.86k]
  ------------------
  463|    197|    {
  464|    197|        err("Expected opening parenthesis");
  465|    197|        return {};
  466|    197|    }
  467|       |
  468|       |    // Next we parse the function parameter declarations until right parenthesis (RParen)
  469|  4.66k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (469:12): [True: 4.62k, False: 38]
  |  Branch (469:12): [True: 3.15k, False: 1.51k]
  |  Branch (469:31): [True: 3.15k, False: 1.47k]
  ------------------
  470|  3.15k|    {
  471|  3.15k|        phi::optional<FunctionParameter> function_parameter_optional =
  472|  3.15k|                ParseFunctionParameterDefinition();
  473|  3.15k|        if (!function_parameter_optional)
  ------------------
  |  Branch (473:13): [True: 1.34k, False: 1.80k]
  ------------------
  474|  1.34k|        {
  475|       |            // TODO: Proper error reporting
  476|  1.34k|            return {};
  477|  1.34k|        }
  478|  1.80k|        FunctionParameter& function_parameter = function_parameter_optional.value();
  479|       |
  480|  1.80k|        function_definition->m_Parameters.emplace_back(phi::move(function_parameter));
  481|       |
  482|       |        // Parse comma
  483|  1.80k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (483:13): [True: 1.80k, False: 0]
  |  Branch (483:13): [True: 1.54k, False: 256]
  |  Branch (483:32): [True: 1.54k, False: 256]
  ------------------
  484|  1.54k|        {
  485|  1.54k|            ConsumeCurrent();
  486|  1.54k|        }
  487|  1.80k|    }
  488|       |
  489|       |    // Next we MUST parse a right parenthesis (RParen)
  490|  1.51k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (490:9): [True: 38, False: 1.47k]
  ------------------
  491|     38|    {
  492|     38|        err("ERR: Expected ')'");
  493|     38|        return {};
  494|     38|    }
  495|       |
  496|       |    // Next we MUST parse a new line
  497|  1.47k|    if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (497:9): [True: 400, False: 1.07k]
  ------------------
  498|    400|    {
  499|    400|        err("ERR: Missing newline!");
  500|    400|        return {};
  501|    400|    }
  502|       |
  503|       |    // Next parse Statements until EndFunc
  504|  2.47k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (504:12): [True: 2.44k, False: 30]
  |  Branch (504:12): [True: 1.93k, False: 538]
  |  Branch (504:31): [True: 1.93k, False: 508]
  ------------------
  505|  1.93k|    {
  506|  1.93k|        auto statement = ParseStatement();
  507|  1.93k|        if (!statement)
  ------------------
  |  Branch (507:13): [True: 537, False: 1.39k]
  ------------------
  508|    537|        {
  509|    537|            err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  510|    537|                            std::string_view(function_definition->m_FunctionName)));
  511|       |            // TODO: Report proper error
  512|    537|            return {};
  513|    537|        }
  514|       |
  515|  1.39k|        function_definition->m_FunctionBody.emplace_back(phi::move(statement.release_not_null()));
  516|       |
  517|  1.39k|        ConsumeNewLineAndComments();
  518|  1.39k|    }
  519|       |
  520|       |    // Next we MUST parse EndFunc
  521|    538|    if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (521:9): [True: 30, False: 508]
  ------------------
  522|     30|    {
  523|       |        // TODO: Proper error
  524|     30|        return {};
  525|     30|    }
  526|       |
  527|    508|    return phi::move(function_definition);
  528|    538|}
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  531|  3.15k|{
  532|       |    // TODO: This entire function requires more error checks
  533|  3.15k|    FunctionParameter parameter;
  534|       |
  535|  7.77k|    while (HasMoreTokens())
  ------------------
  |  Branch (535:12): [True: 7.72k, False: 57]
  ------------------
  536|  7.72k|    {
  537|  7.72k|        const Token& token = CurrentToken();
  538|       |
  539|  7.72k|        switch (token.GetTokenKind())
  540|  7.72k|        {
  541|  2.58k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (541:13): [True: 2.58k, False: 5.13k]
  ------------------
  542|  2.58k|                parameter.name = token.GetText().substring_view(1u);
  543|  2.58k|                ConsumeCurrent();
  544|  2.58k|                break;
  545|      0|            }
  546|    194|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (546:13): [True: 194, False: 7.52k]
  ------------------
  547|    194|                parameter.as_const = true;
  548|    194|                ConsumeCurrent();
  549|    194|                break;
  550|      0|            }
  551|     66|            case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (551:13): [True: 66, False: 7.65k]
  ------------------
  552|     66|                parameter.by_ref = true;
  553|     66|                ConsumeCurrent();
  554|     66|                break;
  555|      0|            }
  556|  2.49k|            case TokenKind::OP_Equals: {
  ------------------
  |  Branch (556:13): [True: 2.49k, False: 5.22k]
  ------------------
  557|  2.49k|                if (parameter.name.is_empty())
  ------------------
  |  Branch (557:21): [True: 194, False: 2.30k]
  ------------------
  558|    194|                {
  559|       |                    // TODO: PROPER ERROR
  560|    194|                    return {};
  561|    194|                }
  562|       |
  563|       |                // Consume the '='
  564|  2.30k|                ConsumeCurrent();
  565|       |
  566|       |                // Default value is an expression
  567|  2.30k|                auto default_expression = ParseExpression();
  568|  2.30k|                if (!default_expression)
  ------------------
  |  Branch (568:21): [True: 522, False: 1.77k]
  ------------------
  569|    522|                {
  570|       |                    // TODO: Report error
  571|    522|                    return {};
  572|    522|                }
  573|       |
  574|       |                // For default values we artificially create a variable assignment
  575|  1.77k|                auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  576|       |
  577|  1.77k|                default_var_assignment->m_Scope                  = VariableScope::Auto;
  578|  1.77k|                default_var_assignment->m_VariableName           = parameter.name;
  579|  1.77k|                default_var_assignment->m_InitialValueExpression = phi::move(default_expression);
  580|       |
  581|  1.77k|                parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  582|  1.77k|                break;
  583|  2.30k|            }
  584|  1.54k|            case TokenKind::Comma:
  ------------------
  |  Branch (584:13): [True: 1.54k, False: 6.17k]
  ------------------
  585|  1.80k|            case TokenKind::RParen: {
  ------------------
  |  Branch (585:13): [True: 256, False: 7.46k]
  ------------------
  586|  1.80k|                return phi::move(parameter);
  587|  1.54k|            }
  588|    575|            default: {
  ------------------
  |  Branch (588:13): [True: 575, False: 7.14k]
  ------------------
  589|       |                // TODO: Report error
  590|    575|                return {};
  591|  1.54k|            }
  592|  7.72k|        }
  593|  7.72k|    }
  594|       |
  595|       |    // TODO: Report error unexpected EOF
  596|     57|    return {};
  597|  3.15k|}
_ZN10OpenAutoIt6Parser21ParseIncludeDirectiveEv:
  600|  1.01k|{
  601|  1.01k|    if (!HasMoreTokens())
  ------------------
  |  Branch (601:9): [True: 8, False: 1.00k]
  ------------------
  602|      8|    {
  603|      8|        Diag().Error(DiagnosticId::UnexpectedEndOfFile, PreviousToken().GetBeginLocation(),
  604|      8|                     "include directive");
  605|      8|        return;
  606|      8|    }
  607|       |
  608|  1.00k|    const Token&     token = CurrentToken();
  609|  1.00k|    phi::string_view file_name;
  610|  1.00k|    IncludeType      include_type = IncludeType::Local;
  611|       |
  612|       |    // Local include like this '#include "foo.au3"'
  613|  1.00k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (613:9): [True: 266, False: 743]
  ------------------
  614|    266|    {
  615|    266|        ConsumeCurrent();
  616|       |
  617|       |        // Get the file name
  618|    266|        file_name = token.GetText().substring_view(1u, token.GetText().length() - 2u);
  619|    266|    }
  620|       |    // Global include like this '#include <foo.au3>'
  621|    743|    else if (token.GetTokenKind() == TokenKind::OP_LessThan)
  ------------------
  |  Branch (621:14): [True: 460, False: 283]
  ------------------
  622|    460|    {
  623|       |        // FIXME: This is not really a nice way, but we essentially start from after the opening '<' and include everything upto the closing '>'
  624|    460|        ConsumeCurrent();
  625|       |
  626|    460|        include_type = IncludeType::Global;
  627|    460|        file_name    = token.GetText().remove_prefix(1u);
  628|       |
  629|    460|        phi::boolean found_end{false};
  630|    460|        phi::boolean continue_parsing{true};
  631|  1.29k|        while (HasMoreTokens() && continue_parsing)
  ------------------
  |  Branch (631:16): [True: 1.27k, False: 16]
  |  Branch (631:16): [True: 830, False: 460]
  |  Branch (631:35): [True: 830, False: 444]
  ------------------
  632|    830|        {
  633|    830|            const Token& end_token = CurrentToken();
  634|       |
  635|    830|            if (end_token.GetTokenKind() == TokenKind::OP_GreaterThan)
  ------------------
  |  Branch (635:17): [True: 194, False: 636]
  ------------------
  636|    194|            {
  637|    194|                found_end        = true;
  638|    194|                continue_parsing = false;
  639|    194|                const phi::usize difference =
  640|    194|                        phi::narrow_cast<phi::usize>(end_token.GetText().data() - file_name.data());
  641|    194|                file_name.add_postfix(difference);
  642|    194|            }
  643|    636|            else if (end_token.GetTokenKind() == TokenKind::NewLine)
  ------------------
  |  Branch (643:22): [True: 257, False: 379]
  ------------------
  644|    257|            {
  645|       |                // Stop once we hit a newline
  646|    257|                continue_parsing = false;
  647|    257|            }
  648|       |
  649|    830|            ConsumeCurrent();
  650|    830|        }
  651|       |
  652|    460|        if (!found_end)
  ------------------
  |  Branch (652:13): [True: 266, False: 194]
  ------------------
  653|    266|        {
  654|    266|            Diag().Error(DiagnosticId::Expected, PreviousToken().GetEndLocation(), "'>'")
  655|    266|                    .Note(token.GetBeginLocation(), "to match this '<'");
  656|    266|            return;
  657|    266|        }
  658|    460|    }
  659|    283|    else
  660|    283|    {
  661|    283|        Diag().Error(DiagnosticId::Expected, token.GetEndLocation(), "\"Filename\" or <Filename>");
  662|    283|        return;
  663|    283|    }
  664|       |
  665|       |    // Limit include nesting
  666|    460|    if (m_ParsingContextStack.size() >= MaxNumberOfIncludeNesting)
  ------------------
  |  Branch (666:9): [True: 0, False: 460]
  ------------------
  667|      0|    {
  668|      0|        Diag().Error(DiagnosticId::IncludeNestingTooDeeply, token.GetBeginLocation());
  669|      0|        return;
  670|      0|    }
  671|       |
  672|       |    // Emit error for empty file names
  673|    460|    if (file_name.is_empty())
  ------------------
  |  Branch (673:9): [True: 194, False: 266]
  ------------------
  674|    194|    {
  675|    194|        Diag().Error(DiagnosticId::EmptyFilename, token.GetBeginLocation());
  676|    194|        return;
  677|    194|    }
  678|       |
  679|       |    // Emit error if the file name is too long
  680|    266|    if (file_name.length() > 255u)
  ------------------
  |  Branch (680:9): [True: 72, False: 194]
  ------------------
  681|     72|    {
  682|     72|        Diag().Error(DiagnosticId::FileNameTooLong, token.GetBeginLocation(),
  683|     72|                     std::string_view(file_name));
  684|     72|        return;
  685|     72|    }
  686|       |
  687|       |    // Load the file from the SourceManager
  688|    194|    phi::observer_ptr<const SourceFile> include_file =
  689|    194|            m_SourceManager->LoadFile(std::string_view(file_name), include_type);
  690|    194|    if (!include_file)
  ------------------
  |  Branch (690:9): [True: 194, False: 0]
  ------------------
  691|    194|    {
  692|    194|        Diag().Error(DiagnosticId::FileNotFound, token.GetBeginLocation(),
  693|    194|                     std::string_view(file_name));
  694|    194|        return;
  695|    194|    }
  696|       |
  697|      0|    RequireNewLine();
  698|       |
  699|       |    // Append the file
  700|      0|    AppendSourceFileToDocument(include_file.not_null(), token.GetBeginLocation());
  701|      0|}
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  704|  28.1k|{
  705|  28.1k|    ConsumeNewLineAndComments();
  706|       |
  707|  28.1k|    if (!HasMoreTokens())
  ------------------
  |  Branch (707:9): [True: 25, False: 28.1k]
  ------------------
  708|     25|    {
  709|       |        // TODO: Report proper error
  710|     25|        return {};
  711|     25|    }
  712|       |
  713|  28.1k|    phi::scope_ptr<ASTStatement> ret_statement;
  714|       |
  715|       |    // Loop until we parse something or there is nothing left to parse
  716|  28.1k|    const Token& token = CurrentToken();
  717|  28.1k|    switch (token.GetTokenKind())
  718|  28.1k|    {
  719|       |        // Variable assignment
  720|    364|        case TokenKind::KW_Const:
  ------------------
  |  Branch (720:9): [True: 364, False: 27.7k]
  ------------------
  721|    602|        case TokenKind::KW_Local:
  ------------------
  |  Branch (721:9): [True: 238, False: 27.9k]
  ------------------
  722|    954|        case TokenKind::KW_Global:
  ------------------
  |  Branch (722:9): [True: 352, False: 27.7k]
  ------------------
  723|  1.34k|        case TokenKind::KW_Static:
  ------------------
  |  Branch (723:9): [True: 388, False: 27.7k]
  ------------------
  724|  8.07k|        case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (724:9): [True: 6.73k, False: 21.4k]
  ------------------
  725|  8.07k|            ret_statement = ParseVariableAssignment();
  726|  8.07k|            if (!ret_statement)
  ------------------
  |  Branch (726:17): [True: 1.73k, False: 6.34k]
  ------------------
  727|  1.73k|            {
  728|  1.73k|                err("ERR: Failed to parse variable assignment!\n");
  729|  1.73k|                return {};
  730|  1.73k|            }
  731|  6.34k|            break;
  732|  8.07k|        }
  733|       |
  734|       |        // If Statement
  735|  6.34k|        case TokenKind::KW_If: {
  ------------------
  |  Branch (735:9): [True: 3.42k, False: 24.7k]
  ------------------
  736|  3.42k|            ret_statement = ParseIfStatement();
  737|  3.42k|            if (!ret_statement)
  ------------------
  |  Branch (737:17): [True: 3.04k, False: 388]
  ------------------
  738|  3.04k|            {
  739|  3.04k|                err("ERR: Failed to parse if statement!\n");
  740|  3.04k|                return {};
  741|  3.04k|            }
  742|    388|            break;
  743|  3.42k|        }
  744|       |
  745|       |        // While statement
  746|  1.55k|        case TokenKind::KW_While: {
  ------------------
  |  Branch (746:9): [True: 1.55k, False: 26.5k]
  ------------------
  747|  1.55k|            ret_statement = ParseWhileStatement();
  748|  1.55k|            if (!ret_statement)
  ------------------
  |  Branch (748:17): [True: 1.15k, False: 399]
  ------------------
  749|  1.15k|            {
  750|  1.15k|                err("ERR: Failed to parse while statement!\n");
  751|  1.15k|                return {};
  752|  1.15k|            }
  753|    399|            break;
  754|  1.55k|        }
  755|       |
  756|       |        // Exit statement
  757|    608|        case TokenKind::KW_Exit: {
  ------------------
  |  Branch (757:9): [True: 608, False: 27.5k]
  ------------------
  758|    608|            ret_statement = ParseExitStatement();
  759|    608|            if (!ret_statement)
  ------------------
  |  Branch (759:17): [True: 0, False: 608]
  ------------------
  760|      0|            {
  761|      0|                err("ERR: Failed to parse exit statement!\n");
  762|      0|                return {};
  763|      0|            }
  764|    608|            break;
  765|    608|        }
  766|       |
  767|  14.4k|        default: {
  ------------------
  |  Branch (767:9): [True: 14.4k, False: 13.6k]
  ------------------
  768|       |            // Try to parse ExpressionStatement
  769|  14.4k|            ret_statement = ParseExpressionStatement();
  770|  14.4k|            if (!ret_statement)
  ------------------
  |  Branch (770:17): [True: 12.5k, False: 1.97k]
  ------------------
  771|  12.5k|            {
  772|  12.5k|                err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  773|  12.5k|                                enum_name(token.GetTokenKind())));
  774|  12.5k|                return {};
  775|  12.5k|            }
  776|  1.97k|            break;
  777|  14.4k|        }
  778|  28.1k|    }
  779|       |
  780|  9.71k|    return phi::move(ret_statement);
  781|  28.1k|}
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  784|  1.55k|{
  785|  1.55k|    const Token& token = CurrentToken();
  786|  1.55k|    if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (786:9): [True: 0, False: 1.55k]
  ------------------
  787|      0|    {
  788|       |        // TODO: Proper error
  789|      0|        return {};
  790|      0|    }
  791|  1.55k|    ConsumeCurrent();
  792|       |
  793|       |    // Next we MUST parse an Expression
  794|  1.55k|    auto while_condition_expression = ParseExpression();
  795|  1.55k|    if (!while_condition_expression)
  ------------------
  |  Branch (795:9): [True: 389, False: 1.16k]
  ------------------
  796|    389|    {
  797|       |        // TODO: Proper error
  798|    389|        return {};
  799|    389|    }
  800|       |
  801|  1.16k|    auto while_statement =
  802|  1.16k|            phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  803|       |
  804|       |    // Parse statements until KW_WEnd
  805|  2.93k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (805:12): [True: 2.88k, False: 47]
  |  Branch (805:12): [True: 2.48k, False: 446]
  |  Branch (805:31): [True: 2.48k, False: 399]
  ------------------
  806|  2.48k|    {
  807|  2.48k|        ConsumeNewLineAndComments();
  808|       |
  809|       |        // Parse statements
  810|  2.48k|        auto statement = ParseStatement();
  811|  2.48k|        if (!statement)
  ------------------
  |  Branch (811:13): [True: 723, False: 1.76k]
  ------------------
  812|    723|        {
  813|       |            // TODO: Propeer error
  814|    723|            return {};
  815|    723|        }
  816|       |
  817|  1.76k|        while_statement->m_Statements.emplace_back(statement.release_not_null());
  818|  1.76k|    }
  819|       |
  820|    446|    if (!HasMoreTokens())
  ------------------
  |  Branch (820:9): [True: 47, False: 399]
  ------------------
  821|     47|    {
  822|       |        // TODO: Proper error
  823|     47|        return {};
  824|     47|    }
  825|       |
  826|       |    // Next token MUST be KW_Wend
  827|    399|    const Token& wend_token = CurrentToken();
  828|    399|    if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (828:9): [True: 0, False: 399]
  ------------------
  829|      0|    {
  830|       |        // TODO: Proper error
  831|      0|        return {};
  832|      0|    }
  833|    399|    ConsumeCurrent();
  834|       |
  835|    399|    return phi::move(while_statement);
  836|    399|}
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  839|  8.07k|{
  840|  8.07k|    auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  841|       |
  842|  8.07k|    phi::boolean parsed_identifier = false;
  843|       |    // Parse all specifiers until we hit a VariableIdentifier
  844|  16.1k|    while (HasMoreTokens() && !parsed_identifier)
  ------------------
  |  Branch (844:12): [True: 15.9k, False: 192]
  |  Branch (844:12): [True: 9.39k, False: 6.75k]
  |  Branch (844:31): [True: 9.39k, False: 6.56k]
  ------------------
  845|  9.39k|    {
  846|  9.39k|        const Token& current_token = CurrentToken();
  847|  9.39k|        ConsumeCurrent();
  848|       |
  849|  9.39k|        switch (current_token.GetTokenKind())
  850|  9.39k|        {
  851|    558|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (851:13): [True: 558, False: 8.83k]
  ------------------
  852|    558|                if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (852:21): [True: 194, False: 364]
  ------------------
  853|    194|                {
  854|       |                    // TODO: Error more than one const specifier
  855|    194|                    err("ERR: More than one const specifier given\n");
  856|    194|                    return {};
  857|    194|                }
  858|    364|                variable_declaration->m_IsConst = true;
  859|    364|                break;
  860|    558|            }
  861|       |
  862|    582|            case TokenKind::KW_Static: {
  ------------------
  |  Branch (862:13): [True: 582, False: 8.81k]
  ------------------
  863|    582|                if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (863:21): [True: 194, False: 388]
  ------------------
  864|    194|                {
  865|       |                    // TODO: Error more than one static specifier
  866|    194|                    err("ERR: More than one static specifier given\n");
  867|    194|                    return {};
  868|    194|                }
  869|    388|                variable_declaration->m_IsStatic = true;
  870|    388|                break;
  871|    582|            }
  872|       |
  873|    546|            case TokenKind::KW_Global: {
  ------------------
  |  Branch (873:13): [True: 546, False: 8.84k]
  ------------------
  874|    546|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (874:21): [True: 194, False: 352]
  ------------------
  875|    194|                {
  876|       |                    // TODO: Error more than one scope specifier
  877|    194|                    err("ERR: More than one scope specifier given\n");
  878|    194|                    return {};
  879|    194|                }
  880|    352|                variable_declaration->m_Scope = VariableScope::Global;
  881|    352|                break;
  882|    546|            }
  883|       |
  884|    432|            case TokenKind::KW_Local: {
  ------------------
  |  Branch (884:13): [True: 432, False: 8.96k]
  ------------------
  885|    432|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (885:21): [True: 194, False: 238]
  ------------------
  886|    194|                {
  887|       |                    // TODO: Error more than one scope specifier
  888|    194|                    err("ERR: More than one scope specifier given\n");
  889|    194|                    return {};
  890|    194|                }
  891|    238|                variable_declaration->m_Scope = VariableScope::Local;
  892|    238|                break;
  893|    432|            }
  894|       |
  895|  6.73k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (895:13): [True: 6.73k, False: 2.66k]
  ------------------
  896|       |                // VariableIdentifiers begin with a '$'
  897|       |                // Like: $MyVariable
  898|       |                // So for the name we ignore the very first character
  899|  6.73k|                PHI_ASSERT(current_token.GetText().length() > 1u);
  900|  6.73k|                variable_declaration->m_VariableName = current_token.GetText().substring_view(1u);
  901|       |
  902|  6.73k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  903|  6.73k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  904|       |
  905|  6.73k|                parsed_identifier = true;
  906|  6.73k|                break;
  907|    432|            }
  908|       |
  909|    542|            default: {
  ------------------
  |  Branch (909:13): [True: 542, False: 8.85k]
  ------------------
  910|       |                // TODO: Error unexpected token
  911|    542|                return {};
  912|    432|            }
  913|  9.39k|        }
  914|  9.39k|    }
  915|       |
  916|  6.75k|    if (!parsed_identifier)
  ------------------
  |  Branch (916:9): [True: 24, False: 6.73k]
  ------------------
  917|     24|    {
  918|       |        // TODO: Error variable declaration ends before the VariableIdentifier
  919|     24|        err("ERR: Missing variable identifier!\n");
  920|     24|        return {};
  921|     24|    }
  922|       |
  923|       |    // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  924|  6.73k|    if (!HasMoreTokens())
  ------------------
  |  Branch (924:9): [True: 168, False: 6.56k]
  ------------------
  925|    168|    {
  926|    168|        return variable_declaration;
  927|    168|    }
  928|       |
  929|       |    // Check for equals
  930|  6.56k|    const Token& next_token = CurrentToken();
  931|       |
  932|  6.56k|    if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (932:9): [True: 585, False: 5.97k]
  ------------------
  933|    585|    {
  934|    585|        ConsumeCurrent();
  935|       |
  936|       |        // Now me MUST parse an expression
  937|    585|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
  938|    585|        if (!expression)
  ------------------
  |  Branch (938:13): [True: 391, False: 194]
  ------------------
  939|    391|        {
  940|       |            // TODO: Error failed to parse a valid expression
  941|    391|            err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  942|    391|            return {};
  943|    391|        }
  944|       |
  945|    194|        variable_declaration->m_InitialValueExpression = phi::move(expression);
  946|    194|    }
  947|       |
  948|  6.17k|    return variable_declaration;
  949|  6.56k|}
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  952|  14.4k|{
  953|  14.4k|    auto expression = ParseExpression();
  954|  14.4k|    if (!expression)
  ------------------
  |  Branch (954:9): [True: 8.53k, False: 5.94k]
  ------------------
  955|  8.53k|    {
  956|  8.53k|        return {};
  957|  8.53k|    }
  958|       |
  959|  5.94k|    auto expression_statement =
  960|  5.94k|            phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  961|       |
  962|  5.94k|    if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (962:9): [True: 3.97k, False: 1.97k]
  ------------------
  963|  3.97k|    {
  964|  3.97k|        err(fmt::format("Expression {:s} is not valid as an statement\n",
  965|  3.97k|                        expression_statement->m_Expression->Name()));
  966|  3.97k|        return {};
  967|  3.97k|    }
  968|       |
  969|  1.97k|    return phi::move(expression_statement);
  970|  5.94k|}
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  973|  3.42k|{
  974|  3.42k|    if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (974:9): [True: 0, False: 3.42k]
  ------------------
  975|      0|    {
  976|      0|        return {};
  977|      0|    }
  978|       |
  979|       |    // Next me MUST parse an expression
  980|  3.42k|    auto if_condition = ParseExpression();
  981|  3.42k|    if (!if_condition)
  ------------------
  |  Branch (981:9): [True: 395, False: 3.03k]
  ------------------
  982|    395|    {
  983|    395|        err("ERR: failed to parse expression!\n");
  984|       |
  985|    395|        return {};
  986|    395|    }
  987|       |
  988|       |    // Next we MUST parse Then
  989|  3.03k|    if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (989:9): [True: 207, False: 2.82k]
  ------------------
  990|    207|    {
  991|    207|        err("ERR: Missing then!\n");
  992|       |
  993|    207|        return {};
  994|    207|    }
  995|       |
  996|  2.82k|    ConsumeNewLineAndComments();
  997|       |
  998|  2.82k|    IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  999|       |
 1000|       |    // Next parse statements until we hit and EndIf, ElseIf or Else
 1001|  4.28k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1001:12): [True: 4.23k, False: 45]
  |  Branch (1001:12): [True: 1.91k, False: 2.37k]
  |  Branch (1001:31): [True: 4.04k, False: 194]
  ------------------
 1002|  4.28k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1002:12): [True: 2.91k, False: 1.12k]
  ------------------
 1003|  4.28k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1003:12): [True: 1.91k, False: 1.00k]
  ------------------
 1004|  1.91k|    {
 1005|  1.91k|        auto statement = ParseStatement();
 1006|  1.91k|        if (!statement)
  ------------------
  |  Branch (1006:13): [True: 454, False: 1.45k]
  ------------------
 1007|    454|        {
 1008|    454|            err("ERR: Failed to parse statement inside of IF\n");
 1009|    454|            return {};
 1010|    454|        }
 1011|       |
 1012|  1.45k|        if_case.body.emplace_back(statement.release_not_null());
 1013|       |
 1014|  1.45k|        ConsumeNewLineAndComments();
 1015|  1.45k|    }
 1016|       |
 1017|  2.37k|    auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
 1018|       |
 1019|       |    // Handle all ElseIf cases which are optional
 1020|  4.07k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1020:12): [True: 3.72k, False: 350]
  |  Branch (1020:12): [True: 2.14k, False: 1.93k]
  |  Branch (1020:31): [True: 2.14k, False: 1.58k]
  ------------------
 1021|  2.14k|    {
 1022|       |        // Consume KW_ElseIf token
 1023|  2.14k|        ConsumeCurrent();
 1024|       |
 1025|       |        // Parse the condition
 1026|  2.14k|        auto else_if_condition = ParseExpression();
 1027|  2.14k|        if (!else_if_condition)
  ------------------
  |  Branch (1027:13): [True: 441, False: 1.70k]
  ------------------
 1028|    441|        {
 1029|    441|            return {};
 1030|    441|        }
 1031|       |
 1032|       |        // Parse KW_Then
 1033|  1.70k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (1033:13): [True: 1.48k, False: 217]
  ------------------
 1034|  1.48k|        {
 1035|       |            // TODO: Better error message and this error should be recoverable
 1036|  1.48k|            err("ERR: Missing then!\n");
 1037|  1.48k|        }
 1038|       |
 1039|  1.70k|        ConsumeNewLineAndComments();
 1040|       |
 1041|  1.70k|        IfCase else_if_case{.condition{else_if_condition.release_not_null()},
 1042|  1.70k|                            .body{ParseIfCaseStatements()}};
 1043|       |
 1044|       |        // Append our case to the if statement
 1045|  1.70k|        if_statement->m_ElseIfCases.emplace_back(phi::move(else_if_case));
 1046|  1.70k|    }
 1047|       |
 1048|       |    // Handle optional else case
 1049|  1.93k|    if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_Else)
  ------------------
  |  Branch (1049:9): [True: 1.58k, False: 350]
  |  Branch (1049:9): [True: 1.22k, False: 706]
  |  Branch (1049:28): [True: 1.22k, False: 356]
  ------------------
 1050|  1.22k|    {
 1051|       |        // Consume KW_Else token
 1052|  1.22k|        ConsumeCurrent();
 1053|       |
 1054|  1.22k|        ConsumeNewLineAndComments();
 1055|       |
 1056|  1.22k|        if_statement->m_ElseCase = ParseIfCaseStatements();
 1057|  1.22k|    }
 1058|       |
 1059|  1.93k|    if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (1059:9): [True: 1.54k, False: 388]
  ------------------
 1060|  1.54k|    {
 1061|  1.54k|        err("ERR: Missing EndIf!\n");
 1062|       |        // TODO: Proper Error
 1063|  1.54k|        return {};
 1064|  1.54k|    }
 1065|       |
 1066|    388|    return phi::move(if_statement);
 1067|  1.93k|}
_ZN10OpenAutoIt6Parser21ParseIfCaseStatementsEv:
 1070|  2.93k|{
 1071|  2.93k|    std::vector<phi::not_null_scope_ptr<ASTStatement>> statements;
 1072|       |
 1073|       |    // Parse statements until KW_EndIf, KW_Else, KW_ElseIf
 1074|  4.72k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1074:12): [True: 4.63k, False: 95]
  |  Branch (1074:12): [True: 2.94k, False: 1.77k]
  |  Branch (1074:31): [True: 4.43k, False: 194]
  ------------------
 1075|  4.72k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1075:12): [True: 4.05k, False: 385]
  ------------------
 1076|  4.72k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1076:12): [True: 2.94k, False: 1.10k]
  ------------------
 1077|  2.94k|    {
 1078|  2.94k|        auto statement = ParseStatement();
 1079|  2.94k|        if (!statement)
  ------------------
  |  Branch (1079:13): [True: 1.15k, False: 1.79k]
  ------------------
 1080|  1.15k|        {
 1081|  1.15k|            err("ERR: Failed to parse statement inside of IF\n");
 1082|  1.15k|            return {};
 1083|  1.15k|        }
 1084|       |
 1085|  1.79k|        statements.emplace_back(statement.release_not_null());
 1086|       |
 1087|  1.79k|        ConsumeNewLineAndComments();
 1088|  1.79k|    }
 1089|       |
 1090|  1.77k|    return statements;
 1091|  2.93k|}
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
 1094|  19.7k|{
 1095|  19.7k|    const Token& token = CurrentToken();
 1096|  19.7k|    if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1096:9): [True: 0, False: 19.7k]
  ------------------
 1097|      0|    {
 1098|      0|        return {};
 1099|      0|    }
 1100|       |
 1101|  19.7k|    phi::int64_t value{0};
 1102|  19.7k|    phi::boolean parsing_hex{false};
 1103|  54.9k|    for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (1103:32): [True: 35.9k, False: 18.9k]
  ------------------
 1104|  35.9k|    {
 1105|  35.9k|        const char character = token.GetText().at(index);
 1106|       |
 1107|       |        // Checking the second character
 1108|  35.9k|        if (index == 1u)
  ------------------
  |  Branch (1108:13): [True: 1.58k, False: 34.3k]
  ------------------
 1109|  1.58k|        {
 1110|  1.58k|            if (character == 'x' || character == 'X')
  ------------------
  |  Branch (1110:17): [True: 274, False: 1.31k]
  |  Branch (1110:37): [True: 646, False: 668]
  ------------------
 1111|    920|            {
 1112|    920|                parsing_hex = true;
 1113|    920|                continue;
 1114|    920|            }
 1115|  1.58k|        }
 1116|       |
 1117|  35.0k|        if (parsing_hex)
  ------------------
  |  Branch (1117:13): [True: 7.07k, False: 27.9k]
  ------------------
 1118|  7.07k|        {
 1119|  7.07k|            PHI_ASSERT(phi::is_hex_digit(character));
 1120|       |
 1121|  7.07k|            if (phi::detail::will_multiplication_error(phi::detail::unsigned_integer_tag{}, value,
  ------------------
  |  Branch (1121:17): [True: 201, False: 6.87k]
  ------------------
 1122|  7.07k|                                                       phi::int64_t(16)) ||
 1123|  7.07k|                phi::detail::will_addition_error(phi::detail::unsigned_integer_tag{}, value * 16,
  ------------------
  |  Branch (1123:17): [True: 194, False: 6.68k]
  ------------------
 1124|  6.87k|                                                 phi::int64_t(character - '0')))
 1125|    395|            {
 1126|    395|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1127|    395|                ConsumeCurrent();
 1128|    395|                return {};
 1129|    395|            }
 1130|       |
 1131|  6.68k|            value <<= 4;
 1132|  6.68k|            value |= phi::hex_digit_value(character).unsafe();
 1133|  6.68k|        }
 1134|  27.9k|        else
 1135|  27.9k|        {
 1136|  27.9k|            PHI_ASSERT(character >= '0' && character <= '9');
 1137|       |
 1138|  27.9k|            if (phi::detail::will_multiplication_error(phi::detail::signed_integer_tag{}, value,
  ------------------
  |  Branch (1138:17): [True: 196, False: 27.7k]
  ------------------
 1139|  27.9k|                                                       phi::int64_t(10)) ||
 1140|  27.9k|                phi::detail::will_addition_error(phi::detail::signed_integer_tag{}, value * 10,
  ------------------
  |  Branch (1140:17): [True: 194, False: 27.5k]
  ------------------
 1141|  27.7k|                                                 phi::int64_t(character - '0')))
 1142|    390|            {
 1143|    390|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1144|    390|                ConsumeCurrent();
 1145|    390|                return {};
 1146|    390|            }
 1147|       |
 1148|  27.5k|            value *= 10;
 1149|  27.5k|            value += (character - '0');
 1150|  27.5k|        }
 1151|  35.0k|    }
 1152|       |
 1153|  18.9k|    ConsumeCurrent();
 1154|  18.9k|    return phi::make_scope<ASTIntegerLiteral>(value);
 1155|  19.7k|}
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
 1158|  1.85k|{
 1159|  1.85k|    const Token& token = CurrentToken();
 1160|  1.85k|    if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (1160:9): [True: 0, False: 1.85k]
  ------------------
 1161|      0|    {
 1162|      0|        return {};
 1163|      0|    }
 1164|  1.85k|    ConsumeCurrent();
 1165|       |
 1166|  1.85k|    auto string_literal = phi::make_scope<ASTStringLiteral>();
 1167|       |
 1168|  1.85k|    const phi::usize length = token.GetText().length();
 1169|       |    // Trim the trailing and leading "
 1170|  1.85k|    string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
 1171|       |
 1172|  1.85k|    return phi::move(string_literal);
 1173|  1.85k|}
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
 1176|  88.7k|{
 1177|  88.7k|    phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
 1178|  88.7k|    if (!lhs_expression)
  ------------------
  |  Branch (1178:9): [True: 64.3k, False: 24.3k]
  ------------------
 1179|  64.3k|    {
 1180|  64.3k|        return {};
 1181|  64.3k|    }
 1182|       |
 1183|  24.3k|    return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
 1184|  88.7k|}
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
 1187|  96.0k|{
 1188|  96.0k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1188:9): [True: 346, False: 95.6k]
  ------------------
 1189|    346|    {
 1190|       |        // TODO: Proper error
 1191|    346|        return {};
 1192|    346|    }
 1193|       |
 1194|  95.6k|    const Token& token = CurrentToken();
 1195|  95.6k|    if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (1195:9): [True: 2.48k, False: 93.1k]
  ------------------
 1196|  2.48k|    {
 1197|  2.48k|        const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
 1198|  2.48k|        PHI_UNUSED_VARIABLE(op_precedence);
 1199|  2.48k|        ConsumeCurrent();
 1200|       |
 1201|  2.48k|        phi::scope_ptr<ASTExpression> unary_expression = ParseUnaryExpression(token.GetTokenKind());
 1202|  2.48k|        if (!unary_expression)
  ------------------
  |  Branch (1202:13): [True: 1.20k, False: 1.27k]
  ------------------
 1203|  1.20k|        {
 1204|       |            // TODO: Proper error
 1205|  1.20k|            return {};
 1206|  1.20k|        }
 1207|       |
 1208|  1.27k|        return phi::move(unary_expression);
 1209|  2.48k|    }
 1210|  93.1k|    if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (1210:9): [True: 2.92k, False: 90.2k]
  ------------------
 1211|  2.92k|    {
 1212|       |        // Consume the LParen
 1213|  2.92k|        ConsumeCurrent();
 1214|       |
 1215|  2.92k|        phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
 1216|  2.92k|        if (!paren_expression)
  ------------------
  |  Branch (1216:13): [True: 2.56k, False: 363]
  ------------------
 1217|  2.56k|        {
 1218|       |            // TODO: Proper error
 1219|  2.56k|            return {};
 1220|  2.56k|        }
 1221|       |
 1222|    363|        return phi::move(paren_expression);
 1223|  2.92k|    }
 1224|  90.2k|    if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1224:9): [True: 19.7k, False: 70.4k]
  ------------------
 1225|  19.7k|    {
 1226|  19.7k|        phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
 1227|  19.7k|        if (!int_literal)
  ------------------
  |  Branch (1227:13): [True: 785, False: 18.9k]
  ------------------
 1228|    785|        {
 1229|       |            // TODO: Error failed to parse integer literal
 1230|    785|            return {};
 1231|    785|        }
 1232|       |
 1233|  18.9k|        return phi::move(int_literal);
 1234|  19.7k|    }
 1235|  70.4k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (1235:9): [True: 1.85k, False: 68.6k]
  ------------------
 1236|  1.85k|    {
 1237|  1.85k|        auto string_literal_expression = ParseStringLiteral();
 1238|  1.85k|        if (!string_literal_expression)
  ------------------
  |  Branch (1238:13): [True: 0, False: 1.85k]
  ------------------
 1239|      0|        {
 1240|       |            // TODO: Proper error
 1241|      0|            return {};
 1242|      0|        }
 1243|       |
 1244|  1.85k|        return phi::move(string_literal_expression);
 1245|  1.85k|    }
 1246|       |
 1247|       |    // Boolean literal
 1248|  68.6k|    if (token.GetTokenKind() == TokenKind::KW_True || token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1248:9): [True: 355, False: 68.2k]
  |  Branch (1248:55): [True: 194, False: 68.0k]
  ------------------
 1249|    549|    {
 1250|    549|        auto boolean_literal = ParseBooleanLiteral();
 1251|    549|        if (!boolean_literal)
  ------------------
  |  Branch (1251:13): [True: 0, False: 549]
  ------------------
 1252|      0|        {
 1253|       |            // TODO: Proper error
 1254|      0|            return {};
 1255|      0|        }
 1256|       |
 1257|    549|        return phi::move(boolean_literal);
 1258|    549|    }
 1259|       |
 1260|       |    // Function call/reference expression
 1261|  68.0k|    if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (1261:9): [True: 5.26k, False: 62.8k]
  |  Branch (1261:9): [True: 5.74k, False: 62.3k]
  |  Branch (1261:66): [True: 480, False: 62.3k]
  ------------------
 1262|  5.74k|    {
 1263|  5.74k|        auto function_expression = ParseFunctionExpression();
 1264|  5.74k|        if (!function_expression)
  ------------------
  |  Branch (1264:13): [True: 1.76k, False: 3.98k]
  ------------------
 1265|  1.76k|        {
 1266|       |            // TODO: Proper error
 1267|  1.76k|            err("ERR: Failed to parse function expression!\n");
 1268|  1.76k|            return {};
 1269|  1.76k|        }
 1270|       |
 1271|  3.98k|        return phi::move(function_expression);
 1272|  5.74k|    }
 1273|       |    // Variable expression
 1274|  62.3k|    if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1274:9): [True: 1.09k, False: 61.2k]
  ------------------
 1275|  1.09k|    {
 1276|  1.09k|        auto variable_expression = ParseVariableExpression();
 1277|  1.09k|        if (!variable_expression)
  ------------------
  |  Branch (1277:13): [True: 0, False: 1.09k]
  ------------------
 1278|      0|        {
 1279|       |            // TODO: Proper error
 1280|      0|            err("ERR: Failed to parse Variable expression\n");
 1281|      0|            return {};
 1282|      0|        }
 1283|       |
 1284|  1.09k|        return phi::move(variable_expression);
 1285|  1.09k|    }
 1286|       |    // Keyword literal
 1287|  61.2k|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1287:9): [True: 388, False: 60.8k]
  ------------------
 1288|    388|    {
 1289|    388|        auto keyword_literal = ParseKeywordLiteral();
 1290|    388|        if (!keyword_literal)
  ------------------
  |  Branch (1290:13): [True: 0, False: 388]
  ------------------
 1291|      0|        {
 1292|       |            // TODO: Proper error
 1293|      0|            err("ERR: Failed to parse keyword literal expression!\n");
 1294|      0|            return {};
 1295|      0|        }
 1296|       |
 1297|    388|        return phi::move(keyword_literal);
 1298|    388|    }
 1299|       |    // Float literal
 1300|  60.8k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1300:9): [True: 373, False: 60.4k]
  ------------------
 1301|    373|    {
 1302|    373|        auto float_literal = ParseFloatLiteral();
 1303|    373|        if (!float_literal)
  ------------------
  |  Branch (1303:13): [True: 0, False: 373]
  ------------------
 1304|      0|        {
 1305|       |            // TODO: Proper error
 1306|      0|            err("ERR: Failed to parse float literal expression!\n");
 1307|      0|            return {};
 1308|      0|        }
 1309|       |
 1310|    373|        return phi::move(float_literal);
 1311|    373|    }
 1312|       |    // ArraySubscript expression
 1313|  60.4k|    if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (1313:9): [True: 50.6k, False: 9.79k]
  ------------------
 1314|  50.6k|    {
 1315|  50.6k|        auto subscript_expression = ParseArraySubscriptExpression();
 1316|  50.6k|        if (!subscript_expression)
  ------------------
  |  Branch (1316:13): [True: 50.2k, False: 388]
  ------------------
 1317|  50.2k|        {
 1318|  50.2k|            err("ERR: Failed to parse array subscript expression\n");
 1319|  50.2k|            return {};
 1320|  50.2k|        }
 1321|       |
 1322|    388|        return phi::move(subscript_expression);
 1323|  50.6k|    }
 1324|  9.79k|    if (token.IsMacro())
  ------------------
  |  Branch (1324:9): [True: 494, False: 9.29k]
  ------------------
 1325|    494|    {
 1326|    494|        ConsumeCurrent();
 1327|       |
 1328|    494|        phi::scope_ptr<ASTExpression> macro_expression = ParseMacroExpression(token.GetTokenKind());
 1329|    494|        if (!macro_expression)
  ------------------
  |  Branch (1329:13): [True: 0, False: 494]
  ------------------
 1330|      0|        {
 1331|       |            // TODO: Proper error
 1332|      0|            return {};
 1333|      0|        }
 1334|       |
 1335|    494|        return macro_expression;
 1336|    494|    }
 1337|       |
 1338|       |    // TODO: Error Unexpected token
 1339|  9.29k|    err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
 1340|  9.29k|                    enum_name(token.GetTokenKind())));
 1341|  9.29k|    return {};
 1342|  9.79k|}
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
 1346|  24.8k|{
 1347|  29.8k|    while (true)
  ------------------
  |  Branch (1347:12): [Folded - Ignored]
  ------------------
 1348|  29.8k|    {
 1349|  29.8k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1349:13): [True: 1.03k, False: 28.7k]
  ------------------
 1350|  1.03k|        {
 1351|  1.03k|            return phi::move(lhs);
 1352|  1.03k|        }
 1353|       |
 1354|  28.7k|        const Token& operator_token = CurrentToken();
 1355|  28.7k|        if (!IsBinaryOperator(operator_token.GetTokenKind()) &&
  ------------------
  |  Branch (1355:13): [True: 21.2k, False: 7.50k]
  |  Branch (1355:13): [True: 19.9k, False: 8.76k]
  ------------------
 1356|  28.7k|            operator_token.GetTokenKind() != TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1356:13): [True: 19.9k, False: 1.26k]
  ------------------
 1357|  19.9k|        {
 1358|       |            // If its not a binary operator and not a ternary just return the lhs expression
 1359|  19.9k|            return phi::move(lhs);
 1360|  19.9k|        }
 1361|  8.76k|        int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
 1362|  8.76k|        ConsumeCurrent();
 1363|       |
 1364|  8.76k|        if (token_precedence < precedence)
  ------------------
  |  Branch (1364:13): [True: 194, False: 8.57k]
  ------------------
 1365|    194|        {
 1366|    194|            return phi::move(lhs);
 1367|    194|        }
 1368|       |
 1369|  8.57k|        if (operator_token.GetTokenKind() == TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1369:13): [True: 1.26k, False: 7.31k]
  ------------------
 1370|  1.26k|        {
 1371|  1.26k|            phi::scope_ptr<ASTTernaryIfExpression> ternary_if_expression =
 1372|  1.26k|                    ParseTernaryIfExpression(phi::move(lhs));
 1373|  1.26k|            if (!ternary_if_expression)
  ------------------
  |  Branch (1373:17): [True: 874, False: 387]
  ------------------
 1374|    874|            {
 1375|       |                // TODO: Proper error
 1376|    874|                return {};
 1377|    874|            }
 1378|       |
 1379|    387|            return phi::move(ternary_if_expression);
 1380|  1.26k|        }
 1381|       |
 1382|       |        // This must be an binary expression
 1383|  7.31k|        phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
 1384|  7.31k|        if (!rhs_expression)
  ------------------
  |  Branch (1384:13): [True: 1.88k, False: 5.42k]
  ------------------
 1385|  1.88k|        {
 1386|       |            // TODO: Proper error
 1387|  1.88k|            return {};
 1388|  1.88k|        }
 1389|       |
 1390|       |        // Nothing left to parse so directly return from here
 1391|  5.42k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1391:13): [True: 240, False: 5.18k]
  ------------------
 1392|    240|        {
 1393|    240|            return phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1394|    240|                                                                 operator_token.GetTokenKind(),
 1395|    240|                                                                 rhs_expression.release_not_null());
 1396|    240|        }
 1397|       |
 1398|       |        // If BinOp binds less tightly with RHS than the operator after RHS, let
 1399|       |        // the pending operator take RHS as its LHS.
 1400|  5.18k|        const Token& next_token      = CurrentToken();
 1401|  5.18k|        int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1402|       |
 1403|  5.18k|        if (token_precedence < next_precedence)
  ------------------
  |  Branch (1403:13): [True: 475, False: 4.71k]
  ------------------
 1404|    475|        {
 1405|    475|            rhs_expression =
 1406|    475|                    ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1407|    475|            if (!rhs_expression)
  ------------------
  |  Branch (1407:17): [True: 194, False: 281]
  ------------------
 1408|    194|            {
 1409|       |                // TODO: Proper error
 1410|    194|                return {};
 1411|    194|            }
 1412|    475|        }
 1413|       |
 1414|       |        // Merge LHS/RHS.
 1415|  4.99k|        lhs = phi::make_not_null_scope<ASTBinaryExpression>(
 1416|  4.99k|                phi::move(lhs), operator_token.GetTokenKind(), rhs_expression.release_not_null());
 1417|  4.99k|    }
 1418|  24.8k|}
_ZN10OpenAutoIt6Parser23ParseFunctionExpressionEv:
 1421|  5.74k|{
 1422|       |    // Parse the function name
 1423|  5.74k|    const Token& function_identifier_token = CurrentToken();
 1424|  5.74k|    if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1424:9): [True: 480, False: 5.26k]
  |  Branch (1424:9): [True: 0, False: 5.74k]
  ------------------
 1425|  5.74k|        !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1425:9): [True: 0, False: 480]
  ------------------
 1426|      0|    {
 1427|      0|        return {};
 1428|      0|    }
 1429|  5.74k|    ConsumeCurrent();
 1430|       |
 1431|  5.74k|    const FunctionReference function_reference =
 1432|  5.74k|            function_identifier_token.IsBuiltInFunction() ?
  ------------------
  |  Branch (1432:13): [True: 480, False: 5.26k]
  ------------------
 1433|    480|                    FunctionReference{function_identifier_token} :
 1434|  5.74k|                    FunctionReference{function_identifier_token.GetText()};
 1435|       |
 1436|       |    // If we parse an opening parenthesis we have a function call expression otherwise just a function reference
 1437|  5.74k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (1437:9): [True: 1.99k, False: 3.75k]
  ------------------
 1438|  1.99k|    {
 1439|  1.99k|        return phi::make_scope<ASTFunctionReferenceExpression>(function_reference);
 1440|  1.99k|    }
 1441|       |
 1442|  3.75k|    phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1443|  3.75k|            phi::make_scope<ASTFunctionCallExpression>(function_reference);
 1444|  3.75k|    if (!function_call_expression)
  ------------------
  |  Branch (1444:9): [True: 0, False: 3.75k]
  ------------------
 1445|      0|    {
 1446|       |        // TODO: Proper error
 1447|      0|        return {};
 1448|      0|    }
 1449|       |
 1450|       |    // Now parse all the arguments (which are expressions) separated by commas or nothing
 1451|  3.75k|    function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1452|       |
 1453|       |    // Finally we MUST parse an RParen
 1454|  3.75k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1454:9): [True: 1.76k, False: 1.99k]
  ------------------
 1455|  1.76k|    {
 1456|  1.76k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1457|  1.76k|                        std::string_view{function_call_expression->FunctionName()}));
 1458|       |        // TODO: Give proper error
 1459|  1.76k|        return {};
 1460|  1.76k|    }
 1461|       |
 1462|       |    // Return result
 1463|  1.99k|    return function_call_expression;
 1464|  3.75k|}
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1467|  3.75k|{
 1468|  3.75k|    std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1469|       |
 1470|  7.63k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1470:12): [True: 7.51k, False: 127]
  |  Branch (1470:12): [True: 5.71k, False: 1.92k]
  |  Branch (1470:31): [True: 5.71k, False: 1.79k]
  ------------------
 1471|  5.71k|    {
 1472|       |        // Parse the expression
 1473|  5.71k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1474|  5.71k|        if (!expression)
  ------------------
  |  Branch (1474:13): [True: 1.83k, False: 3.88k]
  ------------------
 1475|  1.83k|        {
 1476|  1.83k|            arguments.clear();
 1477|  1.83k|            return arguments;
 1478|  1.83k|        }
 1479|       |
 1480|       |        // Add argument to parameters
 1481|  3.88k|        arguments.emplace_back(expression.release_not_null());
 1482|       |
 1483|       |        // Next Token MUST be a comma followed by another expression or RParen
 1484|  3.88k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1484:13): [True: 3.78k, False: 93]
  |  Branch (1484:13): [True: 195, False: 3.68k]
  |  Branch (1484:32): [True: 195, False: 3.59k]
  ------------------
 1485|    195|        {
 1486|    195|            ConsumeCurrent();
 1487|    195|        }
 1488|  3.88k|    }
 1489|       |
 1490|  1.92k|    return arguments;
 1491|  3.75k|}
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1494|  1.09k|{
 1495|  1.09k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1495:9): [True: 0, False: 1.09k]
  ------------------
 1496|      0|    {
 1497|       |        // TODO: Proper error
 1498|      0|        return {};
 1499|      0|    }
 1500|       |
 1501|  1.09k|    const Token& token = CurrentToken();
 1502|  1.09k|    if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1502:9): [True: 0, False: 1.09k]
  ------------------
 1503|      0|    {
 1504|       |        // TODO error
 1505|      0|        return {};
 1506|      0|    }
 1507|       |
 1508|  1.09k|    auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1509|  1.09k|    variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1510|       |
 1511|  1.09k|    ConsumeCurrent();
 1512|       |
 1513|  1.09k|    return phi::move(variable_expression);
 1514|  1.09k|}
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1520|  50.6k|{
 1521|  50.6k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1521:9): [True: 0, False: 50.6k]
  ------------------
 1522|      0|    {
 1523|      0|        return {};
 1524|      0|    }
 1525|       |
 1526|  50.6k|    if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1526:9): [True: 0, False: 50.6k]
  ------------------
 1527|      0|    {
 1528|      0|        return {};
 1529|      0|    }
 1530|       |
 1531|  50.6k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1532|  50.6k|    if (!expression)
  ------------------
  |  Branch (1532:9): [True: 50.0k, False: 593]
  ------------------
 1533|  50.0k|    {
 1534|  50.0k|        return {};
 1535|  50.0k|    }
 1536|       |
 1537|    593|    if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1537:9): [True: 205, False: 388]
  ------------------
 1538|    205|    {
 1539|    205|        return {};
 1540|    205|    }
 1541|       |
 1542|    388|    return phi::make_scope<ASTArraySubscriptExpression>(phi::move(expression.release_not_null()));
 1543|    593|}
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1548|  2.92k|{
 1549|       |    // NOTE: Me MUST have consumed the LParen before this
 1550|       |
 1551|  2.92k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1552|  2.92k|    if (!expression)
  ------------------
  |  Branch (1552:9): [True: 2.33k, False: 590]
  ------------------
 1553|  2.33k|    {
 1554|       |        // TODO: Proper error
 1555|  2.33k|        return {};
 1556|  2.33k|    }
 1557|       |
 1558|    590|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1558:9): [True: 227, False: 363]
  ------------------
 1559|    227|    {
 1560|       |        // TODO: Proper error expected closing paren
 1561|    227|        return {};
 1562|    227|    }
 1563|       |
 1564|    363|    return phi::move(expression);
 1565|    590|}
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1568|    608|{
 1569|    608|    if (!HasMoreTokens())
  ------------------
  |  Branch (1569:9): [True: 0, False: 608]
  ------------------
 1570|      0|    {
 1571|      0|        return {};
 1572|      0|    }
 1573|       |
 1574|    608|    if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1574:9): [True: 0, False: 608]
  ------------------
 1575|      0|    {
 1576|      0|        return {};
 1577|      0|    }
 1578|       |
 1579|       |    // Parse optional expression
 1580|    608|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1581|       |
 1582|    608|    return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1583|    608|}
_ZN10OpenAutoIt6Parser20ParseUnaryExpressionENS_9TokenKindE:
 1586|  2.48k|{
 1587|  2.48k|    PHI_ASSERT(IsUnaryOperator(operator_kind));
 1588|       |
 1589|  2.48k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1589:9): [True: 35, False: 2.45k]
  ------------------
 1590|     35|    {
 1591|     35|        return {};
 1592|     35|    }
 1593|       |
 1594|       |    // Parse expression
 1595|  2.45k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1596|  2.45k|    if (!expression)
  ------------------
  |  Branch (1596:9): [True: 1.17k, False: 1.27k]
  ------------------
 1597|  1.17k|    {
 1598|       |        // TODO: Proper error
 1599|  1.17k|        return {};
 1600|  1.17k|    }
 1601|       |
 1602|  1.27k|    return phi::make_scope<ASTUnaryExpression>(operator_kind,
 1603|  1.27k|                                               phi::move(expression.release_not_null()));
 1604|  2.45k|}
_ZN10OpenAutoIt6Parser24ParseTernaryIfExpressionEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
 1608|  1.26k|{
 1609|  1.26k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1609:9): [True: 9, False: 1.25k]
  ------------------
 1610|      9|    {
 1611|      9|        return {};
 1612|      9|    }
 1613|       |
 1614|  1.25k|    phi::scope_ptr<ASTExpression> true_expression = ParseExpression();
 1615|  1.25k|    if (!true_expression)
  ------------------
  |  Branch (1615:9): [True: 424, False: 828]
  ------------------
 1616|    424|    {
 1617|    424|        return {};
 1618|    424|    }
 1619|       |
 1620|       |    // Must parse the else part ":"
 1621|    828|    if (!MustParse(TokenKind::OP_TernaryElse))
  ------------------
  |  Branch (1621:9): [True: 247, False: 581]
  ------------------
 1622|    247|    {
 1623|    247|        err("Missing ':' for ternary if\n");
 1624|    247|        return {};
 1625|    247|    }
 1626|       |
 1627|    581|    phi::scope_ptr<ASTExpression> false_expression = ParseExpression();
 1628|    581|    if (!false_expression)
  ------------------
  |  Branch (1628:9): [True: 194, False: 387]
  ------------------
 1629|    194|    {
 1630|    194|        return {};
 1631|    194|    }
 1632|       |
 1633|    387|    return phi::make_scope<ASTTernaryIfExpression>(phi::move(condition),
 1634|    387|                                                   phi::move(true_expression.release_not_null()),
 1635|    387|                                                   phi::move(false_expression.release_not_null()));
 1636|    581|}
_ZN10OpenAutoIt6Parser20ParseMacroExpressionENS_9TokenKindE:
 1639|    494|{
 1640|    494|    const auto macro = static_cast<phi::size_t>(macro_kind);
 1641|    494|    PHI_ASSERT(macro >= MacroFirst && macro <= MacroLast);
 1642|       |
 1643|    494|    return phi::make_scope<ASTMacroExpression>(macro_kind);
 1644|    494|}
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1647|    549|{
 1648|    549|    if (!HasMoreTokens())
  ------------------
  |  Branch (1648:9): [True: 0, False: 549]
  ------------------
 1649|      0|    {
 1650|       |        // TODO: Proper error
 1651|      0|        return {};
 1652|      0|    }
 1653|       |
 1654|       |    // BooleanLiteral is either KW_True or KW_False
 1655|    549|    const Token& token = CurrentToken();
 1656|    549|    if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1656:9): [True: 355, False: 194]
  ------------------
 1657|    355|    {
 1658|    355|        ConsumeCurrent();
 1659|    355|        return phi::make_scope<ASTBooleanLiteral>(true);
 1660|    355|    }
 1661|       |
 1662|    194|    if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1662:9): [True: 194, False: 0]
  ------------------
 1663|    194|    {
 1664|    194|        ConsumeCurrent();
 1665|    194|        return phi::make_scope<ASTBooleanLiteral>(false);
 1666|    194|    }
 1667|       |
 1668|       |    // TODO: Proper error
 1669|      0|    return {};
 1670|    194|}
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1673|    388|{
 1674|    388|    if (!HasMoreTokens())
  ------------------
  |  Branch (1674:9): [True: 0, False: 388]
  ------------------
 1675|      0|    {
 1676|       |        // TODO: Proper error
 1677|      0|        return {};
 1678|      0|    }
 1679|       |
 1680|    388|    const Token& token = CurrentToken();
 1681|    388|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1681:9): [True: 388, False: 0]
  ------------------
 1682|    388|    {
 1683|    388|        ConsumeCurrent();
 1684|    388|        return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1685|    388|    }
 1686|       |
 1687|       |    // TODO: Proper error
 1688|      0|    return {};
 1689|    388|}
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1692|    373|{
 1693|    373|    if (!HasMoreTokens())
  ------------------
  |  Branch (1693:9): [True: 0, False: 373]
  ------------------
 1694|      0|    {
 1695|       |        // TODO: Proper error
 1696|      0|        return {};
 1697|      0|    }
 1698|       |
 1699|    373|    const Token& token = CurrentToken();
 1700|    373|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1700:9): [True: 373, False: 0]
  ------------------
 1701|    373|    {
 1702|    373|        ConsumeCurrent();
 1703|       |
 1704|    373|        char*    ptr   = nullptr;
 1705|    373|        phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1706|       |
 1707|    373|        return phi::make_scope<ASTFloatLiteral>(value);
 1708|    373|    }
 1709|       |
 1710|       |    // TODO: Proper error
 1711|      0|    return {};
 1712|    373|}
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   72|  16.4k|    {
   73|  16.4k|        int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   74|       |        //PHI_ASSERT(precedence != 0);
   75|       |
   76|  16.4k|        return precedence;
   77|  16.4k|    }

_ZN10OpenAutoIt10SourceFileC2ENS0_4TypeENSt3__14__fs10filesystem4pathEN3phi17basic_string_viewIcNS2_11char_traitsIcEEEE:
   12|  5.18k|{}

_ZN10OpenAutoIt13SourceManager18SetLocalSearchPathERKNSt3__14__fs10filesystem4pathE:
   14|  5.18k|{}
_ZN10OpenAutoIt18EmptySourceManager8LoadFileEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_11IncludeTypeE:
  156|    194|{
  157|    194|    return {};
  158|    194|}

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  2.59k|{
   31|       |#if defined(PHI_DEBUG)
   32|       |    PHI_ASSERT(!m_Finalized);
   33|       |#endif
   34|       |
   35|  2.59k|    m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |    m_Finalized = true;
   38|       |#endif
   39|  2.59k|}
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   68|   901k|{
   69|       |#if defined(PHI_DEBUG)
   70|       |    PHI_ASSERT(m_Finalized);
   71|       |#endif
   72|       |
   73|   901k|    return m_Index < m_Tokens.size();
   74|   901k|}
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   77|   604k|{
   78|       |#if defined(PHI_DEBUG)
   79|       |    PHI_ASSERT(m_Finalized);
   80|       |#endif
   81|       |
   82|   604k|    return m_Index >= m_Tokens.size();
   83|   604k|}
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   86|   429k|{
   87|   429k|    PHI_ASSERT(!reached_end());
   88|       |#if defined(PHI_DEBUG)
   89|       |    PHI_ASSERT(m_Finalized);
   90|       |#endif
   91|       |
   92|   429k|    return m_Tokens[m_Index.unsafe()];
   93|   429k|}
_ZNK10OpenAutoIt11TokenStream11look_behindEv:
   96|  2.40k|{
   97|  2.40k|    PHI_ASSERT(!m_Tokens.empty());
   98|       |#if defined(PHI_DEBUG)
   99|       |    PHI_ASSERT(m_Finalized);
  100|       |#endif
  101|       |
  102|  2.40k|    if (m_Index == 0u)
  ------------------
  |  Branch (102:9): [True: 0, False: 2.40k]
  ------------------
  103|      0|    {
  104|      0|        return m_Tokens[0u];
  105|      0|    }
  106|       |
  107|  2.40k|    return m_Tokens[m_Index.unsafe() - 1u];
  108|  2.40k|}
_ZN10OpenAutoIt11TokenStream7consumeEv:
  111|   175k|{
  112|   175k|    PHI_ASSERT(!reached_end());
  113|       |#if defined(PHI_DEBUG)
  114|       |    PHI_ASSERT(m_Finalized);
  115|       |#endif
  116|       |
  117|   175k|    m_Index += 1u;
  118|   175k|}

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|   115k|{
  100|   115k|    if (output_enabled)
  ------------------
  |  Branch (100:9): [True: 0, False: 115k]
  ------------------
  101|      0|    {
  102|      0|        std::cerr << data;
  103|      0|    }
  104|   115k|}
_ZN10OpenAutoIt14disable_outputEv:
  107|  2.59k|{
  108|  2.59k|    output_enabled = false;
  109|  2.59k|}

