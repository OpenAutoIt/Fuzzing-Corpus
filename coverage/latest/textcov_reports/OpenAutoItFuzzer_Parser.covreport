_ZN3fmt2v96detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  375|   543k|    typename std::make_unsigned<Int>::type {
  376|   543k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  334|  1.08M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (334:35): [Folded - Ignored]
  |  |  |  Branch (334:35): [True: 543k, False: 0]
  |  |  ------------------
  ------------------
  377|   543k|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  378|   543k|}
_ZN3fmt2v96detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  302|  4.39M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v917basic_string_viewIcE4sizeEv:
  443|  2.79M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  302|   543k|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE4sizeEv:
  901|   543k|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail6bufferIcEC2EPcmm:
  873|   543k|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt2v96detail6bufferIcE3setEPcm:
  879|   543k|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  880|   543k|    ptr_ = buf_data;
  881|   543k|    capacity_ = buf_capacity;
  882|   543k|  }
_ZN3fmt2v96detail13ignore_unusedIJbEEEvDpRKT_:
  302|    190|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE8capacityEv:
  904|    309|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt2v96detail6bufferIcE4dataEv:
  907|   543k|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt2v917basic_string_viewIcE5beginEv:
  445|  1.08M|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt2v917basic_string_viewIcE3endEv:
  446|  1.08M|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKc:
  426|   466k|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt2v96detail10locale_refC2Ev:
 1654|  1.01M|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1253|   543k|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt2v99monostateC2Ev:
  280|   543k|  constexpr monostate() {}
_ZN3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1911|   543k|      : desc_(desc), values_(values) {}
_ZNK3fmt2v917basic_string_viewIcE4dataEv:
  440|  1.16M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKcm:
  411|  1.16M|      : data_(s), size_(count) {}
_ZN3fmt2v96detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  375|  3.84M|    typename std::make_unsigned<Int>::type {
  376|  3.84M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  334|  7.69M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (334:35): [Folded - Ignored]
  |  |  |  Branch (334:35): [True: 3.84M, False: 0]
  |  |  ------------------
  ------------------
  377|  3.84M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  378|  3.84M|}
_ZN3fmt2v96detail6bufferIcE11try_reserveEm:
  926|  1.63M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  927|  1.63M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (927:9): [True: 190, False: 1.63M]
  ------------------
  928|  1.63M|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 1949|   543k|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1950|   543k|    format_arg arg;
 1951|   543k|    if (!is_packed()) {
  ------------------
  |  Branch (1951:9): [True: 0, False: 543k]
  ------------------
 1952|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1952:11): [True: 0, False: 0]
  ------------------
 1953|      0|      return arg;
 1954|      0|    }
 1955|   543k|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1955:9): [True: 0, False: 543k]
  ------------------
 1956|   543k|    arg.type_ = type(id);
 1957|   543k|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1957:9): [True: 0, False: 543k]
  ------------------
 1958|   543k|    arg.value_ = values_[id];
 1959|   543k|    return arg;
 1960|   543k|  }
_ZN3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1541|   543k|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1896|   543k|  constexpr auto is_packed() const -> bool {
 1897|   543k|    return (desc_ & detail::is_unpacked_bit) == 0;
 1898|   543k|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1903|   543k|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1904|   543k|    int shift = index * detail::packed_arg_bits;
 1905|   543k|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1906|   543k|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1907|   543k|  }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1543|   543k|  constexpr explicit operator bool() const noexcept {
 1544|   543k|    return type_ != detail::type::none_type;
 1545|   543k|  }
_ZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  829|  1.63M|    -> Container& {
  830|  1.63M|  using base = std::back_insert_iterator<Container>;
  831|  1.63M|  struct accessor : base {
  832|  1.63M|    accessor(base b) : base(b) {}
  833|  1.63M|    using base::container;
  834|  1.63M|  };
  835|  1.63M|  return *accessor(it).container;
  836|  1.63M|}
_ZZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  832|  1.63M|    accessor(base b) : base(b) {}
_ZNK3fmt2v96detail6fill_tIcE4sizeEv:
 2027|   543k|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt2v96detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1607|  1.63M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1608|  1.63M|  get_container(out).append(begin, end);
 1609|  1.63M|  return out;
 1610|  1.63M|}
_ZN3fmt2v912format_specsIcEC2Ev:
 2077|   543k|        localized(false) {}
_ZN3fmt2v926basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  666|   543k|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1748|   543k|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE3outEv:
 1763|  1.63M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2497|   543k|    basic_string_view<Char> format_str, Handler&& handler) {
 2498|   543k|  auto begin = format_str.data();
 2499|   543k|  auto end = begin + format_str.size();
 2500|   543k|  if (end - begin < 32) {
  ------------------
  |  Branch (2500:7): [True: 260k, False: 283k]
  ------------------
 2501|       |    // Use a simple loop instead of memchr for small strings.
 2502|   260k|    const Char* p = begin;
 2503|  7.28M|    while (p != end) {
  ------------------
  |  Branch (2503:12): [True: 7.02M, False: 260k]
  ------------------
 2504|  7.02M|      auto c = *p++;
 2505|  7.02M|      if (c == '{') {
  ------------------
  |  Branch (2505:11): [True: 260k, False: 6.76M]
  ------------------
 2506|   260k|        handler.on_text(begin, p - 1);
 2507|   260k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2508|  6.76M|      } else if (c == '}') {
  ------------------
  |  Branch (2508:18): [True: 0, False: 6.76M]
  ------------------
 2509|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2509:13): [True: 0, False: 0]
  |  Branch (2509:25): [True: 0, False: 0]
  ------------------
 2510|      0|          return handler.on_error("unmatched '}' in format string");
 2511|      0|        handler.on_text(begin, p);
 2512|      0|        begin = ++p;
 2513|      0|      }
 2514|  7.02M|    }
 2515|   260k|    handler.on_text(begin, end);
 2516|   260k|    return;
 2517|   260k|  }
 2518|   283k|  struct writer {
 2519|   283k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2520|   283k|      if (from == to) return;
 2521|   283k|      for (;;) {
 2522|   283k|        const Char* p = nullptr;
 2523|   283k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2524|   283k|          return handler_.on_text(from, to);
 2525|   283k|        ++p;
 2526|   283k|        if (p == to || *p != '}')
 2527|   283k|          return handler_.on_error("unmatched '}' in format string");
 2528|   283k|        handler_.on_text(from, p);
 2529|   283k|        from = p + 1;
 2530|   283k|      }
 2531|   283k|    }
 2532|   283k|    Handler& handler_;
 2533|   283k|  } write = {handler};
 2534|   566k|  while (begin != end) {
  ------------------
  |  Branch (2534:10): [True: 566k, False: 0]
  ------------------
 2535|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2536|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2537|   566k|    const Char* p = begin;
 2538|   566k|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2538:9): [True: 566k, False: 0]
  |  Branch (2538:26): [True: 283k, False: 283k]
  ------------------
 2539|   283k|      return write(begin, end);
 2540|   283k|    write(begin, p);
 2541|   283k|    begin = parse_replacement_field(p, end, handler);
 2542|   283k|  }
 2543|   283k|}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1766|  1.63M|  void advance_to(iterator it) {
 1767|  1.63M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1767:9): [Folded - Ignored]
  ------------------
 1768|  1.63M|  }
_ZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2460|   543k|                                           Handler&& handler) -> const Char* {
 2461|   543k|  struct id_adapter {
 2462|   543k|    Handler& handler;
 2463|   543k|    int arg_id;
 2464|       |
 2465|   543k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2466|   543k|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2467|   543k|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2468|   543k|      arg_id = handler.on_arg_id(id);
 2469|   543k|    }
 2470|   543k|  };
 2471|       |
 2472|   543k|  ++begin;
 2473|   543k|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2473:7): [True: 0, False: 543k]
  ------------------
 2474|   543k|  if (*begin == '}') {
  ------------------
  |  Branch (2474:7): [True: 0, False: 543k]
  ------------------
 2475|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2476|   543k|  } else if (*begin == '{') {
  ------------------
  |  Branch (2476:14): [True: 0, False: 543k]
  ------------------
 2477|      0|    handler.on_text(begin, begin + 1);
 2478|   543k|  } else {
 2479|   543k|    auto adapter = id_adapter{handler, 0};
 2480|   543k|    begin = parse_arg_id(begin, end, adapter);
 2481|   543k|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2481:14): [True: 543k, False: 0]
  ------------------
 2482|   543k|    if (c == '}') {
  ------------------
  |  Branch (2482:9): [True: 0, False: 543k]
  ------------------
 2483|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2484|   543k|    } else if (c == ':') {
  ------------------
  |  Branch (2484:16): [True: 543k, False: 0]
  ------------------
 2485|   543k|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2486|   543k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2486:11): [True: 0, False: 543k]
  |  Branch (2486:27): [True: 0, False: 543k]
  ------------------
 2487|      0|        return handler.on_error("unknown format specifier"), end;
 2488|   543k|    } else {
 2489|      0|      return handler.on_error("missing '}' in format string"), end;
 2490|      0|    }
 2491|   543k|  }
 2492|   543k|  return begin + 1;
 2493|   543k|}
_ZNK3fmt2v920basic_format_contextINS0_8appenderEcE3argEi:
 1750|   543k|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE6localeEv:
 1770|   543k|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt2v926basic_format_parse_contextIcE11next_arg_idEv:
  690|   543k|  FMT_CONSTEXPR auto next_arg_id() -> int {
  691|   543k|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (691:9): [True: 0, False: 543k]
  ------------------
  692|      0|      detail::throw_format_error(
  693|      0|          "cannot switch from manual to automatic argument indexing");
  694|      0|      return 0;
  695|      0|    }
  696|   543k|    int id = next_arg_id_++;
  697|   543k|    do_check_arg_id(id);
  698|   543k|    return id;
  699|   543k|  }
_ZN3fmt2v926basic_format_parse_contextIcE15do_check_arg_idEi:
  762|   543k|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
  763|       |  // Argument id is only checked at compile-time during parsing because
  764|       |  // formatting has its own validation.
  765|   543k|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (765:7): [Folded - Ignored]
  ------------------
  766|   543k|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (766:8): [Folded - Ignored]
  |  Branch (766:28): [Folded - Ignored]
  ------------------
  767|      0|    using context = detail::compile_parse_context<Char>;
  768|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (768:9): [True: 0, False: 0]
  ------------------
  769|      0|      detail::throw_format_error("argument not found");
  770|      0|  }
  771|   543k|}
_ZN3fmt2v96detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2225|   543k|                                           Handler&& handler) -> const Char* {
 2226|   543k|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  334|   543k|      fmt::detail::ignore_unused((condition), (message))
  ------------------
 2227|   543k|  Char c = *begin;
 2228|   543k|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2228:7): [True: 543k, False: 0]
  |  Branch (2228:19): [True: 0, False: 543k]
  ------------------
 2229|   543k|  handler.on_auto();
 2230|   543k|  return begin;
 2231|   543k|}
_ZZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2465|   543k|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1547|  1.08M|  auto type() const -> detail::type { return type_; }
_ZN3fmt2v96detail7arg_refIcEC2Ev:
 2086|  1.08M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt2v96detail7arg_refIcE5valueC2Ei:
 2101|  1.08M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2295|   543k|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2296|   543k|  auto c = '\0';
 2297|   543k|  if (end - begin > 1) {
  ------------------
  |  Branch (2297:7): [True: 543k, False: 0]
  ------------------
 2298|   543k|    auto next = to_ascii(begin[1]);
 2299|   543k|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2299:9): [True: 543k, False: 0]
  ------------------
 2300|   543k|  } else {
 2301|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2301:9): [True: 0, False: 0]
  ------------------
 2302|      0|    c = to_ascii(*begin);
 2303|      0|  }
 2304|       |
 2305|   543k|  struct {
 2306|   543k|    state current_state = state::start;
 2307|   543k|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2308|   543k|      if (current_state >= s || !valid)
 2309|   543k|        throw_format_error("invalid format specifier");
 2310|   543k|      current_state = s;
 2311|   543k|    }
 2312|   543k|  } enter_state;
 2313|       |
 2314|   543k|  using pres = presentation_type;
 2315|   543k|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2316|   543k|  struct {
 2317|   543k|    const Char*& begin;
 2318|   543k|    dynamic_format_specs<Char>& specs;
 2319|   543k|    type arg_type;
 2320|       |
 2321|   543k|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2322|   543k|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
 2323|   543k|      specs.type = type;
 2324|   543k|      return begin + 1;
 2325|   543k|    }
 2326|   543k|  } parse_presentation_type{begin, specs, arg_type};
 2327|       |
 2328|   543k|  for (;;) {
 2329|   543k|    switch (c) {
 2330|      0|    case '<':
  ------------------
  |  Branch (2330:5): [True: 0, False: 543k]
  ------------------
 2331|      0|    case '>':
  ------------------
  |  Branch (2331:5): [True: 0, False: 543k]
  ------------------
 2332|      0|    case '^':
  ------------------
  |  Branch (2332:5): [True: 0, False: 543k]
  ------------------
 2333|      0|      enter_state(state::align);
 2334|      0|      specs.align = parse_align(c);
 2335|      0|      ++begin;
 2336|      0|      break;
 2337|      0|    case '+':
  ------------------
  |  Branch (2337:5): [True: 0, False: 543k]
  ------------------
 2338|      0|    case '-':
  ------------------
  |  Branch (2338:5): [True: 0, False: 543k]
  ------------------
 2339|      0|    case ' ':
  ------------------
  |  Branch (2339:5): [True: 0, False: 543k]
  ------------------
 2340|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2341|      0|      switch (c) {
  ------------------
  |  Branch (2341:15): [True: 0, False: 0]
  ------------------
 2342|      0|      case '+':
  ------------------
  |  Branch (2342:7): [True: 0, False: 0]
  ------------------
 2343|      0|        specs.sign = sign::plus;
 2344|      0|        break;
 2345|      0|      case '-':
  ------------------
  |  Branch (2345:7): [True: 0, False: 0]
  ------------------
 2346|      0|        specs.sign = sign::minus;
 2347|      0|        break;
 2348|      0|      case ' ':
  ------------------
  |  Branch (2348:7): [True: 0, False: 0]
  ------------------
 2349|      0|        specs.sign = sign::space;
 2350|      0|        break;
 2351|      0|      }
 2352|      0|      ++begin;
 2353|      0|      break;
 2354|      0|    case '#':
  ------------------
  |  Branch (2354:5): [True: 0, False: 543k]
  ------------------
 2355|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2356|      0|      specs.alt = true;
 2357|      0|      ++begin;
 2358|      0|      break;
 2359|      0|    case '0':
  ------------------
  |  Branch (2359:5): [True: 0, False: 543k]
  ------------------
 2360|      0|      enter_state(state::zero);
 2361|      0|      if (!is_arithmetic_type(arg_type))
  ------------------
  |  Branch (2361:11): [True: 0, False: 0]
  ------------------
 2362|      0|        throw_format_error("format specifier requires numeric argument");
 2363|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2363:11): [True: 0, False: 0]
  ------------------
 2364|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2365|      0|        specs.align = align::numeric;
 2366|      0|        specs.fill[0] = Char('0');
 2367|      0|      }
 2368|      0|      ++begin;
 2369|      0|      break;
 2370|      0|    case '1':
  ------------------
  |  Branch (2370:5): [True: 0, False: 543k]
  ------------------
 2371|      0|    case '2':
  ------------------
  |  Branch (2371:5): [True: 0, False: 543k]
  ------------------
 2372|      0|    case '3':
  ------------------
  |  Branch (2372:5): [True: 0, False: 543k]
  ------------------
 2373|      0|    case '4':
  ------------------
  |  Branch (2373:5): [True: 0, False: 543k]
  ------------------
 2374|      0|    case '5':
  ------------------
  |  Branch (2374:5): [True: 0, False: 543k]
  ------------------
 2375|      0|    case '6':
  ------------------
  |  Branch (2375:5): [True: 0, False: 543k]
  ------------------
 2376|      0|    case '7':
  ------------------
  |  Branch (2376:5): [True: 0, False: 543k]
  ------------------
 2377|      0|    case '8':
  ------------------
  |  Branch (2377:5): [True: 0, False: 543k]
  ------------------
 2378|      0|    case '9':
  ------------------
  |  Branch (2378:5): [True: 0, False: 543k]
  ------------------
 2379|      0|    case '{':
  ------------------
  |  Branch (2379:5): [True: 0, False: 543k]
  ------------------
 2380|      0|      enter_state(state::width);
 2381|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2382|      0|      break;
 2383|      0|    case '.':
  ------------------
  |  Branch (2383:5): [True: 0, False: 543k]
  ------------------
 2384|      0|      enter_state(state::precision,
 2385|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2386|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2387|      0|                              ctx);
 2388|      0|      break;
 2389|      0|    case 'L':
  ------------------
  |  Branch (2389:5): [True: 0, False: 543k]
  ------------------
 2390|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2391|      0|      specs.localized = true;
 2392|      0|      ++begin;
 2393|      0|      break;
 2394|      0|    case 'd':
  ------------------
  |  Branch (2394:5): [True: 0, False: 543k]
  ------------------
 2395|      0|      return parse_presentation_type(pres::dec, integral_set);
 2396|      0|    case 'o':
  ------------------
  |  Branch (2396:5): [True: 0, False: 543k]
  ------------------
 2397|      0|      return parse_presentation_type(pres::oct, integral_set);
 2398|      0|    case 'x':
  ------------------
  |  Branch (2398:5): [True: 0, False: 543k]
  ------------------
 2399|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2400|      0|    case 'X':
  ------------------
  |  Branch (2400:5): [True: 0, False: 543k]
  ------------------
 2401|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2402|      0|    case 'b':
  ------------------
  |  Branch (2402:5): [True: 0, False: 543k]
  ------------------
 2403|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2404|      0|    case 'B':
  ------------------
  |  Branch (2404:5): [True: 0, False: 543k]
  ------------------
 2405|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2406|      0|    case 'a':
  ------------------
  |  Branch (2406:5): [True: 0, False: 543k]
  ------------------
 2407|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2408|      0|    case 'A':
  ------------------
  |  Branch (2408:5): [True: 0, False: 543k]
  ------------------
 2409|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2410|      0|    case 'e':
  ------------------
  |  Branch (2410:5): [True: 0, False: 543k]
  ------------------
 2411|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2412|      0|    case 'E':
  ------------------
  |  Branch (2412:5): [True: 0, False: 543k]
  ------------------
 2413|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2414|      0|    case 'f':
  ------------------
  |  Branch (2414:5): [True: 0, False: 543k]
  ------------------
 2415|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2416|      0|    case 'F':
  ------------------
  |  Branch (2416:5): [True: 0, False: 543k]
  ------------------
 2417|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2418|      0|    case 'g':
  ------------------
  |  Branch (2418:5): [True: 0, False: 543k]
  ------------------
 2419|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2420|      0|    case 'G':
  ------------------
  |  Branch (2420:5): [True: 0, False: 543k]
  ------------------
 2421|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2422|      0|    case 'c':
  ------------------
  |  Branch (2422:5): [True: 0, False: 543k]
  ------------------
 2423|      0|      return parse_presentation_type(pres::chr, integral_set);
 2424|   543k|    case 's':
  ------------------
  |  Branch (2424:5): [True: 543k, False: 0]
  ------------------
 2425|   543k|      return parse_presentation_type(pres::string,
 2426|   543k|                                     bool_set | string_set | cstring_set);
 2427|      0|    case 'p':
  ------------------
  |  Branch (2427:5): [True: 0, False: 543k]
  ------------------
 2428|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2429|      0|    case '?':
  ------------------
  |  Branch (2429:5): [True: 0, False: 543k]
  ------------------
 2430|      0|      return parse_presentation_type(pres::debug,
 2431|      0|                                     char_set | string_set | cstring_set);
 2432|      0|    case '}':
  ------------------
  |  Branch (2432:5): [True: 0, False: 543k]
  ------------------
 2433|      0|      return begin;
 2434|      0|    default: {
  ------------------
  |  Branch (2434:5): [True: 0, False: 543k]
  ------------------
 2435|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2435:11): [True: 0, False: 0]
  ------------------
 2436|       |      // Parse fill and alignment.
 2437|      0|      auto fill_end = begin + code_point_length(begin);
 2438|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2438:11): [True: 0, False: 0]
  ------------------
 2439|      0|        throw_format_error("invalid format specifier");
 2440|      0|        return begin;
 2441|      0|      }
 2442|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2442:11): [True: 0, False: 0]
  ------------------
 2443|      0|        throw_format_error("invalid fill character '{'");
 2444|      0|        return begin;
 2445|      0|      }
 2446|      0|      auto align = parse_align(to_ascii(*fill_end));
 2447|      0|      enter_state(state::align, align != align::none);
 2448|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2449|      0|      specs.align = align;
 2450|      0|      begin = fill_end + 1;
 2451|      0|    }
 2452|   543k|    }
 2453|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2453:9): [True: 0, False: 0]
  ------------------
 2454|      0|    c = to_ascii(*begin);
 2455|      0|  }
 2456|   543k|}
_ZN3fmt2v96detail8to_asciiIcLi0EEEcT_:
 2120|  1.08M|constexpr auto to_ascii(Char c) -> char {
 2121|  1.08M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2121:10): [True: 1.08M, False: 0]
  ------------------
 2122|  1.08M|}
_ZN3fmt2v96detail11parse_alignEc:
 2178|   543k|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2179|   543k|  switch (c) {
  ------------------
  |  Branch (2179:11): [True: 543k, False: 0]
  ------------------
 2180|      0|  case '<':
  ------------------
  |  Branch (2180:3): [True: 0, False: 543k]
  ------------------
 2181|      0|    return align::left;
 2182|      0|  case '>':
  ------------------
  |  Branch (2182:3): [True: 0, False: 543k]
  ------------------
 2183|      0|    return align::right;
 2184|      0|  case '^':
  ------------------
  |  Branch (2184:3): [True: 0, False: 543k]
  ------------------
 2185|      0|    return align::center;
 2186|   543k|  }
 2187|   543k|  return align::none;
 2188|   543k|}
_ZN3fmt2v96detail2inENS1_4typeEi:
  611|   543k|constexpr auto in(type t, int set) -> bool {
  612|   543k|  return ((set >> static_cast<int>(t)) & 1) != 0;
  613|   543k|}
_ZZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2321|   543k|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2322|   543k|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
  ------------------
  |  Branch (2322:11): [True: 0, False: 543k]
  ------------------
 2323|   543k|      specs.type = type;
 2324|   543k|      return begin + 1;
 2325|   543k|    }
_ZN3fmt2v916visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1565|   543k|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1566|   543k|  switch (arg.type_) {
  ------------------
  |  Branch (1566:11): [True: 0, False: 543k]
  ------------------
 1567|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1567:3): [True: 0, False: 543k]
  ------------------
 1568|      0|    break;
 1569|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1569:3): [True: 0, False: 543k]
  ------------------
 1570|      0|    return vis(arg.value_.int_value);
 1571|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1571:3): [True: 0, False: 543k]
  ------------------
 1572|      0|    return vis(arg.value_.uint_value);
 1573|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1573:3): [True: 0, False: 543k]
  ------------------
 1574|      0|    return vis(arg.value_.long_long_value);
 1575|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1575:3): [True: 0, False: 543k]
  ------------------
 1576|      0|    return vis(arg.value_.ulong_long_value);
 1577|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1577:3): [True: 0, False: 543k]
  ------------------
 1578|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1579|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1579:3): [True: 0, False: 543k]
  ------------------
 1580|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1581|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1581:3): [True: 0, False: 543k]
  ------------------
 1582|      0|    return vis(arg.value_.bool_value);
 1583|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1583:3): [True: 0, False: 543k]
  ------------------
 1584|      0|    return vis(arg.value_.char_value);
 1585|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1585:3): [True: 0, False: 543k]
  ------------------
 1586|      0|    return vis(arg.value_.float_value);
 1587|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1587:3): [True: 0, False: 543k]
  ------------------
 1588|      0|    return vis(arg.value_.double_value);
 1589|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1589:3): [True: 0, False: 543k]
  ------------------
 1590|      0|    return vis(arg.value_.long_double_value);
 1591|   466k|  case detail::type::cstring_type:
  ------------------
  |  Branch (1591:3): [True: 466k, False: 76.8k]
  ------------------
 1592|   466k|    return vis(arg.value_.string.data);
 1593|  76.8k|  case detail::type::string_type:
  ------------------
  |  Branch (1593:3): [True: 76.8k, False: 466k]
  ------------------
 1594|  76.8k|    using sv = basic_string_view<typename Context::char_type>;
 1595|  76.8k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1596|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1596:3): [True: 0, False: 543k]
  ------------------
 1597|      0|    return vis(arg.value_.pointer);
 1598|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1598:3): [True: 0, False: 543k]
  ------------------
 1599|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1600|   543k|  }
 1601|      0|  return vis(monostate());
 1602|   543k|}
_ZN3fmt2v96detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2147|  1.13M|                              const char*& out) -> bool {
 2148|  1.13M|  out = static_cast<const char*>(
 2149|  1.13M|      std::memchr(first, value, to_unsigned(last - first)));
 2150|  1.13M|  return out != nullptr;
 2151|  1.13M|}
_ZZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2519|   566k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2520|   566k|      if (from == to) return;
  ------------------
  |  Branch (2520:11): [True: 0, False: 566k]
  ------------------
 2521|   566k|      for (;;) {
 2522|   566k|        const Char* p = nullptr;
 2523|   566k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2523:13): [True: 566k, False: 0]
  ------------------
 2524|   566k|          return handler_.on_text(from, to);
 2525|      0|        ++p;
 2526|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2526:13): [True: 0, False: 0]
  |  Branch (2526:24): [True: 0, False: 0]
  ------------------
 2527|      0|          return handler_.on_error("unmatched '}' in format string");
 2528|      0|        handler_.on_text(from, p);
 2529|      0|        from = p + 1;
 2530|      0|      }
 2531|   566k|    }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1269|  76.8k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1270|  76.8k|    string.data = val.data();
 1271|  76.8k|    string.size = val.size();
 1272|  76.8k|  }
_ZN3fmt2v96detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1386|   466k|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1387|   466k|    return val;
 1388|   466k|  }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1265|   466k|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1266|   466k|    string.data = val;
 1267|   466k|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1267:9): [Folded - Ignored]
  ------------------
 1268|   466k|  }
_ZNK3fmt2v96detail6bufferIcE4dataEv:
  910|   543k|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt2v97vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1439|   543k|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1440|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1441|       |  // can be better optimized in fmt::format anyway.
 1442|   543k|  auto buffer = memory_buffer();
 1443|   543k|  detail::vformat_to(buffer, fmt, args);
 1444|   543k|  return to_string(buffer);
 1445|   543k|}

_ZN3fmt2v96detail6bufferIcE6appendIcEEvPKT_S7_:
  878|  1.63M|void buffer<T>::append(const U* begin, const U* end) {
  879|  3.26M|  while (begin != end) {
  ------------------
  |  Branch (879:10): [True: 1.63M, False: 1.63M]
  ------------------
  880|  1.63M|    auto count = to_unsigned(end - begin);
  881|  1.63M|    try_reserve(size_ + count);
  882|  1.63M|    auto free_cap = capacity_ - size_;
  883|  1.63M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (883:9): [True: 0, False: 1.63M]
  ------------------
  884|  1.63M|    std::uninitialized_copy_n(begin, count, make_checked(ptr_ + size_, count));
  885|  1.63M|    size_ += count;
  886|  1.63M|    begin += count;
  887|  1.63M|  }
  888|  1.63M|}
_ZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4493|   543k|                typename vformat_args<Char>::type args, locale_ref loc) {
 4494|   543k|  auto out = buffer_appender<Char>(buf);
 4495|   543k|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4495:7): [True: 0, False: 543k]
  |  Branch (4495:26): [True: 0, False: 0]
  ------------------
 4496|      0|    auto arg = args.get(0);
 4497|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4497:9): [True: 0, False: 0]
  ------------------
 4498|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4499|      0|    return;
 4500|      0|  }
 4501|       |
 4502|   543k|  struct format_handler : error_handler {
 4503|   543k|    basic_format_parse_context<Char> parse_context;
 4504|   543k|    buffer_context<Char> context;
 4505|       |
 4506|   543k|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4507|   543k|                   basic_format_args<buffer_context<Char>> p_args,
 4508|   543k|                   locale_ref p_loc)
 4509|   543k|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4510|       |
 4511|   543k|    void on_text(const Char* begin, const Char* end) {
 4512|   543k|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4513|   543k|      context.advance_to(write<Char>(context.out(), text));
 4514|   543k|    }
 4515|       |
 4516|   543k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4517|   543k|      return parse_context.next_arg_id();
 4518|   543k|    }
 4519|   543k|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4520|   543k|      return parse_context.check_arg_id(id), id;
 4521|   543k|    }
 4522|   543k|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4523|   543k|      int arg_id = context.arg_id(id);
 4524|   543k|      if (arg_id < 0) on_error("argument not found");
 4525|   543k|      return arg_id;
 4526|   543k|    }
 4527|       |
 4528|   543k|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4529|   543k|      auto arg = get_arg(context, id);
 4530|   543k|      context.advance_to(visit_format_arg(
 4531|   543k|          default_arg_formatter<Char>{context.out(), context.args(),
 4532|   543k|                                      context.locale()},
 4533|   543k|          arg));
 4534|   543k|    }
 4535|       |
 4536|   543k|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4537|   543k|        -> const Char* {
 4538|   543k|      auto arg = get_arg(context, id);
 4539|   543k|      if (arg.type() == type::custom_type) {
 4540|   543k|        parse_context.advance_to(begin);
 4541|   543k|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4542|   543k|        return parse_context.begin();
 4543|   543k|      }
 4544|   543k|      auto specs = detail::dynamic_format_specs<Char>();
 4545|   543k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4546|   543k|      detail::handle_dynamic_spec<detail::width_checker>(
 4547|   543k|          specs.width, specs.width_ref, context);
 4548|   543k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4549|   543k|          specs.precision, specs.precision_ref, context);
 4550|   543k|      if (begin == end || *begin != '}')
 4551|   543k|        on_error("missing '}' in format string");
 4552|   543k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4553|   543k|      context.advance_to(visit_format_arg(f, arg));
 4554|   543k|      return begin;
 4555|   543k|    }
 4556|   543k|  };
 4557|   543k|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4558|   543k|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  967|   543k|      : alloc_(alloc) {
  968|   543k|    this->set(store_, SIZE);
  969|   543k|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (969:9): [Folded - Ignored]
  ------------------
  970|   543k|  }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  939|    190|  FMT_CONSTEXPR20 void grow(size_t size) override {
  940|    190|    detail::abort_fuzzing_if(size > 5000);
  941|    190|    const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  942|    190|    size_t old_capacity = this->capacity();
  943|    190|    size_t new_capacity = old_capacity + old_capacity / 2;
  944|    190|    if (size > new_capacity)
  ------------------
  |  Branch (944:9): [True: 62, False: 128]
  ------------------
  945|     62|      new_capacity = size;
  946|    128|    else if (new_capacity > max_size)
  ------------------
  |  Branch (946:14): [True: 0, False: 128]
  ------------------
  947|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (947:22): [True: 0, False: 0]
  ------------------
  948|    190|    T* old_data = this->data();
  949|    190|    T* new_data =
  950|    190|        std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  951|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  952|    190|    std::uninitialized_copy(old_data, old_data + this->size(),
  953|    190|                            detail::make_checked(new_data, new_capacity));
  954|    190|    this->set(new_data, new_capacity);
  955|       |    // deallocate must not throw according to the standard, but even if it does,
  956|       |    // the buffer already uses the new storage and will deallocate it in
  957|       |    // destructor.
  958|    190|    if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (958:9): [True: 71, False: 119]
  ------------------
  959|    190|  }
_ZN3fmt2v96detail16abort_fuzzing_ifEb:
  284|    190|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  285|    190|  ignore_unused(condition);
  286|       |#ifdef FMT_FUZZ
  287|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  288|       |#endif
  289|    190|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  971|   543k|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  933|   543k|  FMT_CONSTEXPR20 void deallocate() {
  934|   543k|    T* data = this->data();
  935|   543k|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (935:9): [True: 119, False: 543k]
  ------------------
  936|   543k|  }
_ZN3fmt2v96detail12make_checkedIcEEPT_S4_m:
  566|  1.63M|template <typename T> constexpr auto make_checked(T* p, size_t) -> T* {
  567|  1.63M|  return p;
  568|  1.63M|}
_ZN3fmt2v96detail7reserveINS0_8appenderEEERT_S5_m:
  594|  1.63M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  595|  1.63M|  return it;
  596|  1.63M|}
_ZN3fmt2v96detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  622|  1.63M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  623|  1.63M|  return it;
  624|  1.63M|}
_ZN3fmt2v96detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  651|  1.08M|                                                  OutputIt out) -> OutputIt {
  652|  1.08M|  return copy_str<OutChar>(begin, end, out);
  653|  1.08M|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3854|  1.08M|    -> OutputIt {
 3855|  1.08M|  auto it = reserve(out, value.size());
 3856|  1.08M|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3857|  1.08M|  return base_iterator(out, it);
 3858|  1.08M|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4511|  1.08M|    void on_text(const Char* begin, const Char* end) {
 4512|  1.08M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4513|  1.08M|      context.advance_to(write<Char>(context.out(), text));
 4514|  1.08M|    }
_ZN3fmt2v96detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEENT_10format_argERS6_T0_:
 4033|   543k|    typename Context::format_arg {
 4034|   543k|  auto arg = ctx.arg(id);
 4035|   543k|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (4035:7): [True: 0, False: 543k]
  ------------------
 4036|   543k|  return arg;
 4037|   543k|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4516|   543k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4517|   543k|      return parse_context.next_arg_id();
 4518|   543k|    }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4537|   543k|        -> const Char* {
 4538|   543k|      auto arg = get_arg(context, id);
 4539|   543k|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4539:11): [True: 0, False: 543k]
  ------------------
 4540|      0|        parse_context.advance_to(begin);
 4541|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4542|      0|        return parse_context.begin();
 4543|      0|      }
 4544|   543k|      auto specs = detail::dynamic_format_specs<Char>();
 4545|   543k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4546|   543k|      detail::handle_dynamic_spec<detail::width_checker>(
 4547|   543k|          specs.width, specs.width_ref, context);
 4548|   543k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4549|   543k|          specs.precision, specs.precision_ref, context);
 4550|   543k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4550:11): [True: 0, False: 543k]
  |  Branch (4550:27): [True: 0, False: 543k]
  ------------------
 4551|      0|        on_error("missing '}' in format string");
 4552|   543k|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4553|   543k|      context.advance_to(visit_format_arg(f, arg));
 4554|   543k|      return begin;
 4555|   543k|    }
_ZN3fmt2v96detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 4042|   543k|                                       Context& ctx) {
 4043|   543k|  switch (ref.kind) {
  ------------------
  |  Branch (4043:11): [True: 0, False: 543k]
  ------------------
 4044|   543k|  case arg_id_kind::none:
  ------------------
  |  Branch (4044:3): [True: 543k, False: 0]
  ------------------
 4045|   543k|    break;
 4046|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4046:3): [True: 0, False: 543k]
  ------------------
 4047|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4048|      0|                                              ctx.error_handler());
 4049|      0|    break;
 4050|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4050:3): [True: 0, False: 543k]
  ------------------
 4051|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4052|      0|                                              ctx.error_handler());
 4053|      0|    break;
 4054|   543k|  }
 4055|   543k|}
_ZN3fmt2v96detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 4042|   543k|                                       Context& ctx) {
 4043|   543k|  switch (ref.kind) {
  ------------------
  |  Branch (4043:11): [True: 0, False: 543k]
  ------------------
 4044|   543k|  case arg_id_kind::none:
  ------------------
  |  Branch (4044:3): [True: 543k, False: 0]
  ------------------
 4045|   543k|    break;
 4046|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4046:3): [True: 0, False: 543k]
  ------------------
 4047|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4048|      0|                                              ctx.error_handler());
 4049|      0|    break;
 4050|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4050:3): [True: 0, False: 543k]
  ------------------
 4051|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4052|      0|                                              ctx.error_handler());
 4053|      0|    break;
 4054|   543k|  }
 4055|   543k|}
_ZN3fmt2v96detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3962|   466k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3963|   466k|    return detail::write(out, value, specs, locale);
 3964|   466k|  }
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2388|   466k|    -> OutputIt {
 2389|   466k|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2389:10): [True: 466k, False: 0]
  ------------------
 2390|   466k|             ? write(out, basic_string_view<Char>(s), specs, {})
 2391|   466k|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2392|   466k|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2382|   543k|    -> OutputIt {
 2383|   543k|  return write(out, s, specs);
 2384|   543k|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2359|   543k|                         const format_specs<Char>& specs) -> OutputIt {
 2360|   543k|  auto data = s.data();
 2361|   543k|  auto size = s.size();
 2362|   543k|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2362:7): [True: 0, False: 543k]
  |  Branch (2362:31): [True: 0, False: 0]
  ------------------
 2363|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2364|   543k|  bool is_debug = specs.type == presentation_type::debug;
 2365|   543k|  size_t width = 0;
 2366|   543k|  if (specs.width != 0) {
  ------------------
  |  Branch (2366:7): [True: 0, False: 543k]
  ------------------
 2367|      0|    if (is_debug)
  ------------------
  |  Branch (2367:9): [True: 0, False: 0]
  ------------------
 2368|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2369|      0|    else
 2370|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2371|      0|  }
 2372|   543k|  return write_padded(out, specs, size, width,
 2373|   543k|                      [=](reserve_iterator<OutputIt> it) {
 2374|   543k|                        if (is_debug) return write_escaped_string(it, s);
 2375|   543k|                        return copy_str<Char>(data, data + size, it);
 2376|   543k|                      });
 2377|   543k|}
_ZN3fmt2v96detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1812|   543k|                                size_t size, size_t width, F&& f) -> OutputIt {
 1813|   543k|  static_assert(align == align::left || align == align::right, "");
 1814|   543k|  unsigned spec_width = to_unsigned(specs.width);
 1815|   543k|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1815:20): [True: 0, False: 543k]
  ------------------
 1816|       |  // Shifts are encoded as string literals because static constexpr is not
 1817|       |  // supported in constexpr functions.
 1818|   543k|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1818:18): [Folded - Ignored]
  ------------------
 1819|   543k|  size_t left_padding = padding >> shifts[specs.align];
 1820|   543k|  size_t right_padding = padding - left_padding;
 1821|   543k|  auto it = reserve(out, size + padding * specs.fill.size());
 1822|   543k|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1822:7): [True: 0, False: 543k]
  ------------------
 1823|   543k|  it = f(it);
 1824|   543k|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1824:7): [True: 0, False: 543k]
  ------------------
 1825|   543k|  return base_iterator(out, it);
 1826|   543k|}
_ZZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2373|   543k|                      [=](reserve_iterator<OutputIt> it) {
 2374|   543k|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2374:29): [True: 0, False: 543k]
  ------------------
 2375|   543k|                        return copy_str<Char>(data, data + size, it);
 2376|   543k|                      });
_ZN3fmt2v96detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3962|  76.8k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3963|  76.8k|    return detail::write(out, value, specs, locale);
 3964|  76.8k|  }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4509|   543k|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt2v99to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4483|   543k|    -> std::basic_string<Char> {
 4484|   543k|  auto size = buf.size();
 4485|   543k|  detail::assume(size < std::basic_string<Char>().max_size());
 4486|   543k|  return std::basic_string<Char>(buf.data(), size);
 4487|   543k|}
_ZN3fmt2v96detail6assumeEb:
  535|   543k|FMT_INLINE void assume(bool condition) {
  536|   543k|  (void)condition;
  537|   543k|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  538|   543k|  __builtin_assume(condition);
  539|   543k|#endif
  540|   543k|}

LLVMFuzzerTestOneInput:
   12|  6.41k|{
   13|  6.41k|    OpenAutoIt::disable_output();
   14|       |
   15|  6.41k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   16|       |
   17|  6.41k|    OpenAutoIt::ParseResult parse_result;
   18|       |
   19|  6.41k|    OpenAutoIt::Lexer lexer{parse_result, source};
   20|  6.41k|    lexer.ProcessAll();
   21|       |
   22|  6.41k|    OpenAutoIt::Parser parser;
   23|  6.41k|    parser.ParseDocument(parse_result);
   24|       |
   25|  6.41k|    const volatile phi::scope_ptr<OpenAutoIt::ASTDocument> doc{phi::move(parse_result.m_Document)};
   26|       |
   27|       |    // Ignore result
   28|  6.41k|    (void)doc;
   29|       |
   30|  6.41k|    return 0;
   31|  6.41k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  24.4k|        {
   18|  24.4k|            m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|  24.4k|        }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  62.6k|        {
   20|  62.6k|            m_NodeType = ASTNodeType::BinaryExpression;
   21|  62.6k|        }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  5.71k|        {
   18|  5.71k|            m_NodeType = ASTNodeType::BooleanLiteral;
   19|  5.71k|        }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|  3.37k|        {
   20|  3.37k|            m_Statements.emplace_back(phi::move(child));
   21|  3.37k|        }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|    971|        {
   25|    971|            m_Functions.emplace_back(phi::move(child));
   26|    971|        }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|  4.59k|        {
   18|  4.59k|            m_NodeType = ASTNodeType::ExitStatement;
   19|  4.59k|        }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|   102k|        {
   13|   102k|            switch (m_NodeType)
   14|   102k|            {
   15|  8.45k|                case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:17): [True: 8.45k, False: 94.0k]
  ------------------
   16|  8.45k|                case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:17): [True: 0, False: 102k]
  ------------------
   17|  9.61k|                case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:17): [True: 1.16k, False: 101k]
  ------------------
   18|  9.61k|                    return true;
   19|       |
   20|  92.8k|                default:
  ------------------
  |  Branch (20:17): [True: 92.8k, False: 9.61k]
  ------------------
   21|  92.8k|                    return false;
   22|   102k|            }
   23|   102k|        }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|   102k|        {
   17|   102k|            m_NodeType = ASTNodeType::ExpressionStatement;
   18|   102k|        }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  54.6k|        {
   17|  54.6k|            m_NodeType = ASTNodeType::FloatLiteral;
   18|  54.6k|        }

_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|  75.6k|        {
   21|  75.6k|            m_NodeType = ASTNodeType::FunctionCallExpression;
   22|  75.6k|        }
_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|  65.1k|        {
   26|  65.1k|            if (m_IsBuiltIn)
  ------------------
  |  Branch (26:17): [True: 1.83k, False: 63.3k]
  ------------------
   27|  1.83k|            {
   28|  1.83k|                return enum_name(m_BuiltInFunction);
   29|  1.83k|            }
   30|       |
   31|  63.3k|            return m_FunctionName;
   32|  65.1k|        }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  4.74k|        {
   25|  4.74k|            m_NodeType = ASTNodeType::IfStatement;
   26|  4.74k|        }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|   159k|        {
   17|   159k|            m_NodeType = ASTNodeType::IntegerLiteral;
   18|   159k|        }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|    940|        {
   19|    940|            m_NodeType = ASTNodeType::KeywordLiteral;
   20|    940|            PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|    940|        }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   66|   600k|        virtual ~ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   69|  92.8k|        {
   70|  92.8k|            PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   71|  92.8k|            PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   72|       |
   73|  92.8k|            return enum_name(m_NodeType);
   74|  92.8k|        }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   44|  92.8k|    {
   45|  92.8k|        switch (node_type)
   46|  92.8k|        {
   47|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   48|      0|    case ASTNodeType::name:                                                                        \
   49|      0|        return "AST" #name;
   50|       |
   51|      0|            OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   13|  18.8k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   48|  18.8k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 18.8k, False: 74.0k]
  |  |  |  |  ------------------
  |  |  |  |   49|  18.8k|        return "AST" #name;
  |  |  ------------------
  |  |   14|  18.8k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   48|  14.5k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 14.5k, False: 78.3k]
  |  |  |  |  ------------------
  |  |  |  |   49|  14.5k|        return "AST" #name;
  |  |  ------------------
  |  |   15|  14.5k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   48|  2.52k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 2.52k, False: 90.3k]
  |  |  |  |  ------------------
  |  |  |  |   49|  2.52k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  2.52k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   48|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 0, False: 92.8k]
  |  |  |  |  ------------------
  |  |  |  |   49|      0|        return "AST" #name;
  |  |  ------------------
  |  |   17|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   48|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 0, False: 92.8k]
  |  |  |  |  ------------------
  |  |  |  |   49|      0|        return "AST" #name;
  |  |  ------------------
  |  |   18|  9.40k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   48|  9.40k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 9.40k, False: 83.4k]
  |  |  |  |  ------------------
  |  |  |  |   49|  9.40k|        return "AST" #name;
  |  |  ------------------
  |  |   19|  9.40k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   48|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 0, False: 92.8k]
  |  |  |  |  ------------------
  |  |  |  |   49|      0|        return "AST" #name;
  |  |  ------------------
  |  |   20|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   48|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 0, False: 92.8k]
  |  |  |  |  ------------------
  |  |  |  |   49|      0|        return "AST" #name;
  |  |  ------------------
  |  |   21|  38.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   48|  38.2k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 38.2k, False: 54.6k]
  |  |  |  |  ------------------
  |  |  |  |   49|  38.2k|        return "AST" #name;
  |  |  ------------------
  |  |   22|  38.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   48|    539|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 539, False: 92.3k]
  |  |  |  |  ------------------
  |  |  |  |   49|    539|        return "AST" #name;
  |  |  ------------------
  |  |   23|  8.78k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   48|  8.78k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 8.78k, False: 84.1k]
  |  |  |  |  ------------------
  |  |  |  |   49|  8.78k|        return "AST" #name;
  |  |  ------------------
  |  |   24|  8.78k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   48|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 0, False: 92.8k]
  |  |  |  |  ------------------
  |  |  |  |   49|      0|        return "AST" #name;
  |  |  ------------------
  |  |   25|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   48|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 0, False: 92.8k]
  |  |  |  |  ------------------
  |  |  |  |   49|      0|        return "AST" #name;
  |  |  ------------------
  |  |   26|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   48|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 0, False: 92.8k]
  |  |  |  |  ------------------
  |  |  |  |   49|      0|        return "AST" #name;
  |  |  ------------------
  |  |   27|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   48|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (48:5): [True: 0, False: 92.8k]
  |  |  |  |  ------------------
  |  |  |  |   49|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   52|       |
   53|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   54|       |
   55|      0|            default:
  ------------------
  |  Branch (55:13): [True: 0, False: 92.8k]
  ------------------
   56|      0|                PHI_ASSERT_NOT_REACHED();
   57|      0|                return "";
   58|  92.8k|        }
   59|  92.8k|    }
_ZN10OpenAutoIt7ASTNodeC2Ev:
   64|   600k|        ASTNode() = default;

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  23.3k|        {
   15|  23.3k|            m_NodeType = ASTNodeType::StringLiteral;
   16|  23.3k|        }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|  40.2k|        {
   20|  40.2k|            m_NodeType = ASTNodeType::VariableAssignment;
   21|  40.2k|        }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|  17.0k|        {
   15|  17.0k|            m_NodeType = ASTNodeType::VariableExpression;
   16|  17.0k|        }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  9.93k|        {
   18|  9.93k|            m_NodeType = ASTNodeType::WhileStatement;
   19|  9.93k|        }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|   708k|        {
   46|   708k|            Token token{kind,
   47|   708k|                        m_Source.substring_view(
   48|   708k|                                static_cast<typename phi::string_view::size_type::value_type>(
   49|   708k|                                        m_Iterator - m_Source.begin()),
   50|   708k|                                1u),
   51|   708k|                        m_LineNumber, m_Column};
   52|       |
   53|       |            // 1 character sized token
   54|   708k|            ++m_Column;
   55|       |
   56|   708k|            return token;
   57|   708k|        }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|   846k|        {
   61|   846k|            Token token{kind, TokenText(token_begin), m_LineNumber, m_Column};
   62|       |
   63|       |            // Consume the amount of characters that make up our new token
   64|   846k|            m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|   846k|            return token;
   67|   846k|        }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  1.30M|        {
   71|  1.30M|            return m_Source.substring_view(token_begin, m_Iterator);
   72|  1.30M|        }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   62|   939k|        {
   63|   939k|            switch (token_kind)
   64|   939k|            {
   65|  1.21k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (65:17): [True: 1.21k, False: 938k]
  ------------------
   66|  7.55k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (66:17): [True: 6.34k, False: 933k]
  ------------------
   67|  7.77k|                case TokenKind::KW_Not:
  ------------------
  |  Branch (67:17): [True: 216, False: 939k]
  ------------------
   68|  7.77k|                    return true;
   69|       |
   70|   932k|                default:
  ------------------
  |  Branch (70:17): [True: 932k, False: 7.77k]
  ------------------
   71|   932k|                    return false;
   72|   939k|            }
   73|   939k|        }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   77|   302k|        {
   78|   302k|            switch (token_kind)
   79|   302k|            {
   80|    242|                case TokenKind::KW_And:
  ------------------
  |  Branch (80:17): [True: 242, False: 302k]
  ------------------
   81|    825|                case TokenKind::KW_Or:
  ------------------
  |  Branch (81:17): [True: 583, False: 301k]
  ------------------
   82|  40.9k|                case TokenKind::OP_Equals:
  ------------------
  |  Branch (82:17): [True: 40.1k, False: 262k]
  ------------------
   83|  48.8k|                case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (83:17): [True: 7.91k, False: 294k]
  ------------------
   84|  49.2k|                case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (84:17): [True: 413, False: 301k]
  ------------------
   85|  49.4k|                case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (85:17): [True: 227, False: 302k]
  ------------------
   86|  49.7k|                case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (86:17): [True: 278, False: 301k]
  ------------------
   87|  57.3k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (87:17): [True: 7.60k, False: 294k]
  ------------------
   88|  72.1k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (88:17): [True: 14.7k, False: 287k]
  ------------------
   89|  77.3k|                case TokenKind::OP_Multiply:
  ------------------
  |  Branch (89:17): [True: 5.25k, False: 297k]
  ------------------
   90|  78.5k|                case TokenKind::OP_Divide:
  ------------------
  |  Branch (90:17): [True: 1.15k, False: 301k]
  ------------------
   91|  80.5k|                case TokenKind::OP_Raise:
  ------------------
  |  Branch (91:17): [True: 2.06k, False: 300k]
  ------------------
   92|  81.1k|                case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (92:17): [True: 580, False: 301k]
  ------------------
   93|  81.3k|                case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (93:17): [True: 199, False: 302k]
  ------------------
   94|  81.8k|                case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (94:17): [True: 439, False: 301k]
  ------------------
   95|  82.0k|                case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (95:17): [True: 213, False: 302k]
  ------------------
   96|  89.3k|                case TokenKind::OP_LessThan:
  ------------------
  |  Branch (96:17): [True: 7.35k, False: 294k]
  ------------------
   97|  90.0k|                case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (97:17): [True: 655, False: 301k]
  ------------------
   98|  90.0k|                    return true;
   99|       |
  100|   212k|                default:
  ------------------
  |  Branch (100:17): [True: 212k, False: 90.0k]
  ------------------
  101|   212k|                    return false;
  102|   302k|            }
  103|   302k|        }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  124|    971|        {
  125|    971|            m_ParseResult->m_Document->AppendFunction(phi::move(function));
  126|    971|        }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  117|  3.37k|        {
  118|  3.37k|            m_ParseResult->m_Document->AppendStatement(phi::move(statement));
  119|  3.37k|        }

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS2_7integerImEES9_:
   23|  1.55M|        {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   36|  7.02M|        {
   37|  7.02M|            return m_Kind;
   38|  7.02M|        }
_ZNK10OpenAutoIt5Token7GetTextEv:
   41|   939k|        {
   42|   939k|            return m_Text;
   43|   939k|        }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   68|   297k|        {
   69|   297k|            const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   70|       |
   71|   297k|            if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (71:17): [True: 5.55k, False: 292k]
  ------------------
   72|   297k|                underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (72:17): [True: 5.55k, False: 0]
  ------------------
   73|  5.55k|            {
   74|  5.55k|                return true;
   75|  5.55k|            }
   76|       |
   77|   292k|            return false;
   78|   297k|        }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
   81|   202k|        {
   82|   202k|            switch (m_Kind)
   83|   202k|            {
   84|    388|                case TokenKind::KW_Default:
  ------------------
  |  Branch (84:17): [True: 388, False: 202k]
  ------------------
   85|  1.88k|                case TokenKind::KW_Null:
  ------------------
  |  Branch (85:17): [True: 1.49k, False: 201k]
  ------------------
   86|  1.88k|                    return true;
   87|       |
   88|   200k|                default:
  ------------------
  |  Branch (88:17): [True: 200k, False: 1.88k]
  ------------------
   89|   200k|                    return false;
   90|   202k|            }
   91|   202k|        }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  679|   375k|    {
  680|   375k|        switch (token_kind)
  681|   375k|        {
  682|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  683|      0|    case TokenKind::name:                                                                          \
  684|      0|        return #name;
  685|       |
  686|      0|            OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|    894|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  683|    894|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 894, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    894|        return #name;
  |  |  ------------------
  |  |   13|  36.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  683|  36.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 36.6k, False: 338k]
  |  |  |  |  ------------------
  |  |  |  |  684|  36.6k|        return #name;
  |  |  ------------------
  |  |   14|  36.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   15|    689|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  683|    689|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 689, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    689|        return #name;
  |  |  ------------------
  |  |   16|    689|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |   17|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   18|  50.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|  50.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 50.0k, False: 325k]
  |  |  |  |  ------------------
  |  |  |  |  684|  50.0k|        return #name;
  |  |  ------------------
  |  |   19|  50.0k|    /* Literals */                                                                                 \
  |  |   20|  50.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  683|  50.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 50.8k, False: 324k]
  |  |  |  |  ------------------
  |  |  |  |  684|  50.8k|        return #name;
  |  |  ------------------
  |  |   21|  50.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  683|  15.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 15.5k, False: 359k]
  |  |  |  |  ------------------
  |  |  |  |  684|  15.5k|        return #name;
  |  |  ------------------
  |  |   22|  15.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  683|  8.91k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.91k, False: 366k]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.91k|        return #name;
  |  |  ------------------
  |  |   23|  8.91k|    /* Punctuation */                                                                              \
  |  |   24|  8.91k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  683|  4.59k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.59k, False: 370k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.59k|        return #name;
  |  |  ------------------
  |  |   25|  14.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  14.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14.7k, False: 360k]
  |  |  |  |  ------------------
  |  |  |  |  684|  14.7k|        return #name;
  |  |  ------------------
  |  |   26|  28.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  28.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28.2k, False: 347k]
  |  |  |  |  ------------------
  |  |  |  |  684|  28.2k|        return #name;
  |  |  ------------------
  |  |   27|  28.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   28|  29.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  29.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 29.0k, False: 346k]
  |  |  |  |  ------------------
  |  |  |  |  684|  29.0k|        return #name;
  |  |  ------------------
  |  |   29|  29.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  27.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 27.3k, False: 348k]
  |  |  |  |  ------------------
  |  |  |  |  684|  27.3k|        return #name;
  |  |  ------------------
  |  |   30|  27.3k|    /* Macros */                                                                                   \
  |  |   31|  27.3k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  27.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   33|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   34|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   35|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   36|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   37|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   38|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   40|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   41|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   42|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   43|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   44|    388|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  683|    388|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 388, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    388|        return #name;
  |  |  ------------------
  |  |   45|    388|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   46|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   47|     82|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  683|     82|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 82, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     82|        return #name;
  |  |  ------------------
  |  |   48|     82|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   49|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   50|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |   51|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   52|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   53|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   54|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   55|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   56|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   58|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   59|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |   60|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   63|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   64|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   67|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   70|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   74|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   75|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |   76|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   77|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   78|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   81|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   82|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   83|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   84|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  683|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     13|        return #name;
  |  |  ------------------
  |  |   85|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   86|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   87|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   88|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   89|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   91|    154|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  683|    154|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 154, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    154|        return #name;
  |  |  ------------------
  |  |   92|    154|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   93|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |   94|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   95|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  683|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     13|        return #name;
  |  |  ------------------
  |  |   96|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   97|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   98|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  100|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  683|     39|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 39, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     39|        return #name;
  |  |  ------------------
  |  |  101|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  103|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  105|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  683|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 38, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     38|        return #name;
  |  |  ------------------
  |  |  106|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  107|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  108|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  109|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  111|     92|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  683|     92|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 92, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     92|        return #name;
  |  |  ------------------
  |  |  112|     92|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  113|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  117|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  118|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  122|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  123|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  124|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  125|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  127|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  128|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  129|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  130|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  131|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  132|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  133|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|  1.55k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  683|  1.55k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.55k, False: 373k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.55k|        return #name;
  |  |  ------------------
  |  |  138|  1.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  683|  1.69k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.69k, False: 373k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.69k|        return #name;
  |  |  ------------------
  |  |  139|  1.69k|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|  1.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  683|    616|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 616, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    616|        return #name;
  |  |  ------------------
  |  |  141|    616|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|    616|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  683|    382|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 382, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    382|        return #name;
  |  |  ------------------
  |  |  143|    382|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    382|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|    302|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 302, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    302|        return #name;
  |  |  ------------------
  |  |  145|    302|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|    568|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  683|    568|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 568, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    568|        return #name;
  |  |  ------------------
  |  |  147|    568|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    568|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  683|    282|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 282, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    282|        return #name;
  |  |  ------------------
  |  |  149|    282|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    600|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  683|    600|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 600, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    600|        return #name;
  |  |  ------------------
  |  |  151|    600|    /* Keywords */                                                                                 \
  |  |  152|    600|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    600|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    600|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|    600|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  683|    183|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 183, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    183|        return #name;
  |  |  ------------------
  |  |  156|  3.73k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  683|  3.73k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.73k, False: 371k]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.73k|        return #name;
  |  |  ------------------
  |  |  157|  3.73k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  3.73k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|    151|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  683|    151|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 151, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    151|        return #name;
  |  |  ------------------
  |  |  163|    151|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|    151|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  165|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  166|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  167|    559|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  683|    559|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 559, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    559|        return #name;
  |  |  ------------------
  |  |  168|    559|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|    559|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  683|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     28|        return #name;
  |  |  ------------------
  |  |  170|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  171|      7|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  173|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  175|      4|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  177|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|    210|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  683|    210|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 210, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    210|        return #name;
  |  |  ------------------
  |  |  179|    210|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  180|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  181|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  182|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|     78|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  683|     78|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 78, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     78|        return #name;
  |  |  ------------------
  |  |  184|     78|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  1.26k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  683|  1.26k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.26k, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.26k|        return #name;
  |  |  ------------------
  |  |  186|  1.26k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  683|    768|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 768, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    768|        return #name;
  |  |  ------------------
  |  |  187|    768|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  188|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  683|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 19, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     19|        return #name;
  |  |  ------------------
  |  |  189|     19|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  5.09k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  683|  5.09k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.09k, False: 370k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.09k|        return #name;
  |  |  ------------------
  |  |  191|  5.09k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  683|  2.92k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.92k, False: 372k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.92k|        return #name;
  |  |  ------------------
  |  |  192|  5.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  683|  5.69k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.69k, False: 369k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.69k|        return #name;
  |  |  ------------------
  |  |  193|  5.69k|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|  5.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  683|    615|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 615, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    615|        return #name;
  |  |  ------------------
  |  |  195|    615|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  683|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 46, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     46|        return #name;
  |  |  ------------------
  |  |  196|     46|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|    419|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  683|    419|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 419, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    419|        return #name;
  |  |  ------------------
  |  |  198|    419|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|    419|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  200|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  202|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  203|    317|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  683|    317|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 317, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    317|        return #name;
  |  |  ------------------
  |  |  204|    317|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|    317|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  206|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  208|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|    218|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  683|    218|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 218, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    218|        return #name;
  |  |  ------------------
  |  |  213|    961|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|    961|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 961, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    961|        return #name;
  |  |  ------------------
  |  |  214|    961|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|    961|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  216|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  219|    261|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  683|    261|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 261, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    261|        return #name;
  |  |  ------------------
  |  |  220|    415|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  683|    415|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 415, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    415|        return #name;
  |  |  ------------------
  |  |  221|    415|    /* Operator */                                                                                 \
  |  |  222|    415|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  24.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)                                                     \
  |  |  ------------------
  |  |  |  |  683|  24.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24.8k, False: 350k]
  |  |  |  |  ------------------
  |  |  |  |  684|  24.8k|        return #name;
  |  |  ------------------
  |  |  224|  24.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)                                                 \
  |  |  ------------------
  |  |  |  |  683|  1.38k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.38k, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.38k|        return #name;
  |  |  ------------------
  |  |  225|  1.38k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)                                                \
  |  |  ------------------
  |  |  |  |  683|    127|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 127, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    127|        return #name;
  |  |  ------------------
  |  |  226|    127|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)                                             \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  227|    202|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|    202|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 202, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    202|        return #name;
  |  |  ------------------
  |  |  228|  2.18k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)                                                \
  |  |  ------------------
  |  |  |  |  683|  2.18k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.18k, False: 373k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.18k|        return #name;
  |  |  ------------------
  |  |  229|  2.18k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals)                                          \
  |  |  ------------------
  |  |  |  |  683|    220|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 220, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    220|        return #name;
  |  |  ------------------
  |  |  230|  2.11k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)                                                       \
  |  |  ------------------
  |  |  |  |  683|  2.11k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.11k, False: 373k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.11k|        return #name;
  |  |  ------------------
  |  |  231|  9.43k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)                                                      \
  |  |  ------------------
  |  |  |  |  683|  9.43k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 9.43k, False: 366k]
  |  |  |  |  ------------------
  |  |  |  |  684|  9.43k|        return #name;
  |  |  ------------------
  |  |  232|  9.43k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)                                                   \
  |  |  ------------------
  |  |  |  |  683|  6.32k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6.32k, False: 369k]
  |  |  |  |  ------------------
  |  |  |  |  684|  6.32k|        return #name;
  |  |  ------------------
  |  |  233|  8.46k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)                                                     \
  |  |  ------------------
  |  |  |  |  683|  8.46k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.46k, False: 367k]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.46k|        return #name;
  |  |  ------------------
  |  |  234|  8.46k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)                                                      \
  |  |  ------------------
  |  |  |  |  683|  7.74k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7.74k, False: 367k]
  |  |  |  |  ------------------
  |  |  |  |  684|  7.74k|        return #name;
  |  |  ------------------
  |  |  235|  7.74k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|  1.16k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.16k, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.16k|        return #name;
  |  |  ------------------
  |  |  236|  1.16k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)                                                   \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  237|    952|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)                                                \
  |  |  ------------------
  |  |  |  |  683|    952|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 952, False: 374k]
  |  |  |  |  ------------------
  |  |  |  |  684|    952|        return #name;
  |  |  ------------------
  |  |  238|    952|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)                                           \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |  239|  2.22k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)                                                   \
  |  |  ------------------
  |  |  |  |  683|  2.22k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.22k, False: 373k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.22k|        return #name;
  |  |  ------------------
  |  |  240|  2.22k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  241|  3.90k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)                                                  \
  |  |  ------------------
  |  |  |  |  683|  3.90k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.90k, False: 371k]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.90k|        return #name;
  |  |  ------------------
  |  |  242|  3.90k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)                                                \
  |  |  ------------------
  |  |  |  |  683|  2.91k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.91k, False: 372k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.91k|        return #name;
  |  |  ------------------
  |  |  243|  2.91k|    /* Built-in Functions */                                                                       \
  |  |  244|  2.91k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  2.91k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  2.91k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  683|    449|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 449, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    449|        return #name;
  |  |  ------------------
  |  |  247|    449|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  248|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  249|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  250|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  251|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  254|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  255|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  256|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  257|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  263|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  264|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  683|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 30, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     30|        return #name;
  |  |  ------------------
  |  |  265|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  270|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  683|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 20, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     20|        return #name;
  |  |  ------------------
  |  |  271|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  272|    312|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  683|    312|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 312, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    312|        return #name;
  |  |  ------------------
  |  |  273|    312|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  274|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  683|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 19, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     19|        return #name;
  |  |  ------------------
  |  |  275|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  276|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  277|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  279|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  280|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  288|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  293|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  294|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  297|     51|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  683|     51|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 51, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     51|        return #name;
  |  |  ------------------
  |  |  298|     51|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  299|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  300|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  301|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  302|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  305|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  306|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  307|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  308|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  309|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  312|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  313|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  314|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  315|     84|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  683|     84|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 84, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     84|        return #name;
  |  |  ------------------
  |  |  316|     84|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  320|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  321|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  323|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  327|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  328|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  330|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  331|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  332|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  333|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  334|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  335|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|     48|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 48, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     48|        return #name;
  |  |  ------------------
  |  |  336|     48|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  337|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  338|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  340|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  341|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  343|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  344|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  345|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  347|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     24|        return #name;
  |  |  ------------------
  |  |  348|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  352|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  357|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  358|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  359|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  361|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  362|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  363|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  364|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  365|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  366|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  367|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  368|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  369|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  370|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  371|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  373|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  374|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  384|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  385|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  402|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  403|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  404|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  405|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  417|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  418|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  421|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  683|     54|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 54, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     54|        return #name;
  |  |  ------------------
  |  |  422|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  428|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  430|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  435|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  436|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  437|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  438|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  440|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  444|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  683|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 20, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     20|        return #name;
  |  |  ------------------
  |  |  445|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  446|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  447|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  448|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 17, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     17|        return #name;
  |  |  ------------------
  |  |  449|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  450|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  451|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  452|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  453|    146|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|    146|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 146, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    146|        return #name;
  |  |  ------------------
  |  |  454|    146|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  455|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  462|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  463|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  466|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  468|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  470|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  471|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  472|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  473|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  474|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  475|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  477|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  479|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  480|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  481|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  482|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  483|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  485|     51|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  683|     51|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 51, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     51|        return #name;
  |  |  ------------------
  |  |  486|     51|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  488|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  683|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 9, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      9|        return #name;
  |  |  ------------------
  |  |  489|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  491|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  492|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  494|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  683|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 32, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     32|        return #name;
  |  |  ------------------
  |  |  495|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  496|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  497|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  498|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  499|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  500|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  503|     96|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  683|     96|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 96, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     96|        return #name;
  |  |  ------------------
  |  |  504|     96|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  505|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  506|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  507|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  508|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  509|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  510|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  511|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  512|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  517|    182|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  683|    182|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 182, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    182|        return #name;
  |  |  ------------------
  |  |  518|    182|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  519|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  522|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  523|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  524|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  525|     91|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  683|     91|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 91, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     91|        return #name;
  |  |  ------------------
  |  |  526|     91|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  529|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  530|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  532|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  533|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  536|    254|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  683|    254|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 254, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    254|        return #name;
  |  |  ------------------
  |  |  537|    254|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  538|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  539|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  540|    308|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  683|    308|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 308, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|    308|        return #name;
  |  |  ------------------
  |  |  541|    308|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  542|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  543|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  544|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  546|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  547|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  548|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  549|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  550|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |  551|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  553|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  554|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  562|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  563|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  565|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  566|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  567|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  569|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 23, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     23|        return #name;
  |  |  ------------------
  |  |  570|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  579|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  580|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  582|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  583|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  584|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  585|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  588|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  589|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  590|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  595|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  596|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  597|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  683|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 27, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     27|        return #name;
  |  |  ------------------
  |  |  598|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  600|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  601|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  603|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  604|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  611|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  683|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 23, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     23|        return #name;
  |  |  ------------------
  |  |  612|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  613|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  615|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  616|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  618|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  619|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  620|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  621|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  622|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  628|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  629|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  631|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  632|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  635|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  636|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  637|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  638|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  639|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  641|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  642|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  644|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|     13|        return #name;
  |  |  ------------------
  |  |  645|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  646|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  647|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  649|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 375k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  ------------------
  687|       |
  688|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  689|       |
  690|      0|            default:
  ------------------
  |  Branch (690:13): [True: 0, False: 375k]
  ------------------
  691|      0|                PHI_ASSERT_NOT_REACHED();
  692|   375k|        }
  693|   375k|    }

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  1.55M|        {
   21|       |#if defined(PHI_DEBUG)
   22|       |            PHI_ASSERT(!m_Finialized);
   23|       |#endif
   24|       |
   25|  1.55M|            m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  1.55M|        }

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  157|  6.72k|{
  158|  6.72k|    static constexpr auto map =
  159|  6.72k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  160|  6.72k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  161|       |
  162|  6.72k|    std::string str{token.begin(), token.end()};
  163|  6.72k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  164|       |
  165|  6.72k|    return map.at(phi::string_view(str.c_str(), str.size()));
  166|  6.72k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  183|  13.4k|{
  184|  13.4k|    static constexpr auto map =
  185|  13.4k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  186|  13.4k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  187|       |
  188|  13.4k|    std::string str{token.begin(), token.end()};
  189|  13.4k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  190|       |
  191|  13.4k|    return map.at(phi::string_view(str.c_str(), str.size()));
  192|  13.4k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  660|   277k|{
  661|   277k|    static constexpr auto keyword_map =
  662|   277k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  663|   277k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  664|   277k|    static constexpr auto builtin_map =
  665|   277k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  666|   277k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  667|       |
  668|   277k|    std::string str{token.begin(), token.end()};
  669|   277k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  670|       |
  671|   277k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  672|       |
  673|   277k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  674|   277k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (674:9): [True: 155k, False: 121k]
  ------------------
  675|   155k|    {
  676|   155k|        return builtin_map.at(string);
  677|   155k|    }
  678|       |
  679|   121k|    return keyword;
  680|   277k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  706|   169k|{
  707|   169k|    static constexpr auto map =
  708|   169k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  709|   169k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  710|       |
  711|   169k|    return map.at(token);
  712|   169k|}
_ZN10OpenAutoIt5LexerC2ERNS_11ParseResultEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  783|  6.41k|    {}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  803|  5.43M|    {
  804|  5.43M|        return m_Iterator == m_Source.end();
  805|  5.43M|    }
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  813|  1.55M|    {
  814|  1.96M|        while (!IsFinished())
  ------------------
  |  Branch (814:16): [True: 1.96M, False: 1.06k]
  ------------------
  815|  1.96M|        {
  816|  1.96M|            char current_character = *m_Iterator;
  817|       |
  818|       |            /* Embedded null character */
  819|       |
  820|  1.96M|            if (current_character == '\0')
  ------------------
  |  Branch (820:17): [True: 39.7k, False: 1.92M]
  ------------------
  821|  39.7k|            {
  822|  39.7k|                m_ParseResult.m_Warnings.emplace_back(
  823|  39.7k|                        ParseWarning::EmbeddedNullCharacter(m_LineNumber, m_Column));
  824|       |
  825|  39.7k|                SkipCurrentCharacter();
  826|  39.7k|            }
  827|       |
  828|       |            /* Multiline comments */
  829|       |
  830|  1.92M|            else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (830:22): [True: 786, False: 1.92M]
  ------------------
  831|    786|            {
  832|    786|                iterator       begin_of_multiline_comment            = m_Iterator;
  833|    786|                const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  834|    786|                const phi::u64 beginning_column_of_multiline_comment = m_Column;
  835|       |
  836|  1.80k|                while (!IsFinished())
  ------------------
  |  Branch (836:24): [True: 1.74k, False: 62]
  ------------------
  837|  1.74k|                {
  838|  1.74k|                    current_character = *m_Iterator;
  839|       |
  840|       |                    // Check for end comment multiline
  841|  1.74k|                    if (current_character == '#')
  ------------------
  |  Branch (841:25): [True: 1.22k, False: 514]
  ------------------
  842|  1.22k|                    {
  843|  1.22k|                        iterator begin_of_token = m_Iterator;
  844|  1.22k|                        ConsumeCurrentCharacter();
  845|       |
  846|  8.09k|                        while (!IsFinished())
  ------------------
  |  Branch (846:32): [True: 8.03k, False: 54]
  ------------------
  847|  8.03k|                        {
  848|  8.03k|                            current_character = *m_Iterator;
  849|       |
  850|  8.03k|                            if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (850:33): [True: 6.86k, False: 1.17k]
  ------------------
  851|  6.86k|                            {
  852|  6.86k|                                ConsumeCurrentCharacter();
  853|  6.86k|                                continue;
  854|  6.86k|                            }
  855|       |
  856|  1.17k|                            break;
  857|  8.03k|                        }
  858|       |
  859|  1.22k|                        const TokenKind pre_processor_token_kind =
  860|  1.22k|                                lookup_pre_processor(TokenText(begin_of_token));
  861|       |
  862|  1.22k|                        if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (862:29): [True: 724, False: 505]
  ------------------
  863|    724|                        {
  864|    724|                            m_InsideMultiLineComment = false;
  865|       |
  866|       |                            // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  867|    724|                            m_Iterator -= TokenText(begin_of_token).length().unsafe();
  868|       |
  869|    724|                            Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  870|    724|                                        beginning_line_of_multiline_comment,
  871|    724|                                        beginning_column_of_multiline_comment};
  872|       |
  873|    724|                            return token;
  874|    724|                        }
  875|  1.22k|                    }
  876|    514|                    else if (current_character == '\n')
  ------------------
  |  Branch (876:30): [True: 195, False: 319]
  ------------------
  877|    195|                    {
  878|    195|                        ConsumeCurrentCharacter();
  879|    195|                        AdvanceToNextLine();
  880|    195|                    }
  881|    319|                    else
  882|    319|                    {
  883|       |                        // Otherwise simply consume the character
  884|    319|                        ConsumeCurrentCharacter();
  885|    319|                        m_Column += 1u;
  886|    319|                    }
  887|  1.74k|                }
  888|    786|            }
  889|       |
  890|       |            /* Skip characters */
  891|       |
  892|  1.92M|            else if (is_skip_character(current_character))
  ------------------
  |  Branch (892:22): [True: 83.7k, False: 1.84M]
  ------------------
  893|  83.7k|            {
  894|  83.7k|                SkipCurrentCharacter();
  895|  83.7k|            }
  896|       |
  897|       |            /* New Lines */
  898|       |
  899|  1.84M|            else if (current_character == '\n')
  ------------------
  |  Branch (899:22): [True: 31.1k, False: 1.81M]
  ------------------
  900|  31.1k|            {
  901|  31.1k|                Token new_line_token = ConstructToken(TokenKind::NewLine);
  902|       |
  903|  31.1k|                ConsumeCurrentCharacter();
  904|  31.1k|                AdvanceToNextLine();
  905|       |
  906|  31.1k|                return new_line_token;
  907|  31.1k|            }
  908|       |
  909|       |            /* Comment */
  910|       |
  911|  1.81M|            else if (current_character == ';')
  ------------------
  |  Branch (911:22): [True: 824, False: 1.81M]
  ------------------
  912|    824|            {
  913|    824|                iterator begin_of_token = m_Iterator;
  914|    824|                ConsumeCurrentCharacter();
  915|       |
  916|  1.18k|                while (!IsFinished())
  ------------------
  |  Branch (916:24): [True: 1.13k, False: 48]
  ------------------
  917|  1.13k|                {
  918|  1.13k|                    current_character = *m_Iterator;
  919|       |
  920|  1.13k|                    if (current_character != '\n')
  ------------------
  |  Branch (920:25): [True: 358, False: 776]
  ------------------
  921|    358|                    {
  922|    358|                        ConsumeCurrentCharacter();
  923|    358|                        continue;
  924|    358|                    }
  925|       |
  926|    776|                    break;
  927|  1.13k|                }
  928|       |
  929|    824|                return ConstructToken(TokenKind::Comment, begin_of_token);
  930|    824|            }
  931|       |
  932|       |            /* Macros */
  933|       |
  934|  1.81M|            else if (current_character == '@')
  ------------------
  |  Branch (934:22): [True: 6.72k, False: 1.80M]
  ------------------
  935|  6.72k|            {
  936|  6.72k|                iterator begin_of_token = m_Iterator;
  937|  6.72k|                ConsumeCurrentCharacter();
  938|       |
  939|  72.9k|                while (!IsFinished())
  ------------------
  |  Branch (939:24): [True: 72.8k, False: 150]
  ------------------
  940|  72.8k|                {
  941|  72.8k|                    current_character = *m_Iterator;
  942|       |
  943|  72.8k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (943:25): [True: 66.2k, False: 6.57k]
  ------------------
  944|  66.2k|                    {
  945|  66.2k|                        ConsumeCurrentCharacter();
  946|  66.2k|                        continue;
  947|  66.2k|                    }
  948|       |
  949|  6.57k|                    break;
  950|  72.8k|                }
  951|       |
  952|       |                // Emit token
  953|  6.72k|                return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  954|  6.72k|            }
  955|       |
  956|       |            /* Variable identifier */
  957|       |
  958|  1.80M|            else if (current_character == '$')
  ------------------
  |  Branch (958:22): [True: 67.8k, False: 1.73M]
  ------------------
  959|  67.8k|            {
  960|  67.8k|                iterator     begin_of_token = m_Iterator;
  961|  67.8k|                phi::boolean parsed_something{false};
  962|  67.8k|                ConsumeCurrentCharacter();
  963|       |
  964|   141k|                while (!IsFinished())
  ------------------
  |  Branch (964:24): [True: 140k, False: 394]
  ------------------
  965|   140k|                {
  966|   140k|                    current_character = *m_Iterator;
  967|       |
  968|   140k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (968:25): [True: 73.4k, False: 67.4k]
  ------------------
  969|  73.4k|                    {
  970|  73.4k|                        ConsumeCurrentCharacter();
  971|  73.4k|                        parsed_something = true;
  972|  73.4k|                        continue;
  973|  73.4k|                    }
  974|       |
  975|  67.4k|                    break;
  976|   140k|                }
  977|       |
  978|       |                // Ensure that '$' is not a valid variable identifier
  979|  67.8k|                if (!parsed_something)
  ------------------
  |  Branch (979:21): [True: 13.9k, False: 53.8k]
  ------------------
  980|  13.9k|                {
  981|  13.9k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
  982|  13.9k|                }
  983|       |
  984|       |                // Emit Token
  985|  53.8k|                return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  986|  67.8k|            }
  987|       |
  988|       |            /* PreProcessor directive */
  989|       |
  990|  1.73M|            else if (current_character == '#')
  ------------------
  |  Branch (990:22): [True: 12.1k, False: 1.72M]
  ------------------
  991|  12.1k|            {
  992|  12.1k|                iterator begin_of_token = m_Iterator;
  993|  12.1k|                ConsumeCurrentCharacter();
  994|       |
  995|   105k|                while (!IsFinished())
  ------------------
  |  Branch (995:24): [True: 105k, False: 270]
  ------------------
  996|   105k|                {
  997|   105k|                    current_character = *m_Iterator;
  998|       |
  999|   105k|                    if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (999:25): [True: 93.7k, False: 11.9k]
  ------------------
 1000|  93.7k|                    {
 1001|  93.7k|                        ConsumeCurrentCharacter();
 1002|  93.7k|                        continue;
 1003|  93.7k|                    }
 1004|       |
 1005|  11.9k|                    break;
 1006|   105k|                }
 1007|       |
 1008|       |                // Check for start of multiline comment
 1009|  12.1k|                const TokenKind pre_processor_token_kind =
 1010|  12.1k|                        lookup_pre_processor(TokenText(begin_of_token));
 1011|       |
 1012|  12.1k|                if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (1012:21): [True: 789, False: 11.3k]
  ------------------
 1013|    789|                {
 1014|    789|                    m_InsideMultiLineComment = true;
 1015|    789|                }
 1016|       |
 1017|  12.1k|                return ConstructToken(pre_processor_token_kind, begin_of_token);
 1018|  12.1k|            }
 1019|       |
 1020|       |            /* SingleQuoteStringLiteral */
 1021|       |
 1022|  1.72M|            else if (current_character == '\'')
  ------------------
  |  Branch (1022:22): [True: 16.0k, False: 1.70M]
  ------------------
 1023|  16.0k|            {
 1024|  16.0k|                iterator     begin_of_token = m_Iterator;
 1025|  16.0k|                phi::boolean did_terminate  = false;
 1026|  16.0k|                ConsumeCurrentCharacter();
 1027|       |
 1028|  38.7k|                while (!IsFinished())
  ------------------
  |  Branch (1028:24): [True: 38.6k, False: 172]
  ------------------
 1029|  38.6k|                {
 1030|  38.6k|                    current_character = *m_Iterator;
 1031|  38.6k|                    ConsumeCurrentCharacter();
 1032|       |
 1033|  38.6k|                    if (current_character == '\'')
  ------------------
  |  Branch (1033:25): [True: 15.9k, False: 22.7k]
  ------------------
 1034|  15.9k|                    {
 1035|  15.9k|                        did_terminate = true;
 1036|  15.9k|                        break;
 1037|  15.9k|                    }
 1038|  38.6k|                }
 1039|       |
 1040|  16.0k|                if (did_terminate)
  ------------------
  |  Branch (1040:21): [True: 15.9k, False: 172]
  ------------------
 1041|  15.9k|                {
 1042|  15.9k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1043|  15.9k|                }
 1044|       |
 1045|       |                // TODO: Warn unterminated string literal
 1046|  16.0k|            }
 1047|       |
 1048|       |            /* DoubleQuoteStringLiteral */
 1049|       |
 1050|  1.70M|            else if (current_character == '\"')
  ------------------
  |  Branch (1050:22): [True: 15.0k, False: 1.69M]
  ------------------
 1051|  15.0k|            {
 1052|  15.0k|                iterator     begin_of_token = m_Iterator;
 1053|  15.0k|                phi::boolean did_terminate  = false;
 1054|  15.0k|                ConsumeCurrentCharacter();
 1055|       |
 1056|  18.1k|                while (!IsFinished())
  ------------------
  |  Branch (1056:24): [True: 18.0k, False: 66]
  ------------------
 1057|  18.0k|                {
 1058|  18.0k|                    current_character = *m_Iterator;
 1059|  18.0k|                    ConsumeCurrentCharacter();
 1060|       |
 1061|  18.0k|                    if (current_character == '\"')
  ------------------
  |  Branch (1061:25): [True: 15.0k, False: 3.03k]
  ------------------
 1062|  15.0k|                    {
 1063|  15.0k|                        did_terminate = true;
 1064|  15.0k|                        break;
 1065|  15.0k|                    }
 1066|  18.0k|                }
 1067|       |
 1068|  15.0k|                if (did_terminate)
  ------------------
  |  Branch (1068:21): [True: 15.0k, False: 66]
  ------------------
 1069|  15.0k|                {
 1070|  15.0k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1071|  15.0k|                }
 1072|  15.0k|            }
 1073|       |
 1074|       |            /* Number Literals - IntegerLiteral/FloatLiteral */
 1075|       |
 1076|  1.69M|            else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1076:22): [True: 205k, False: 1.48M]
  |  Branch (1076:22): [True: 294k, False: 1.40M]
  |  Branch (1076:58): [True: 88.9k, False: 1.40M]
  ------------------
 1077|   294k|            {
 1078|   294k|                const phi::boolean start_with_zero{current_character == '0'};
 1079|   294k|                phi::boolean       parsing_hex{false};
 1080|   294k|                phi::boolean       parsing_float{current_character == '.'};
 1081|       |
 1082|   294k|                iterator begin_of_token = m_Iterator;
 1083|   294k|                ConsumeCurrentCharacter();
 1084|       |
 1085|   396k|                while (!IsFinished())
  ------------------
  |  Branch (1085:24): [True: 395k, False: 970]
  ------------------
 1086|   395k|                {
 1087|   395k|                    current_character = *m_Iterator;
 1088|       |
 1089|       |                    // Is the second character
 1090|   395k|                    if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1090:25): [True: 293k, False: 101k]
  |  Branch (1090:62): [True: 63.2k, False: 230k]
  ------------------
 1091|  63.2k|                    {
 1092|       |                        // Hex character
 1093|  63.2k|                        if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1093:29): [True: 487, False: 62.7k]
  |  Branch (1093:57): [True: 590, False: 62.1k]
  ------------------
 1094|  1.07k|                        {
 1095|  1.07k|                            parsing_hex = true;
 1096|  1.07k|                            ConsumeCurrentCharacter();
 1097|  1.07k|                            continue;
 1098|  1.07k|                        }
 1099|  63.2k|                    }
 1100|       |
 1101|       |                    // Actually parsing
 1102|   394k|                    if (parsing_hex)
  ------------------
  |  Branch (1102:25): [True: 3.09k, False: 391k]
  ------------------
 1103|  3.09k|                    {
 1104|  3.09k|                        if (parsing_float)
  ------------------
  |  Branch (1104:29): [True: 0, False: 3.09k]
  ------------------
 1105|      0|                        {
 1106|       |                            // TODO: Error hexliteral not allowed for floats
 1107|      0|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1108|      0|                        }
 1109|       |
 1110|  3.09k|                        if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1110:29): [True: 2.06k, False: 1.03k]
  ------------------
 1111|  2.06k|                        {
 1112|  2.06k|                            ConsumeCurrentCharacter();
 1113|  2.06k|                            continue;
 1114|  2.06k|                        }
 1115|  3.09k|                    }
 1116|   391k|                    else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1116:30): [True: 96.9k, False: 294k]
  ------------------
 1117|  96.9k|                    {
 1118|  96.9k|                        ConsumeCurrentCharacter();
 1119|  96.9k|                        continue;
 1120|  96.9k|                    }
 1121|       |                    // Literal dot
 1122|   294k|                    else if (current_character == '.')
  ------------------
  |  Branch (1122:30): [True: 9.04k, False: 285k]
  ------------------
 1123|  9.04k|                    {
 1124|  9.04k|                        if (parsing_float)
  ------------------
  |  Branch (1124:29): [True: 7.22k, False: 1.82k]
  ------------------
 1125|  7.22k|                        {
 1126|       |                            // TODO: Error more than one dot in float literal
 1127|  7.22k|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1128|  7.22k|                        }
 1129|       |
 1130|  1.82k|                        parsing_float = true;
 1131|  1.82k|                        ConsumeCurrentCharacter();
 1132|  1.82k|                        continue;
 1133|  9.04k|                    }
 1134|       |
 1135|   286k|                    break;
 1136|   394k|                }
 1137|       |
 1138|   287k|                if (parsing_float)
  ------------------
  |  Branch (1138:21): [True: 83.5k, False: 203k]
  ------------------
 1139|  83.5k|                {
 1140|       |                    // Were not allowed to end with a dot
 1141|       |                    // TODO: This is very hacky and looks nasty
 1142|  83.5k|                    if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1142:25): [True: 16.3k, False: 67.2k]
  ------------------
 1143|  16.3k|                    {
 1144|       |                        // TODO: Prober error
 1145|  16.3k|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1146|  16.3k|                    }
 1147|       |
 1148|  67.2k|                    return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1149|  83.5k|                }
 1150|       |
 1151|   203k|                return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1152|   287k|            }
 1153|       |
 1154|       |            /* Operators */
 1155|       |
 1156|  1.40M|            else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1156:22): [True: 156k, False: 1.24M]
  ------------------
 1157|   156k|            {
 1158|   156k|                iterator begin_of_token = m_Iterator;
 1159|   156k|                ConsumeCurrentCharacter();
 1160|       |
 1161|   156k|                if (!IsFinished())
  ------------------
  |  Branch (1161:21): [True: 156k, False: 592]
  ------------------
 1162|   156k|                {
 1163|   156k|                    if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1163:25): [True: 12.6k, False: 143k]
  |  Branch (1163:48): [True: 9.44k, False: 134k]
  |  Branch (1163:74): [True: 211, False: 9.23k]
  ------------------
 1164|  12.8k|                    {
 1165|       |                        // We have an actual two part operator
 1166|  12.8k|                        ConsumeCurrentCharacter();
 1167|  12.8k|                    }
 1168|   156k|                }
 1169|       |
 1170|   156k|                return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1171|   156k|            }
 1172|       |
 1173|  1.24M|            else if (is_single_operator(current_character))
  ------------------
  |  Branch (1173:22): [True: 13.2k, False: 1.23M]
  ------------------
 1174|  13.2k|            {
 1175|  13.2k|                Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1176|       |
 1177|  13.2k|                ConsumeCurrentCharacter();
 1178|       |
 1179|  13.2k|                return token;
 1180|  13.2k|            }
 1181|       |
 1182|       |            /* Punctioation */
 1183|       |
 1184|  1.23M|            else if (current_character == ',')
  ------------------
  |  Branch (1184:22): [True: 6.42k, False: 1.22M]
  ------------------
 1185|  6.42k|            {
 1186|  6.42k|                Token token = ConstructToken(TokenKind::Comma);
 1187|       |
 1188|  6.42k|                ConsumeCurrentCharacter();
 1189|       |
 1190|  6.42k|                return token;
 1191|  6.42k|            }
 1192|       |
 1193|  1.22M|            else if (current_character == '(')
  ------------------
  |  Branch (1193:22): [True: 492k, False: 731k]
  ------------------
 1194|   492k|            {
 1195|   492k|                Token token = ConstructToken(TokenKind::LParen);
 1196|       |
 1197|   492k|                ConsumeCurrentCharacter();
 1198|       |
 1199|   492k|                return token;
 1200|   492k|            }
 1201|       |
 1202|   731k|            else if (current_character == ')')
  ------------------
  |  Branch (1202:22): [True: 46.6k, False: 684k]
  ------------------
 1203|  46.6k|            {
 1204|  46.6k|                Token token = ConstructToken(TokenKind::RParen);
 1205|       |
 1206|  46.6k|                ConsumeCurrentCharacter();
 1207|       |
 1208|  46.6k|                return token;
 1209|  46.6k|            }
 1210|       |
 1211|   684k|            else if (current_character == '.')
  ------------------
  |  Branch (1211:22): [True: 0, False: 684k]
  ------------------
 1212|      0|            {
 1213|      0|                Token token = ConstructToken(TokenKind::Dot);
 1214|       |
 1215|      0|                ConsumeCurrentCharacter();
 1216|       |
 1217|      0|                return token;
 1218|      0|            }
 1219|       |
 1220|   684k|            else if (current_character == '[')
  ------------------
  |  Branch (1220:22): [True: 61.3k, False: 623k]
  ------------------
 1221|  61.3k|            {
 1222|  61.3k|                Token token = ConstructToken(TokenKind::LSquare);
 1223|       |
 1224|  61.3k|                ConsumeCurrentCharacter();
 1225|       |
 1226|  61.3k|                return token;
 1227|  61.3k|            }
 1228|       |
 1229|   623k|            else if (current_character == ']')
  ------------------
  |  Branch (1229:22): [True: 56.9k, False: 566k]
  ------------------
 1230|  56.9k|            {
 1231|  56.9k|                Token token = ConstructToken(TokenKind::RSquare);
 1232|       |
 1233|  56.9k|                ConsumeCurrentCharacter();
 1234|       |
 1235|  56.9k|                return token;
 1236|  56.9k|            }
 1237|       |
 1238|       |            /* Identifier */
 1239|       |
 1240|   566k|            else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1240:22): [True: 277k, False: 289k]
  ------------------
 1241|   277k|            {
 1242|   277k|                iterator begin_of_token = m_Iterator;
 1243|   277k|                ConsumeCurrentCharacter();
 1244|       |
 1245|   961k|                while (!IsFinished())
  ------------------
  |  Branch (1245:24): [True: 959k, False: 1.79k]
  ------------------
 1246|   959k|                {
 1247|   959k|                    current_character = *m_Iterator;
 1248|       |
 1249|   959k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1249:25): [True: 684k, False: 275k]
  ------------------
 1250|   684k|                    {
 1251|   684k|                        ConsumeCurrentCharacter();
 1252|   684k|                        continue;
 1253|   684k|                    }
 1254|       |
 1255|   275k|                    break;
 1256|   959k|                }
 1257|       |
 1258|   277k|                return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1259|   277k|            }
 1260|       |
 1261|       |            /* Unknown/Unexpected character */
 1262|       |
 1263|   289k|            else
 1264|   289k|            {
 1265|       |                // TODO: Warn unexpected character encountered
 1266|   289k|                SkipCurrentCharacter();
 1267|   289k|            }
 1268|  1.96M|        }
 1269|       |
 1270|  1.06k|        return {};
 1271|  1.55M|    }
_ZN10OpenAutoIt5Lexer10ProcessAllEv:
 1274|  6.41k|    {
 1275|  6.41k|        TokenStream& stream = m_ParseResult.m_TokenStream;
 1276|       |
 1277|  1.56M|        while (!IsFinished())
  ------------------
  |  Branch (1277:16): [True: 1.55M, False: 6.41k]
  ------------------
 1278|  1.55M|        {
 1279|  1.55M|            phi::optional<Token> maybe_token = GetNextToken();
 1280|       |
 1281|  1.55M|            if (maybe_token.has_value())
  ------------------
  |  Branch (1281:17): [True: 1.55M, False: 1.06k]
  ------------------
 1282|  1.55M|            {
 1283|  1.55M|                stream.emplace_back(maybe_token.value());
 1284|  1.55M|            }
 1285|  1.55M|        }
 1286|       |
 1287|  6.41k|        stream.finalize();
 1288|  6.41k|    }
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1298|  3.06M|    {
 1299|  3.06M|        ++m_Iterator;
 1300|  3.06M|    }
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1303|  31.3k|    {
 1304|  31.3k|        ++m_LineNumber;
 1305|  31.3k|        m_Column = 1u;
 1306|  31.3k|    }
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1309|   412k|    {
 1310|   412k|        ConsumeCurrentCharacter();
 1311|   412k|        ++m_Column;
 1312|   412k|    }
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   34|  6.72k|    {
   35|  6.72k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  6.72k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  6.72k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 638, False: 6.08k]
  ------------------
   39|    638|        {
   40|    638|            return itr->second;
   41|    638|        }
   42|       |
   43|  6.08k|        return m_Default;
   44|  6.72k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   643k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   34|  13.4k|    {
   35|  13.4k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  13.4k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  13.4k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 4.15k, False: 9.25k]
  ------------------
   39|  4.15k|        {
   40|  4.15k|            return itr->second;
   41|  4.15k|        }
   42|       |
   43|  9.25k|        return m_Default;
   44|  13.4k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   112k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   34|   155k|    {
   35|   155k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|   155k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|   155k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 2.74k, False: 152k]
  ------------------
   39|  2.74k|        {
   40|  2.74k|            return itr->second;
   41|  2.74k|        }
   42|       |
   43|   152k|        return m_Default;
   44|   155k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  62.0M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   34|   277k|    {
   35|   277k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|   277k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|   277k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 121k, False: 155k]
  ------------------
   39|   121k|        {
   40|   121k|            return itr->second;
   41|   121k|        }
   42|       |
   43|   155k|        return m_Default;
   44|   277k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  9.65M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   34|   169k|    {
   35|   169k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|   169k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|   169k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 169k, False: 0]
  ------------------
   39|   169k|        {
   40|   169k|            return itr->second;
   41|   169k|        }
   42|       |
   43|      0|        return m_Default;
   44|   169k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  1.00M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  735|   113k|{
  736|   113k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (736:12): [True: 99.2k, False: 14.4k]
  |  Branch (736:40): [True: 1.35k, False: 13.0k]
  ------------------
  737|   113k|}
_Z17is_skip_characterc:
  715|  1.92M|{
  716|  1.92M|    switch (c)
  717|  1.92M|    {
  718|  78.6k|        case ' ':
  ------------------
  |  Branch (718:9): [True: 78.6k, False: 1.84M]
  ------------------
  719|  81.8k|        case '\v':
  ------------------
  |  Branch (719:9): [True: 3.17k, False: 1.92M]
  ------------------
  720|  82.4k|        case '\t':
  ------------------
  |  Branch (720:9): [True: 588, False: 1.92M]
  ------------------
  721|  83.1k|        case '\b':
  ------------------
  |  Branch (721:9): [True: 721, False: 1.92M]
  ------------------
  722|  83.7k|        case '\f':
  ------------------
  |  Branch (722:9): [True: 613, False: 1.92M]
  ------------------
  723|  83.7k|            return true;
  724|  1.84M|        default:
  ------------------
  |  Branch (724:9): [True: 1.84M, False: 83.7k]
  ------------------
  725|  1.84M|            return false;
  726|  1.92M|    }
  727|  1.92M|}
_Z24is_valid_identifier_charc:
  730|  1.73M|{
  731|  1.73M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (731:12): [True: 1.09M, False: 642k]
  |  Branch (731:40): [True: 4.52k, False: 638k]
  ------------------
  732|  1.73M|}
_Z20is_two_part_operatorc:
  740|  1.40M|{
  741|  1.40M|    switch (c)
  742|  1.40M|    {
  743|  81.8k|        case '=':
  ------------------
  |  Branch (743:9): [True: 81.8k, False: 1.31M]
  ------------------
  744|   101k|        case '+':
  ------------------
  |  Branch (744:9): [True: 19.2k, False: 1.38M]
  ------------------
  745|   126k|        case '-':
  ------------------
  |  Branch (745:9): [True: 25.9k, False: 1.37M]
  ------------------
  746|   136k|        case '*':
  ------------------
  |  Branch (746:9): [True: 9.56k, False: 1.39M]
  ------------------
  747|   143k|        case '/':
  ------------------
  |  Branch (747:9): [True: 6.61k, False: 1.39M]
  ------------------
  748|   145k|        case '&':
  ------------------
  |  Branch (748:9): [True: 2.09k, False: 1.39M]
  ------------------
  749|   155k|        case '<':
  ------------------
  |  Branch (749:9): [True: 10.1k, False: 1.38M]
  ------------------
  750|   156k|        case '>':
  ------------------
  |  Branch (750:9): [True: 1.37k, False: 1.39M]
  ------------------
  751|   156k|            return true;
  752|       |
  753|  1.24M|        default:
  ------------------
  |  Branch (753:9): [True: 1.24M, False: 156k]
  ------------------
  754|  1.24M|            return false;
  755|  1.40M|    }
  756|  1.40M|}
_Z18is_single_operatorc:
  759|  1.24M|{
  760|  1.24M|    switch (c)
  761|  1.24M|    {
  762|  6.86k|        case '^':
  ------------------
  |  Branch (762:9): [True: 6.86k, False: 1.23M]
  ------------------
  763|  10.9k|        case '?':
  ------------------
  |  Branch (763:9): [True: 4.11k, False: 1.23M]
  ------------------
  764|  13.2k|        case ':':
  ------------------
  |  Branch (764:9): [True: 2.22k, False: 1.24M]
  ------------------
  765|  13.2k|            return true;
  766|       |
  767|  1.23M|        default:
  ------------------
  |  Branch (767:9): [True: 1.23M, False: 13.2k]
  ------------------
  768|  1.23M|            return false;
  769|  1.24M|    }
  770|  1.24M|}

_ZN10OpenAutoIt12ParseWarning21EmbeddedNullCharacterEN3phi7integerImEES3_:
   12|  39.7k|    {
   13|  39.7k|        ParseWarning warn;
   14|       |
   15|  39.7k|        warn.m_Type = ParseWarningType::EmbeddedNullCharacter;
   16|       |
   17|  39.7k|        warn.m_LocationBegin.line_number = line;
   18|  39.7k|        warn.m_LocationBegin.column      = column;
   19|       |
   20|  39.7k|        warn.m_LocationEnd.line_number = line;
   21|  39.7k|        warn.m_LocationEnd.column      = column;
   22|       |
   23|  39.7k|        return warn;
   24|  39.7k|    }

_ZN10OpenAutoIt6ParserC2Ev:
  129|  6.41k|    Parser::Parser() noexcept = default;
_ZN10OpenAutoIt6Parser13ParseDocumentERNS_11ParseResultE:
  132|  6.41k|    {
  133|  6.41k|        m_ParseResult = &parse_result;
  134|  6.41k|        m_TokenStream = &parse_result.m_TokenStream;
  135|       |
  136|  6.41k|        m_ParseResult->m_Document = phi::make_not_null_scope<ASTDocument>();
  137|       |
  138|   355k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (138:16): [True: 349k, False: 6.41k]
  ------------------
  139|   349k|        {
  140|   349k|            const Token& token = CurrentToken();
  141|       |
  142|       |            // Parse global function definition
  143|   349k|            switch (token.GetTokenKind())
  144|   349k|            {
  145|  9.85k|                case TokenKind::KW_Func: {
  ------------------
  |  Branch (145:17): [True: 9.85k, False: 339k]
  ------------------
  146|  9.85k|                    ConsumeCurrent();
  147|       |
  148|  9.85k|                    auto function_definition = ParseFunctionDefinition();
  149|  9.85k|                    if (!function_definition)
  ------------------
  |  Branch (149:25): [True: 8.88k, False: 971]
  ------------------
  150|  8.88k|                    {
  151|  8.88k|                        err("ERR: Failed to parse function definition!\n");
  152|  8.88k|                        continue;
  153|  8.88k|                    }
  154|       |
  155|    971|                    AppendFunctionToDocument(function_definition.release_not_null());
  156|    971|                    break;
  157|  9.85k|                }
  158|       |
  159|    933|                case TokenKind::Comment:
  ------------------
  |  Branch (159:17): [True: 933, False: 348k]
  ------------------
  160|  7.55k|                case TokenKind::NewLine: {
  ------------------
  |  Branch (160:17): [True: 6.61k, False: 342k]
  ------------------
  161|       |                    // Simply ignore and consume newlines and comments
  162|  7.55k|                    ConsumeCurrent();
  163|  7.55k|                    break;
  164|    933|                }
  165|  9.94k|                case TokenKind::NotAToken: {
  ------------------
  |  Branch (165:17): [True: 9.94k, False: 339k]
  ------------------
  166|  9.94k|                    err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  167|  9.94k|                                    std::string_view(token.GetText())));
  168|  9.94k|                    ConsumeCurrent();
  169|  9.94k|                    break;
  170|    933|                }
  171|       |
  172|   322k|                default: {
  ------------------
  |  Branch (172:17): [True: 322k, False: 27.3k]
  ------------------
  173|   322k|                    auto statement = ParseStatement();
  174|   322k|                    if (!statement)
  ------------------
  |  Branch (174:25): [True: 318k, False: 3.37k]
  ------------------
  175|   318k|                    {
  176|       |                        // TODO: Proper error reporting
  177|   318k|                        err("ERR: Failed to parse statement!\n");
  178|       |
  179|   318k|                        if (m_TokenStream->has_more())
  ------------------
  |  Branch (179:29): [True: 315k, False: 3.73k]
  ------------------
  180|   315k|                        {
  181|       |                            // Swallow the bad token
  182|   315k|                            ConsumeCurrent();
  183|   315k|                        }
  184|   318k|                        continue;
  185|   318k|                    }
  186|       |
  187|  3.37k|                    AppendStatementToDocument(statement.release_not_null());
  188|  3.37k|                }
  189|   349k|            }
  190|   349k|        }
  191|  6.41k|    }
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  194|  3.29M|    {
  195|  3.29M|        PHI_ASSERT(m_TokenStream->has_more());
  196|       |
  197|  3.29M|        return m_TokenStream->look_ahead();
  198|  3.29M|    }
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  201|  1.10M|    {
  202|  1.10M|        m_TokenStream->consume();
  203|  1.10M|    }
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  206|  45.1k|    {
  207|  45.4k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (207:16): [True: 45.1k, False: 359]
  ------------------
  208|  45.1k|        {
  209|  45.1k|            switch (CurrentToken().GetTokenKind())
  210|  45.1k|            {
  211|    364|                case TokenKind::Comment:
  ------------------
  |  Branch (211:17): [True: 364, False: 44.7k]
  ------------------
  212|    364|                    ConsumeCurrent();
  213|    364|                    break;
  214|       |
  215|  44.7k|                default:
  ------------------
  |  Branch (215:17): [True: 44.7k, False: 364]
  ------------------
  216|  44.7k|                    return;
  217|  45.1k|            }
  218|  45.1k|        }
  219|  45.1k|    }
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  222|   358k|    {
  223|   358k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (223:16): [True: 358k, False: 99]
  ------------------
  224|   358k|        {
  225|   358k|            switch (CurrentToken().GetTokenKind())
  226|   358k|            {
  227|    631|                case TokenKind::NewLine:
  ------------------
  |  Branch (227:17): [True: 631, False: 358k]
  ------------------
  228|    644|                case TokenKind::Comment:
  ------------------
  |  Branch (228:17): [True: 13, False: 358k]
  ------------------
  229|    644|                    ConsumeCurrent();
  230|    644|                    break;
  231|       |
  232|   358k|                default:
  ------------------
  |  Branch (232:17): [True: 358k, False: 644]
  ------------------
  233|   358k|                    return;
  234|   358k|            }
  235|   358k|        }
  236|   358k|    }
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  239|   206k|    {
  240|       |        // Do we even have more tokens?
  241|   206k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (241:13): [True: 439, False: 206k]
  ------------------
  242|    439|        {
  243|    439|            return {};
  244|    439|        }
  245|       |
  246|   206k|        const Token& token = CurrentToken();
  247|       |
  248|       |        // Is this the correct token kind
  249|   206k|        if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (249:13): [True: 59.9k, False: 146k]
  ------------------
  250|  59.9k|        {
  251|  59.9k|            return {};
  252|  59.9k|        }
  253|       |
  254|   146k|        ConsumeCurrent();
  255|   146k|        return token;
  256|   206k|    }
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  259|  9.85k|    {
  260|       |        // Next we MUST parse the function name
  261|  9.85k|        auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  262|  9.85k|        if (!function_name_token)
  ------------------
  |  Branch (262:13): [True: 1.38k, False: 8.46k]
  ------------------
  263|  1.38k|        {
  264|  1.38k|            err("Expected identifier for function name");
  265|  1.38k|            return {};
  266|  1.38k|        }
  267|       |
  268|  8.46k|        auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  269|  8.46k|        function_definition->m_FunctionName = function_name_token->GetText();
  270|       |
  271|       |        // Next we MUST parse an opening parenthesis (LParen)
  272|  8.46k|        if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (272:13): [True: 573, False: 7.89k]
  ------------------
  273|    573|        {
  274|    573|            err("Expected opening parenthesis");
  275|    573|            return {};
  276|    573|        }
  277|       |
  278|       |        // Next we parse the function parameter declarations until right parenthesis (RParen)
  279|  12.3k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (279:16): [True: 12.2k, False: 34]
  |  Branch (279:16): [True: 7.06k, False: 5.23k]
  |  Branch (279:45): [True: 7.06k, False: 5.20k]
  ------------------
  280|  7.06k|        {
  281|  7.06k|            phi::optional<FunctionParameter> function_paremeter_optional =
  282|  7.06k|                    ParseFunctionParameterDefinition();
  283|  7.06k|            if (!function_paremeter_optional)
  ------------------
  |  Branch (283:17): [True: 2.65k, False: 4.41k]
  ------------------
  284|  2.65k|            {
  285|       |                // TODO: Proper error reporting
  286|  2.65k|                return {};
  287|  2.65k|            }
  288|  4.41k|            FunctionParameter& function_paremeter = function_paremeter_optional.value();
  289|       |
  290|  4.41k|            function_definition->m_Parameters.emplace_back(phi::move(function_paremeter));
  291|       |
  292|       |            // Parse comma
  293|  4.41k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (293:17): [True: 4.41k, False: 0]
  |  Branch (293:17): [True: 1.40k, False: 3.01k]
  |  Branch (293:46): [True: 1.40k, False: 3.01k]
  ------------------
  294|  1.40k|            {
  295|  1.40k|                ConsumeCurrent();
  296|  1.40k|            }
  297|  4.41k|        }
  298|       |
  299|       |        // Next we MUST parse a right parenthesis (RParen)
  300|  5.23k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (300:13): [True: 34, False: 5.20k]
  ------------------
  301|     34|        {
  302|     34|            err("ERR: Expected ')'");
  303|     34|            return {};
  304|     34|        }
  305|       |
  306|       |        // Next we MUST parse a new line
  307|  5.20k|        if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (307:13): [True: 2.47k, False: 2.72k]
  ------------------
  308|  2.47k|        {
  309|  2.47k|            err("ERR: Missing newline!");
  310|  2.47k|            return {};
  311|  2.47k|        }
  312|       |
  313|       |        // Next parse Statements until EndFunc
  314|  4.73k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (314:16): [True: 4.70k, False: 31]
  |  Branch (314:16): [True: 3.73k, False: 1.00k]
  |  Branch (314:45): [True: 3.73k, False: 971]
  ------------------
  315|  3.73k|        {
  316|  3.73k|            auto statement = ParseStatement();
  317|  3.73k|            if (!statement)
  ------------------
  |  Branch (317:17): [True: 1.72k, False: 2.01k]
  ------------------
  318|  1.72k|            {
  319|  1.72k|                err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  320|  1.72k|                                std::string_view(function_definition->m_FunctionName)));
  321|       |                // TODO: Report proper error
  322|  1.72k|                return {};
  323|  1.72k|            }
  324|       |
  325|  2.01k|            function_definition->m_FunctionBody.emplace_back(
  326|  2.01k|                    phi::move(statement.release_not_null()));
  327|       |
  328|  2.01k|            ConsumeNewLineAndComments();
  329|  2.01k|        }
  330|       |
  331|       |        // Next we MUST parse EndFunc
  332|  1.00k|        if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (332:13): [True: 31, False: 971]
  ------------------
  333|     31|        {
  334|       |            // TODO: Proper error
  335|     31|            return {};
  336|     31|        }
  337|       |
  338|    971|        return phi::move(function_definition);
  339|  1.00k|    }
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  342|  7.06k|    {
  343|       |        // TODO: This entire function requres more error checks
  344|  7.06k|        FunctionParameter parameter;
  345|       |
  346|  19.9k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (346:16): [True: 19.8k, False: 83]
  ------------------
  347|  19.8k|        {
  348|  19.8k|            const Token& token = CurrentToken();
  349|       |
  350|  19.8k|            switch (token.GetTokenKind())
  351|  19.8k|            {
  352|  7.00k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (352:17): [True: 7.00k, False: 12.8k]
  ------------------
  353|  7.00k|                    parameter.name = token.GetText().substring_view(1u);
  354|  7.00k|                    ConsumeCurrent();
  355|  7.00k|                    break;
  356|      0|                }
  357|    194|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (357:17): [True: 194, False: 19.6k]
  ------------------
  358|    194|                    parameter.as_const = true;
  359|    194|                    ConsumeCurrent();
  360|    194|                    break;
  361|      0|                }
  362|     74|                case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (362:17): [True: 74, False: 19.8k]
  ------------------
  363|     74|                    parameter.by_ref = true;
  364|     74|                    ConsumeCurrent();
  365|     74|                    break;
  366|      0|                }
  367|  6.56k|                case TokenKind::OP_Equals: {
  ------------------
  |  Branch (367:17): [True: 6.56k, False: 13.3k]
  ------------------
  368|  6.56k|                    if (parameter.name.is_empty())
  ------------------
  |  Branch (368:25): [True: 222, False: 6.33k]
  ------------------
  369|    222|                    {
  370|       |                        // TODO: PROPER ERROR
  371|    222|                        return {};
  372|    222|                    }
  373|       |
  374|       |                    // Consume the '='
  375|  6.33k|                    ConsumeCurrent();
  376|       |
  377|       |                    // Default value is an expression
  378|  6.33k|                    auto default_expression = ParseExpression();
  379|  6.33k|                    if (!default_expression)
  ------------------
  |  Branch (379:25): [True: 715, False: 5.62k]
  ------------------
  380|    715|                    {
  381|       |                        // TODO: Report error
  382|    715|                        return {};
  383|    715|                    }
  384|       |
  385|       |                    // For default values we artificially create a variable assignment
  386|  5.62k|                    auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  387|       |
  388|  5.62k|                    default_var_assignment->m_Scope        = VariableScope::Auto;
  389|  5.62k|                    default_var_assignment->m_VariableName = parameter.name;
  390|  5.62k|                    default_var_assignment->m_InitialValueExpression =
  391|  5.62k|                            phi::move(default_expression);
  392|       |
  393|  5.62k|                    parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  394|  5.62k|                    break;
  395|  6.33k|                }
  396|  1.40k|                case TokenKind::Comma:
  ------------------
  |  Branch (396:17): [True: 1.40k, False: 18.4k]
  ------------------
  397|  4.41k|                case TokenKind::RParen: {
  ------------------
  |  Branch (397:17): [True: 3.01k, False: 16.8k]
  ------------------
  398|  4.41k|                    return phi::move(parameter);
  399|  1.40k|                }
  400|  1.63k|                default: {
  ------------------
  |  Branch (400:17): [True: 1.63k, False: 18.2k]
  ------------------
  401|       |                    // TODO: Report error
  402|  1.63k|                    return {};
  403|  1.40k|                }
  404|  19.8k|            }
  405|  19.8k|        }
  406|       |
  407|       |        // TODO: Report error unexpected EOF
  408|     83|        return {};
  409|  7.06k|    }
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  412|   342k|    {
  413|   342k|        ConsumeNewLineAndComments();
  414|       |
  415|   342k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (415:13): [True: 8, False: 342k]
  ------------------
  416|      8|        {
  417|       |            // TODO: Report proper error
  418|      8|            return {};
  419|      8|        }
  420|       |
  421|   342k|        phi::scope_ptr<ASTStatement> ret_statement;
  422|       |
  423|       |        // Loop until we parse something or there is nothing left to parse
  424|   342k|        const Token& token = CurrentToken();
  425|   342k|        switch (token.GetTokenKind())
  426|   342k|        {
  427|       |            // Variable assignment
  428|  3.46k|            case TokenKind::KW_Const:
  ------------------
  |  Branch (428:13): [True: 3.46k, False: 339k]
  ------------------
  429|  5.63k|            case TokenKind::KW_Local:
  ------------------
  |  Branch (429:13): [True: 2.17k, False: 340k]
  ------------------
  430|  7.63k|            case TokenKind::KW_Global:
  ------------------
  |  Branch (430:13): [True: 2.00k, False: 340k]
  ------------------
  431|  8.79k|            case TokenKind::KW_Static:
  ------------------
  |  Branch (431:13): [True: 1.16k, False: 341k]
  ------------------
  432|  34.6k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (432:13): [True: 25.8k, False: 316k]
  ------------------
  433|  34.6k|                ret_statement = ParseVariableAssignment();
  434|  34.6k|                if (!ret_statement)
  ------------------
  |  Branch (434:21): [True: 12.2k, False: 22.4k]
  ------------------
  435|  12.2k|                {
  436|  12.2k|                    err("ERR: Failed to parse variable assignment!\n");
  437|  12.2k|                    return {};
  438|  12.2k|                }
  439|  22.4k|                break;
  440|  34.6k|            }
  441|       |
  442|       |            // If Statement
  443|  22.7k|            case TokenKind::KW_If: {
  ------------------
  |  Branch (443:13): [True: 22.7k, False: 320k]
  ------------------
  444|  22.7k|                ret_statement = ParseIfStatement();
  445|  22.7k|                if (!ret_statement)
  ------------------
  |  Branch (445:21): [True: 19.2k, False: 3.53k]
  ------------------
  446|  19.2k|                {
  447|  19.2k|                    err("ERR: Failed to parse if statement!\n");
  448|  19.2k|                    return {};
  449|  19.2k|                }
  450|  3.53k|                break;
  451|  22.7k|            }
  452|       |
  453|       |            // While statement
  454|  10.7k|            case TokenKind::KW_While: {
  ------------------
  |  Branch (454:13): [True: 10.7k, False: 331k]
  ------------------
  455|  10.7k|                ret_statement = ParseWhileStatement();
  456|  10.7k|                if (!ret_statement)
  ------------------
  |  Branch (456:21): [True: 5.80k, False: 4.98k]
  ------------------
  457|  5.80k|                {
  458|  5.80k|                    err("ERR: Failed to parse while statement!\n");
  459|  5.80k|                    return {};
  460|  5.80k|                }
  461|  4.98k|                break;
  462|  10.7k|            }
  463|       |
  464|       |            // Exit statement
  465|  4.98k|            case TokenKind::KW_Exit: {
  ------------------
  |  Branch (465:13): [True: 4.59k, False: 338k]
  ------------------
  466|  4.59k|                ret_statement = ParseExitStatement();
  467|  4.59k|                if (!ret_statement)
  ------------------
  |  Branch (467:21): [True: 0, False: 4.59k]
  ------------------
  468|      0|                {
  469|      0|                    err("ERR: Failed to parse exit statement!\n");
  470|      0|                    return {};
  471|      0|                }
  472|  4.59k|                break;
  473|  4.59k|            }
  474|       |
  475|   269k|            default: {
  ------------------
  |  Branch (475:13): [True: 269k, False: 72.8k]
  ------------------
  476|       |                // Try to parse ExpressionStatement
  477|   269k|                ret_statement = ParseExpressionStatement();
  478|   269k|                if (!ret_statement)
  ------------------
  |  Branch (478:21): [True: 260k, False: 9.61k]
  ------------------
  479|   260k|                {
  480|   260k|                    err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  481|   260k|                                    enum_name(token.GetTokenKind())));
  482|   260k|                    return {};
  483|   260k|                }
  484|  9.61k|                break;
  485|   269k|            }
  486|   342k|        }
  487|       |
  488|  45.1k|        ConsumeComments();
  489|       |
  490|  45.1k|        if (m_TokenStream->has_more() && !MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (490:13): [True: 44.7k, False: 359]
  |  Branch (490:13): [True: 31.8k, False: 13.2k]
  |  Branch (490:42): [True: 31.8k, False: 12.9k]
  ------------------
  491|  31.8k|        {
  492|  31.8k|            err("Requires newline after statement\n");
  493|  31.8k|            return {};
  494|  31.8k|        }
  495|       |
  496|  13.2k|        return phi::move(ret_statement);
  497|  45.1k|    }
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  500|  10.7k|    {
  501|  10.7k|        const Token& token = CurrentToken();
  502|  10.7k|        if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (502:13): [True: 0, False: 10.7k]
  ------------------
  503|      0|        {
  504|       |            // TODO: Proper error
  505|      0|            return {};
  506|      0|        }
  507|  10.7k|        ConsumeCurrent();
  508|       |
  509|       |        // Next we MUST parse an Expression
  510|  10.7k|        auto while_condition_expression = ParseExpression();
  511|  10.7k|        if (!while_condition_expression)
  ------------------
  |  Branch (511:13): [True: 854, False: 9.93k]
  ------------------
  512|    854|        {
  513|       |            // TODO: Proper error
  514|    854|            return {};
  515|    854|        }
  516|       |
  517|  9.93k|        auto while_statement =
  518|  9.93k|                phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  519|       |
  520|       |        // Parse statements until KW_WEnd
  521|  14.0k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (521:16): [True: 13.9k, False: 122]
  |  Branch (521:16): [True: 8.98k, False: 5.10k]
  |  Branch (521:45): [True: 8.98k, False: 4.98k]
  ------------------
  522|  8.98k|        {
  523|       |            // Skip NewLines and comments
  524|  8.98k|            if (CurrentToken().GetTokenKind() == TokenKind::NewLine ||
  ------------------
  |  Branch (524:17): [True: 740, False: 8.24k]
  ------------------
  525|  8.98k|                CurrentToken().GetTokenKind() == TokenKind::Comment)
  ------------------
  |  Branch (525:17): [True: 194, False: 8.04k]
  ------------------
  526|    934|            {
  527|    934|                ConsumeCurrent();
  528|    934|                continue;
  529|    934|            }
  530|       |
  531|       |            // Parse statements
  532|  8.04k|            auto statement = ParseStatement();
  533|  8.04k|            if (!statement)
  ------------------
  |  Branch (533:17): [True: 4.82k, False: 3.22k]
  ------------------
  534|  4.82k|            {
  535|       |                // TODO: Propeer error
  536|  4.82k|                return {};
  537|  4.82k|            }
  538|       |
  539|  3.22k|            while_statement->m_Statements.emplace_back(statement.release_not_null());
  540|  3.22k|        }
  541|       |
  542|  5.10k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (542:13): [True: 122, False: 4.98k]
  ------------------
  543|    122|        {
  544|       |            // TODO: Proper error
  545|    122|            return {};
  546|    122|        }
  547|       |
  548|       |        // Next token MUST be KW_Wend
  549|  4.98k|        const Token& wend_token = CurrentToken();
  550|  4.98k|        if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (550:13): [True: 0, False: 4.98k]
  ------------------
  551|      0|        {
  552|       |            // TODO: Proper error
  553|      0|            return {};
  554|      0|        }
  555|  4.98k|        ConsumeCurrent();
  556|       |
  557|  4.98k|        return phi::move(while_statement);
  558|  4.98k|    }
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  561|  34.6k|    {
  562|  34.6k|        auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  563|       |
  564|  34.6k|        phi::boolean parsed_identifier = false;
  565|       |        // Parse all specifiers until we hit a VariableIdentifier
  566|  69.3k|        while (m_TokenStream->has_more() && !parsed_identifier)
  ------------------
  |  Branch (566:16): [True: 69.1k, False: 240]
  |  Branch (566:16): [True: 43.3k, False: 25.9k]
  |  Branch (566:45): [True: 43.3k, False: 25.7k]
  ------------------
  567|  43.3k|        {
  568|  43.3k|            const Token& current_token = CurrentToken();
  569|  43.3k|            ConsumeCurrent();
  570|       |
  571|  43.3k|            switch (current_token.GetTokenKind())
  572|  43.3k|            {
  573|  4.39k|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (573:17): [True: 4.39k, False: 38.9k]
  ------------------
  574|  4.39k|                    if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (574:25): [True: 929, False: 3.46k]
  ------------------
  575|    929|                    {
  576|       |                        // TODO: Error more than one const specifier
  577|    929|                        err("ERR: More than one const specifier given\n");
  578|    929|                        return {};
  579|    929|                    }
  580|  3.46k|                    variable_declaration->m_IsConst = true;
  581|  3.46k|                    break;
  582|  4.39k|                }
  583|       |
  584|  1.48k|                case TokenKind::KW_Static: {
  ------------------
  |  Branch (584:17): [True: 1.48k, False: 41.8k]
  ------------------
  585|  1.48k|                    if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (585:25): [True: 323, False: 1.16k]
  ------------------
  586|    323|                    {
  587|       |                        // TODO: Error more than one static specifier
  588|    323|                        err("ERR: More than one static specifier given\n");
  589|    323|                        return {};
  590|    323|                    }
  591|  1.16k|                    variable_declaration->m_IsStatic = true;
  592|  1.16k|                    break;
  593|  1.48k|                }
  594|       |
  595|  2.35k|                case TokenKind::KW_Global: {
  ------------------
  |  Branch (595:17): [True: 2.35k, False: 41.0k]
  ------------------
  596|  2.35k|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (596:25): [True: 354, False: 2.00k]
  ------------------
  597|    354|                    {
  598|       |                        // TODO: Error more than one scope specifier
  599|    354|                        err("ERR: More than one scope specifier given\n");
  600|    354|                        return {};
  601|    354|                    }
  602|  2.00k|                    variable_declaration->m_Scope = VariableScope::Global;
  603|  2.00k|                    break;
  604|  2.35k|                }
  605|       |
  606|  2.46k|                case TokenKind::KW_Local: {
  ------------------
  |  Branch (606:17): [True: 2.46k, False: 40.9k]
  ------------------
  607|  2.46k|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (607:25): [True: 292, False: 2.17k]
  ------------------
  608|    292|                    {
  609|       |                        // TODO: Error more than one scope specifier
  610|    292|                        err("ERR: More than one scope specifier given\n");
  611|    292|                        return {};
  612|    292|                    }
  613|  2.17k|                    variable_declaration->m_Scope = VariableScope::Local;
  614|  2.17k|                    break;
  615|  2.46k|                }
  616|       |
  617|  25.8k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (617:17): [True: 25.8k, False: 17.5k]
  ------------------
  618|       |                    // VariableIdentifiers begin with a '$'
  619|       |                    // Like: $MyVariable
  620|       |                    // So for the name we ignore the very first character
  621|  25.8k|                    PHI_ASSERT(current_token.GetText().length() > 1u);
  622|  25.8k|                    variable_declaration->m_VariableName =
  623|  25.8k|                            current_token.GetText().substring_view(1u);
  624|       |
  625|  25.8k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  626|  25.8k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  627|       |
  628|  25.8k|                    parsed_identifier = true;
  629|  25.8k|                    break;
  630|  2.46k|                }
  631|       |
  632|  6.80k|                default: {
  ------------------
  |  Branch (632:17): [True: 6.80k, False: 36.5k]
  ------------------
  633|       |                    // TODO: Error unexpected token
  634|  6.80k|                    return {};
  635|  2.46k|                }
  636|  43.3k|            }
  637|  43.3k|        }
  638|       |
  639|  25.9k|        if (!parsed_identifier)
  ------------------
  |  Branch (639:13): [True: 100, False: 25.8k]
  ------------------
  640|    100|        {
  641|       |            // TODO: Error variable declaration ends before the VariableIdentifier
  642|    100|            err("ERR: Missing variable identifier!\n");
  643|    100|            return {};
  644|    100|        }
  645|       |
  646|       |        // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  647|  25.8k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (647:13): [True: 140, False: 25.7k]
  ------------------
  648|    140|        {
  649|    140|            return variable_declaration;
  650|    140|        }
  651|       |
  652|       |        // Check for equals
  653|  25.7k|        const Token& next_token = CurrentToken();
  654|       |
  655|  25.7k|        if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (655:13): [True: 13.4k, False: 12.2k]
  ------------------
  656|  13.4k|        {
  657|  13.4k|            ConsumeCurrent();
  658|       |
  659|       |            // Now me MUST parse an expression
  660|  13.4k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
  661|  13.4k|            if (!expression)
  ------------------
  |  Branch (661:17): [True: 3.46k, False: 10.0k]
  ------------------
  662|  3.46k|            {
  663|       |                // TODO: Error failed to parse a valid expression
  664|  3.46k|                err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  665|  3.46k|                return {};
  666|  3.46k|            }
  667|       |
  668|  10.0k|            variable_declaration->m_InitialValueExpression = phi::move(expression);
  669|  10.0k|        }
  670|       |
  671|  22.2k|        return variable_declaration;
  672|  25.7k|    }
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  675|   269k|    {
  676|   269k|        auto expression = ParseExpression();
  677|   269k|        if (!expression)
  ------------------
  |  Branch (677:13): [True: 167k, False: 102k]
  ------------------
  678|   167k|        {
  679|   167k|            return {};
  680|   167k|        }
  681|       |
  682|   102k|        auto expression_statement =
  683|   102k|                phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  684|       |
  685|   102k|        if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (685:13): [True: 92.8k, False: 9.61k]
  ------------------
  686|  92.8k|        {
  687|  92.8k|            err(fmt::format("Expression {:s} is not valid as an statement\n",
  688|  92.8k|                            expression_statement->m_Expression->Name()));
  689|  92.8k|            return {};
  690|  92.8k|        }
  691|       |
  692|  9.61k|        return phi::move(expression_statement);
  693|   102k|    }
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  696|  22.7k|    {
  697|  22.7k|        if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (697:13): [True: 0, False: 22.7k]
  ------------------
  698|      0|        {
  699|      0|            return {};
  700|      0|        }
  701|       |
  702|       |        // Next me MUST parse an expression
  703|  22.7k|        auto if_condition = ParseExpression();
  704|  22.7k|        if (!if_condition)
  ------------------
  |  Branch (704:13): [True: 7.06k, False: 15.7k]
  ------------------
  705|  7.06k|        {
  706|  7.06k|            err("ERR: failed to parse expression!\n");
  707|       |
  708|  7.06k|            return {};
  709|  7.06k|        }
  710|       |
  711|       |        // Next we MUST parse Then
  712|  15.7k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (712:13): [True: 6.85k, False: 8.85k]
  ------------------
  713|  6.85k|        {
  714|  6.85k|            err("ERR: Missing then!\n");
  715|       |
  716|  6.85k|            return {};
  717|  6.85k|        }
  718|       |
  719|  8.85k|        ConsumeNewLineAndComments();
  720|       |
  721|  8.85k|        IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  722|       |
  723|       |        // Next parse statements until we hit and EndIf, ElseIf or Else
  724|  13.5k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (724:16): [True: 13.4k, False: 61]
  |  Branch (724:16): [True: 8.77k, False: 4.74k]
  |  Branch (724:45): [True: 9.92k, False: 3.53k]
  ------------------
  725|  13.5k|               CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (725:16): [True: 9.65k, False: 268]
  ------------------
  726|  13.5k|               CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (726:16): [True: 8.77k, False: 876]
  ------------------
  727|  8.77k|        {
  728|  8.77k|            auto statement = ParseStatement();
  729|  8.77k|            if (!statement)
  ------------------
  |  Branch (729:17): [True: 4.11k, False: 4.66k]
  ------------------
  730|  4.11k|            {
  731|  4.11k|                err("ERR: Failed to parse statement inside of IF\n");
  732|  4.11k|                return {};
  733|  4.11k|            }
  734|       |
  735|  4.66k|            if_case.body.emplace_back(statement.release_not_null());
  736|       |
  737|  4.66k|            ConsumeNewLineAndComments();
  738|  4.66k|        }
  739|       |
  740|  4.74k|        auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
  741|       |
  742|       |        // TODO: Handle ElseIf, Else
  743|       |
  744|  4.74k|        if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (744:13): [True: 1.20k, False: 3.53k]
  ------------------
  745|  1.20k|        {
  746|  1.20k|            err("ERR: Missing EndIf!\n");
  747|       |            // TODO: Proper Error
  748|  1.20k|            return {};
  749|  1.20k|        }
  750|       |
  751|  3.53k|        return phi::move(if_statement);
  752|  4.74k|    }
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
  755|   159k|    {
  756|   159k|        const Token& token = CurrentToken();
  757|   159k|        if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (757:13): [True: 0, False: 159k]
  ------------------
  758|      0|        {
  759|      0|            return {};
  760|      0|        }
  761|       |
  762|   159k|        if (token.GetText().length() > 18u)
  ------------------
  |  Branch (762:13): [True: 234, False: 159k]
  ------------------
  763|    234|        {
  764|       |            // TODO: Better check and proper error
  765|    234|            return {};
  766|    234|        }
  767|       |
  768|   159k|        phi::int64_t value{0};
  769|   159k|        phi::boolean parsing_hex{false};
  770|   335k|        for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (770:36): [True: 175k, False: 159k]
  ------------------
  771|   175k|        {
  772|   175k|            char character = token.GetText().at(index);
  773|       |
  774|       |            // Checking the second character
  775|   175k|            if (index == 1u)
  ------------------
  |  Branch (775:17): [True: 9.41k, False: 166k]
  ------------------
  776|  9.41k|            {
  777|  9.41k|                if (character == 'x' || character == 'X')
  ------------------
  |  Branch (777:21): [True: 323, False: 9.09k]
  |  Branch (777:41): [True: 460, False: 8.63k]
  ------------------
  778|    783|                {
  779|    783|                    parsing_hex = true;
  780|    783|                    continue;
  781|    783|                }
  782|  9.41k|            }
  783|       |
  784|   174k|            if (parsing_hex)
  ------------------
  |  Branch (784:17): [True: 1.34k, False: 173k]
  ------------------
  785|  1.34k|            {
  786|  1.34k|                PHI_ASSERT(phi::is_hex_digit(character));
  787|       |
  788|  1.34k|                value <<= 4;
  789|  1.34k|                value |= phi::hex_digit_value(character).unsafe();
  790|  1.34k|            }
  791|   173k|            else
  792|   173k|            {
  793|   173k|                PHI_ASSERT(character >= '0' && character <= '9');
  794|       |
  795|   173k|                value *= 10;
  796|   173k|                value += (character - '0');
  797|   173k|            }
  798|   174k|        }
  799|       |
  800|   159k|        ConsumeCurrent();
  801|   159k|        return phi::make_scope<ASTIntegerLiteral>(value);
  802|   159k|    }
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
  805|  23.3k|    {
  806|  23.3k|        const Token& token = CurrentToken();
  807|  23.3k|        if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (807:13): [True: 0, False: 23.3k]
  ------------------
  808|      0|        {
  809|      0|            return {};
  810|      0|        }
  811|  23.3k|        ConsumeCurrent();
  812|       |
  813|  23.3k|        auto string_literal = phi::make_scope<ASTStringLiteral>();
  814|       |
  815|  23.3k|        const phi::usize length = token.GetText().length();
  816|       |        // Trim the trailing and leading "
  817|  23.3k|        string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
  818|       |
  819|  23.3k|        return phi::move(string_literal);
  820|  23.3k|    }
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
  823|   851k|    {
  824|   851k|        phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
  825|   851k|        if (!lhs_expression)
  ------------------
  |  Branch (825:13): [True: 617k, False: 233k]
  ------------------
  826|   617k|        {
  827|   617k|            return {};
  828|   617k|        }
  829|       |
  830|   233k|        return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
  831|   851k|    }
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
  834|   940k|    {
  835|   940k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (835:13): [True: 830, False: 939k]
  ------------------
  836|    830|        {
  837|       |            // TODO: Proper error
  838|    830|            return {};
  839|    830|        }
  840|       |
  841|   939k|        const Token& token = CurrentToken();
  842|   939k|        if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (842:13): [True: 7.77k, False: 932k]
  ------------------
  843|  7.77k|        {
  844|  7.77k|            const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
  845|  7.77k|            PHI_UNUSED_VARIABLE(op_precedence);
  846|  7.77k|            ConsumeCurrent();
  847|       |
  848|       |            // TODO: Implement me
  849|  7.77k|        }
  850|   932k|        else if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (850:18): [True: 449k, False: 483k]
  ------------------
  851|   449k|        {
  852|       |            // Consume the LParen
  853|   449k|            m_TokenStream->consume();
  854|       |
  855|   449k|            phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
  856|   449k|            if (!paren_expression)
  ------------------
  |  Branch (856:17): [True: 445k, False: 3.55k]
  ------------------
  857|   445k|            {
  858|       |                // TODO: Proper error
  859|   445k|                return {};
  860|   445k|            }
  861|       |
  862|  3.55k|            return phi::move(paren_expression);
  863|   449k|        }
  864|   483k|        else if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (864:18): [True: 159k, False: 323k]
  ------------------
  865|   159k|        {
  866|   159k|            phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
  867|   159k|            if (!int_literal)
  ------------------
  |  Branch (867:17): [True: 234, False: 159k]
  ------------------
  868|    234|            {
  869|       |                // TODO: Error failed to parse integer literal
  870|    234|                return {};
  871|    234|            }
  872|       |
  873|   159k|            return phi::move(int_literal);
  874|   159k|        }
  875|   323k|        else if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (875:18): [True: 23.3k, False: 299k]
  ------------------
  876|  23.3k|        {
  877|  23.3k|            auto string_literal_expression = ParseStringLiteral();
  878|  23.3k|            if (!string_literal_expression)
  ------------------
  |  Branch (878:17): [True: 0, False: 23.3k]
  ------------------
  879|      0|            {
  880|       |                // TODO: Proper error
  881|      0|                return {};
  882|      0|            }
  883|       |
  884|  23.3k|            return phi::move(string_literal_expression);
  885|  23.3k|        }
  886|       |
  887|       |        // Boolean literal
  888|   299k|        else if (token.GetTokenKind() == TokenKind::KW_True ||
  ------------------
  |  Branch (888:18): [True: 5.39k, False: 294k]
  ------------------
  889|   299k|                 token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (889:18): [True: 316, False: 294k]
  ------------------
  890|  5.71k|        {
  891|  5.71k|            auto boolean_literal = ParseBooleanLiteral();
  892|  5.71k|            if (!boolean_literal)
  ------------------
  |  Branch (892:17): [True: 0, False: 5.71k]
  ------------------
  893|      0|            {
  894|       |                // TODO: Proper error
  895|      0|                return {};
  896|      0|            }
  897|       |
  898|  5.71k|            return phi::move(boolean_literal);
  899|  5.71k|        }
  900|       |
  901|       |        // Function call expression
  902|   294k|        else if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (902:18): [True: 73.7k, False: 220k]
  |  Branch (902:18): [True: 75.6k, False: 218k]
  |  Branch (902:75): [True: 1.85k, False: 218k]
  ------------------
  903|  75.6k|        {
  904|  75.6k|            auto function_call_expression = ParseFunctionCallExpression();
  905|  75.6k|            if (!function_call_expression)
  ------------------
  |  Branch (905:17): [True: 65.1k, False: 10.4k]
  ------------------
  906|  65.1k|            {
  907|       |                // TODO: Proper error
  908|  65.1k|                err("ERR: Failed to parse function call expression!\n");
  909|  65.1k|                return {};
  910|  65.1k|            }
  911|       |
  912|  10.4k|            return phi::move(function_call_expression);
  913|  75.6k|        }
  914|       |        // Variable expression
  915|   218k|        else if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (915:18): [True: 17.0k, False: 201k]
  ------------------
  916|  17.0k|        {
  917|  17.0k|            auto variable_expression = ParseVariableExpression();
  918|  17.0k|            if (!variable_expression)
  ------------------
  |  Branch (918:17): [True: 0, False: 17.0k]
  ------------------
  919|      0|            {
  920|       |                // TODO: Proper error
  921|      0|                err("ERR: Failed to parse Variable expression\n");
  922|      0|                return {};
  923|      0|            }
  924|       |
  925|  17.0k|            return phi::move(variable_expression);
  926|  17.0k|        }
  927|       |        // Keyword literal
  928|   201k|        else if (token.IsKeywordLiteral())
  ------------------
  |  Branch (928:18): [True: 940, False: 200k]
  ------------------
  929|    940|        {
  930|    940|            auto keyword_literal = ParseKeywordLiteral();
  931|    940|            if (!keyword_literal)
  ------------------
  |  Branch (931:17): [True: 0, False: 940]
  ------------------
  932|      0|            {
  933|       |                // TODO: Proper error
  934|      0|                err("ERR: Failed to parse keyword literal expression!\n");
  935|      0|                return {};
  936|      0|            }
  937|       |
  938|    940|            return phi::move(keyword_literal);
  939|    940|        }
  940|       |        // Float literal
  941|   200k|        else if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (941:18): [True: 54.6k, False: 146k]
  ------------------
  942|  54.6k|        {
  943|  54.6k|            auto float_literal = ParseFloatLiteral();
  944|  54.6k|            if (!float_literal)
  ------------------
  |  Branch (944:17): [True: 0, False: 54.6k]
  ------------------
  945|      0|            {
  946|       |                // TODO: Proper error
  947|      0|                err("ERR: Failed to parse float literal expression!\n");
  948|      0|                return {};
  949|      0|            }
  950|       |
  951|  54.6k|            return phi::move(float_literal);
  952|  54.6k|        }
  953|       |        // ArraySubscript expression
  954|   146k|        else if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (954:18): [True: 40.4k, False: 105k]
  ------------------
  955|  40.4k|        {
  956|  40.4k|            auto subscript_expression = ParseArraySubscriptExpression();
  957|  40.4k|            if (!subscript_expression)
  ------------------
  |  Branch (957:17): [True: 15.9k, False: 24.4k]
  ------------------
  958|  15.9k|            {
  959|  15.9k|                err("ERR: Failed to parse array subscript expression\n");
  960|  15.9k|                return {};
  961|  15.9k|            }
  962|       |
  963|  24.4k|            return phi::move(subscript_expression);
  964|  40.4k|        }
  965|       |
  966|       |        // TODO: Error Unexpected token
  967|   113k|        err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
  968|   113k|                        enum_name(token.GetTokenKind())));
  969|   113k|        return {};
  970|   939k|    }
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
  974|   240k|    {
  975|   303k|        while (true)
  ------------------
  |  Branch (975:16): [Folded - Ignored]
  ------------------
  976|   303k|        {
  977|   303k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (977:17): [True: 1.00k, False: 302k]
  ------------------
  978|  1.00k|            {
  979|  1.00k|                return phi::move(lhs);
  980|  1.00k|            }
  981|       |
  982|   302k|            const Token& operator_token = CurrentToken();
  983|   302k|            if (!IsBinaryOperator(operator_token.GetTokenKind()))
  ------------------
  |  Branch (983:17): [True: 212k, False: 90.0k]
  ------------------
  984|   212k|            {
  985|       |                // If its not a binary operator just return the lhs expression
  986|   212k|                return phi::move(lhs);
  987|   212k|            }
  988|  90.0k|            int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
  989|  90.0k|            ConsumeCurrent();
  990|       |
  991|  90.0k|            if (token_precedence < precedence)
  ------------------
  |  Branch (991:17): [True: 340, False: 89.6k]
  ------------------
  992|    340|            {
  993|    340|                return phi::move(lhs);
  994|    340|            }
  995|       |
  996|       |            // This must be an binary expression
  997|  89.6k|            phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
  998|  89.6k|            if (!rhs_expression)
  ------------------
  |  Branch (998:17): [True: 23.3k, False: 66.3k]
  ------------------
  999|  23.3k|            {
 1000|       |                // TODO: Proper error
 1001|  23.3k|                return {};
 1002|  23.3k|            }
 1003|       |
 1004|       |            // Nothing left to parse so directly return from here
 1005|  66.3k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1005:17): [True: 281, False: 66.0k]
  ------------------
 1006|    281|            {
 1007|    281|                return phi::make_not_null_scope<ASTBinaryExpression>(
 1008|    281|                        phi::move(lhs), operator_token.GetTokenKind(),
 1009|    281|                        rhs_expression.release_not_null());
 1010|    281|            }
 1011|       |
 1012|       |            // If BinOp binds less tightly with RHS than the operator after RHS, let
 1013|       |            // the pending operator take RHS as its LHS.
 1014|  66.0k|            const Token& next_token      = CurrentToken();
 1015|  66.0k|            int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1016|       |
 1017|  66.0k|            if (token_precedence < next_precedence)
  ------------------
  |  Branch (1017:17): [True: 7.63k, False: 58.4k]
  ------------------
 1018|  7.63k|            {
 1019|  7.63k|                rhs_expression =
 1020|  7.63k|                        ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1021|  7.63k|                if (!rhs_expression)
  ------------------
  |  Branch (1021:21): [True: 3.70k, False: 3.93k]
  ------------------
 1022|  3.70k|                {
 1023|       |                    // TODO: Proper error
 1024|  3.70k|                    return {};
 1025|  3.70k|                }
 1026|  7.63k|            }
 1027|       |
 1028|       |            // Merge LHS/RHS.
 1029|  62.3k|            lhs = phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1030|  62.3k|                                                                operator_token.GetTokenKind(),
 1031|  62.3k|                                                                rhs_expression.release_not_null());
 1032|  62.3k|        }
 1033|   240k|    }
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
 1036|  75.6k|    {
 1037|       |        // Parse the function name
 1038|  75.6k|        const Token& function_identifier_token = CurrentToken();
 1039|  75.6k|        if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1039:13): [True: 1.85k, False: 73.7k]
  |  Branch (1039:13): [True: 0, False: 75.6k]
  ------------------
 1040|  75.6k|            !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1040:13): [True: 0, False: 1.85k]
  ------------------
 1041|      0|        {
 1042|      0|            return {};
 1043|      0|        }
 1044|  75.6k|        ConsumeCurrent();
 1045|       |
 1046|  75.6k|        phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1047|  75.6k|                phi::make_scope<ASTFunctionCallExpression>();
 1048|  75.6k|        if (!function_call_expression)
  ------------------
  |  Branch (1048:13): [True: 0, False: 75.6k]
  ------------------
 1049|      0|        {
 1050|       |            // TODO: Proper error
 1051|      0|            return {};
 1052|      0|        }
 1053|       |
 1054|  75.6k|        if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1054:13): [True: 1.85k, False: 73.7k]
  ------------------
 1055|  1.85k|        {
 1056|  1.85k|            function_call_expression->m_IsBuiltIn       = true;
 1057|  1.85k|            function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
 1058|  1.85k|        }
 1059|  73.7k|        else
 1060|  73.7k|        {
 1061|  73.7k|            const phi::string_view function_name = function_identifier_token.GetText();
 1062|       |
 1063|  73.7k|            function_call_expression->m_IsBuiltIn    = false;
 1064|  73.7k|            function_call_expression->m_FunctionName = function_name;
 1065|  73.7k|        }
 1066|       |
 1067|       |        // TODO: These 2 checks should be combined
 1068|       |        // Now me MUST parse an LParen
 1069|  75.6k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1069:13): [True: 1.06k, False: 74.5k]
  ------------------
 1070|  1.06k|        {
 1071|       |            // TODO: Give proper error
 1072|  1.06k|            err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1073|  1.06k|                            std::string_view{function_call_expression->FunctionName()}));
 1074|  1.06k|            return {};
 1075|  1.06k|        }
 1076|       |
 1077|  74.5k|        const Token& left_paren_token = CurrentToken();
 1078|  74.5k|        ConsumeCurrent();
 1079|  74.5k|        if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1079:13): [True: 50.1k, False: 24.3k]
  ------------------
 1080|  50.1k|        {
 1081|       |            // TODO: Give error
 1082|  50.1k|            err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1083|  50.1k|                            std::string_view{function_call_expression->FunctionName()}));
 1084|  50.1k|            return {};
 1085|  50.1k|        }
 1086|       |
 1087|       |        // Now parse all the arguments (which are expressions) separated by commas or nothing
 1088|  24.3k|        function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1089|       |
 1090|       |        // Finally we MUST parse an RParen
 1091|  24.3k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1091:13): [True: 5.53k, False: 18.8k]
  ------------------
 1092|  5.53k|        {
 1093|  5.53k|            err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1094|  5.53k|                            std::string_view{function_call_expression->FunctionName()}));
 1095|       |            // TODO: Give proper error
 1096|  5.53k|            return {};
 1097|  5.53k|        }
 1098|       |
 1099|  18.8k|        const Token& right_paren_token = CurrentToken();
 1100|  18.8k|        ConsumeCurrent();
 1101|  18.8k|        if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1101:13): [True: 8.41k, False: 10.4k]
  ------------------
 1102|  8.41k|        {
 1103|  8.41k|            err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1104|  8.41k|                            std::string_view{function_call_expression->FunctionName()}));
 1105|       |            // TODO: Give Error
 1106|  8.41k|            return {};
 1107|  8.41k|        }
 1108|       |
 1109|       |        // Return result
 1110|  10.4k|        return function_call_expression;
 1111|  18.8k|    }
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1115|  24.3k|    {
 1116|  24.3k|        std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1117|       |
 1118|  42.6k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1118:16): [True: 42.4k, False: 211]
  |  Branch (1118:16): [True: 33.6k, False: 9.01k]
  |  Branch (1118:45): [True: 33.6k, False: 8.80k]
  ------------------
 1119|  33.6k|        {
 1120|       |            // Parse the expression
 1121|  33.6k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1122|  33.6k|            if (!expression)
  ------------------
  |  Branch (1122:17): [True: 15.3k, False: 18.2k]
  ------------------
 1123|  15.3k|            {
 1124|  15.3k|                err("ERR: While parsing expression for function call arguments\n");
 1125|       |                // TODO: Give Prober error
 1126|  15.3k|                arguments.clear();
 1127|  15.3k|                return arguments;
 1128|  15.3k|            }
 1129|       |
 1130|       |            // Add argument to parameters
 1131|  18.2k|            arguments.emplace_back(expression.release_not_null());
 1132|       |
 1133|       |            // Next Token MUST be a comma followed by another expression or RParen
 1134|  18.2k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1134:17): [True: 18.0k, False: 171]
  |  Branch (1134:17): [True: 195, False: 18.0k]
  |  Branch (1134:46): [True: 195, False: 17.8k]
  ------------------
 1135|    195|            {
 1136|    195|                ConsumeCurrent();
 1137|    195|            }
 1138|  18.2k|        }
 1139|       |
 1140|  9.01k|        return arguments;
 1141|  24.3k|    }
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1144|  17.0k|    {
 1145|  17.0k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1145:13): [True: 0, False: 17.0k]
  ------------------
 1146|      0|        {
 1147|       |            // TODO: Proper error
 1148|      0|            return {};
 1149|      0|        }
 1150|       |
 1151|  17.0k|        const Token& token = CurrentToken();
 1152|  17.0k|        if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1152:13): [True: 0, False: 17.0k]
  ------------------
 1153|      0|        {
 1154|       |            // TODO error
 1155|      0|            return {};
 1156|      0|        }
 1157|       |
 1158|  17.0k|        auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1159|  17.0k|        variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1160|       |
 1161|  17.0k|        ConsumeCurrent();
 1162|       |
 1163|  17.0k|        return phi::move(variable_expression);
 1164|  17.0k|    }
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1170|  40.4k|    {
 1171|  40.4k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1171:13): [True: 0, False: 40.4k]
  ------------------
 1172|      0|        {
 1173|      0|            return {};
 1174|      0|        }
 1175|       |
 1176|  40.4k|        if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1176:13): [True: 0, False: 40.4k]
  ------------------
 1177|      0|        {
 1178|      0|            return {};
 1179|      0|        }
 1180|       |
 1181|  40.4k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1182|  40.4k|        if (!expression)
  ------------------
  |  Branch (1182:13): [True: 8.39k, False: 32.0k]
  ------------------
 1183|  8.39k|        {
 1184|  8.39k|            return {};
 1185|  8.39k|        }
 1186|       |
 1187|  32.0k|        if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1187:13): [True: 7.59k, False: 24.4k]
  ------------------
 1188|  7.59k|        {
 1189|  7.59k|            return {};
 1190|  7.59k|        }
 1191|       |
 1192|  24.4k|        return phi::make_scope<ASTArraySubscriptExpression>(
 1193|  24.4k|                phi::move(expression.release_not_null()));
 1194|  32.0k|    }
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1199|   449k|    {
 1200|       |        // NOTE: Me MUST have consumed the LParen before this
 1201|       |
 1202|   449k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1203|   449k|        if (!expression)
  ------------------
  |  Branch (1203:13): [True: 437k, False: 11.9k]
  ------------------
 1204|   437k|        {
 1205|       |            // TODO: Proper error
 1206|   437k|            return {};
 1207|   437k|        }
 1208|       |
 1209|  11.9k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1209:13): [True: 8.42k, False: 3.55k]
  ------------------
 1210|  8.42k|        {
 1211|       |            // TODO: Proper error expected closing paren
 1212|  8.42k|            return {};
 1213|  8.42k|        }
 1214|       |
 1215|  3.55k|        return phi::move(expression);
 1216|  11.9k|    }
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1219|  4.59k|    {
 1220|  4.59k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1220:13): [True: 0, False: 4.59k]
  ------------------
 1221|      0|        {
 1222|      0|            return {};
 1223|      0|        }
 1224|       |
 1225|  4.59k|        if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1225:13): [True: 0, False: 4.59k]
  ------------------
 1226|      0|        {
 1227|      0|            return {};
 1228|      0|        }
 1229|       |
 1230|       |        // Parse optional expression
 1231|  4.59k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1232|       |
 1233|  4.59k|        return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1234|  4.59k|    }
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1237|  5.71k|    {
 1238|  5.71k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1238:13): [True: 0, False: 5.71k]
  ------------------
 1239|      0|        {
 1240|       |            // TODO: Proper error
 1241|      0|            return {};
 1242|      0|        }
 1243|       |
 1244|       |        // BooleanLiteral is either KW_True or KW_False
 1245|  5.71k|        const Token& token = CurrentToken();
 1246|  5.71k|        if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1246:13): [True: 5.39k, False: 316]
  ------------------
 1247|  5.39k|        {
 1248|  5.39k|            ConsumeCurrent();
 1249|  5.39k|            return phi::make_scope<ASTBooleanLiteral>(true);
 1250|  5.39k|        }
 1251|       |
 1252|    316|        if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1252:13): [True: 316, False: 0]
  ------------------
 1253|    316|        {
 1254|    316|            ConsumeCurrent();
 1255|    316|            return phi::make_scope<ASTBooleanLiteral>(false);
 1256|    316|        }
 1257|       |
 1258|       |        // TODO: Proper error
 1259|      0|        return {};
 1260|    316|    }
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1263|    940|    {
 1264|    940|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1264:13): [True: 0, False: 940]
  ------------------
 1265|      0|        {
 1266|       |            // TODO: Proper error
 1267|      0|            return {};
 1268|      0|        }
 1269|       |
 1270|    940|        const Token& token = CurrentToken();
 1271|    940|        if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1271:13): [True: 940, False: 0]
  ------------------
 1272|    940|        {
 1273|    940|            ConsumeCurrent();
 1274|    940|            return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1275|    940|        }
 1276|       |
 1277|       |        // TODO: Proper error
 1278|      0|        return {};
 1279|    940|    }
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1282|  54.6k|    {
 1283|  54.6k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1283:13): [True: 0, False: 54.6k]
  ------------------
 1284|      0|        {
 1285|       |            // TODO: Proper error
 1286|      0|            return {};
 1287|      0|        }
 1288|       |
 1289|  54.6k|        const Token& token = CurrentToken();
 1290|  54.6k|        if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1290:13): [True: 54.6k, False: 0]
  ------------------
 1291|  54.6k|        {
 1292|  54.6k|            ConsumeCurrent();
 1293|       |
 1294|  54.6k|            char*    ptr   = nullptr;
 1295|  54.6k|            phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1296|       |
 1297|  54.6k|            return phi::make_scope<ASTFloatLiteral>(value);
 1298|  54.6k|        }
 1299|       |
 1300|       |        // TODO: Proper error
 1301|      0|        return {};
 1302|  54.6k|    }
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   72|   163k|        {
   73|   163k|            int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   74|       |            //PHI_ASSERT(precedence != 0);
   75|       |
   76|   163k|            return precedence;
   77|   163k|        }

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  6.41k|    {
   31|       |#if defined(PHI_DEBUG)
   32|       |        PHI_ASSERT(!m_Finialized);
   33|       |#endif
   34|       |
   35|  6.41k|        m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |        m_Finialized = true;
   38|       |#endif
   39|  6.41k|    }
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   69|  6.73M|    {
   70|       |#if defined(PHI_DEBUG)
   71|       |        PHI_ASSERT(m_Finialized);
   72|       |#endif
   73|       |
   74|  6.73M|        return m_Index < m_Tokens.size();
   75|  6.73M|    }
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   78|  4.84M|    {
   79|       |#if defined(PHI_DEBUG)
   80|       |        PHI_ASSERT(m_Finialized);
   81|       |#endif
   82|       |
   83|  4.84M|        return m_Index >= m_Tokens.size();
   84|  4.84M|    }
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   87|  3.29M|    {
   88|  3.29M|        PHI_ASSERT(!reached_end());
   89|       |#if defined(PHI_DEBUG)
   90|       |        PHI_ASSERT(m_Finialized);
   91|       |#endif
   92|       |
   93|  3.29M|        return m_Tokens[m_Index.unsafe()];
   94|  3.29M|    }
_ZN10OpenAutoIt11TokenStream7consumeEv:
   97|  1.55M|    {
   98|  1.55M|        PHI_ASSERT(!reached_end());
   99|       |#if defined(PHI_DEBUG)
  100|       |        PHI_ASSERT(m_Finialized);
  101|       |#endif
  102|       |
  103|  1.55M|        m_Index += 1u;
  104|  1.55M|    }

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  1.06M|    {
  100|  1.06M|        if (output_enabled)
  ------------------
  |  Branch (100:13): [True: 0, False: 1.06M]
  ------------------
  101|      0|        {
  102|      0|            std::cerr << data;
  103|      0|        }
  104|  1.06M|    }
_ZN10OpenAutoIt14disable_outputEv:
  107|  6.41k|    {
  108|  6.41k|        output_enabled = false;
  109|  6.41k|    }

