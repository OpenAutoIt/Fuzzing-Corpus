_ZN3fmt3v116detail6bufferIcE6appendIcEEvPKT_S7_:
  927|  3.00M|  template <typename U> void append(const U* begin, const U* end) {
  928|  5.94M|    while (begin != end) {
  ------------------
  |  Branch (928:12): [True: 2.94M, False: 3.00M]
  ------------------
  929|  2.94M|      auto count = to_unsigned(end - begin);
  930|  2.94M|      try_reserve(size_ + count);
  931|  2.94M|      auto free_cap = capacity_ - size_;
  932|  2.94M|      if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (932:11): [True: 0, False: 2.94M]
  ------------------
  933|       |      // A loop is faster than memcpy on small sizes.
  934|  2.94M|      T* out = ptr_ + size_;
  935|  50.7M|      for (size_t i = 0; i < count; ++i) out[i] = begin[i];
  ------------------
  |  Branch (935:26): [True: 47.7M, False: 2.94M]
  ------------------
  936|  2.94M|      size_ += count;
  937|  2.94M|      begin += count;
  938|  2.94M|    }
  939|  3.00M|  }
_ZN3fmt3v116detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  432|   948k|FMT_CONSTEXPR auto to_unsigned(Int value) -> make_unsigned_t<Int> {
  433|   948k|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  402|  1.89M|    fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (402:33): [Folded - Ignored]
  |  |  |  Branch (402:33): [True: 948k, False: 0]
  |  |  ------------------
  ------------------
  434|   948k|  return static_cast<make_unsigned_t<Int>>(value);
  435|   948k|}
_ZN3fmt3v116detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  372|  5.75M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZN3fmt3v1114basic_appenderIcEC2ERNS0_6detail6bufferIcEE:
 1171|  1.10M|  FMT_CONSTEXPR basic_appender(detail::buffer<T>& buf) : buffer_(&buf) {}
_ZNK3fmt3v1117basic_string_viewIcE4sizeEv:
  555|  3.21M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZNK3fmt3v116detail6bufferIcE4sizeEv:
  894|  2.05M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v116detail13ignore_unusedIJbEEEvDpRKT_:
  372|     77|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v116detail6bufferIcE8capacityEv:
  897|    135|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt3v116detail6bufferIcEC2EPFvRS3_mEPcmm:
  869|  1.10M|      : ptr_(p), size_(sz), capacity_(cap), grow_(grow) {}
_ZN3fmt3v116detail6bufferIcE3setEPcm:
  875|  1.10M|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  876|  1.10M|    ptr_ = buf_data;
  877|  1.10M|    capacity_ = buf_capacity;
  878|  1.10M|  }
_ZN3fmt3v116detail6bufferIcE4dataEv:
  900|  1.10M|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZN3fmt3v116detail4copyIcPKcNS0_14basic_appenderIcEELi0EEET1_T0_S8_S7_:
 1191|  3.00M|auto copy(InputIt begin, InputIt end, OutputIt out) -> OutputIt {
 1192|  3.00M|  get_container(out).append(begin, end);
 1193|  3.00M|  return out;
 1194|  3.00M|}
_ZN3fmt3v1113get_containerENS0_14basic_appenderIcEE:
 1158|  3.94M|  friend auto get_container(basic_appender app) -> detail::buffer<T>& {
 1159|  3.94M|    return *app.buffer_;
 1160|  3.94M|  }
_ZN3fmt3v1117basic_string_viewIcEC2EPKc:
  541|  1.10M|                  : detail::length(s)) {}
_ZN3fmt3v116detail10locale_refC2Ev:
 1571|  1.99M|  constexpr locale_ref() : locale_(nullptr) {}
_ZNK3fmt3v1119basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2901|   154k|  FMT_ALWAYS_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt3v1116make_format_argsINS0_7contextEJELm0ELm0ELy0ELi0EEENS0_6detail16format_arg_storeIT_XT1_ELm0EXT3_EEEDpRT0_:
 2003|   154k|    -> detail::format_arg_store<Context, NUM_ARGS, 0, DESC> {
 2004|   154k|  return {{detail::make_arg<NUM_ARGS <= detail::max_packed_args, Context>(
 2005|   154k|      args)...}};
 2006|   154k|}
_ZN3fmt3v116detail5valueINS0_7contextEEC2Ev:
 1332|  1.10M|  constexpr FMT_ALWAYS_INLINE value() : no_value() {}
_ZN3fmt3v119monostateC2Ev:
  347|  1.10M|  constexpr monostate() {}
_ZN3fmt3v1117basic_format_argsINS0_7contextEEC2ILm0ELm0ELy0ELi0EEERKNS0_6detail16format_arg_storeIS2_XT_EXT0_EXT1_EEE:
 1871|   154k|      : desc_(DESC), values_(store.args + (NUM_NAMED_ARGS != 0 ? 1 : 0)) {}
_ZNK3fmt3v1117basic_string_viewIcE4dataEv:
  552|  2.10M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt3v1117basic_string_viewIcEC2EPKcm:
  530|  55.0k|      : data_(s), size_(count) {}
_ZN3fmt3v116detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  432|  4.80M|FMT_CONSTEXPR auto to_unsigned(Int value) -> make_unsigned_t<Int> {
  433|  4.80M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  402|  9.61M|    fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (402:33): [Folded - Ignored]
  |  |  |  Branch (402:33): [True: 4.80M, False: 0]
  |  |  ------------------
  ------------------
  434|  4.80M|  return static_cast<make_unsigned_t<Int>>(value);
  435|  4.80M|}
_ZN3fmt3v116detail6bufferIcE11try_reserveEm:
  917|  3.89M|  FMT_CONSTEXPR void try_reserve(size_t new_capacity) {
  918|  3.89M|    if (new_capacity > capacity_) grow_(*this, new_capacity);
  ------------------
  |  Branch (918:9): [True: 77, False: 3.89M]
  ------------------
  919|  3.89M|  }
_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi:
 1890|   948k|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1891|   948k|    format_arg arg;
 1892|   948k|    if (!is_packed()) {
  ------------------
  |  Branch (1892:9): [True: 0, False: 948k]
  ------------------
 1893|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1893:11): [True: 0, False: 0]
  ------------------
 1894|      0|      return arg;
 1895|      0|    }
 1896|   948k|    if (static_cast<unsigned>(id) >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1896:9): [True: 0, False: 948k]
  ------------------
 1897|   948k|    arg.type_ = type(id);
 1898|   948k|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1898:9): [True: 0, False: 948k]
  ------------------
 1899|   948k|    arg.value_ = values_[id];
 1900|   948k|    return arg;
 1901|   948k|  }
_ZN3fmt3v1116basic_format_argINS0_7contextEEC2Ev:
 1746|   948k|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt3v1117basic_format_argsINS0_7contextEE9is_packedEv:
 1849|   948k|  constexpr auto is_packed() const -> bool {
 1850|   948k|    return (desc_ & detail::is_unpacked_bit) == 0;
 1851|   948k|  }
_ZNK3fmt3v1117basic_format_argsINS0_7contextEE4typeEi:
 1856|   948k|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1857|   948k|    int shift = index * detail::packed_arg_bits;
 1858|   948k|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1859|   948k|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1860|   948k|  }
_ZNK3fmt3v1116basic_format_argINS0_7contextEEcvbEv:
 1748|   948k|  constexpr explicit operator bool() const noexcept {
 1749|   948k|    return type_ != detail::type::none_type;
 1750|   948k|  }
_ZNK3fmt3v116detail6fill_t4sizeEv:
 2110|   948k|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt3v1112format_specsC2Ev:
 2172|   948k|        localized(false) {}
_ZN3fmt3v1126basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  766|  1.10M|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt3v117contextC2ENS0_14basic_appenderIcEENS0_17basic_format_argsIS1_EENS0_6detail10locale_refE:
 1947|  1.10M|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt3v117context3outEv:
 1960|  3.00M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt3v116detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2612|  1.10M|                                       Handler&& handler) {
 2613|  1.10M|  auto begin = format_str.data();
 2614|  1.10M|  auto end = begin + format_str.size();
 2615|  1.10M|  if (end - begin < 32) {
  ------------------
  |  Branch (2615:7): [True: 638k, False: 465k]
  ------------------
 2616|       |    // Use a simple loop instead of memchr for small strings.
 2617|   638k|    const Char* p = begin;
 2618|  16.2M|    while (p != end) {
  ------------------
  |  Branch (2618:12): [True: 15.6M, False: 638k]
  ------------------
 2619|  15.6M|      auto c = *p++;
 2620|  15.6M|      if (c == '{') {
  ------------------
  |  Branch (2620:11): [True: 483k, False: 15.1M]
  ------------------
 2621|   483k|        handler.on_text(begin, p - 1);
 2622|   483k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2623|  15.1M|      } else if (c == '}') {
  ------------------
  |  Branch (2623:18): [True: 0, False: 15.1M]
  ------------------
 2624|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2624:13): [True: 0, False: 0]
  |  Branch (2624:25): [True: 0, False: 0]
  ------------------
 2625|      0|          return handler.on_error("unmatched '}' in format string");
 2626|      0|        handler.on_text(begin, p);
 2627|      0|        begin = ++p;
 2628|      0|      }
 2629|  15.6M|    }
 2630|   638k|    handler.on_text(begin, end);
 2631|   638k|    return;
 2632|   638k|  }
 2633|   465k|  struct writer {
 2634|   465k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2635|   465k|      if (from == to) return;
 2636|   465k|      for (;;) {
 2637|   465k|        const Char* p = nullptr;
 2638|   465k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2639|   465k|          return handler_.on_text(from, to);
 2640|   465k|        ++p;
 2641|   465k|        if (p == to || *p != '}')
 2642|   465k|          return handler_.on_error("unmatched '}' in format string");
 2643|   465k|        handler_.on_text(from, p);
 2644|   465k|        from = p + 1;
 2645|   465k|      }
 2646|   465k|    }
 2647|   465k|    Handler& handler_;
 2648|   465k|  } write = {handler};
 2649|   930k|  while (begin != end) {
  ------------------
  |  Branch (2649:10): [True: 930k, False: 27]
  ------------------
 2650|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2651|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2652|   930k|    const Char* p = begin;
 2653|   930k|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2653:9): [True: 930k, False: 0]
  |  Branch (2653:26): [True: 464k, False: 465k]
  ------------------
 2654|   464k|      return write(begin, end);
 2655|   465k|    write(begin, p);
 2656|   465k|    begin = parse_replacement_field(p, end, handler);
 2657|   465k|  }
 2658|   465k|}
_ZN3fmt3v117context10advance_toENS0_14basic_appenderIcEE:
 1963|  3.00M|  void advance_to(iterator) {}
_ZN3fmt3v116detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2563|   948k|    -> const Char* {
 2564|   948k|  ++begin;
 2565|   948k|  if (begin == end) {
  ------------------
  |  Branch (2565:7): [True: 0, False: 948k]
  ------------------
 2566|      0|    handler.on_error("invalid format string");
 2567|      0|    return end;
 2568|      0|  }
 2569|   948k|  int arg_id = 0;
 2570|   948k|  switch (*begin) {
 2571|      0|  case '}':
  ------------------
  |  Branch (2571:3): [True: 0, False: 948k]
  ------------------
 2572|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2573|      0|    return begin + 1;
 2574|      0|  case '{':
  ------------------
  |  Branch (2574:3): [True: 0, False: 948k]
  ------------------
 2575|      0|    handler.on_text(begin, begin + 1);
 2576|      0|    return begin + 1;
 2577|   948k|  case ':':
  ------------------
  |  Branch (2577:3): [True: 948k, False: 0]
  ------------------
 2578|   948k|    arg_id = handler.on_arg_id();
 2579|   948k|    break;
 2580|      0|  default: {
  ------------------
  |  Branch (2580:3): [True: 0, False: 948k]
  ------------------
 2581|      0|    struct id_adapter {
 2582|      0|      Handler& handler;
 2583|      0|      int arg_id;
 2584|       |
 2585|      0|      FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2586|      0|      FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2587|      0|        arg_id = handler.on_arg_id(id);
 2588|      0|      }
 2589|      0|    } adapter = {handler, 0};
 2590|      0|    begin = parse_arg_id(begin, end, adapter);
 2591|      0|    arg_id = adapter.arg_id;
 2592|      0|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2592:14): [True: 0, False: 0]
  ------------------
 2593|      0|    if (c == '}') {
  ------------------
  |  Branch (2593:9): [True: 0, False: 0]
  ------------------
 2594|      0|      handler.on_replacement_field(arg_id, begin);
 2595|      0|      return begin + 1;
 2596|      0|    }
 2597|      0|    if (c != ':') {
  ------------------
  |  Branch (2597:9): [True: 0, False: 0]
  ------------------
 2598|      0|      handler.on_error("missing '}' in format string");
 2599|      0|      return end;
 2600|      0|    }
 2601|      0|    break;
 2602|      0|  }
 2603|   948k|  }
 2604|   948k|  begin = handler.on_format_specs(arg_id, begin + 1, end);
 2605|   948k|  if (begin == end || *begin != '}')
  ------------------
  |  Branch (2605:7): [True: 0, False: 948k]
  |  Branch (2605:23): [True: 0, False: 948k]
  ------------------
 2606|      0|    return handler.on_error("unknown format specifier"), end;
 2607|   948k|  return begin + 1;
 2608|   948k|}
_ZNK3fmt3v117context3argEi:
 1952|   948k|  FMT_CONSTEXPR auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt3v117context6localeEv:
 1965|   948k|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt3v1126basic_format_parse_contextIcE11next_arg_idEv:
  784|   948k|  FMT_CONSTEXPR auto next_arg_id() -> int {
  785|   948k|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (785:9): [True: 0, False: 948k]
  ------------------
  786|      0|      report_error("cannot switch from manual to automatic argument indexing");
  787|      0|      return 0;
  788|      0|    }
  789|   948k|    int id = next_arg_id_++;
  790|   948k|    do_check_arg_id(id);
  791|   948k|    return id;
  792|   948k|  }
_ZN3fmt3v1126basic_format_parse_contextIcE15do_check_arg_idEi:
 1113|   948k|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
 1114|       |  // Argument id is only checked at compile-time during parsing because
 1115|       |  // formatting has its own validation.
 1116|   948k|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (1116:7): [Folded - Ignored]
  ------------------
 1117|   948k|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   37|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   37|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (1117:8): [Folded - Ignored]
  |  Branch (1117:28): [Folded - Ignored]
  ------------------
 1118|      0|    using context = detail::compile_parse_context<Char>;
 1119|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (1119:9): [True: 0, False: 0]
  ------------------
 1120|      0|      report_error("argument not found");
 1121|      0|  }
 1122|   948k|}
_ZN3fmt3v1116basic_format_argINS0_7contextEE13format_customEPKcRNS0_26basic_format_parse_contextIcEERS2_:
 1806|   948k|                     Context& ctx) -> bool {
 1807|   948k|    if (type_ != detail::type::custom_type) return false;
  ------------------
  |  Branch (1807:9): [True: 948k, False: 0]
  ------------------
 1808|      0|    parse_ctx.advance_to(parse_begin);
 1809|      0|    value_.custom.format(value_.custom.value, parse_ctx, ctx);
 1810|      0|    return true;
 1811|   948k|  }
_ZN3fmt3v116detail7arg_refIcEC2Ev:
 2181|  1.89M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt3v116detail7arg_refIcE5valueC2Ei:
 2196|  1.89M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt3v116detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2379|   948k|                                      type arg_type) -> const Char* {
 2380|   948k|  auto c = '\0';
 2381|   948k|  if (end - begin > 1) {
  ------------------
  |  Branch (2381:7): [True: 948k, False: 0]
  ------------------
 2382|   948k|    auto next = to_ascii(begin[1]);
 2383|   948k|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2383:9): [True: 948k, False: 0]
  ------------------
 2384|   948k|  } else {
 2385|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2385:9): [True: 0, False: 0]
  ------------------
 2386|      0|    c = to_ascii(*begin);
 2387|      0|  }
 2388|       |
 2389|   948k|  struct {
 2390|   948k|    state current_state = state::start;
 2391|   948k|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2392|   948k|      if (current_state >= s || !valid)
 2393|   948k|        report_error("invalid format specifier");
 2394|   948k|      current_state = s;
 2395|   948k|    }
 2396|   948k|  } enter_state;
 2397|       |
 2398|   948k|  using pres = presentation_type;
 2399|   948k|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2400|   948k|  struct {
 2401|   948k|    const Char*& begin;
 2402|   948k|    dynamic_format_specs<Char>& specs;
 2403|   948k|    type arg_type;
 2404|       |
 2405|   948k|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2406|   948k|      if (!in(arg_type, set)) {
 2407|   948k|        if (arg_type == type::none_type) return begin;
 2408|   948k|        report_error("invalid format specifier");
 2409|   948k|      }
 2410|   948k|      specs.type = pres_type;
 2411|   948k|      return begin + 1;
 2412|   948k|    }
 2413|   948k|  } parse_presentation_type{begin, specs, arg_type};
 2414|       |
 2415|   948k|  for (;;) {
 2416|   948k|    switch (c) {
 2417|      0|    case '<':
  ------------------
  |  Branch (2417:5): [True: 0, False: 948k]
  ------------------
 2418|      0|    case '>':
  ------------------
  |  Branch (2418:5): [True: 0, False: 948k]
  ------------------
 2419|      0|    case '^':
  ------------------
  |  Branch (2419:5): [True: 0, False: 948k]
  ------------------
 2420|      0|      enter_state(state::align);
 2421|      0|      specs.align = parse_align(c);
 2422|      0|      ++begin;
 2423|      0|      break;
 2424|      0|    case '+':
  ------------------
  |  Branch (2424:5): [True: 0, False: 948k]
  ------------------
 2425|      0|    case '-':
  ------------------
  |  Branch (2425:5): [True: 0, False: 948k]
  ------------------
 2426|      0|    case ' ':
  ------------------
  |  Branch (2426:5): [True: 0, False: 948k]
  ------------------
 2427|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2427:11): [True: 0, False: 0]
  ------------------
 2428|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2429|      0|      switch (c) {
  ------------------
  |  Branch (2429:15): [True: 0, False: 0]
  ------------------
 2430|      0|      case '+':
  ------------------
  |  Branch (2430:7): [True: 0, False: 0]
  ------------------
 2431|      0|        specs.sign = sign::plus;
 2432|      0|        break;
 2433|      0|      case '-':
  ------------------
  |  Branch (2433:7): [True: 0, False: 0]
  ------------------
 2434|      0|        specs.sign = sign::minus;
 2435|      0|        break;
 2436|      0|      case ' ':
  ------------------
  |  Branch (2436:7): [True: 0, False: 0]
  ------------------
 2437|      0|        specs.sign = sign::space;
 2438|      0|        break;
 2439|      0|      }
 2440|      0|      ++begin;
 2441|      0|      break;
 2442|      0|    case '#':
  ------------------
  |  Branch (2442:5): [True: 0, False: 948k]
  ------------------
 2443|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2443:11): [True: 0, False: 0]
  ------------------
 2444|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2445|      0|      specs.alt = true;
 2446|      0|      ++begin;
 2447|      0|      break;
 2448|      0|    case '0':
  ------------------
  |  Branch (2448:5): [True: 0, False: 948k]
  ------------------
 2449|      0|      enter_state(state::zero);
 2450|      0|      if (!is_arithmetic_type(arg_type)) {
  ------------------
  |  Branch (2450:11): [True: 0, False: 0]
  ------------------
 2451|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2451:13): [True: 0, False: 0]
  ------------------
 2452|      0|        report_error("format specifier requires numeric argument");
 2453|      0|      }
 2454|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2454:11): [True: 0, False: 0]
  ------------------
 2455|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2456|      0|        specs.align = align::numeric;
 2457|      0|        specs.fill = '0';
 2458|      0|      }
 2459|      0|      ++begin;
 2460|      0|      break;
 2461|      0|    case '1':
  ------------------
  |  Branch (2461:5): [True: 0, False: 948k]
  ------------------
 2462|      0|    case '2':
  ------------------
  |  Branch (2462:5): [True: 0, False: 948k]
  ------------------
 2463|      0|    case '3':
  ------------------
  |  Branch (2463:5): [True: 0, False: 948k]
  ------------------
 2464|      0|    case '4':
  ------------------
  |  Branch (2464:5): [True: 0, False: 948k]
  ------------------
 2465|      0|    case '5':
  ------------------
  |  Branch (2465:5): [True: 0, False: 948k]
  ------------------
 2466|      0|    case '6':
  ------------------
  |  Branch (2466:5): [True: 0, False: 948k]
  ------------------
 2467|      0|    case '7':
  ------------------
  |  Branch (2467:5): [True: 0, False: 948k]
  ------------------
 2468|      0|    case '8':
  ------------------
  |  Branch (2468:5): [True: 0, False: 948k]
  ------------------
 2469|      0|    case '9':
  ------------------
  |  Branch (2469:5): [True: 0, False: 948k]
  ------------------
 2470|      0|    case '{':
  ------------------
  |  Branch (2470:5): [True: 0, False: 948k]
  ------------------
 2471|      0|      enter_state(state::width);
 2472|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2473|      0|      break;
 2474|      0|    case '.':
  ------------------
  |  Branch (2474:5): [True: 0, False: 948k]
  ------------------
 2475|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2475:11): [True: 0, False: 0]
  ------------------
 2476|      0|      enter_state(state::precision,
 2477|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2478|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2479|      0|                              ctx);
 2480|      0|      break;
 2481|      0|    case 'L':
  ------------------
  |  Branch (2481:5): [True: 0, False: 948k]
  ------------------
 2482|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2482:11): [True: 0, False: 0]
  ------------------
 2483|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2484|      0|      specs.localized = true;
 2485|      0|      ++begin;
 2486|      0|      break;
 2487|      0|    case 'd':
  ------------------
  |  Branch (2487:5): [True: 0, False: 948k]
  ------------------
 2488|      0|      return parse_presentation_type(pres::dec, integral_set);
 2489|      0|    case 'X':
  ------------------
  |  Branch (2489:5): [True: 0, False: 948k]
  ------------------
 2490|      0|      specs.upper = true;
 2491|      0|      FMT_FALLTHROUGH;
  ------------------
  |  |  183|      0|#  define FMT_FALLTHROUGH [[fallthrough]]
  ------------------
 2492|      0|    case 'x':
  ------------------
  |  Branch (2492:5): [True: 0, False: 948k]
  ------------------
 2493|      0|      return parse_presentation_type(pres::hex, integral_set);
 2494|      0|    case 'o':
  ------------------
  |  Branch (2494:5): [True: 0, False: 948k]
  ------------------
 2495|      0|      return parse_presentation_type(pres::oct, integral_set);
 2496|      0|    case 'B':
  ------------------
  |  Branch (2496:5): [True: 0, False: 948k]
  ------------------
 2497|      0|      specs.upper = true;
 2498|      0|      FMT_FALLTHROUGH;
  ------------------
  |  |  183|      0|#  define FMT_FALLTHROUGH [[fallthrough]]
  ------------------
 2499|      0|    case 'b':
  ------------------
  |  Branch (2499:5): [True: 0, False: 948k]
  ------------------
 2500|      0|      return parse_presentation_type(pres::bin, integral_set);
 2501|      0|    case 'E':
  ------------------
  |  Branch (2501:5): [True: 0, False: 948k]
  ------------------
 2502|      0|      specs.upper = true;
 2503|      0|      FMT_FALLTHROUGH;
  ------------------
  |  |  183|      0|#  define FMT_FALLTHROUGH [[fallthrough]]
  ------------------
 2504|      0|    case 'e':
  ------------------
  |  Branch (2504:5): [True: 0, False: 948k]
  ------------------
 2505|      0|      return parse_presentation_type(pres::exp, float_set);
 2506|      0|    case 'F':
  ------------------
  |  Branch (2506:5): [True: 0, False: 948k]
  ------------------
 2507|      0|      specs.upper = true;
 2508|      0|      FMT_FALLTHROUGH;
  ------------------
  |  |  183|      0|#  define FMT_FALLTHROUGH [[fallthrough]]
  ------------------
 2509|      0|    case 'f':
  ------------------
  |  Branch (2509:5): [True: 0, False: 948k]
  ------------------
 2510|      0|      return parse_presentation_type(pres::fixed, float_set);
 2511|      0|    case 'G':
  ------------------
  |  Branch (2511:5): [True: 0, False: 948k]
  ------------------
 2512|      0|      specs.upper = true;
 2513|      0|      FMT_FALLTHROUGH;
  ------------------
  |  |  183|      0|#  define FMT_FALLTHROUGH [[fallthrough]]
  ------------------
 2514|      0|    case 'g':
  ------------------
  |  Branch (2514:5): [True: 0, False: 948k]
  ------------------
 2515|      0|      return parse_presentation_type(pres::general, float_set);
 2516|      0|    case 'A':
  ------------------
  |  Branch (2516:5): [True: 0, False: 948k]
  ------------------
 2517|      0|      specs.upper = true;
 2518|      0|      FMT_FALLTHROUGH;
  ------------------
  |  |  183|      0|#  define FMT_FALLTHROUGH [[fallthrough]]
  ------------------
 2519|      0|    case 'a':
  ------------------
  |  Branch (2519:5): [True: 0, False: 948k]
  ------------------
 2520|      0|      return parse_presentation_type(pres::hexfloat, float_set);
 2521|      0|    case 'c':
  ------------------
  |  Branch (2521:5): [True: 0, False: 948k]
  ------------------
 2522|      0|      if (arg_type == type::bool_type) report_error("invalid format specifier");
  ------------------
  |  Branch (2522:11): [True: 0, False: 0]
  ------------------
 2523|      0|      return parse_presentation_type(pres::chr, integral_set);
 2524|   948k|    case 's':
  ------------------
  |  Branch (2524:5): [True: 948k, False: 0]
  ------------------
 2525|   948k|      return parse_presentation_type(pres::string,
 2526|   948k|                                     bool_set | string_set | cstring_set);
 2527|      0|    case 'p':
  ------------------
  |  Branch (2527:5): [True: 0, False: 948k]
  ------------------
 2528|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2529|      0|    case '?':
  ------------------
  |  Branch (2529:5): [True: 0, False: 948k]
  ------------------
 2530|      0|      return parse_presentation_type(pres::debug,
 2531|      0|                                     char_set | string_set | cstring_set);
 2532|      0|    case '}':
  ------------------
  |  Branch (2532:5): [True: 0, False: 948k]
  ------------------
 2533|      0|      return begin;
 2534|      0|    default: {
  ------------------
  |  Branch (2534:5): [True: 0, False: 948k]
  ------------------
 2535|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2535:11): [True: 0, False: 0]
  ------------------
 2536|       |      // Parse fill and alignment.
 2537|      0|      auto fill_end = begin + code_point_length(begin);
 2538|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2538:11): [True: 0, False: 0]
  ------------------
 2539|      0|        report_error("invalid format specifier");
 2540|      0|        return begin;
 2541|      0|      }
 2542|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2542:11): [True: 0, False: 0]
  ------------------
 2543|      0|        report_error("invalid fill character '{'");
 2544|      0|        return begin;
 2545|      0|      }
 2546|      0|      auto align = parse_align(to_ascii(*fill_end));
 2547|      0|      enter_state(state::align, align != align::none);
 2548|      0|      specs.fill =
 2549|      0|          basic_string_view<Char>(begin, to_unsigned(fill_end - begin));
 2550|      0|      specs.align = align;
 2551|      0|      begin = fill_end + 1;
 2552|      0|    }
 2553|   948k|    }
 2554|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2554:9): [True: 0, False: 0]
  ------------------
 2555|      0|    c = to_ascii(*begin);
 2556|      0|  }
 2557|   948k|}
_ZN3fmt3v116detail8to_asciiIcLi0EEEcT_:
 2214|  1.89M|constexpr auto to_ascii(Char c) -> char {
 2215|  1.89M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2215:10): [True: 1.89M, False: 0]
  ------------------
 2216|  1.89M|}
_ZN3fmt3v116detail11parse_alignEc:
 2268|   948k|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2269|   948k|  switch (c) {
  ------------------
  |  Branch (2269:11): [True: 948k, False: 0]
  ------------------
 2270|      0|  case '<':
  ------------------
  |  Branch (2270:3): [True: 0, False: 948k]
  ------------------
 2271|      0|    return align::left;
 2272|      0|  case '>':
  ------------------
  |  Branch (2272:3): [True: 0, False: 948k]
  ------------------
 2273|      0|    return align::right;
 2274|      0|  case '^':
  ------------------
  |  Branch (2274:3): [True: 0, False: 948k]
  ------------------
 2275|      0|    return align::center;
 2276|   948k|  }
 2277|   948k|  return align::none;
 2278|   948k|}
_ZN3fmt3v116detail2inENS1_4typeEi:
  712|   948k|constexpr auto in(type t, int set) -> bool {
  713|   948k|  return ((set >> static_cast<int>(t)) & 1) != 0;
  714|   948k|}
_ZZN3fmt3v116detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2405|   948k|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2406|   948k|      if (!in(arg_type, set)) {
  ------------------
  |  Branch (2406:11): [True: 0, False: 948k]
  ------------------
 2407|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2407:13): [True: 0, False: 0]
  ------------------
 2408|      0|        report_error("invalid format specifier");
 2409|      0|      }
 2410|   948k|      specs.type = pres_type;
 2411|   948k|      return begin + 1;
 2412|   948k|    }
_ZNK3fmt3v1116basic_format_argINS0_7contextEE4typeEv:
 1752|   948k|  auto type() const -> detail::type { return type_; }
_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail13arg_formatterIcEEEEDTclfp_Li0EEEOT_:
 1765|   948k|  FMT_CONSTEXPR FMT_INLINE auto visit(Visitor&& vis) const -> decltype(vis(0)) {
 1766|   948k|    switch (type_) {
  ------------------
  |  Branch (1766:13): [True: 0, False: 948k]
  ------------------
 1767|      0|    case detail::type::none_type:
  ------------------
  |  Branch (1767:5): [True: 0, False: 948k]
  ------------------
 1768|      0|      break;
 1769|      0|    case detail::type::int_type:
  ------------------
  |  Branch (1769:5): [True: 0, False: 948k]
  ------------------
 1770|      0|      return vis(value_.int_value);
 1771|      0|    case detail::type::uint_type:
  ------------------
  |  Branch (1771:5): [True: 0, False: 948k]
  ------------------
 1772|      0|      return vis(value_.uint_value);
 1773|      0|    case detail::type::long_long_type:
  ------------------
  |  Branch (1773:5): [True: 0, False: 948k]
  ------------------
 1774|      0|      return vis(value_.long_long_value);
 1775|      0|    case detail::type::ulong_long_type:
  ------------------
  |  Branch (1775:5): [True: 0, False: 948k]
  ------------------
 1776|      0|      return vis(value_.ulong_long_value);
 1777|      0|    case detail::type::int128_type:
  ------------------
  |  Branch (1777:5): [True: 0, False: 948k]
  ------------------
 1778|      0|      return vis(detail::convert_for_visit(value_.int128_value));
 1779|      0|    case detail::type::uint128_type:
  ------------------
  |  Branch (1779:5): [True: 0, False: 948k]
  ------------------
 1780|      0|      return vis(detail::convert_for_visit(value_.uint128_value));
 1781|      0|    case detail::type::bool_type:
  ------------------
  |  Branch (1781:5): [True: 0, False: 948k]
  ------------------
 1782|      0|      return vis(value_.bool_value);
 1783|      0|    case detail::type::char_type:
  ------------------
  |  Branch (1783:5): [True: 0, False: 948k]
  ------------------
 1784|      0|      return vis(value_.char_value);
 1785|      0|    case detail::type::float_type:
  ------------------
  |  Branch (1785:5): [True: 0, False: 948k]
  ------------------
 1786|      0|      return vis(value_.float_value);
 1787|      0|    case detail::type::double_type:
  ------------------
  |  Branch (1787:5): [True: 0, False: 948k]
  ------------------
 1788|      0|      return vis(value_.double_value);
 1789|      0|    case detail::type::long_double_type:
  ------------------
  |  Branch (1789:5): [True: 0, False: 948k]
  ------------------
 1790|      0|      return vis(value_.long_double_value);
 1791|   893k|    case detail::type::cstring_type:
  ------------------
  |  Branch (1791:5): [True: 893k, False: 55.0k]
  ------------------
 1792|   893k|      return vis(value_.string.data);
 1793|  55.0k|    case detail::type::string_type:
  ------------------
  |  Branch (1793:5): [True: 55.0k, False: 893k]
  ------------------
 1794|  55.0k|      using sv = basic_string_view<typename Context::char_type>;
 1795|  55.0k|      return vis(sv(value_.string.data, value_.string.size));
 1796|      0|    case detail::type::pointer_type:
  ------------------
  |  Branch (1796:5): [True: 0, False: 948k]
  ------------------
 1797|      0|      return vis(value_.pointer);
 1798|      0|    case detail::type::custom_type:
  ------------------
  |  Branch (1798:5): [True: 0, False: 948k]
  ------------------
 1799|      0|      return vis(typename basic_format_arg<Context>::handle(value_.custom));
 1800|   948k|    }
 1801|      0|    return vis(monostate());
 1802|   948k|  }
_ZN3fmt3v116detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2237|  1.86M|                              const char*& out) -> bool {
 2238|  1.86M|  out =
 2239|  1.86M|      static_cast<const char*>(memchr(first, value, to_unsigned(last - first)));
 2240|  1.86M|  return out != nullptr;
 2241|  1.86M|}
_ZZN3fmt3v116detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2634|   930k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2635|   930k|      if (from == to) return;
  ------------------
  |  Branch (2635:11): [True: 0, False: 930k]
  ------------------
 2636|   930k|      for (;;) {
 2637|   930k|        const Char* p = nullptr;
 2638|   930k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2638:13): [True: 930k, False: 0]
  ------------------
 2639|   930k|          return handler_.on_text(from, to);
 2640|      0|        ++p;
 2641|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2641:13): [True: 0, False: 0]
  |  Branch (2641:24): [True: 0, False: 0]
  ------------------
 2642|      0|          return handler_.on_error("unmatched '}' in format string");
 2643|      0|        handler_.on_text(from, p);
 2644|      0|        from = p + 1;
 2645|      0|      }
 2646|   930k|    }
_ZN3fmt3v116detail5valueINS0_7contextEEC2ENS0_17basic_string_viewIcEE:
 1349|  55.0k|  FMT_CONSTEXPR FMT_ALWAYS_INLINE value(basic_string_view<char_type> val) {
 1350|  55.0k|    string.data = val.data();
 1351|  55.0k|    string.size = val.size();
 1352|  55.0k|  }
_ZN3fmt3v116detail10arg_mapperINS0_7contextEE3mapEPKc:
 1458|   893k|  FMT_MAP_API auto map(const char_type* val) -> const char_type* { return val; }
_ZN3fmt3v116detail5valueINS0_7contextEEC2EPKc:
 1345|   893k|  FMT_CONSTEXPR FMT_ALWAYS_INLINE value(const char_type* val) {
 1346|   893k|    string.data = val;
 1347|   893k|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1347:9): [Folded - Ignored]
  ------------------
 1348|   893k|  }
_ZNK3fmt3v116detail6bufferIcE4dataEv:
  901|  1.10M|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt3v117vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE:
 1431|  1.10M|FMT_FUNC auto vformat(string_view fmt, format_args args) -> std::string {
 1432|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1433|       |  // can be better optimized in fmt::format anyway.
 1434|  1.10M|  auto buffer = memory_buffer();
 1435|  1.10M|  detail::vformat_to(buffer, fmt, args);
 1436|  1.10M|  return to_string(buffer);
 1437|  1.10M|}

_ZN3fmt3v116detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4221|  1.10M|                typename vformat_args<Char>::type args, locale_ref loc) {
 4222|  1.10M|  auto out = basic_appender<Char>(buf);
 4223|  1.10M|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4223:7): [True: 0, False: 1.10M]
  |  Branch (4223:26): [True: 0, False: 0]
  ------------------
 4224|      0|    auto arg = args.get(0);
 4225|      0|    if (!arg) report_error("argument not found");
  ------------------
  |  Branch (4225:9): [True: 0, False: 0]
  ------------------
 4226|      0|    arg.visit(default_arg_formatter<Char>{out, args, loc});
 4227|      0|    return;
 4228|      0|  }
 4229|       |
 4230|  1.10M|  struct format_handler {
 4231|  1.10M|    basic_format_parse_context<Char> parse_context;
 4232|  1.10M|    buffered_context<Char> context;
 4233|       |
 4234|  1.10M|    format_handler(basic_appender<Char> p_out, basic_string_view<Char> str,
 4235|  1.10M|                   basic_format_args<buffered_context<Char>> p_args,
 4236|  1.10M|                   locale_ref p_loc)
 4237|  1.10M|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4238|       |
 4239|  1.10M|    void on_text(const Char* begin, const Char* end) {
 4240|  1.10M|      context.advance_to(copy_noinline<Char>(begin, end, context.out()));
 4241|  1.10M|    }
 4242|       |
 4243|  1.10M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4244|  1.10M|      return parse_context.next_arg_id();
 4245|  1.10M|    }
 4246|  1.10M|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4247|  1.10M|      parse_context.check_arg_id(id);
 4248|  1.10M|      return id;
 4249|  1.10M|    }
 4250|  1.10M|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4251|  1.10M|      parse_context.check_arg_id(id);
 4252|  1.10M|      int arg_id = context.arg_id(id);
 4253|  1.10M|      if (arg_id < 0) report_error("argument not found");
 4254|  1.10M|      return arg_id;
 4255|  1.10M|    }
 4256|       |
 4257|  1.10M|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4258|  1.10M|      auto arg = get_arg(context, id);
 4259|  1.10M|      context.advance_to(arg.visit(default_arg_formatter<Char>{
 4260|  1.10M|          context.out(), context.args(), context.locale()}));
 4261|  1.10M|    }
 4262|       |
 4263|  1.10M|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4264|  1.10M|        -> const Char* {
 4265|  1.10M|      auto arg = get_arg(context, id);
 4266|       |      // Not using a visitor for custom types gives better codegen.
 4267|  1.10M|      if (arg.format_custom(begin, parse_context, context))
 4268|  1.10M|        return parse_context.begin();
 4269|  1.10M|      auto specs = detail::dynamic_format_specs<Char>();
 4270|  1.10M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4271|  1.10M|      detail::handle_dynamic_spec<detail::width_checker>(
 4272|  1.10M|          specs.width, specs.width_ref, context);
 4273|  1.10M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4274|  1.10M|          specs.precision, specs.precision_ref, context);
 4275|  1.10M|      if (begin == end || *begin != '}')
 4276|  1.10M|        report_error("missing '}' in format string");
 4277|  1.10M|      context.advance_to(arg.visit(
 4278|  1.10M|          arg_formatter<Char>{context.out(), specs, context.locale()}));
 4279|  1.10M|      return begin;
 4280|  1.10M|    }
 4281|       |
 4282|  1.10M|    FMT_NORETURN void on_error(const char* message) { report_error(message); }
 4283|  1.10M|  };
 4284|  1.10M|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4285|  1.10M|}
_ZN3fmt3v1119basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  878|  1.10M|      : detail::buffer<T>(grow), alloc_(alloc) {
  879|  1.10M|    this->set(store_, SIZE);
  880|  1.10M|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (880:9): [Folded - Ignored]
  ------------------
  881|  1.10M|  }
_ZN3fmt3v1119basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growERNS0_6detail6bufferIcEEm:
  848|     77|  static FMT_CONSTEXPR20 void grow(detail::buffer<T>& buf, size_t size) {
  849|     77|    detail::abort_fuzzing_if(size > 5000);
  850|     77|    auto& self = static_cast<basic_memory_buffer&>(buf);
  851|     77|    const size_t max_size =
  852|     77|        std::allocator_traits<Allocator>::max_size(self.alloc_);
  853|     77|    size_t old_capacity = buf.capacity();
  854|     77|    size_t new_capacity = old_capacity + old_capacity / 2;
  855|     77|    if (size > new_capacity)
  ------------------
  |  Branch (855:9): [True: 11, False: 66]
  ------------------
  856|     11|      new_capacity = size;
  857|     66|    else if (new_capacity > max_size)
  ------------------
  |  Branch (857:14): [True: 0, False: 66]
  ------------------
  858|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (858:22): [True: 0, False: 0]
  ------------------
  859|     77|    T* old_data = buf.data();
  860|     77|    T* new_data = self.alloc_.allocate(new_capacity);
  861|       |    // Suppress a bogus -Wstringop-overflow in gcc 13.1 (#3481).
  862|     77|    detail::assume(buf.size() <= new_capacity);
  863|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  864|     77|    memcpy(new_data, old_data, buf.size() * sizeof(T));
  865|     77|    self.set(new_data, new_capacity);
  866|       |    // deallocate must not throw according to the standard, but even if it does,
  867|       |    // the buffer already uses the new storage and will deallocate it in
  868|       |    // destructor.
  869|     77|    if (old_data != self.store_) self.alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (869:9): [True: 19, False: 58]
  ------------------
  870|     77|  }
_ZN3fmt3v116detail16abort_fuzzing_ifEb:
  280|     77|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  281|     77|  ignore_unused(condition);
  282|       |#ifdef FMT_FUZZ
  283|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  284|       |#endif
  285|     77|}
_ZN3fmt3v116detail6assumeEb:
  493|  1.10M|FMT_INLINE void assume(bool condition) {
  494|  1.10M|  (void)condition;
  495|  1.10M|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  496|  1.10M|  __builtin_assume(condition);
  497|       |#elif FMT_GCC_VERSION
  498|       |  if (!condition) __builtin_unreachable();
  499|       |#endif
  500|  1.10M|}
_ZN3fmt3v1119basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  882|  1.10M|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt3v1119basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  843|  1.10M|  FMT_CONSTEXPR20 void deallocate() {
  844|  1.10M|    T* data = this->data();
  845|  1.10M|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (845:9): [True: 58, False: 1.10M]
  ------------------
  846|  1.10M|  }
_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_:
  595|  2.05M|                                              OutputIt out) -> OutputIt {
  596|  2.05M|  return copy<OutChar>(begin, end, out);
  597|  2.05M|}
_ZN3fmt3v116detail7reserveIcEENS0_14basic_appenderIT_EES5_m:
  534|   948k|inline auto reserve(basic_appender<T> it, size_t n) -> basic_appender<T> {
  535|   948k|  buffer<T>& buf = get_container(it);
  536|   948k|  buf.try_reserve(buf.size() + n);
  537|   948k|  return it;
  538|   948k|}
_ZN3fmt3v116detail13base_iteratorINS0_14basic_appenderIcEEEET_S5_S5_:
  572|   948k|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  573|   948k|  return it;
  574|   948k|}
_ZZN3fmt3v116detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4239|  2.05M|    void on_text(const Char* begin, const Char* end) {
 4240|  2.05M|      context.advance_to(copy_noinline<Char>(begin, end, context.out()));
 4241|  2.05M|    }
_ZN3fmt3v116detail7get_argINS0_7contextEiEEDTcldtfp_3argfp0_EERT_T0_:
 3792|   948k|FMT_CONSTEXPR auto get_arg(Context& ctx, ID id) -> decltype(ctx.arg(id)) {
 3793|   948k|  auto arg = ctx.arg(id);
 3794|   948k|  if (!arg) report_error("argument not found");
  ------------------
  |  Branch (3794:7): [True: 0, False: 948k]
  ------------------
 3795|   948k|  return arg;
 3796|   948k|}
_ZZN3fmt3v116detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4243|   948k|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4244|   948k|      return parse_context.next_arg_id();
 4245|   948k|    }
_ZZN3fmt3v116detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4264|   948k|        -> const Char* {
 4265|   948k|      auto arg = get_arg(context, id);
 4266|       |      // Not using a visitor for custom types gives better codegen.
 4267|   948k|      if (arg.format_custom(begin, parse_context, context))
  ------------------
  |  Branch (4267:11): [True: 0, False: 948k]
  ------------------
 4268|      0|        return parse_context.begin();
 4269|   948k|      auto specs = detail::dynamic_format_specs<Char>();
 4270|   948k|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4271|   948k|      detail::handle_dynamic_spec<detail::width_checker>(
 4272|   948k|          specs.width, specs.width_ref, context);
 4273|   948k|      detail::handle_dynamic_spec<detail::precision_checker>(
 4274|   948k|          specs.precision, specs.precision_ref, context);
 4275|   948k|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4275:11): [True: 0, False: 948k]
  |  Branch (4275:27): [True: 0, False: 948k]
  ------------------
 4276|      0|        report_error("missing '}' in format string");
 4277|   948k|      context.advance_to(arg.visit(
 4278|   948k|          arg_formatter<Char>{context.out(), specs, context.locale()}));
 4279|   948k|      return begin;
 4280|   948k|    }
_ZN3fmt3v116detail19handle_dynamic_specINS1_13width_checkerENS0_7contextEEEvRiNS1_7arg_refINT0_9char_typeEEERS7_:
 3801|   948k|                                       Context& ctx) {
 3802|   948k|  switch (ref.kind) {
  ------------------
  |  Branch (3802:11): [True: 0, False: 948k]
  ------------------
 3803|   948k|  case arg_id_kind::none:
  ------------------
  |  Branch (3803:3): [True: 948k, False: 0]
  ------------------
 3804|   948k|    break;
 3805|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3805:3): [True: 0, False: 948k]
  ------------------
 3806|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index));
 3807|      0|    break;
 3808|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3808:3): [True: 0, False: 948k]
  ------------------
 3809|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name));
 3810|      0|    break;
 3811|   948k|  }
 3812|   948k|}
_ZN3fmt3v116detail19handle_dynamic_specINS1_17precision_checkerENS0_7contextEEEvRiNS1_7arg_refINT0_9char_typeEEERS7_:
 3801|   948k|                                       Context& ctx) {
 3802|   948k|  switch (ref.kind) {
  ------------------
  |  Branch (3802:11): [True: 0, False: 948k]
  ------------------
 3803|   948k|  case arg_id_kind::none:
  ------------------
  |  Branch (3803:3): [True: 948k, False: 0]
  ------------------
 3804|   948k|    break;
 3805|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3805:3): [True: 0, False: 948k]
  ------------------
 3806|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index));
 3807|      0|    break;
 3808|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3808:3): [True: 0, False: 948k]
  ------------------
 3809|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name));
 3810|      0|    break;
 3811|   948k|  }
 3812|   948k|}
_ZN3fmt3v116detail13arg_formatterIcEclIPKcEENS0_14basic_appenderIcEET_:
 3746|   893k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3747|   893k|    return detail::write<Char>(out, value, specs, locale);
 3748|   893k|  }
_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_PKT_RKNS0_12format_specsENS1_10locale_refE:
 2310|   893k|                         locale_ref) -> OutputIt {
 2311|   893k|  if (specs.type == presentation_type::pointer)
  ------------------
  |  Branch (2311:7): [True: 0, False: 893k]
  ------------------
 2312|      0|    return write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2313|   893k|  if (!s) report_error("string pointer is null");
  ------------------
  |  Branch (2313:7): [True: 0, False: 893k]
  ------------------
 2314|   893k|  return write<Char>(out, basic_string_view<Char>(s), specs, {});
 2315|   893k|}
_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsENS1_10locale_refE:
 2305|   948k|                         const format_specs& specs, locale_ref) -> OutputIt {
 2306|   948k|  return write<Char>(out, s, specs);
 2307|   948k|}
_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EERKNS0_12format_specsE:
 2280|   948k|                         const format_specs& specs) -> OutputIt {
 2281|   948k|  auto data = s.data();
 2282|   948k|  auto size = s.size();
 2283|   948k|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2283:7): [True: 0, False: 948k]
  |  Branch (2283:31): [True: 0, False: 0]
  ------------------
 2284|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2285|   948k|  bool is_debug = specs.type == presentation_type::debug;
 2286|   948k|  size_t width = 0;
 2287|       |
 2288|   948k|  if (is_debug) size = write_escaped_string(counting_iterator{}, s).count();
  ------------------
  |  Branch (2288:7): [True: 0, False: 948k]
  ------------------
 2289|       |
 2290|   948k|  if (specs.width != 0) {
  ------------------
  |  Branch (2290:7): [True: 0, False: 948k]
  ------------------
 2291|      0|    if (is_debug)
  ------------------
  |  Branch (2291:9): [True: 0, False: 0]
  ------------------
 2292|      0|      width = size;
 2293|      0|    else
 2294|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2295|      0|  }
 2296|   948k|  return write_padded<Char>(out, specs, size, width,
 2297|   948k|                            [=](reserve_iterator<OutputIt> it) {
 2298|   948k|                              if (is_debug) return write_escaped_string(it, s);
 2299|   948k|                              return copy<Char>(data, data + size, it);
 2300|   948k|                            });
 2301|   948k|}
_ZN3fmt3v116detail12write_paddedIcLNS0_5align4typeE1ENS0_14basic_appenderIcEEZNS1_5writeIcS6_EET0_S8_NS0_17basic_string_viewIT_EERKNS0_12format_specsEEUlS6_E_EET1_SG_SE_mmOT2_:
 1718|   948k|                                size_t size, size_t width, F&& f) -> OutputIt {
 1719|   948k|  static_assert(align == align::left || align == align::right, "");
 1720|   948k|  unsigned spec_width = to_unsigned(specs.width);
 1721|   948k|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1721:20): [True: 0, False: 948k]
  ------------------
 1722|       |  // Shifts are encoded as string literals because static constexpr is not
 1723|       |  // supported in constexpr functions.
 1724|   948k|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1724:18): [Folded - Ignored]
  ------------------
 1725|   948k|  size_t left_padding = padding >> shifts[specs.align];
 1726|   948k|  size_t right_padding = padding - left_padding;
 1727|   948k|  auto it = reserve(out, size + padding * specs.fill.size());
 1728|   948k|  if (left_padding != 0) it = fill<Char>(it, left_padding, specs.fill);
  ------------------
  |  Branch (1728:7): [True: 0, False: 948k]
  ------------------
 1729|   948k|  it = f(it);
 1730|   948k|  if (right_padding != 0) it = fill<Char>(it, right_padding, specs.fill);
  ------------------
  |  Branch (1730:7): [True: 0, False: 948k]
  ------------------
 1731|   948k|  return base_iterator(out, it);
 1732|   948k|}
_ZZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EERKNS0_12format_specsEENKUlS4_E_clES4_:
 2297|   948k|                            [=](reserve_iterator<OutputIt> it) {
 2298|   948k|                              if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2298:35): [True: 0, False: 948k]
  ------------------
 2299|   948k|                              return copy<Char>(data, data + size, it);
 2300|   948k|                            });
_ZN3fmt3v116detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_14basic_appenderIcEET_:
 3746|  55.0k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3747|  55.0k|    return detail::write<Char>(out, value, specs, locale);
 3748|  55.0k|  }
_ZZN3fmt3v116detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_14basic_appenderIcEENS7_IcEENS0_17basic_format_argsINS0_7contextEEESC_:
 4237|  1.10M|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt3v119to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4203|  1.10M|    -> std::basic_string<Char> {
 4204|  1.10M|  auto size = buf.size();
 4205|  1.10M|  detail::assume(size < std::basic_string<Char>().max_size());
 4206|  1.10M|  return std::basic_string<Char>(buf.data(), size);
 4207|  1.10M|}

LLVMFuzzerTestOneInput:
   14|  11.5k|{
   15|  11.5k|    disable_output();
   16|       |
   17|  11.5k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   18|       |
   19|  11.5k|    EmptySourceManager source_manager;
   20|  11.5k|    DiagnosticEngine   diagnostic_engine;
   21|  11.5k|    Lexer              lexer{&diagnostic_engine};
   22|  11.5k|    auto               document = phi::make_not_null_scope<ASTDocument>();
   23|       |
   24|  11.5k|    Parser parser{&source_manager, &diagnostic_engine, &lexer};
   25|  11.5k|    parser.ParseString(document, "Fuzz.au3", source);
   26|       |
   27|  11.5k|    return 0;
   28|  11.5k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  28.8k|    {
   18|  28.8k|        m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|  28.8k|    }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  59.7k|    {
   20|  59.7k|        m_NodeType = ASTNodeType::BinaryExpression;
   21|  59.7k|    }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  8.32k|    {
   18|  8.32k|        m_NodeType = ASTNodeType::BooleanLiteral;
   19|  8.32k|    }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|  67.3k|    {
   20|  67.3k|        m_Statements.emplace_back(phi::move(child));
   21|  67.3k|    }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  1.40k|    {
   25|  1.40k|        m_Functions.emplace_back(phi::move(child));
   26|  1.40k|    }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|  6.25k|    {
   18|  6.25k|        m_NodeType = ASTNodeType::ExitStatement;
   19|  6.25k|    }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|   246k|    {
   13|   246k|        switch (m_NodeType)
   14|   246k|        {
   15|  34.6k|            case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:13): [True: 34.6k, False: 211k]
  ------------------
   16|  54.7k|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:13): [True: 20.0k, False: 226k]
  ------------------
   17|  58.3k|            case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:13): [True: 3.59k, False: 242k]
  ------------------
   18|  58.3k|                return true;
   19|       |
   20|   188k|            default:
  ------------------
  |  Branch (20:13): [True: 188k, False: 58.3k]
  ------------------
   21|   188k|                return false;
   22|   246k|        }
   23|   246k|    }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|   246k|    {
   17|   246k|        m_NodeType = ASTNodeType::ExpressionStatement;
   18|   246k|    }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  19.8k|    {
   17|  19.8k|        m_NodeType = ASTNodeType::FloatLiteral;
   18|  19.8k|    }

_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   28|  36.5k|    {
   29|  36.5k|        return m_FunctionReference.FunctionName();
   30|  36.5k|    }
_ZN10OpenAutoIt25ASTFunctionCallExpressionC2ENS_17FunctionReferenceE:
   18|  88.1k|    {
   19|  88.1k|        m_NodeType = ASTNodeType::FunctionCallExpression;
   20|  88.1k|    }

_ZN10OpenAutoIt30ASTFunctionReferenceExpressionC2ENS_17FunctionReferenceE:
   19|   192k|    {
   20|   192k|        m_NodeType = ASTNodeType::FunctionReferenceExpression;
   21|   192k|    }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  22.9k|    {
   25|  22.9k|        m_NodeType = ASTNodeType::IfStatement;
   26|  22.9k|    }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|   387k|    {
   17|   387k|        m_NodeType = ASTNodeType::IntegerLiteral;
   18|   387k|    }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|  4.44k|    {
   19|  4.44k|        m_NodeType = ASTNodeType::KeywordLiteral;
   20|  4.44k|        PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|  4.44k|    }

_ZN10OpenAutoIt18ASTMacroExpressionC2ENS_9TokenKindE:
   18|  11.7k|    {
   19|  11.7k|        m_NodeType = ASTNodeType::MacroExpression;
   20|  11.7k|        PHI_ASSERT(static_cast<phi::size_t>(m_Macro) >= MacroFirst &&
   21|  11.7k|                   static_cast<phi::size_t>(m_Macro) <= MacroLast);
   22|  11.7k|    }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   75|  1.36M|    virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   73|  1.36M|    ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   78|   188k|    {
   79|   188k|        PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   80|   188k|        PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   81|       |
   82|   188k|        return enum_name(m_NodeType);
   83|   188k|    }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   51|   188k|{
   52|   188k|    switch (node_type)
   53|   188k|    {
   54|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   55|      0|    case ASTNodeType::name:                                                                        \
   56|      0|        return "AST" #name;
   57|       |
   58|      0|        OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   15|  7.50k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   55|  7.50k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 7.50k, False: 180k]
  |  |  |  |  ------------------
  |  |  |  |   56|  7.50k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  16.7k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   55|  16.7k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 16.7k, False: 171k]
  |  |  |  |  ------------------
  |  |  |  |   56|  16.7k|        return "AST" #name;
  |  |  ------------------
  |  |   17|  16.7k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|  4.36k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 4.36k, False: 183k]
  |  |  |  |  ------------------
  |  |  |  |   56|  4.36k|        return "AST" #name;
  |  |  ------------------
  |  |   18|  4.36k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 188k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 188k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   20|  9.16k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   55|  9.16k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 9.16k, False: 179k]
  |  |  |  |  ------------------
  |  |  |  |   56|  9.16k|        return "AST" #name;
  |  |  ------------------
  |  |   21|  9.16k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 188k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   22|  75.6k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionReferenceExpression)                                \
  |  |  ------------------
  |  |  |  |   55|  75.6k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 75.6k, False: 112k]
  |  |  |  |  ------------------
  |  |  |  |   56|  75.6k|        return "AST" #name;
  |  |  ------------------
  |  |   23|  75.6k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 188k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   24|  44.7k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|  44.7k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 44.7k, False: 143k]
  |  |  |  |  ------------------
  |  |  |  |   56|  44.7k|        return "AST" #name;
  |  |  ------------------
  |  |   25|  44.7k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|  2.22k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 2.22k, False: 185k]
  |  |  |  |  ------------------
  |  |  |  |   56|  2.22k|        return "AST" #name;
  |  |  ------------------
  |  |   26|  2.22k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(MacroExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|  2.03k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 2.03k, False: 186k]
  |  |  |  |  ------------------
  |  |  |  |   56|  2.03k|        return "AST" #name;
  |  |  ------------------
  |  |   27|  7.94k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   55|  7.94k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 7.94k, False: 180k]
  |  |  |  |  ------------------
  |  |  |  |   56|  7.94k|        return "AST" #name;
  |  |  ------------------
  |  |   28|  17.8k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(TernaryIfExpression)                                        \
  |  |  ------------------
  |  |  |  |   55|  17.8k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 17.8k, False: 170k]
  |  |  |  |  ------------------
  |  |  |  |   56|  17.8k|        return "AST" #name;
  |  |  ------------------
  |  |   29|  17.8k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 188k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   30|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 188k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   31|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 188k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   32|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 188k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   59|       |
   60|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   61|       |
   62|      0|        default:
  ------------------
  |  Branch (62:9): [True: 0, False: 188k]
  ------------------
   63|      0|            PHI_ASSERT_NOT_REACHED();
   64|      0|            return "";
   65|   188k|    }
   66|   188k|}

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  28.3k|    {
   15|  28.3k|        m_NodeType = ASTNodeType::StringLiteral;
   16|  28.3k|    }

_ZN10OpenAutoIt22ASTTernaryIfExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEES5_S5_:
   19|  42.4k|    {
   20|  42.4k|        m_NodeType = ASTNodeType::TernaryIfExpression;
   21|  42.4k|    }

_ZN10OpenAutoIt18ASTUnaryExpressionC2ENS_9TokenKindEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   15|  58.9k|    {
   16|  58.9k|        m_NodeType = ASTNodeType::UnaryExpression;
   17|  58.9k|    }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|  72.9k|    {
   20|  72.9k|        m_NodeType = ASTNodeType::VariableAssignment;
   21|  72.9k|    }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|  35.2k|    {
   15|  35.2k|        m_NodeType = ASTNodeType::VariableExpression;
   16|  35.2k|    }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  19.2k|    {
   18|  19.2k|        m_NodeType = ASTNodeType::WhileStatement;
   19|  19.2k|    }

_ZN10OpenAutoIt17DiagnosticBuilder7WarningIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   55|   146k|    {
   56|   146k|        m_Diagnostics.emplace_back(Diagnostic{
   57|   146k|                id, DiagnosticLevel::Warning, location,
   58|   146k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   59|       |
   60|   146k|        return *this;
   61|   146k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA9_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  51.7k|    {
   66|  51.7k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  51.7k|                id, DiagnosticLevel::Error, location,
   68|  51.7k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  51.7k|        return *this;
   71|  51.7k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA18_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|     27|    {
   66|     27|        m_Diagnostics.emplace_back(Diagnostic{
   67|     27|                id, DiagnosticLevel::Error, location,
   68|     27|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|     27|        return *this;
   71|     27|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA4_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    370|    {
   66|    370|        m_Diagnostics.emplace_back(Diagnostic{
   67|    370|                id, DiagnosticLevel::Error, location,
   68|    370|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    370|        return *this;
   71|    370|    }
_ZN10OpenAutoIt17DiagnosticBuilder4NoteIJEEERS0_NS_14SourceLocationENSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   31|    370|    {
   32|    370|        PHI_ASSERT(!m_Diagnostics.empty());
   33|       |
   34|    370|        m_Diagnostics.back().AddNote(
   35|    370|                Diagnostic{DiagnosticId::None, DiagnosticLevel::Note, location,
   36|    370|                           std::string{fmt::format(fmt::runtime(format_string),
   37|    370|                                                   phi::forward<ArgsT>(args)...)}});
   38|       |
   39|    370|        return *this;
   40|    370|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA25_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    238|    {
   66|    238|        m_Diagnostics.emplace_back(Diagnostic{
   67|    238|                id, DiagnosticLevel::Error, location,
   68|    238|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    238|        return *this;
   71|    238|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  7.85k|    {
   66|  7.85k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  7.85k|                id, DiagnosticLevel::Error, location,
   68|  7.85k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  7.85k|        return *this;
   71|  7.85k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    910|    {
   66|    910|        m_Diagnostics.emplace_back(Diagnostic{
   67|    910|                id, DiagnosticLevel::Error, location,
   68|    910|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    910|        return *this;
   71|    910|    }

_ZN10OpenAutoIt19DiagnosticIdMessageENS_12DiagnosticIdE:
   87|   207k|{
   88|   207k|    PHI_ASSERT(id != DiagnosticId::None);
   89|       |
   90|   207k|    switch (id)
   91|   207k|    {
   92|      0|#define OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EnumName, FlagName, DiagnosticMessage)                 \
   93|      0|    case DiagnosticId::EnumName: {                                                                 \
   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
   95|      0|        return DiagnosticMessage;                                                                  \
   96|      0|    }
   97|       |
   98|      0|        OPENAUTOIT_ENUM_DIAGNOSTIC_IDS()
  ------------------
  |  |   12|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(None, "", "")                                              \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 207k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   13|      0|    /* Lexer warnings */                                                                           \
  |  |   14|   146k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(NullCharacter, "-Wnull-character",                         \
  |  |  ------------------
  |  |  |  |   93|   146k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 146k, False: 61.1k]
  |  |  |  |  ------------------
  |  |  |  |   94|   146k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|   146k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|   146k|    }
  |  |  ------------------
  |  |   15|   146k|                                        "null character ignored")                                  \
  |  |   16|   146k|    /* Lexer errors */                                                                             \
  |  |   17|   146k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(InvalidFloatLiteral, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 207k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   18|      0|                                        "invalid float literal declaration")                       \
  |  |   19|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FloatHexLiteral, "",                                       \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 207k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   20|      0|                                        "hexadecimal float literal are not allowed")               \
  |  |   21|      0|    /* Parser error */                                                                             \
  |  |   22|     27|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(UnexpectedEndOfFile, "",                                   \
  |  |  ------------------
  |  |  |  |   93|     27|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 27, False: 207k]
  |  |  |  |  ------------------
  |  |  |  |   94|     27|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|     27|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|     27|    }
  |  |  ------------------
  |  |   23|     27|                                        "unexpected end of file while parsing {:s}")               \
  |  |   24|  52.3k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(Expected, "", "expected {:s}")                             \
  |  |  ------------------
  |  |  |  |   93|  52.3k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 52.3k, False: 155k]
  |  |  |  |  ------------------
  |  |  |  |   94|  52.3k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  52.3k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  52.3k|    }
  |  |  ------------------
  |  |   25|  52.3k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IntegerLiteralTooLarge, "",                                \
  |  |  ------------------
  |  |  |  |   93|  7.53k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 7.53k, False: 200k]
  |  |  |  |  ------------------
  |  |  |  |   94|  7.53k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  7.53k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  7.53k|    }
  |  |  ------------------
  |  |   26|  7.53k|                                        "integer literal is too large.")                           \
  |  |   27|  7.53k|    /* Parser fatal error */                                                                       \
  |  |   28|  7.53k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNotFound, "", "'{:s}' file not found")                 \
  |  |  ------------------
  |  |  |  |   93|    892|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 892, False: 206k]
  |  |  |  |  ------------------
  |  |  |  |   94|    892|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    892|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    892|    }
  |  |  ------------------
  |  |   29|    892|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EmptyFilename, "", "empty filename")                       \
  |  |  ------------------
  |  |  |  |   93|    322|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 322, False: 207k]
  |  |  |  |  ------------------
  |  |  |  |   94|    322|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    322|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    322|    }
  |  |  ------------------
  |  |   30|    322|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IncludeNestingTooDeeply, "", "#include nested too deeply") \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 207k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   31|     18|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNameTooLong, "",                                       \
  |  |  ------------------
  |  |  |  |   93|     18|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 18, False: 207k]
  |  |  |  |  ------------------
  |  |  |  |   94|     18|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|     18|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|     18|    }
  |  |  ------------------
  |  |   32|     18|                                        "cannot open file '{:s}': File name too long")
  ------------------
   99|       |
  100|      0|#undef OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL
  101|       |
  102|      0|        default:
  ------------------
  |  Branch (102:9): [True: 0, False: 207k]
  ------------------
  103|      0|            PHI_ASSERT_NOT_REACHED();
  104|   207k|    }
  105|   207k|}

_ZN10OpenAutoIt17FunctionReferenceC2ERKNS_5TokenE:
   23|  8.17k|    {
   24|  8.17k|        PHI_ASSERT(built_in_function.IsBuiltInFunction());
   25|  8.17k|    }
_ZN10OpenAutoIt17FunctionReferenceC2EN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
   18|   272k|    {}
_ZNK10OpenAutoIt17FunctionReference12FunctionNameEv:
   33|  36.5k|    {
   34|  36.5k|        return m_IsBuiltIn ? enum_name(m_BuiltInFunction) : m_FunctionName;
  ------------------
  |  Branch (34:16): [True: 5.13k, False: 31.4k]
  ------------------
   35|  36.5k|    }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  1.38M|    {
   46|  1.38M|        Token token{kind,
   47|  1.38M|                    m_Source.substring_view(
   48|  1.38M|                            static_cast<typename phi::string_view::size_type::value_type>(
   49|  1.38M|                                    m_Iterator - m_Source.cbegin()),
   50|  1.38M|                            1u),
   51|  1.38M|                    CurrentSourceLocation()};
   52|       |
   53|       |        // 1 character sized token
   54|  1.38M|        ++m_Column;
   55|       |
   56|  1.38M|        return token;
   57|  1.38M|    }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  1.61M|    {
   61|  1.61M|        Token token{kind, TokenText(token_begin), CurrentSourceLocation()};
   62|       |
   63|       |        // Consume the amount of characters that make up our new token
   64|  1.61M|        m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  1.61M|        return token;
   67|  1.61M|    }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  2.58M|    {
   71|  2.58M|        return m_Source.substring_view(token_begin, m_Iterator);
   72|  2.58M|    }
_ZNK10OpenAutoIt5Lexer21CurrentSourceLocationEv:
   75|  3.15M|    {
   76|  3.15M|        return BuildSourceLocation(m_LineNumber, m_Column);
   77|  3.15M|    }
_ZNK10OpenAutoIt5Lexer19BuildSourceLocationEN3phi7integerImEES3_:
   81|  3.15M|    {
   82|  3.15M|        return {m_SourceFile, line_number, column};
   83|  3.15M|    }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   72|  1.94M|    {
   73|  1.94M|        switch (token_kind)
   74|  1.94M|        {
   75|  60.8k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (75:13): [True: 60.8k, False: 1.88M]
  ------------------
   76|   162k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (76:13): [True: 101k, False: 1.84M]
  ------------------
   77|   163k|            case TokenKind::KW_Not:
  ------------------
  |  Branch (77:13): [True: 1.65k, False: 1.94M]
  ------------------
   78|   163k|                return true;
   79|       |
   80|  1.78M|            default:
  ------------------
  |  Branch (80:13): [True: 1.78M, False: 163k]
  ------------------
   81|  1.78M|                return false;
   82|  1.94M|        }
   83|  1.94M|    }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   87|   829k|    {
   88|   829k|        switch (token_kind)
   89|   829k|        {
   90|    217|            case TokenKind::KW_And:
  ------------------
  |  Branch (90:13): [True: 217, False: 829k]
  ------------------
   91|  1.34k|            case TokenKind::KW_Or:
  ------------------
  |  Branch (91:13): [True: 1.13k, False: 828k]
  ------------------
   92|  42.1k|            case TokenKind::OP_Equals:
  ------------------
  |  Branch (92:13): [True: 40.8k, False: 788k]
  ------------------
   93|  42.4k|            case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (93:13): [True: 300, False: 829k]
  ------------------
   94|  42.8k|            case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (94:13): [True: 368, False: 829k]
  ------------------
   95|  43.0k|            case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (95:13): [True: 228, False: 829k]
  ------------------
   96|  44.0k|            case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (96:13): [True: 925, False: 828k]
  ------------------
   97|  69.0k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (97:13): [True: 25.0k, False: 804k]
  ------------------
   98|  93.7k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (98:13): [True: 24.6k, False: 804k]
  ------------------
   99|  96.6k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (99:13): [True: 2.93k, False: 826k]
  ------------------
  100|   105k|            case TokenKind::OP_Divide:
  ------------------
  |  Branch (100:13): [True: 8.72k, False: 820k]
  ------------------
  101|   106k|            case TokenKind::OP_Raise:
  ------------------
  |  Branch (101:13): [True: 770, False: 828k]
  ------------------
  102|   106k|            case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (102:13): [True: 502, False: 829k]
  ------------------
  103|   107k|            case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (103:13): [True: 504, False: 829k]
  ------------------
  104|   109k|            case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (104:13): [True: 2.31k, False: 827k]
  ------------------
  105|   109k|            case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (105:13): [True: 274, False: 829k]
  ------------------
  106|   112k|            case TokenKind::OP_LessThan:
  ------------------
  |  Branch (106:13): [True: 2.48k, False: 827k]
  ------------------
  107|   112k|            case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (107:13): [True: 363, False: 829k]
  ------------------
  108|   115k|            case TokenKind::OP_Concatenate:
  ------------------
  |  Branch (108:13): [True: 2.48k, False: 827k]
  ------------------
  109|   115k|            case TokenKind::OP_ConcatenateEquals:
  ------------------
  |  Branch (109:13): [True: 220, False: 829k]
  ------------------
  110|   115k|                return true;
  111|       |
  112|   714k|            default:
  ------------------
  |  Branch (112:13): [True: 714k, False: 115k]
  ------------------
  113|   714k|                return false;
  114|   829k|        }
  115|   829k|    }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  156|  1.40k|    {
  157|  1.40k|        m_Document->AppendFunction(phi::move(function));
  158|  1.40k|    }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  150|  67.3k|    {
  151|  67.3k|        m_Document->AppendStatement(phi::move(statement));
  152|  67.3k|    }

_ZN10OpenAutoIt14SourceLocation7InvalidEv:
   23|  11.5k|    {
   24|  11.5k|        return {nullptr, 1u, 1u};
   25|  11.5k|    }

_ZN10OpenAutoIt13SourceManagerC2Ev:
   21|  11.5k|    SourceManager()          = default;

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_14SourceLocationE:
   27|  3.00M|    {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   39|  21.2M|    {
   40|  21.2M|        return m_Kind;
   41|  21.2M|    }
_ZNK10OpenAutoIt5Token7GetTextEv:
   44|  2.16M|    {
   45|  2.16M|        return m_Text;
   46|  2.16M|    }
_ZNK10OpenAutoIt5Token16GetBeginLocationEv:
   64|  60.9k|    {
   65|  60.9k|        return m_SourceLocation;
   66|  60.9k|    }
_ZNK10OpenAutoIt5Token14GetEndLocationEv:
   69|    608|    {
   70|    608|        return {.source_file = m_SourceLocation.source_file,
   71|    608|                .line_number = m_SourceLocation.line_number,
   72|    608|                .column      = m_SourceLocation.column + m_Text.length()};
   73|    608|    }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   88|  1.28M|    {
   89|  1.28M|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   90|       |
   91|  1.28M|        if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (91:13): [True: 32.7k, False: 1.25M]
  ------------------
   92|  1.28M|            underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (92:13): [True: 32.7k, False: 0]
  ------------------
   93|  32.7k|        {
   94|  32.7k|            return true;
   95|  32.7k|        }
   96|       |
   97|  1.25M|        return false;
   98|  1.28M|    }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
  101|   951k|    {
  102|   951k|        switch (m_Kind)
  103|   951k|        {
  104|  8.17k|            case TokenKind::KW_Default:
  ------------------
  |  Branch (104:13): [True: 8.17k, False: 942k]
  ------------------
  105|  8.88k|            case TokenKind::KW_Null:
  ------------------
  |  Branch (105:13): [True: 718, False: 950k]
  ------------------
  106|  8.88k|                return true;
  107|       |
  108|   942k|            default:
  ------------------
  |  Branch (108:13): [True: 942k, False: 8.88k]
  ------------------
  109|   942k|                return false;
  110|   951k|        }
  111|   951k|    }
_ZNK10OpenAutoIt5Token7IsMacroEv:
  158|   234k|    {
  159|   234k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
  160|       |
  161|   234k|        if (underlying_value >= MacroFirst && underlying_value <= MacroLast)
  ------------------
  |  Branch (161:13): [True: 132k, False: 102k]
  |  Branch (161:47): [True: 11.7k, False: 120k]
  ------------------
  162|  11.7k|        {
  163|  11.7k|            return true;
  164|  11.7k|        }
  165|       |
  166|   222k|        return false;
  167|   234k|    }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  682|   658k|{
  683|   658k|    switch (token_kind)
  684|   658k|    {
  685|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  686|      0|    case TokenKind::name:                                                                          \
  687|      0|        return #name;
  688|       |
  689|      0|        OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  5.03k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  686|  5.03k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.03k, False: 653k]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.03k|        return #name;
  |  |  ------------------
  |  |   13|  43.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  686|  43.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 43.2k, False: 614k]
  |  |  |  |  ------------------
  |  |  |  |  687|  43.2k|        return #name;
  |  |  ------------------
  |  |   14|  43.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   15|  19.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  686|  19.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19.6k, False: 638k]
  |  |  |  |  ------------------
  |  |  |  |  687|  19.6k|        return #name;
  |  |  ------------------
  |  |   16|  19.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  686|     90|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 90, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|     90|        return #name;
  |  |  ------------------
  |  |   17|     90|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   18|   110k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|   110k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 110k, False: 547k]
  |  |  |  |  ------------------
  |  |  |  |  687|   110k|        return #name;
  |  |  ------------------
  |  |   19|   110k|    /* Literals */                                                                                 \
  |  |   20|   110k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  686|  94.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 94.5k, False: 563k]
  |  |  |  |  ------------------
  |  |  |  |  687|  94.5k|        return #name;
  |  |  ------------------
  |  |   21|  94.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  686|  12.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12.8k, False: 645k]
  |  |  |  |  ------------------
  |  |  |  |  687|  12.8k|        return #name;
  |  |  ------------------
  |  |   22|  12.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  686|  7.98k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.98k, False: 650k]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.98k|        return #name;
  |  |  ------------------
  |  |   23|  7.98k|    /* Punctuation */                                                                              \
  |  |   24|  12.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  686|  12.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12.3k, False: 645k]
  |  |  |  |  ------------------
  |  |  |  |  687|  12.3k|        return #name;
  |  |  ------------------
  |  |   25|  33.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  33.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 33.0k, False: 625k]
  |  |  |  |  ------------------
  |  |  |  |  687|  33.0k|        return #name;
  |  |  ------------------
  |  |   26|  51.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  51.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 51.2k, False: 606k]
  |  |  |  |  ------------------
  |  |  |  |  687|  51.2k|        return #name;
  |  |  ------------------
  |  |   27|  51.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   28|  22.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  22.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22.8k, False: 635k]
  |  |  |  |  ------------------
  |  |  |  |  687|  22.8k|        return #name;
  |  |  ------------------
  |  |   29|  25.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  25.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 25.0k, False: 632k]
  |  |  |  |  ------------------
  |  |  |  |  687|  25.0k|        return #name;
  |  |  ------------------
  |  |   30|  25.0k|    /* Macros */                                                                                   \
  |  |   31|  25.0k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  25.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   33|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   34|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   35|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   36|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   37|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |   38|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   40|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |   41|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   42|    103|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  686|    103|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 103, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    103|        return #name;
  |  |  ------------------
  |  |   43|    103|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   44|  1.22k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  686|  1.22k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.22k, False: 656k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.22k|        return #name;
  |  |  ------------------
  |  |   45|  1.22k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  686|     86|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 86, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|     86|        return #name;
  |  |  ------------------
  |  |   46|     86|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   47|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   48|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   49|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   50|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  686|     35|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 35, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     35|        return #name;
  |  |  ------------------
  |  |   51|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   52|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   53|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |   54|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |   55|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   56|    108|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  686|    108|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 108, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    108|        return #name;
  |  |  ------------------
  |  |   57|    108|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   59|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   60|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |   61|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   67|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   69|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   70|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   71|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   72|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |   73|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   74|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   75|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |   76|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   77|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |   78|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   81|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   82|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  686|     66|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 66, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     66|        return #name;
  |  |  ------------------
  |  |   83|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   84|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   86|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |   87|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   88|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   89|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   90|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   91|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   92|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   93|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   94|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   96|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   97|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   98|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   99|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  100|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  101|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  103|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  104|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  105|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  686|     41|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 41, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     41|        return #name;
  |  |  ------------------
  |  |  106|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  107|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  108|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  109|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  110|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|     41|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 41, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     41|        return #name;
  |  |  ------------------
  |  |  111|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  112|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  113|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  120|    295|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  686|    295|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 295, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    295|        return #name;
  |  |  ------------------
  |  |  121|    295|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  122|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  123|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  124|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  125|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  127|     45|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  686|     45|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 45, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     45|        return #name;
  |  |  ------------------
  |  |  128|     45|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  129|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  130|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  131|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  132|    771|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|    771|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 771, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    771|        return #name;
  |  |  ------------------
  |  |  133|    771|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  138|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  686|     66|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 66, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     66|        return #name;
  |  |  ------------------
  |  |  139|     66|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  686|     33|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 33, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     33|        return #name;
  |  |  ------------------
  |  |  141|     33|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|     33|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  143|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  145|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  147|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  149|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  151|      0|    /* Keywords */                                                                                 \
  |  |  152|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|  3.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  686|  3.29k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.29k, False: 654k]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.29k|        return #name;
  |  |  ------------------
  |  |  156|  3.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  686|  2.17k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.17k, False: 655k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.17k|        return #name;
  |  |  ------------------
  |  |  157|  2.17k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  2.17k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|  2.84k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  686|  2.84k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.84k, False: 655k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.84k|        return #name;
  |  |  ------------------
  |  |  163|  2.84k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|  2.84k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  165|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  166|    108|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  686|    108|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 108, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    108|        return #name;
  |  |  ------------------
  |  |  167|    119|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  686|    119|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 119, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    119|        return #name;
  |  |  ------------------
  |  |  168|    119|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|    119|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  686|    103|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 103, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    103|        return #name;
  |  |  ------------------
  |  |  170|    103|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  171|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  686|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     22|        return #name;
  |  |  ------------------
  |  |  173|     22|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|    481|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  686|    481|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 481, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    481|        return #name;
  |  |  ------------------
  |  |  175|    481|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|    481|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  179|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  180|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  686|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 32, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     32|        return #name;
  |  |  ------------------
  |  |  181|     69|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  686|     69|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 69, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     69|        return #name;
  |  |  ------------------
  |  |  182|     69|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|     69|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  686|     69|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 69, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     69|        return #name;
  |  |  ------------------
  |  |  184|     69|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  18.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  686|  18.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18.3k, False: 639k]
  |  |  |  |  ------------------
  |  |  |  |  687|  18.3k|        return #name;
  |  |  ------------------
  |  |  186|  18.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  686|     52|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 52, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     52|        return #name;
  |  |  ------------------
  |  |  187|     52|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  686|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 38, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     38|        return #name;
  |  |  ------------------
  |  |  188|  1.35k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  686|  1.35k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.35k, False: 656k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.35k|        return #name;
  |  |  ------------------
  |  |  189|  1.35k|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  2.32k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  686|  2.32k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.32k, False: 655k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.32k|        return #name;
  |  |  ------------------
  |  |  191|  3.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  686|  3.37k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.37k, False: 654k]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.37k|        return #name;
  |  |  ------------------
  |  |  192|  3.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  686|  1.64k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.64k, False: 656k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.64k|        return #name;
  |  |  ------------------
  |  |  193|  1.64k|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|  17.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  686|  17.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17.0k, False: 640k]
  |  |  |  |  ------------------
  |  |  |  |  687|  17.0k|        return #name;
  |  |  ------------------
  |  |  195|  17.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  686|  7.07k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.07k, False: 651k]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.07k|        return #name;
  |  |  ------------------
  |  |  196|  7.07k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|  7.07k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  686|    353|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 353, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    353|        return #name;
  |  |  ------------------
  |  |  198|    353|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|    353|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  200|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  202|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  203|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|    129|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  686|    129|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 129, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    129|        return #name;
  |  |  ------------------
  |  |  206|    129|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|    129|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  208|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|    494|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  686|    494|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 494, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    494|        return #name;
  |  |  ------------------
  |  |  213|  2.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|  2.37k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.37k, False: 655k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.37k|        return #name;
  |  |  ------------------
  |  |  214|  2.37k|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|  2.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  216|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  219|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  686|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 31, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     31|        return #name;
  |  |  ------------------
  |  |  220|    414|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  686|    414|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 414, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    414|        return #name;
  |  |  ------------------
  |  |  221|    414|    /* Operator */                                                                                 \
  |  |  222|    414|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  26.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)            /* = */                                  \
  |  |  ------------------
  |  |  |  |  686|  26.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26.3k, False: 631k]
  |  |  |  |  ------------------
  |  |  |  |  687|  26.3k|        return #name;
  |  |  ------------------
  |  |  224|  26.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)        /* += */                                 \
  |  |  ------------------
  |  |  |  |  686|    240|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 240, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    240|        return #name;
  |  |  ------------------
  |  |  225|    240|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)       /* -= */                                 \
  |  |  ------------------
  |  |  |  |  686|    162|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 162, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    162|        return #name;
  |  |  ------------------
  |  |  226|    190|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)    /* *= */                                 \
  |  |  ------------------
  |  |  |  |  686|    190|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 190, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    190|        return #name;
  |  |  ------------------
  |  |  227|  1.56k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)      /* /= */                                 \
  |  |  ------------------
  |  |  |  |  686|  1.56k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.56k, False: 656k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.56k|        return #name;
  |  |  ------------------
  |  |  228|  2.62k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)       /* & */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.62k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.62k, False: 655k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.62k|        return #name;
  |  |  ------------------
  |  |  229|  2.62k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals) /* &= */                                 \
  |  |  ------------------
  |  |  |  |  686|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 32, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     32|        return #name;
  |  |  ------------------
  |  |  230|  2.35k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)              /* + */                                  \
  |  |  ------------------
  |  |  |  |  686|  2.35k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.35k, False: 655k]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.35k|        return #name;
  |  |  ------------------
  |  |  231|  7.30k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)             /* - */                                  \
  |  |  ------------------
  |  |  |  |  686|  7.30k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.30k, False: 650k]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.30k|        return #name;
  |  |  ------------------
  |  |  232|  22.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)          /* * */                                  \
  |  |  ------------------
  |  |  |  |  686|  22.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22.6k, False: 635k]
  |  |  |  |  ------------------
  |  |  |  |  687|  22.6k|        return #name;
  |  |  ------------------
  |  |  233|  22.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)            /* / */                                  \
  |  |  ------------------
  |  |  |  |  686|  19.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19.5k, False: 638k]
  |  |  |  |  ------------------
  |  |  |  |  687|  19.5k|        return #name;
  |  |  ------------------
  |  |  234|  19.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)             /* ^ */                                  \
  |  |  ------------------
  |  |  |  |  686|    922|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 922, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    922|        return #name;
  |  |  ------------------
  |  |  235|  1.33k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)      /* == */                                 \
  |  |  ------------------
  |  |  |  |  686|  1.33k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.33k, False: 656k]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.33k|        return #name;
  |  |  ------------------
  |  |  236|  1.33k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)          /* <> */                                 \
  |  |  ------------------
  |  |  |  |  686|    505|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 505, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    505|        return #name;
  |  |  ------------------
  |  |  237|  4.18k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)       /* > */                                  \
  |  |  ------------------
  |  |  |  |  686|  4.18k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.18k, False: 653k]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.18k|        return #name;
  |  |  ------------------
  |  |  238|  4.18k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)  /* >= */                                 \
  |  |  ------------------
  |  |  |  |  686|     37|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 37, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     37|        return #name;
  |  |  ------------------
  |  |  239|  11.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)          /* < */                                  \
  |  |  ------------------
  |  |  |  |  686|  11.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11.5k, False: 646k]
  |  |  |  |  ------------------
  |  |  |  |  687|  11.5k|        return #name;
  |  |  ------------------
  |  |  240|  11.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)     /* <= */                                 \
  |  |  ------------------
  |  |  |  |  686|    255|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 255, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    255|        return #name;
  |  |  ------------------
  |  |  241|  21.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)         /* ? */                                  \
  |  |  ------------------
  |  |  |  |  686|  21.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 21.6k, False: 636k]
  |  |  |  |  ------------------
  |  |  |  |  687|  21.6k|        return #name;
  |  |  ------------------
  |  |  242|  22.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)       /* : */                                  \
  |  |  ------------------
  |  |  |  |  686|  22.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22.0k, False: 636k]
  |  |  |  |  ------------------
  |  |  |  |  687|  22.0k|        return #name;
  |  |  ------------------
  |  |  243|  22.0k|    /* Built-in Functions */                                                                       \
  |  |  244|  22.0k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  22.0k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  22.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  686|  5.26k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.26k, False: 652k]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.26k|        return #name;
  |  |  ------------------
  |  |  247|  5.26k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  248|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  249|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  250|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  251|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  254|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  255|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  256|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  257|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  259|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  260|    117|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|    117|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 117, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|    117|        return #name;
  |  |  ------------------
  |  |  261|    117|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  263|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  264|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  265|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  266|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  267|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  270|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  271|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  272|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  273|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  274|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  275|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  276|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  279|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  280|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  281|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  285|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  286|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  287|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  288|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  293|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  294|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  297|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  298|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  299|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  300|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  301|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  302|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  307|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  308|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  309|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  311|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  312|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  313|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  314|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  315|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  316|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  320|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  321|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  323|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  327|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  328|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  330|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  331|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  332|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  333|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  334|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  335|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  336|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  337|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  338|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  340|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  341|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  343|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  344|     77|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|     77|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 77, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     77|        return #name;
  |  |  ------------------
  |  |  345|     77|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  347|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  348|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  352|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  357|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  358|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  359|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  360|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  361|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  362|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  363|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  364|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  365|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  366|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  367|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  368|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  369|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  370|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  371|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  373|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  374|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  384|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  385|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  386|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  390|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  391|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  393|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  394|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  402|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  403|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  404|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  408|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  409|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  411|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  412|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  417|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  418|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  421|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  422|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  428|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  429|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  430|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  434|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  435|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  436|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  437|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  438|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  439|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  440|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  444|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  445|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  448|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 31, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     31|        return #name;
  |  |  ------------------
  |  |  449|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  450|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  451|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  452|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  453|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  454|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  455|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  462|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  463|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  466|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  467|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  468|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  470|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  471|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  472|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  473|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  474|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  475|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  686|     37|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 37, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     37|        return #name;
  |  |  ------------------
  |  |  476|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  477|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  478|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  479|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  480|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  482|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  483|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  485|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  686|     66|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 66, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     66|        return #name;
  |  |  ------------------
  |  |  486|     66|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  488|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  489|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  491|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  492|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  494|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  495|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  496|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  497|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  498|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  499|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  500|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  503|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  504|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  505|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  507|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  508|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  509|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  510|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  511|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  512|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  515|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  516|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  517|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  518|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  519|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  522|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  523|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  525|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  526|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  527|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  529|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  530|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  533|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  535|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  536|     78|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  686|     78|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 78, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     78|        return #name;
  |  |  ------------------
  |  |  537|     78|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  538|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  539|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  540|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  541|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  542|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  543|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  544|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  545|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  546|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  547|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  548|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  549|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  550|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  551|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  553|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  554|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  555|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  561|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  562|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  563|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  564|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  566|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  567|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  569|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  570|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  575|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  576|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  577|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  578|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  579|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  580|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  583|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  584|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  585|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  588|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  589|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  590|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  596|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  597|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  599|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  600|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  601|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  603|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  604|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  605|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  611|     98|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  686|     98|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 98, False: 657k]
  |  |  |  |  ------------------
  |  |  |  |  687|     98|        return #name;
  |  |  ------------------
  |  |  612|     98|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  613|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  615|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  616|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  617|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  618|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  619|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  620|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  621|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  622|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  625|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  626|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  628|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  629|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  631|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  632|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  633|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  635|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  636|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  638|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  639|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  640|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  641|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  645|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  646|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  647|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  649|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  650|      3|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 658k]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  ------------------
  690|       |
  691|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  692|       |
  693|      0|        default:
  ------------------
  |  Branch (693:9): [True: 0, False: 658k]
  ------------------
  694|      0|            PHI_ASSERT_NOT_REACHED();
  695|   658k|    }
  696|   658k|}

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  3.00M|    {
   21|       |#if defined(PHI_DEBUG)
   22|       |        PHI_ASSERT(!m_Finalized);
   23|       |#endif
   24|       |
   25|  3.00M|        m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  3.00M|    }

_ZN10OpenAutoIt10DiagnosticC2ENS_12DiagnosticIdENS_15DiagnosticLevelENS_14SourceLocationEONSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE:
   14|   208k|{}
_ZNK10OpenAutoIt10Diagnostic6IsNoteEv:
   42|   208k|{
   43|   208k|    return m_Level == DiagnosticLevel::Note;
   44|   208k|}
_ZNK10OpenAutoIt10Diagnostic9IsWarningEv:
   47|   207k|{
   48|   207k|    return m_Level == DiagnosticLevel::Warning;
   49|   207k|}
_ZNK10OpenAutoIt10Diagnostic7IsErrorEv:
   52|   207k|{
   53|   207k|    return m_Level == DiagnosticLevel::Error;
   54|   207k|}
_ZNK10OpenAutoIt10Diagnostic12IsFatalErrorEv:
   57|   354k|{
   58|   354k|    return m_Level == DiagnosticLevel::FatalError;
   59|   354k|}
_ZNK10OpenAutoIt10Diagnostic14IsErrorOrFatalEv:
   62|   207k|{
   63|   207k|    return IsError() || IsFatalError();
  ------------------
  |  Branch (63:12): [True: 61.1k, False: 146k]
  |  Branch (63:25): [True: 0, False: 146k]
  ------------------
   64|   207k|}
_ZN10OpenAutoIt10Diagnostic7AddNoteEOS0_:
   93|    370|{
   94|    370|    PHI_ASSERT(note.IsNote());
   95|       |
   96|    370|    m_Notes.emplace_back(note);
   97|    370|}

_ZN10OpenAutoIt17DiagnosticBuilderC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
   11|   207k|{}
_ZN10OpenAutoIt17DiagnosticBuilderD2Ev:
   14|   207k|{
   15|   207k|    for (auto& diagnostic : m_Diagnostics)
  ------------------
  |  Branch (15:27): [True: 207k, False: 207k]
  ------------------
   16|   207k|    {
   17|   207k|        m_DiagnosticEngine->Report(diagnostic);
   18|   207k|    }
   19|   207k|}

_ZN10OpenAutoIt16DiagnosticEngineC2Ev:
   12|  11.5k|{}
_ZNK10OpenAutoIt16DiagnosticEngine13GetErrorLimitEv:
   29|   625k|{
   30|   625k|    return m_ErrorLimit;
   31|   625k|}
_ZNK10OpenAutoIt16DiagnosticEngine21HasFatalErrorOccurredEv:
   44|   625k|{
   45|   625k|    return m_FatalErrorOccurred;
   46|   625k|}
_ZN10OpenAutoIt16DiagnosticEngine6ReportENS_10DiagnosticE:
   69|   207k|{
   70|   207k|    PHI_ASSERT(!diagnostic.IsNote());
   71|       |
   72|   207k|    if (m_IgnoreAllWarnings)
  ------------------
  |  Branch (72:9): [True: 0, False: 207k]
  ------------------
   73|      0|    {
   74|      0|        diagnostic.IgnoreWarning();
   75|      0|    }
   76|       |
   77|   207k|    if (m_WarningsAsError)
  ------------------
  |  Branch (77:9): [True: 0, False: 207k]
  ------------------
   78|      0|    {
   79|      0|        diagnostic.UpgradeWarningToError();
   80|      0|    }
   81|       |
   82|   207k|    if (diagnostic.IsErrorOrFatal())
  ------------------
  |  Branch (82:9): [True: 61.1k, False: 146k]
  ------------------
   83|  61.1k|    {
   84|  61.1k|        m_ErrorOccurred = true;
   85|  61.1k|        ++m_NumberOfErrors;
   86|  61.1k|    }
   87|       |
   88|   207k|    if (diagnostic.IsFatalError())
  ------------------
  |  Branch (88:9): [True: 0, False: 207k]
  ------------------
   89|      0|    {
   90|      0|        m_FatalErrorOccurred = true;
   91|      0|    }
   92|       |
   93|   207k|    if (diagnostic.IsWarning())
  ------------------
  |  Branch (93:9): [True: 146k, False: 61.1k]
  ------------------
   94|   146k|    {
   95|   146k|        ++m_NumberOfWarnings;
   96|   146k|    }
   97|       |
   98|   207k|    if (m_Consumer)
  ------------------
  |  Branch (98:9): [True: 0, False: 207k]
  ------------------
   99|      0|    {
  100|      0|        m_Consumer->Report(diagnostic);
  101|      0|    }
  102|   207k|}

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  160|  41.8k|{
  161|  41.8k|    static constexpr auto map =
  162|  41.8k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  163|  41.8k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  164|       |
  165|  41.8k|    std::string str{token.begin(), token.end()};
  166|  41.8k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  167|       |
  168|  41.8k|    return map.at(phi::string_view(str.c_str(), str.size()));
  169|  41.8k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  186|  9.19k|{
  187|  9.19k|    static constexpr auto map =
  188|  9.19k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  189|  9.19k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  190|       |
  191|  9.19k|    std::string str{token.begin(), token.end()};
  192|  9.19k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  193|       |
  194|  9.19k|    return map.at(phi::string_view(str.c_str(), str.size()));
  195|  9.19k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  662|   631k|{
  663|   631k|    static constexpr auto keyword_map =
  664|   631k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  665|   631k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  666|   631k|    static constexpr auto builtin_map =
  667|   631k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  668|   631k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  669|       |
  670|   631k|    std::string str{token.begin(), token.end()};
  671|   631k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  672|       |
  673|   631k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  674|       |
  675|   631k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  676|   631k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (676:9): [True: 402k, False: 229k]
  ------------------
  677|   402k|    {
  678|   402k|        return builtin_map.at(string);
  679|   402k|    }
  680|       |
  681|   229k|    return keyword;
  682|   631k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  707|   476k|{
  708|   476k|    static constexpr auto map =
  709|   476k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  710|   476k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  711|       |
  712|   476k|    return map.at(token);
  713|   476k|}
_ZN10OpenAutoIt5LexerC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
  778|  11.5k|{}
_ZN10OpenAutoIt5Lexer5ResetEv:
  781|  11.5k|{
  782|  11.5k|    m_Iterator = m_Source.begin();
  783|       |
  784|  11.5k|    m_InsideMultiLineComment = false;
  785|       |
  786|  11.5k|    m_LineNumber = 1u;
  787|  11.5k|    m_Column     = 1u;
  788|  11.5k|}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  791|  10.5M|{
  792|  10.5M|    return m_Iterator == m_Source.end();
  793|  10.5M|}
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  796|  3.00M|{
  797|  3.70M|    while (!IsFinished())
  ------------------
  |  Branch (797:12): [True: 3.70M, False: 1.88k]
  ------------------
  798|  3.70M|    {
  799|  3.70M|        char current_character = *m_Iterator;
  800|       |
  801|       |        /* null character */
  802|       |
  803|  3.70M|        if (current_character == '\0')
  ------------------
  |  Branch (803:13): [True: 146k, False: 3.55M]
  ------------------
  804|   146k|        {
  805|   146k|            Diag().Warning(DiagnosticId::NullCharacter, CurrentSourceLocation());
  806|       |
  807|   146k|            SkipCurrentCharacter();
  808|   146k|        }
  809|       |
  810|       |        /* Multiline comments */
  811|       |
  812|  3.55M|        else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (812:18): [True: 950, False: 3.55M]
  ------------------
  813|    950|        {
  814|    950|            iterator       begin_of_multiline_comment            = m_Iterator;
  815|    950|            const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  816|    950|            const phi::u64 beginning_column_of_multiline_comment = m_Column;
  817|       |
  818|  3.27k|            while (!IsFinished())
  ------------------
  |  Branch (818:20): [True: 3.20k, False: 64]
  ------------------
  819|  3.20k|            {
  820|  3.20k|                current_character = *m_Iterator;
  821|       |
  822|       |                // Check for end comment multiline
  823|  3.20k|                if (current_character == '#')
  ------------------
  |  Branch (823:21): [True: 1.15k, False: 2.05k]
  ------------------
  824|  1.15k|                {
  825|  1.15k|                    iterator begin_of_token = m_Iterator;
  826|  1.15k|                    ConsumeCurrentCharacter();
  827|       |
  828|  5.17k|                    while (!IsFinished())
  ------------------
  |  Branch (828:28): [True: 5.12k, False: 52]
  ------------------
  829|  5.12k|                    {
  830|  5.12k|                        current_character = *m_Iterator;
  831|       |
  832|  5.12k|                        if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (832:29): [True: 4.02k, False: 1.10k]
  ------------------
  833|  4.02k|                        {
  834|  4.02k|                            ConsumeCurrentCharacter();
  835|  4.02k|                            continue;
  836|  4.02k|                        }
  837|       |
  838|  1.10k|                        break;
  839|  5.12k|                    }
  840|       |
  841|  1.15k|                    const TokenKind pre_processor_token_kind =
  842|  1.15k|                            lookup_pre_processor(TokenText(begin_of_token));
  843|       |
  844|  1.15k|                    if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (844:25): [True: 886, False: 268]
  ------------------
  845|    886|                    {
  846|    886|                        m_InsideMultiLineComment = false;
  847|       |
  848|       |                        // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  849|    886|                        m_Iterator -= TokenText(begin_of_token).length().unsafe();
  850|       |
  851|    886|                        Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  852|    886|                                    BuildSourceLocation(beginning_line_of_multiline_comment,
  853|    886|                                                        beginning_column_of_multiline_comment)};
  854|       |
  855|    886|                        return token;
  856|    886|                    }
  857|  1.15k|                }
  858|  2.05k|                else if (current_character == '\n')
  ------------------
  |  Branch (858:26): [True: 377, False: 1.67k]
  ------------------
  859|    377|                {
  860|    377|                    ConsumeCurrentCharacter();
  861|    377|                    AdvanceToNextLine();
  862|    377|                }
  863|  1.67k|                else
  864|  1.67k|                {
  865|       |                    // Otherwise simply consume the character
  866|  1.67k|                    ConsumeCurrentCharacter();
  867|  1.67k|                    m_Column += 1u;
  868|  1.67k|                }
  869|  3.20k|            }
  870|    950|        }
  871|       |
  872|       |        /* Skip characters */
  873|       |
  874|  3.55M|        else if (is_skip_character(current_character))
  ------------------
  |  Branch (874:18): [True: 148k, False: 3.40M]
  ------------------
  875|   148k|        {
  876|   148k|            SkipCurrentCharacter();
  877|   148k|        }
  878|       |
  879|       |        /* New Lines */
  880|       |
  881|  3.40M|        else if (current_character == '\n')
  ------------------
  |  Branch (881:18): [True: 106k, False: 3.30M]
  ------------------
  882|   106k|        {
  883|   106k|            Token new_line_token = ConstructToken(TokenKind::NewLine);
  884|       |
  885|   106k|            ConsumeCurrentCharacter();
  886|   106k|            AdvanceToNextLine();
  887|       |
  888|   106k|            return new_line_token;
  889|   106k|        }
  890|       |
  891|       |        /* Comment */
  892|       |
  893|  3.30M|        else if (current_character == ';')
  ------------------
  |  Branch (893:18): [True: 1.29k, False: 3.30M]
  ------------------
  894|  1.29k|        {
  895|  1.29k|            iterator begin_of_token = m_Iterator;
  896|  1.29k|            ConsumeCurrentCharacter();
  897|       |
  898|  4.36k|            while (!IsFinished())
  ------------------
  |  Branch (898:20): [True: 4.30k, False: 58]
  ------------------
  899|  4.30k|            {
  900|  4.30k|                current_character = *m_Iterator;
  901|       |
  902|  4.30k|                if (current_character != '\n')
  ------------------
  |  Branch (902:21): [True: 3.06k, False: 1.24k]
  ------------------
  903|  3.06k|                {
  904|  3.06k|                    ConsumeCurrentCharacter();
  905|  3.06k|                    continue;
  906|  3.06k|                }
  907|       |
  908|  1.24k|                break;
  909|  4.30k|            }
  910|       |
  911|  1.29k|            return ConstructToken(TokenKind::Comment, begin_of_token);
  912|  1.29k|        }
  913|       |
  914|       |        /* Macros */
  915|       |
  916|  3.30M|        else if (current_character == '@')
  ------------------
  |  Branch (916:18): [True: 41.8k, False: 3.25M]
  ------------------
  917|  41.8k|        {
  918|  41.8k|            iterator begin_of_token = m_Iterator;
  919|  41.8k|            ConsumeCurrentCharacter();
  920|       |
  921|   186k|            while (!IsFinished())
  ------------------
  |  Branch (921:20): [True: 185k, False: 345]
  ------------------
  922|   185k|            {
  923|   185k|                current_character = *m_Iterator;
  924|       |
  925|   185k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (925:21): [True: 144k, False: 41.5k]
  ------------------
  926|   144k|                {
  927|   144k|                    ConsumeCurrentCharacter();
  928|   144k|                    continue;
  929|   144k|                }
  930|       |
  931|  41.5k|                break;
  932|   185k|            }
  933|       |
  934|       |            // Emit token
  935|  41.8k|            return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  936|  41.8k|        }
  937|       |
  938|       |        /* Variable identifier */
  939|       |
  940|  3.25M|        else if (current_character == '$')
  ------------------
  |  Branch (940:18): [True: 145k, False: 3.11M]
  ------------------
  941|   145k|        {
  942|   145k|            iterator     begin_of_token = m_Iterator;
  943|   145k|            phi::boolean parsed_something{false};
  944|   145k|            ConsumeCurrentCharacter();
  945|       |
  946|   321k|            while (!IsFinished())
  ------------------
  |  Branch (946:20): [True: 320k, False: 1.12k]
  ------------------
  947|   320k|            {
  948|   320k|                current_character = *m_Iterator;
  949|       |
  950|   320k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (950:21): [True: 175k, False: 144k]
  ------------------
  951|   175k|                {
  952|   175k|                    ConsumeCurrentCharacter();
  953|   175k|                    parsed_something = true;
  954|   175k|                    continue;
  955|   175k|                }
  956|       |
  957|   144k|                break;
  958|   320k|            }
  959|       |
  960|       |            // Ensure that '$' is not a valid variable identifier
  961|   145k|            if (!parsed_something)
  ------------------
  |  Branch (961:17): [True: 15.8k, False: 129k]
  ------------------
  962|  15.8k|            {
  963|  15.8k|                return ConstructToken(TokenKind::Garbage, begin_of_token);
  964|  15.8k|            }
  965|       |
  966|       |            // Emit Token
  967|   129k|            return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  968|   145k|        }
  969|       |
  970|       |        /* PreProcessor directive */
  971|       |
  972|  3.11M|        else if (current_character == '#')
  ------------------
  |  Branch (972:18): [True: 8.03k, False: 3.10M]
  ------------------
  973|  8.03k|        {
  974|  8.03k|            iterator begin_of_token = m_Iterator;
  975|  8.03k|            ConsumeCurrentCharacter();
  976|       |
  977|  76.2k|            while (!IsFinished())
  ------------------
  |  Branch (977:20): [True: 76.0k, False: 207]
  ------------------
  978|  76.0k|            {
  979|  76.0k|                current_character = *m_Iterator;
  980|       |
  981|  76.0k|                if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (981:21): [True: 68.1k, False: 7.83k]
  ------------------
  982|  68.1k|                {
  983|  68.1k|                    ConsumeCurrentCharacter();
  984|  68.1k|                    continue;
  985|  68.1k|                }
  986|       |
  987|  7.83k|                break;
  988|  76.0k|            }
  989|       |
  990|       |            // Check for start of multiline comment
  991|  8.03k|            const TokenKind pre_processor_token_kind =
  992|  8.03k|                    lookup_pre_processor(TokenText(begin_of_token));
  993|       |
  994|  8.03k|            if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (994:17): [True: 966, False: 7.07k]
  ------------------
  995|    966|            {
  996|    966|                m_InsideMultiLineComment = true;
  997|    966|            }
  998|       |
  999|  8.03k|            return ConstructToken(pre_processor_token_kind, begin_of_token);
 1000|  8.03k|        }
 1001|       |
 1002|       |        /* SingleQuoteStringLiteral */
 1003|       |
 1004|  3.10M|        else if (current_character == '\'')
  ------------------
  |  Branch (1004:18): [True: 17.9k, False: 3.08M]
  ------------------
 1005|  17.9k|        {
 1006|  17.9k|            iterator     begin_of_token = m_Iterator;
 1007|  17.9k|            phi::boolean did_terminate  = false;
 1008|  17.9k|            ConsumeCurrentCharacter();
 1009|       |
 1010|  26.2k|            while (!IsFinished())
  ------------------
  |  Branch (1010:20): [True: 26.1k, False: 163]
  ------------------
 1011|  26.1k|            {
 1012|  26.1k|                current_character = *m_Iterator;
 1013|  26.1k|                ConsumeCurrentCharacter();
 1014|       |
 1015|  26.1k|                if (current_character == '\'')
  ------------------
  |  Branch (1015:21): [True: 17.8k, False: 8.32k]
  ------------------
 1016|  17.8k|                {
 1017|  17.8k|                    did_terminate = true;
 1018|  17.8k|                    break;
 1019|  17.8k|                }
 1020|  26.1k|            }
 1021|       |
 1022|  17.9k|            if (did_terminate)
  ------------------
  |  Branch (1022:17): [True: 17.8k, False: 163]
  ------------------
 1023|  17.8k|            {
 1024|  17.8k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1025|  17.8k|            }
 1026|       |
 1027|       |            // TODO: Warn unterminated string literal
 1028|  17.9k|        }
 1029|       |
 1030|       |        /* DoubleQuoteStringLiteral */
 1031|       |
 1032|  3.08M|        else if (current_character == '\"')
  ------------------
  |  Branch (1032:18): [True: 19.0k, False: 3.06M]
  ------------------
 1033|  19.0k|        {
 1034|  19.0k|            iterator     begin_of_token = m_Iterator;
 1035|  19.0k|            phi::boolean did_terminate  = false;
 1036|  19.0k|            ConsumeCurrentCharacter();
 1037|       |
 1038|  74.1k|            while (!IsFinished())
  ------------------
  |  Branch (1038:20): [True: 73.9k, False: 239]
  ------------------
 1039|  73.9k|            {
 1040|  73.9k|                current_character = *m_Iterator;
 1041|  73.9k|                ConsumeCurrentCharacter();
 1042|       |
 1043|  73.9k|                if (current_character == '\"')
  ------------------
  |  Branch (1043:21): [True: 18.8k, False: 55.0k]
  ------------------
 1044|  18.8k|                {
 1045|  18.8k|                    did_terminate = true;
 1046|  18.8k|                    break;
 1047|  18.8k|                }
 1048|  73.9k|            }
 1049|       |
 1050|  19.0k|            if (did_terminate)
  ------------------
  |  Branch (1050:17): [True: 18.8k, False: 239]
  ------------------
 1051|  18.8k|            {
 1052|  18.8k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1053|  18.8k|            }
 1054|  19.0k|        }
 1055|       |
 1056|       |        /* Number Literals - IntegerLiteral/FloatLiteral */
 1057|       |
 1058|  3.06M|        else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1058:18): [True: 434k, False: 2.63M]
  |  Branch (1058:18): [True: 470k, False: 2.59M]
  |  Branch (1058:54): [True: 35.5k, False: 2.59M]
  ------------------
 1059|   470k|        {
 1060|   470k|            const phi::boolean start_with_zero{current_character == '0'};
 1061|   470k|            phi::boolean       parsing_hex{false};
 1062|   470k|            phi::boolean       parsing_float{current_character == '.'};
 1063|       |
 1064|   470k|            iterator begin_of_token = m_Iterator;
 1065|   470k|            ConsumeCurrentCharacter();
 1066|       |
 1067|   808k|            while (!IsFinished())
  ------------------
  |  Branch (1067:20): [True: 807k, False: 1.63k]
  ------------------
 1068|   807k|            {
 1069|   807k|                current_character = *m_Iterator;
 1070|       |
 1071|       |                // Is the second character
 1072|   807k|                if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1072:21): [True: 468k, False: 338k]
  |  Branch (1072:58): [True: 158k, False: 310k]
  ------------------
 1073|   158k|                {
 1074|       |                    // Hex character
 1075|   158k|                    if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1075:25): [True: 1.35k, False: 156k]
  |  Branch (1075:53): [True: 5.25k, False: 151k]
  ------------------
 1076|  6.61k|                    {
 1077|  6.61k|                        parsing_hex = true;
 1078|  6.61k|                        ConsumeCurrentCharacter();
 1079|  6.61k|                        continue;
 1080|  6.61k|                    }
 1081|   158k|                }
 1082|       |
 1083|       |                // Actually parsing
 1084|   800k|                if (parsing_hex)
  ------------------
  |  Branch (1084:21): [True: 32.7k, False: 767k]
  ------------------
 1085|  32.7k|                {
 1086|  32.7k|                    if (parsing_float)
  ------------------
  |  Branch (1086:25): [True: 0, False: 32.7k]
  ------------------
 1087|      0|                    {
 1088|       |                        // TODO: Fix include and enable this warning
 1089|       |                        //Diag().Error(DiagnosticId::FloatHexLiteral, CurrentSourceLocation());
 1090|       |
 1091|      0|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1092|      0|                    }
 1093|       |
 1094|  32.7k|                    if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1094:25): [True: 26.2k, False: 6.50k]
  ------------------
 1095|  26.2k|                    {
 1096|  26.2k|                        ConsumeCurrentCharacter();
 1097|  26.2k|                        continue;
 1098|  26.2k|                    }
 1099|  32.7k|                }
 1100|   767k|                else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1100:26): [True: 294k, False: 473k]
  ------------------
 1101|   294k|                {
 1102|   294k|                    ConsumeCurrentCharacter();
 1103|   294k|                    continue;
 1104|   294k|                }
 1105|       |                // Literal dot
 1106|   473k|                else if (current_character == '.')
  ------------------
  |  Branch (1106:26): [True: 17.1k, False: 456k]
  ------------------
 1107|  17.1k|                {
 1108|  17.1k|                    if (parsing_float)
  ------------------
  |  Branch (1108:25): [True: 6.04k, False: 11.1k]
  ------------------
 1109|  6.04k|                    {
 1110|       |                        //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1111|       |
 1112|  6.04k|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1113|  6.04k|                    }
 1114|       |
 1115|  11.1k|                    parsing_float = true;
 1116|  11.1k|                    ConsumeCurrentCharacter();
 1117|  11.1k|                    continue;
 1118|  17.1k|                }
 1119|       |
 1120|   462k|                break;
 1121|   800k|            }
 1122|       |
 1123|   464k|            if (parsing_float)
  ------------------
  |  Branch (1123:17): [True: 40.6k, False: 423k]
  ------------------
 1124|  40.6k|            {
 1125|       |                // Were not allowed to end with a dot
 1126|       |                // TODO: This is very hacky and looks nasty
 1127|  40.6k|                if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1127:21): [True: 16.4k, False: 24.1k]
  ------------------
 1128|  16.4k|                {
 1129|       |                    //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1130|       |
 1131|  16.4k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
 1132|  16.4k|                }
 1133|       |
 1134|  24.1k|                return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1135|  40.6k|            }
 1136|       |
 1137|   423k|            return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1138|   464k|        }
 1139|       |
 1140|       |        /* Operators */
 1141|       |
 1142|  2.59M|        else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1142:18): [True: 284k, False: 2.31M]
  ------------------
 1143|   284k|        {
 1144|   284k|            iterator begin_of_token = m_Iterator;
 1145|   284k|            ConsumeCurrentCharacter();
 1146|       |
 1147|   284k|            if (!IsFinished())
  ------------------
  |  Branch (1147:17): [True: 283k, False: 993]
  ------------------
 1148|   283k|            {
 1149|   283k|                if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1149:21): [True: 5.43k, False: 277k]
  |  Branch (1149:44): [True: 11.8k, False: 265k]
  |  Branch (1149:70): [True: 766, False: 11.0k]
  ------------------
 1150|  6.19k|                {
 1151|       |                    // We have an actual two part operator
 1152|  6.19k|                    ConsumeCurrentCharacter();
 1153|  6.19k|                }
 1154|   283k|            }
 1155|       |
 1156|   284k|            return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1157|   284k|        }
 1158|       |
 1159|  2.31M|        else if (is_single_operator(current_character))
  ------------------
  |  Branch (1159:18): [True: 192k, False: 2.12M]
  ------------------
 1160|   192k|        {
 1161|   192k|            Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1162|       |
 1163|   192k|            ConsumeCurrentCharacter();
 1164|       |
 1165|   192k|            return token;
 1166|   192k|        }
 1167|       |
 1168|       |        /* Punctioation */
 1169|       |
 1170|  2.12M|        else if (current_character == ',')
  ------------------
  |  Branch (1170:18): [True: 16.1k, False: 2.10M]
  ------------------
 1171|  16.1k|        {
 1172|  16.1k|            Token token = ConstructToken(TokenKind::Comma);
 1173|       |
 1174|  16.1k|            ConsumeCurrentCharacter();
 1175|       |
 1176|  16.1k|            return token;
 1177|  16.1k|        }
 1178|       |
 1179|  2.10M|        else if (current_character == '(')
  ------------------
  |  Branch (1179:18): [True: 205k, False: 1.90M]
  ------------------
 1180|   205k|        {
 1181|   205k|            Token token = ConstructToken(TokenKind::LParen);
 1182|       |
 1183|   205k|            ConsumeCurrentCharacter();
 1184|       |
 1185|   205k|            return token;
 1186|   205k|        }
 1187|       |
 1188|  1.90M|        else if (current_character == ')')
  ------------------
  |  Branch (1188:18): [True: 114k, False: 1.78M]
  ------------------
 1189|   114k|        {
 1190|   114k|            Token token = ConstructToken(TokenKind::RParen);
 1191|       |
 1192|   114k|            ConsumeCurrentCharacter();
 1193|       |
 1194|   114k|            return token;
 1195|   114k|        }
 1196|       |
 1197|  1.78M|        else if (current_character == '.')
  ------------------
  |  Branch (1197:18): [True: 0, False: 1.78M]
  ------------------
 1198|      0|        {
 1199|      0|            Token token = ConstructToken(TokenKind::Dot);
 1200|       |
 1201|      0|            ConsumeCurrentCharacter();
 1202|       |
 1203|      0|            return token;
 1204|      0|        }
 1205|       |
 1206|  1.78M|        else if (current_character == '[')
  ------------------
  |  Branch (1206:18): [True: 701k, False: 1.08M]
  ------------------
 1207|   701k|        {
 1208|   701k|            Token token = ConstructToken(TokenKind::LSquare);
 1209|       |
 1210|   701k|            ConsumeCurrentCharacter();
 1211|       |
 1212|   701k|            return token;
 1213|   701k|        }
 1214|       |
 1215|  1.08M|        else if (current_character == ']')
  ------------------
  |  Branch (1215:18): [True: 48.9k, False: 1.03M]
  ------------------
 1216|  48.9k|        {
 1217|  48.9k|            Token token = ConstructToken(TokenKind::RSquare);
 1218|       |
 1219|  48.9k|            ConsumeCurrentCharacter();
 1220|       |
 1221|  48.9k|            return token;
 1222|  48.9k|        }
 1223|       |
 1224|       |        /* Identifier */
 1225|       |
 1226|  1.03M|        else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1226:18): [True: 631k, False: 404k]
  ------------------
 1227|   631k|        {
 1228|   631k|            iterator begin_of_token = m_Iterator;
 1229|   631k|            ConsumeCurrentCharacter();
 1230|       |
 1231|  2.02M|            while (!IsFinished())
  ------------------
  |  Branch (1231:20): [True: 2.01M, False: 3.25k]
  ------------------
 1232|  2.01M|            {
 1233|  2.01M|                current_character = *m_Iterator;
 1234|       |
 1235|  2.01M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1235:21): [True: 1.39M, False: 628k]
  ------------------
 1236|  1.39M|                {
 1237|  1.39M|                    ConsumeCurrentCharacter();
 1238|  1.39M|                    continue;
 1239|  1.39M|                }
 1240|       |
 1241|   628k|                break;
 1242|  2.01M|            }
 1243|       |
 1244|   631k|            return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1245|   631k|        }
 1246|       |
 1247|       |        /* Unknown/Unexpected character */
 1248|       |
 1249|   404k|        else
 1250|   404k|        {
 1251|       |            // TODO: Warn unexpected character encountered
 1252|   404k|            SkipCurrentCharacter();
 1253|   404k|        }
 1254|  3.70M|    }
 1255|       |
 1256|  1.88k|    return {};
 1257|  3.00M|}
_ZN10OpenAutoIt5Lexer13ProcessStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEES6_:
 1260|  11.5k|{
 1261|  11.5k|    SourceFile fake_source{SourceFile::Type::Basic, file_name.data(), source};
 1262|       |
 1263|  11.5k|    return ProcessFile(&fake_source);
 1264|  11.5k|}
_ZN10OpenAutoIt5Lexer11ProcessFileEN3phi21not_null_observer_ptrIKNS_10SourceFileEEE:
 1267|  11.5k|{
 1268|  11.5k|    TokenStream stream;
 1269|       |
 1270|  11.5k|    m_SourceFile = source_file;
 1271|  11.5k|    m_Source     = m_SourceFile->m_Content;
 1272|  11.5k|    Reset();
 1273|       |
 1274|  3.01M|    while (!IsFinished())
  ------------------
  |  Branch (1274:12): [True: 3.00M, False: 11.5k]
  ------------------
 1275|  3.00M|    {
 1276|  3.00M|        phi::optional<Token> maybe_token = GetNextToken();
 1277|       |
 1278|  3.00M|        if (maybe_token.has_value())
  ------------------
  |  Branch (1278:13): [True: 3.00M, False: 1.88k]
  ------------------
 1279|  3.00M|        {
 1280|  3.00M|            stream.emplace_back(maybe_token.value());
 1281|  3.00M|        }
 1282|  3.00M|    }
 1283|       |
 1284|  11.5k|    stream.finalize();
 1285|  11.5k|    return stream;
 1286|  11.5k|}
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1289|  5.93M|{
 1290|  5.93M|    ++m_Iterator;
 1291|  5.93M|}
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1294|   106k|{
 1295|   106k|    ++m_LineNumber;
 1296|   106k|    m_Column = 1u;
 1297|   106k|}
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1300|   699k|{
 1301|   699k|    ConsumeCurrentCharacter();
 1302|   699k|    ++m_Column;
 1303|   699k|}
_ZN10OpenAutoIt5Lexer4DiagEv:
 1306|   146k|{
 1307|   146k|    return DiagnosticBuilder{m_DiagnosticEngine};
 1308|   146k|}
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   37|  41.8k|    {
   38|  41.8k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  41.8k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  41.8k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 12.8k, False: 28.9k]
  ------------------
   42|  12.8k|        {
   43|  12.8k|            return itr->second;
   44|  12.8k|        }
   45|       |
   46|  28.9k|        return m_Default;
   47|  41.8k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  3.49M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   37|  9.19k|    {
   38|  9.19k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  9.19k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  9.19k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 5.34k, False: 3.84k]
  ------------------
   42|  5.34k|        {
   43|  5.34k|            return itr->second;
   44|  5.34k|        }
   45|       |
   46|  3.84k|        return m_Default;
   47|  9.19k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  60.7k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   37|   402k|    {
   38|   402k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   402k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   402k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 9.38k, False: 392k]
  ------------------
   42|  9.38k|        {
   43|  9.38k|            return itr->second;
   44|  9.38k|        }
   45|       |
   46|   392k|        return m_Default;
   47|   402k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   159M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   37|   631k|    {
   38|   631k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   631k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   631k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 229k, False: 402k]
  ------------------
   42|   229k|        {
   43|   229k|            return itr->second;
   44|   229k|        }
   45|       |
   46|   402k|        return m_Default;
   47|   631k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  23.3M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   37|   476k|    {
   38|   476k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   476k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   476k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 476k, False: 0]
  ------------------
   42|   476k|        {
   43|   476k|            return itr->second;
   44|   476k|        }
   45|       |
   46|      0|        return m_Default;
   47|   476k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  5.75M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  736|  81.1k|{
  737|  81.1k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (737:12): [True: 71.4k, False: 9.69k]
  |  Branch (737:40): [True: 763, False: 8.93k]
  ------------------
  738|  81.1k|}
_Z17is_skip_characterc:
  716|  3.55M|{
  717|  3.55M|    switch (c)
  718|  3.55M|    {
  719|   136k|        case ' ':
  ------------------
  |  Branch (719:9): [True: 136k, False: 3.42M]
  ------------------
  720|   139k|        case '\v':
  ------------------
  |  Branch (720:9): [True: 2.56k, False: 3.55M]
  ------------------
  721|   142k|        case '\t':
  ------------------
  |  Branch (721:9): [True: 3.21k, False: 3.55M]
  ------------------
  722|   147k|        case '\b':
  ------------------
  |  Branch (722:9): [True: 4.55k, False: 3.55M]
  ------------------
  723|   148k|        case '\f':
  ------------------
  |  Branch (723:9): [True: 1.50k, False: 3.55M]
  ------------------
  724|   148k|            return true;
  725|  3.40M|        default:
  ------------------
  |  Branch (725:9): [True: 3.40M, False: 148k]
  ------------------
  726|  3.40M|            return false;
  727|  3.55M|    }
  728|  3.55M|}
_Z24is_valid_identifier_charc:
  731|  3.56M|{
  732|  3.56M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (732:12): [True: 2.33M, False: 1.22M]
  |  Branch (732:40): [True: 8.24k, False: 1.21M]
  ------------------
  733|  3.56M|}
_Z20is_two_part_operatorc:
  741|  2.59M|{
  742|  2.59M|    switch (c)
  743|  2.59M|    {
  744|  84.0k|        case '=':
  ------------------
  |  Branch (744:9): [True: 84.0k, False: 2.51M]
  ------------------
  745|   140k|        case '+':
  ------------------
  |  Branch (745:9): [True: 56.4k, False: 2.54M]
  ------------------
  746|   216k|        case '-':
  ------------------
  |  Branch (746:9): [True: 76.3k, False: 2.52M]
  ------------------
  747|   234k|        case '*':
  ------------------
  |  Branch (747:9): [True: 17.5k, False: 2.58M]
  ------------------
  748|   261k|        case '/':
  ------------------
  |  Branch (748:9): [True: 27.6k, False: 2.57M]
  ------------------
  749|   266k|        case '&':
  ------------------
  |  Branch (749:9): [True: 4.26k, False: 2.59M]
  ------------------
  750|   278k|        case '<':
  ------------------
  |  Branch (750:9): [True: 12.4k, False: 2.58M]
  ------------------
  751|   284k|        case '>':
  ------------------
  |  Branch (751:9): [True: 5.41k, False: 2.59M]
  ------------------
  752|   284k|            return true;
  753|       |
  754|  2.31M|        default:
  ------------------
  |  Branch (754:9): [True: 2.31M, False: 284k]
  ------------------
  755|  2.31M|            return false;
  756|  2.59M|    }
  757|  2.59M|}
_Z18is_single_operatorc:
  760|  2.31M|{
  761|  2.31M|    switch (c)
  762|  2.31M|    {
  763|  1.36k|        case '^':
  ------------------
  |  Branch (763:9): [True: 1.36k, False: 2.31M]
  ------------------
  764|  96.2k|        case '?':
  ------------------
  |  Branch (764:9): [True: 94.9k, False: 2.21M]
  ------------------
  765|   192k|        case ':':
  ------------------
  |  Branch (765:9): [True: 95.9k, False: 2.21M]
  ------------------
  766|   192k|            return true;
  767|       |
  768|  2.12M|        default:
  ------------------
  |  Branch (768:9): [True: 2.12M, False: 192k]
  ------------------
  769|  2.12M|            return false;
  770|  2.31M|    }
  771|  2.31M|}

_ZN10OpenAutoIt6ParserC2EN3phi21not_null_observer_ptrINS_13SourceManagerEEENS2_INS_16DiagnosticEngineEEENS2_INS_5LexerEEE:
  135|  11.5k|{}
_ZN10OpenAutoIt6Parser16ParseTokenStreamEN3phi21not_null_observer_ptrINS_11ASTDocumentEEEONS_11TokenStreamENS2_IKNS_10SourceFileEEE:
  140|  11.5k|{
  141|  11.5k|    PushParsingContext(phi::move(source_file), phi::move(stream));
  142|       |
  143|  11.5k|    ParseDocument(phi::move(document));
  144|  11.5k|}
_ZN10OpenAutoIt6Parser11ParseStringEN3phi21not_null_observer_ptrINS_11ASTDocumentEEENS1_17basic_string_viewIcNSt3__111char_traitsIcEEEES9_:
  148|  11.5k|{
  149|  11.5k|    TokenStream stream = m_Lexer->ProcessString(file_name, source);
  150|       |
  151|  11.5k|    SourceFile fake_source_file{SourceFile::Type::Basic, std::string_view(file_name),
  152|  11.5k|                                phi::move(source)};
  153|  11.5k|    ParseTokenStream(phi::move(document), phi::move(stream), &fake_source_file);
  154|  11.5k|}
_ZN10OpenAutoIt6Parser13ParseDocumentEN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
  174|  11.5k|{
  175|  11.5k|    m_Document = phi::move(document);
  176|       |
  177|  11.5k|    m_IncludeOnceFiles.clear();
  178|       |
  179|   625k|    while (ShouldContinueParsing())
  ------------------
  |  Branch (179:12): [True: 614k, False: 11.5k]
  ------------------
  180|   614k|    {
  181|   614k|        if (!CurrentTokenStream().has_more())
  ------------------
  |  Branch (181:13): [True: 11.5k, False: 602k]
  ------------------
  182|  11.5k|        {
  183|  11.5k|            PopParsingContext();
  184|  11.5k|            continue;
  185|  11.5k|        }
  186|       |
  187|   602k|        const Token& token = CurrentToken();
  188|       |
  189|       |        // Parse global function definition
  190|   602k|        switch (token.GetTokenKind())
  191|   602k|        {
  192|  24.3k|            case TokenKind::KW_Func: {
  ------------------
  |  Branch (192:13): [True: 24.3k, False: 578k]
  ------------------
  193|  24.3k|                ConsumeCurrent();
  194|       |
  195|  24.3k|                auto function_definition = ParseFunctionDefinition();
  196|  24.3k|                if (!function_definition)
  ------------------
  |  Branch (196:21): [True: 22.9k, False: 1.40k]
  ------------------
  197|  22.9k|                {
  198|  22.9k|                    err("ERR: Failed to parse function definition!\n");
  199|  22.9k|                    continue;
  200|  22.9k|                }
  201|       |
  202|  1.40k|                AppendFunctionToDocument(function_definition.release_not_null());
  203|  1.40k|                break;
  204|  24.3k|            }
  205|       |
  206|    759|            case TokenKind::Comment:
  ------------------
  |  Branch (206:13): [True: 759, False: 601k]
  ------------------
  207|  1.27k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (207:13): [True: 516, False: 602k]
  ------------------
  208|  1.97k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (208:13): [True: 701, False: 601k]
  ------------------
  209|  29.0k|            case TokenKind::NewLine: {
  ------------------
  |  Branch (209:13): [True: 27.0k, False: 575k]
  ------------------
  210|       |                // Simply ignore and consume newlines and comments
  211|  29.0k|                ConsumeCurrent();
  212|  29.0k|                break;
  213|  1.97k|            }
  214|  10.7k|            case TokenKind::NotAToken: {
  ------------------
  |  Branch (214:13): [True: 10.7k, False: 591k]
  ------------------
  215|  10.7k|                err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  216|  10.7k|                                std::string_view(token.GetText())));
  217|  10.7k|                ConsumeCurrent();
  218|  10.7k|                break;
  219|  1.97k|            }
  220|       |
  221|  1.86k|            case TokenKind::PP_Include: {
  ------------------
  |  Branch (221:13): [True: 1.86k, False: 600k]
  ------------------
  222|  1.86k|                ConsumeCurrent();
  223|       |
  224|  1.86k|                ParseIncludeDirective();
  225|       |
  226|  1.86k|                break;
  227|  1.97k|            }
  228|       |
  229|    219|            case TokenKind::PP_IncludeOnce: {
  ------------------
  |  Branch (229:13): [True: 219, False: 602k]
  ------------------
  230|    219|                ConsumeCurrent();
  231|       |
  232|    219|                m_IncludeOnceFiles.emplace(CurrentSourceFile().get());
  233|       |
  234|    219|                RequireNewLine();
  235|       |
  236|    219|                break;
  237|  1.97k|            }
  238|       |
  239|   536k|            default: {
  ------------------
  |  Branch (239:13): [True: 536k, False: 66.1k]
  ------------------
  240|   536k|                auto statement = ParseStatement();
  241|   536k|                if (!statement)
  ------------------
  |  Branch (241:21): [True: 469k, False: 67.3k]
  ------------------
  242|   469k|                {
  243|       |                    // TODO: Proper error reporting
  244|   469k|                    err("ERR: Failed to parse statement!\n");
  245|       |
  246|   469k|                    if (HasMoreTokens())
  ------------------
  |  Branch (246:25): [True: 462k, False: 6.63k]
  ------------------
  247|   462k|                    {
  248|       |                        // Swallow the bad token
  249|   462k|                        ConsumeCurrent();
  250|   462k|                    }
  251|   469k|                    continue;
  252|   469k|                }
  253|       |
  254|  67.3k|                AppendStatementToDocument(statement.release_not_null());
  255|       |
  256|  67.3k|                RequireNewLine();
  257|  67.3k|                break;
  258|   536k|            }
  259|   602k|        }
  260|   602k|    }
  261|  11.5k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamE:
  265|  11.5k|{
  266|  11.5k|    PushParsingContext(phi::move(source_file), phi::move(token_stream), SourceLocation::Invalid());
  267|  11.5k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamENS_14SourceLocationE:
  271|  11.5k|{
  272|  11.5k|    ParsingContext context{.source_file   = phi::move(source_file),
  273|  11.5k|                           .token_stream  = phi::move(token_stream),
  274|  11.5k|                           .included_from = phi::move(included_from)};
  275|       |
  276|  11.5k|    m_ParsingContextStack.emplace(phi::move(context));
  277|  11.5k|    m_SourceManager->SetLocalSearchPath(source_file->m_FilePath.parent_path());
  278|  11.5k|}
_ZN10OpenAutoIt6Parser17PopParsingContextEv:
  281|  11.5k|{
  282|  11.5k|    m_ParsingContextStack.pop();
  283|  11.5k|    if (!m_ParsingContextStack.empty())
  ------------------
  |  Branch (283:9): [True: 0, False: 11.5k]
  ------------------
  284|      0|    {
  285|      0|        m_SourceManager->SetLocalSearchPath(
  286|      0|                m_ParsingContextStack.top().source_file->m_FilePath.parent_path());
  287|      0|    }
  288|  11.5k|    else
  289|  11.5k|    {
  290|  11.5k|        m_SourceManager->SetLocalSearchPath("");
  291|  11.5k|    }
  292|  11.5k|}
_ZN10OpenAutoIt6Parser21CurrentParsingContextEv:
  295|    219|{
  296|    219|    PHI_ASSERT(!m_ParsingContextStack.empty());
  297|       |
  298|    219|    return m_ParsingContextStack.top();
  299|    219|}
_ZN10OpenAutoIt6Parser17CurrentSourceFileEv:
  302|    219|{
  303|    219|    return CurrentParsingContext().source_file.not_null();
  304|    219|}
_ZN10OpenAutoIt6Parser18CurrentTokenStreamEv:
  307|  3.61M|{
  308|  3.61M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  309|       |
  310|  3.61M|    return m_ParsingContextStack.top().token_stream;
  311|  3.61M|}
_ZNK10OpenAutoIt6Parser18CurrentTokenStreamEv:
  314|  23.5M|{
  315|  23.5M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  316|       |
  317|  23.5M|    return m_ParsingContextStack.top().token_stream;
  318|  23.5M|}
_ZNK10OpenAutoIt6Parser13HasMoreTokensEv:
  321|  7.80M|{
  322|  7.80M|    return CurrentTokenStream().has_more();
  323|  7.80M|}
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  326|  7.83M|{
  327|  7.83M|    PHI_ASSERT(CurrentTokenStream().has_more());
  328|       |
  329|  7.83M|    return CurrentTokenStream().look_ahead();
  330|  7.83M|}
_ZNK10OpenAutoIt6Parser13PreviousTokenEv:
  333|  52.1k|{
  334|  52.1k|    return CurrentTokenStream().look_behind();
  335|  52.1k|}
_ZNK10OpenAutoIt6Parser21ShouldContinueParsingEv:
  338|   625k|{
  339|   625k|    const phi::boolean stack_empty          = m_ParsingContextStack.empty();
  340|   625k|    const phi::boolean fatal_error_occurred = m_DiagnosticEngine->HasFatalErrorOccurred();
  341|   625k|    const phi::boolean error_limit_reached =
  342|   625k|            (m_DiagnosticEngine->GetErrorLimit() == 0u ?
  ------------------
  |  Branch (342:14): [True: 625k, False: 0]
  ------------------
  343|   625k|                     false :
  344|   625k|                     m_DiagnosticEngine->GetNumberOfError() >= m_DiagnosticEngine->GetErrorLimit());
  345|       |
  346|   625k|    return !stack_empty && !fatal_error_occurred && !error_limit_reached;
  ------------------
  |  Branch (346:12): [True: 614k, False: 11.5k]
  |  Branch (346:28): [True: 614k, False: 0]
  |  Branch (346:53): [True: 614k, False: 0]
  ------------------
  347|   625k|}
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  350|  3.00M|{
  351|  3.00M|    CurrentTokenStream().consume();
  352|  3.00M|}
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  355|  67.5k|{
  356|  68.4k|    while (HasMoreTokens())
  ------------------
  |  Branch (356:12): [True: 67.7k, False: 697]
  ------------------
  357|  67.7k|    {
  358|  67.7k|        switch (CurrentToken().GetTokenKind())
  359|  67.7k|        {
  360|    483|            case TokenKind::Comment:
  ------------------
  |  Branch (360:13): [True: 483, False: 67.3k]
  ------------------
  361|    689|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (361:13): [True: 206, False: 67.5k]
  ------------------
  362|    944|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (362:13): [True: 255, False: 67.5k]
  ------------------
  363|    944|                ConsumeCurrent();
  364|    944|                break;
  365|       |
  366|  66.8k|            default:
  ------------------
  |  Branch (366:13): [True: 66.8k, False: 944]
  ------------------
  367|  66.8k|                return;
  368|  67.7k|        }
  369|  67.7k|    }
  370|  67.5k|}
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  373|   743k|{
  374|   761k|    while (HasMoreTokens())
  ------------------
  |  Branch (374:12): [True: 760k, False: 506]
  ------------------
  375|   760k|    {
  376|   760k|        switch (CurrentToken().GetTokenKind())
  377|   760k|        {
  378|    518|            case TokenKind::Comment:
  ------------------
  |  Branch (378:13): [True: 518, False: 760k]
  ------------------
  379|    712|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (379:13): [True: 194, False: 760k]
  ------------------
  380|    911|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (380:13): [True: 199, False: 760k]
  ------------------
  381|  17.9k|            case TokenKind::NewLine:
  ------------------
  |  Branch (381:13): [True: 17.0k, False: 743k]
  ------------------
  382|  17.9k|                ConsumeCurrent();
  383|  17.9k|                break;
  384|       |
  385|   742k|            default:
  ------------------
  |  Branch (385:13): [True: 742k, False: 17.9k]
  ------------------
  386|   742k|                return;
  387|   760k|        }
  388|   760k|    }
  389|   743k|}
_ZN10OpenAutoIt6Parser14RequireNewLineEv:
  392|  67.5k|{
  393|  67.5k|    ConsumeComments();
  394|       |
  395|  67.5k|    if (!HasMoreTokens())
  ------------------
  |  Branch (395:9): [True: 697, False: 66.8k]
  ------------------
  396|    697|    {
  397|    697|        return;
  398|    697|    }
  399|       |
  400|  66.8k|    const Token& token = CurrentToken();
  401|       |
  402|  66.8k|    if (token.GetTokenKind() != TokenKind::NewLine)
  ------------------
  |  Branch (402:9): [True: 51.7k, False: 15.0k]
  ------------------
  403|  51.7k|    {
  404|  51.7k|        Diag().Error(DiagnosticId::Expected, PreviousToken().GetBeginLocation(), "new line");
  405|  51.7k|    }
  406|       |
  407|  66.8k|    ConsumeCurrent();
  408|  66.8k|}
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  411|  1.38M|{
  412|       |    // Do we even have more tokens?
  413|  1.38M|    if (!HasMoreTokens())
  ------------------
  |  Branch (413:9): [True: 7.23k, False: 1.37M]
  ------------------
  414|  7.23k|    {
  415|  7.23k|        return {};
  416|  7.23k|    }
  417|       |
  418|  1.37M|    const Token& token = CurrentToken();
  419|       |
  420|       |    // Is this the correct token kind
  421|  1.37M|    if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (421:9): [True: 303k, False: 1.06M]
  ------------------
  422|   303k|    {
  423|   303k|        return {};
  424|   303k|    }
  425|       |
  426|  1.06M|    ConsumeCurrent();
  427|  1.06M|    return token;
  428|  1.37M|}
_ZN10OpenAutoIt6Parser4DiagEv:
  444|  61.1k|{
  445|  61.1k|    return {m_DiagnosticEngine};
  446|  61.1k|}
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  449|  24.3k|{
  450|       |    // Next we MUST parse the function name
  451|  24.3k|    auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  452|  24.3k|    if (!function_name_token)
  ------------------
  |  Branch (452:9): [True: 2.06k, False: 22.2k]
  ------------------
  453|  2.06k|    {
  454|  2.06k|        err("Expected identifier for function name");
  455|  2.06k|        return {};
  456|  2.06k|    }
  457|       |
  458|  22.2k|    auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  459|  22.2k|    function_definition->m_FunctionName = function_name_token->GetText();
  460|       |
  461|       |    // Next we MUST parse an opening parenthesis (LParen)
  462|  22.2k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (462:9): [True: 1.81k, False: 20.4k]
  ------------------
  463|  1.81k|    {
  464|  1.81k|        err("Expected opening parenthesis");
  465|  1.81k|        return {};
  466|  1.81k|    }
  467|       |
  468|       |    // Next we parse the function parameter declarations until right parenthesis (RParen)
  469|  23.7k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (469:12): [True: 23.7k, False: 34]
  |  Branch (469:12): [True: 14.3k, False: 9.45k]
  |  Branch (469:31): [True: 14.3k, False: 9.42k]
  ------------------
  470|  14.3k|    {
  471|  14.3k|        phi::optional<FunctionParameter> function_parameter_optional =
  472|  14.3k|                ParseFunctionParameterDefinition();
  473|  14.3k|        if (!function_parameter_optional)
  ------------------
  |  Branch (473:13): [True: 10.9k, False: 3.34k]
  ------------------
  474|  10.9k|        {
  475|       |            // TODO: Proper error reporting
  476|  10.9k|            return {};
  477|  10.9k|        }
  478|  3.34k|        FunctionParameter& function_parameter = function_parameter_optional.value();
  479|       |
  480|  3.34k|        function_definition->m_Parameters.emplace_back(phi::move(function_parameter));
  481|       |
  482|       |        // Parse comma
  483|  3.34k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (483:13): [True: 3.34k, False: 0]
  |  Branch (483:13): [True: 2.70k, False: 640]
  |  Branch (483:32): [True: 2.70k, False: 640]
  ------------------
  484|  2.70k|        {
  485|  2.70k|            ConsumeCurrent();
  486|  2.70k|        }
  487|  3.34k|    }
  488|       |
  489|       |    // Next we MUST parse a right parenthesis (RParen)
  490|  9.45k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (490:9): [True: 34, False: 9.42k]
  ------------------
  491|     34|    {
  492|     34|        err("ERR: Expected ')'");
  493|     34|        return {};
  494|     34|    }
  495|       |
  496|       |    // Next we MUST parse a new line
  497|  9.42k|    if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (497:9): [True: 1.14k, False: 8.28k]
  ------------------
  498|  1.14k|    {
  499|  1.14k|        err("ERR: Missing newline!");
  500|  1.14k|        return {};
  501|  1.14k|    }
  502|       |
  503|       |    // Next parse Statements until EndFunc
  504|  24.8k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (504:12): [True: 24.7k, False: 71]
  |  Branch (504:12): [True: 23.3k, False: 1.47k]
  |  Branch (504:31): [True: 23.3k, False: 1.40k]
  ------------------
  505|  23.3k|    {
  506|  23.3k|        auto statement = ParseStatement();
  507|  23.3k|        if (!statement)
  ------------------
  |  Branch (507:13): [True: 6.80k, False: 16.5k]
  ------------------
  508|  6.80k|        {
  509|  6.80k|            err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  510|  6.80k|                            std::string_view(function_definition->m_FunctionName)));
  511|       |            // TODO: Report proper error
  512|  6.80k|            return {};
  513|  6.80k|        }
  514|       |
  515|  16.5k|        function_definition->m_FunctionBody.emplace_back(phi::move(statement.release_not_null()));
  516|       |
  517|  16.5k|        ConsumeNewLineAndComments();
  518|  16.5k|    }
  519|       |
  520|       |    // Next we MUST parse EndFunc
  521|  1.47k|    if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (521:9): [True: 71, False: 1.40k]
  ------------------
  522|     71|    {
  523|       |        // TODO: Proper error
  524|     71|        return {};
  525|     71|    }
  526|       |
  527|  1.40k|    return phi::move(function_definition);
  528|  1.47k|}
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  531|  14.3k|{
  532|       |    // TODO: This entire function requires more error checks
  533|  14.3k|    FunctionParameter parameter;
  534|       |
  535|  32.9k|    while (HasMoreTokens())
  ------------------
  |  Branch (535:12): [True: 32.8k, False: 91]
  ------------------
  536|  32.8k|    {
  537|  32.8k|        const Token& token = CurrentToken();
  538|       |
  539|  32.8k|        switch (token.GetTokenKind())
  540|  32.8k|        {
  541|  12.1k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (541:13): [True: 12.1k, False: 20.7k]
  ------------------
  542|  12.1k|                parameter.name = token.GetText().substring_view(1u);
  543|  12.1k|                ConsumeCurrent();
  544|  12.1k|                break;
  545|      0|            }
  546|    194|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (546:13): [True: 194, False: 32.6k]
  ------------------
  547|    194|                parameter.as_const = true;
  548|    194|                ConsumeCurrent();
  549|    194|                break;
  550|      0|            }
  551|     66|            case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (551:13): [True: 66, False: 32.8k]
  ------------------
  552|     66|                parameter.by_ref = true;
  553|     66|                ConsumeCurrent();
  554|     66|                break;
  555|      0|            }
  556|  11.4k|            case TokenKind::OP_Equals: {
  ------------------
  |  Branch (556:13): [True: 11.4k, False: 21.4k]
  ------------------
  557|  11.4k|                if (parameter.name.is_empty())
  ------------------
  |  Branch (557:21): [True: 372, False: 11.0k]
  ------------------
  558|    372|                {
  559|       |                    // TODO: PROPER ERROR
  560|    372|                    return {};
  561|    372|                }
  562|       |
  563|       |                // Consume the '='
  564|  11.0k|                ConsumeCurrent();
  565|       |
  566|       |                // Default value is an expression
  567|  11.0k|                auto default_expression = ParseExpression();
  568|  11.0k|                if (!default_expression)
  ------------------
  |  Branch (568:21): [True: 4.81k, False: 6.27k]
  ------------------
  569|  4.81k|                {
  570|       |                    // TODO: Report error
  571|  4.81k|                    return {};
  572|  4.81k|                }
  573|       |
  574|       |                // For default values we artificially create a variable assignment
  575|  6.27k|                auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  576|       |
  577|  6.27k|                default_var_assignment->m_Scope                  = VariableScope::Auto;
  578|  6.27k|                default_var_assignment->m_VariableName           = parameter.name;
  579|  6.27k|                default_var_assignment->m_InitialValueExpression = phi::move(default_expression);
  580|       |
  581|  6.27k|                parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  582|  6.27k|                break;
  583|  11.0k|            }
  584|  2.70k|            case TokenKind::Comma:
  ------------------
  |  Branch (584:13): [True: 2.70k, False: 30.1k]
  ------------------
  585|  3.34k|            case TokenKind::RParen: {
  ------------------
  |  Branch (585:13): [True: 640, False: 32.2k]
  ------------------
  586|  3.34k|                return phi::move(parameter);
  587|  2.70k|            }
  588|  5.70k|            default: {
  ------------------
  |  Branch (588:13): [True: 5.70k, False: 27.1k]
  ------------------
  589|       |                // TODO: Report error
  590|  5.70k|                return {};
  591|  2.70k|            }
  592|  32.8k|        }
  593|  32.8k|    }
  594|       |
  595|       |    // TODO: Report error unexpected EOF
  596|     91|    return {};
  597|  14.3k|}
_ZN10OpenAutoIt6Parser21ParseIncludeDirectiveEv:
  600|  1.86k|{
  601|  1.86k|    if (!HasMoreTokens())
  ------------------
  |  Branch (601:9): [True: 27, False: 1.84k]
  ------------------
  602|     27|    {
  603|     27|        Diag().Error(DiagnosticId::UnexpectedEndOfFile, PreviousToken().GetBeginLocation(),
  604|     27|                     "include directive");
  605|     27|        return;
  606|     27|    }
  607|       |
  608|  1.84k|    const Token&     token = CurrentToken();
  609|  1.84k|    phi::string_view file_name;
  610|  1.84k|    IncludeType      include_type = IncludeType::Local;
  611|       |
  612|       |    // Local include like this '#include "foo.au3"'
  613|  1.84k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (613:9): [True: 1.02k, False: 820]
  ------------------
  614|  1.02k|    {
  615|  1.02k|        ConsumeCurrent();
  616|       |
  617|       |        // Get the file name
  618|  1.02k|        file_name = token.GetText().substring_view(1u, token.GetText().length() - 2u);
  619|  1.02k|    }
  620|       |    // Global include like this '#include <foo.au3>'
  621|    820|    else if (token.GetTokenKind() == TokenKind::OP_LessThan)
  ------------------
  |  Branch (621:14): [True: 582, False: 238]
  ------------------
  622|    582|    {
  623|       |        // FIXME: This is not really a nice way, but we essentially start from after the opening '<' and include everything upto the closing '>'
  624|    582|        ConsumeCurrent();
  625|       |
  626|    582|        include_type = IncludeType::Global;
  627|    582|        file_name    = token.GetText().remove_prefix(1u);
  628|       |
  629|    582|        phi::boolean found_end{false};
  630|    582|        phi::boolean continue_parsing{true};
  631|  1.92k|        while (HasMoreTokens() && continue_parsing)
  ------------------
  |  Branch (631:16): [True: 1.90k, False: 20]
  |  Branch (631:16): [True: 1.34k, False: 582]
  |  Branch (631:35): [True: 1.34k, False: 562]
  ------------------
  632|  1.34k|        {
  633|  1.34k|            const Token& end_token = CurrentToken();
  634|       |
  635|  1.34k|            if (end_token.GetTokenKind() == TokenKind::OP_GreaterThan)
  ------------------
  |  Branch (635:17): [True: 212, False: 1.13k]
  ------------------
  636|    212|            {
  637|    212|                found_end        = true;
  638|    212|                continue_parsing = false;
  639|    212|                const phi::usize difference =
  640|    212|                        phi::narrow_cast<phi::usize>(end_token.GetText().data() - file_name.data());
  641|    212|                file_name.add_postfix(difference);
  642|    212|            }
  643|  1.13k|            else if (end_token.GetTokenKind() == TokenKind::NewLine)
  ------------------
  |  Branch (643:22): [True: 358, False: 777]
  ------------------
  644|    358|            {
  645|       |                // Stop once we hit a newline
  646|    358|                continue_parsing = false;
  647|    358|            }
  648|       |
  649|  1.34k|            ConsumeCurrent();
  650|  1.34k|        }
  651|       |
  652|    582|        if (!found_end)
  ------------------
  |  Branch (652:13): [True: 370, False: 212]
  ------------------
  653|    370|        {
  654|    370|            Diag().Error(DiagnosticId::Expected, PreviousToken().GetEndLocation(), "'>'")
  655|    370|                    .Note(token.GetBeginLocation(), "to match this '<'");
  656|    370|            return;
  657|    370|        }
  658|    582|    }
  659|    238|    else
  660|    238|    {
  661|    238|        Diag().Error(DiagnosticId::Expected, token.GetEndLocation(), "\"Filename\" or <Filename>");
  662|    238|        return;
  663|    238|    }
  664|       |
  665|       |    // Limit include nesting
  666|  1.23k|    if (m_ParsingContextStack.size() >= MaxNumberOfIncludeNesting)
  ------------------
  |  Branch (666:9): [True: 0, False: 1.23k]
  ------------------
  667|      0|    {
  668|      0|        Diag().Error(DiagnosticId::IncludeNestingTooDeeply, token.GetBeginLocation());
  669|      0|        return;
  670|      0|    }
  671|       |
  672|       |    // Emit error for empty file names
  673|  1.23k|    if (file_name.is_empty())
  ------------------
  |  Branch (673:9): [True: 322, False: 910]
  ------------------
  674|    322|    {
  675|    322|        Diag().Error(DiagnosticId::EmptyFilename, token.GetBeginLocation());
  676|    322|        return;
  677|    322|    }
  678|       |
  679|       |    // Emit error if the file name is too long
  680|    910|    if (file_name.length() > 255u)
  ------------------
  |  Branch (680:9): [True: 18, False: 892]
  ------------------
  681|     18|    {
  682|     18|        Diag().Error(DiagnosticId::FileNameTooLong, token.GetBeginLocation(),
  683|     18|                     std::string_view(file_name));
  684|     18|        return;
  685|     18|    }
  686|       |
  687|       |    // Load the file from the SourceManager
  688|    892|    phi::observer_ptr<const SourceFile> include_file =
  689|    892|            m_SourceManager->LoadFile(std::string_view(file_name), include_type);
  690|    892|    if (!include_file)
  ------------------
  |  Branch (690:9): [True: 892, False: 0]
  ------------------
  691|    892|    {
  692|    892|        Diag().Error(DiagnosticId::FileNotFound, token.GetBeginLocation(),
  693|    892|                     std::string_view(file_name));
  694|    892|        return;
  695|    892|    }
  696|       |
  697|      0|    RequireNewLine();
  698|       |
  699|       |    // Append the file
  700|      0|    AppendSourceFileToDocument(include_file.not_null(), token.GetBeginLocation());
  701|      0|}
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  704|   627k|{
  705|   627k|    ConsumeNewLineAndComments();
  706|       |
  707|   627k|    if (!HasMoreTokens())
  ------------------
  |  Branch (707:9): [True: 27, False: 627k]
  ------------------
  708|     27|    {
  709|       |        // TODO: Report proper error
  710|     27|        return {};
  711|     27|    }
  712|       |
  713|   627k|    phi::scope_ptr<ASTStatement> ret_statement;
  714|       |
  715|       |    // Loop until we parse something or there is nothing left to parse
  716|   627k|    const Token& token = CurrentToken();
  717|   627k|    switch (token.GetTokenKind())
  718|   627k|    {
  719|       |        // Variable assignment
  720|  1.52k|        case TokenKind::KW_Const:
  ------------------
  |  Branch (720:9): [True: 1.52k, False: 625k]
  ------------------
  721|  2.37k|        case TokenKind::KW_Local:
  ------------------
  |  Branch (721:9): [True: 850, False: 626k]
  ------------------
  722|  3.27k|        case TokenKind::KW_Global:
  ------------------
  |  Branch (722:9): [True: 902, False: 626k]
  ------------------
  723|  4.35k|        case TokenKind::KW_Static:
  ------------------
  |  Branch (723:9): [True: 1.07k, False: 626k]
  ------------------
  724|  66.6k|        case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (724:9): [True: 62.2k, False: 564k]
  ------------------
  725|  66.6k|            ret_statement = ParseVariableAssignment();
  726|  66.6k|            if (!ret_statement)
  ------------------
  |  Branch (726:17): [True: 17.2k, False: 49.3k]
  ------------------
  727|  17.2k|            {
  728|  17.2k|                err("ERR: Failed to parse variable assignment!\n");
  729|  17.2k|                return {};
  730|  17.2k|            }
  731|  49.3k|            break;
  732|  66.6k|        }
  733|       |
  734|       |        // If Statement
  735|  49.3k|        case TokenKind::KW_If: {
  ------------------
  |  Branch (735:9): [True: 45.6k, False: 581k]
  ------------------
  736|  45.6k|            ret_statement = ParseIfStatement();
  737|  45.6k|            if (!ret_statement)
  ------------------
  |  Branch (737:17): [True: 42.0k, False: 3.57k]
  ------------------
  738|  42.0k|            {
  739|  42.0k|                err("ERR: Failed to parse if statement!\n");
  740|  42.0k|                return {};
  741|  42.0k|            }
  742|  3.57k|            break;
  743|  45.6k|        }
  744|       |
  745|       |        // While statement
  746|  20.0k|        case TokenKind::KW_While: {
  ------------------
  |  Branch (746:9): [True: 20.0k, False: 607k]
  ------------------
  747|  20.0k|            ret_statement = ParseWhileStatement();
  748|  20.0k|            if (!ret_statement)
  ------------------
  |  Branch (748:17): [True: 15.5k, False: 4.47k]
  ------------------
  749|  15.5k|            {
  750|  15.5k|                err("ERR: Failed to parse while statement!\n");
  751|  15.5k|                return {};
  752|  15.5k|            }
  753|  4.47k|            break;
  754|  20.0k|        }
  755|       |
  756|       |        // Exit statement
  757|  6.25k|        case TokenKind::KW_Exit: {
  ------------------
  |  Branch (757:9): [True: 6.25k, False: 620k]
  ------------------
  758|  6.25k|            ret_statement = ParseExitStatement();
  759|  6.25k|            if (!ret_statement)
  ------------------
  |  Branch (759:17): [True: 0, False: 6.25k]
  ------------------
  760|      0|            {
  761|      0|                err("ERR: Failed to parse exit statement!\n");
  762|      0|                return {};
  763|      0|            }
  764|  6.25k|            break;
  765|  6.25k|        }
  766|       |
  767|   488k|        default: {
  ------------------
  |  Branch (767:9): [True: 488k, False: 138k]
  ------------------
  768|       |            // Try to parse ExpressionStatement
  769|   488k|            ret_statement = ParseExpressionStatement();
  770|   488k|            if (!ret_statement)
  ------------------
  |  Branch (770:17): [True: 430k, False: 58.3k]
  ------------------
  771|   430k|            {
  772|   430k|                err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  773|   430k|                                enum_name(token.GetTokenKind())));
  774|   430k|                return {};
  775|   430k|            }
  776|  58.3k|            break;
  777|   488k|        }
  778|   627k|    }
  779|       |
  780|   121k|    return phi::move(ret_statement);
  781|   627k|}
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  784|  20.0k|{
  785|  20.0k|    const Token& token = CurrentToken();
  786|  20.0k|    if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (786:9): [True: 0, False: 20.0k]
  ------------------
  787|      0|    {
  788|       |        // TODO: Proper error
  789|      0|        return {};
  790|      0|    }
  791|  20.0k|    ConsumeCurrent();
  792|       |
  793|       |    // Next we MUST parse an Expression
  794|  20.0k|    auto while_condition_expression = ParseExpression();
  795|  20.0k|    if (!while_condition_expression)
  ------------------
  |  Branch (795:9): [True: 755, False: 19.2k]
  ------------------
  796|    755|    {
  797|       |        // TODO: Proper error
  798|    755|        return {};
  799|    755|    }
  800|       |
  801|  19.2k|    auto while_statement =
  802|  19.2k|            phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  803|       |
  804|       |    // Parse statements until KW_WEnd
  805|  39.5k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (805:12): [True: 39.3k, False: 163]
  |  Branch (805:12): [True: 34.8k, False: 4.63k]
  |  Branch (805:31): [True: 34.8k, False: 4.47k]
  ------------------
  806|  34.8k|    {
  807|  34.8k|        ConsumeNewLineAndComments();
  808|       |
  809|       |        // Parse statements
  810|  34.8k|        auto statement = ParseStatement();
  811|  34.8k|        if (!statement)
  ------------------
  |  Branch (811:13): [True: 14.6k, False: 20.2k]
  ------------------
  812|  14.6k|        {
  813|       |            // TODO: Propeer error
  814|  14.6k|            return {};
  815|  14.6k|        }
  816|       |
  817|  20.2k|        while_statement->m_Statements.emplace_back(statement.release_not_null());
  818|  20.2k|    }
  819|       |
  820|  4.63k|    if (!HasMoreTokens())
  ------------------
  |  Branch (820:9): [True: 163, False: 4.47k]
  ------------------
  821|    163|    {
  822|       |        // TODO: Proper error
  823|    163|        return {};
  824|    163|    }
  825|       |
  826|       |    // Next token MUST be KW_Wend
  827|  4.47k|    const Token& wend_token = CurrentToken();
  828|  4.47k|    if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (828:9): [True: 0, False: 4.47k]
  ------------------
  829|      0|    {
  830|       |        // TODO: Proper error
  831|      0|        return {};
  832|      0|    }
  833|  4.47k|    ConsumeCurrent();
  834|       |
  835|  4.47k|    return phi::move(while_statement);
  836|  4.47k|}
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  839|  66.6k|{
  840|  66.6k|    auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  841|       |
  842|  66.6k|    phi::boolean parsed_identifier = false;
  843|       |    // Parse all specifiers until we hit a VariableIdentifier
  844|   133k|    while (HasMoreTokens() && !parsed_identifier)
  ------------------
  |  Branch (844:12): [True: 132k, False: 556]
  |  Branch (844:12): [True: 70.9k, False: 62.3k]
  |  Branch (844:31): [True: 70.9k, False: 61.8k]
  ------------------
  845|  70.9k|    {
  846|  70.9k|        const Token& current_token = CurrentToken();
  847|  70.9k|        ConsumeCurrent();
  848|       |
  849|  70.9k|        switch (current_token.GetTokenKind())
  850|  70.9k|        {
  851|  2.02k|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (851:13): [True: 2.02k, False: 68.9k]
  ------------------
  852|  2.02k|                if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (852:21): [True: 493, False: 1.52k]
  ------------------
  853|    493|                {
  854|       |                    // TODO: Error more than one const specifier
  855|    493|                    err("ERR: More than one const specifier given\n");
  856|    493|                    return {};
  857|    493|                }
  858|  1.52k|                variable_declaration->m_IsConst = true;
  859|  1.52k|                break;
  860|  2.02k|            }
  861|       |
  862|  1.29k|            case TokenKind::KW_Static: {
  ------------------
  |  Branch (862:13): [True: 1.29k, False: 69.6k]
  ------------------
  863|  1.29k|                if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (863:21): [True: 216, False: 1.07k]
  ------------------
  864|    216|                {
  865|       |                    // TODO: Error more than one static specifier
  866|    216|                    err("ERR: More than one static specifier given\n");
  867|    216|                    return {};
  868|    216|                }
  869|  1.07k|                variable_declaration->m_IsStatic = true;
  870|  1.07k|                break;
  871|  1.29k|            }
  872|       |
  873|  1.24k|            case TokenKind::KW_Global: {
  ------------------
  |  Branch (873:13): [True: 1.24k, False: 69.7k]
  ------------------
  874|  1.24k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (874:21): [True: 339, False: 902]
  ------------------
  875|    339|                {
  876|       |                    // TODO: Error more than one scope specifier
  877|    339|                    err("ERR: More than one scope specifier given\n");
  878|    339|                    return {};
  879|    339|                }
  880|    902|                variable_declaration->m_Scope = VariableScope::Global;
  881|    902|                break;
  882|  1.24k|            }
  883|       |
  884|  1.40k|            case TokenKind::KW_Local: {
  ------------------
  |  Branch (884:13): [True: 1.40k, False: 69.5k]
  ------------------
  885|  1.40k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (885:21): [True: 555, False: 850]
  ------------------
  886|    555|                {
  887|       |                    // TODO: Error more than one scope specifier
  888|    555|                    err("ERR: More than one scope specifier given\n");
  889|    555|                    return {};
  890|    555|                }
  891|    850|                variable_declaration->m_Scope = VariableScope::Local;
  892|    850|                break;
  893|  1.40k|            }
  894|       |
  895|  62.3k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (895:13): [True: 62.3k, False: 8.60k]
  ------------------
  896|       |                // VariableIdentifiers begin with a '$'
  897|       |                // Like: $MyVariable
  898|       |                // So for the name we ignore the very first character
  899|  62.3k|                PHI_ASSERT(current_token.GetText().length() > 1u);
  900|  62.3k|                variable_declaration->m_VariableName = current_token.GetText().substring_view(1u);
  901|       |
  902|  62.3k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  903|  62.3k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  904|       |
  905|  62.3k|                parsed_identifier = true;
  906|  62.3k|                break;
  907|  1.40k|            }
  908|       |
  909|  2.64k|            default: {
  ------------------
  |  Branch (909:13): [True: 2.64k, False: 68.2k]
  ------------------
  910|       |                // TODO: Error unexpected token
  911|  2.64k|                return {};
  912|  1.40k|            }
  913|  70.9k|        }
  914|  70.9k|    }
  915|       |
  916|  62.3k|    if (!parsed_identifier)
  ------------------
  |  Branch (916:9): [True: 51, False: 62.3k]
  ------------------
  917|     51|    {
  918|       |        // TODO: Error variable declaration ends before the VariableIdentifier
  919|     51|        err("ERR: Missing variable identifier!\n");
  920|     51|        return {};
  921|     51|    }
  922|       |
  923|       |    // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  924|  62.3k|    if (!HasMoreTokens())
  ------------------
  |  Branch (924:9): [True: 505, False: 61.8k]
  ------------------
  925|    505|    {
  926|    505|        return variable_declaration;
  927|    505|    }
  928|       |
  929|       |    // Check for equals
  930|  61.8k|    const Token& next_token = CurrentToken();
  931|       |
  932|  61.8k|    if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (932:9): [True: 15.9k, False: 45.8k]
  ------------------
  933|  15.9k|    {
  934|  15.9k|        ConsumeCurrent();
  935|       |
  936|       |        // Now me MUST parse an expression
  937|  15.9k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
  938|  15.9k|        if (!expression)
  ------------------
  |  Branch (938:13): [True: 12.9k, False: 3.00k]
  ------------------
  939|  12.9k|        {
  940|       |            // TODO: Error failed to parse a valid expression
  941|  12.9k|            err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  942|  12.9k|            return {};
  943|  12.9k|        }
  944|       |
  945|  3.00k|        variable_declaration->m_InitialValueExpression = phi::move(expression);
  946|  3.00k|    }
  947|       |
  948|  48.8k|    return variable_declaration;
  949|  61.8k|}
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  952|   488k|{
  953|   488k|    auto expression = ParseExpression();
  954|   488k|    if (!expression)
  ------------------
  |  Branch (954:9): [True: 242k, False: 246k]
  ------------------
  955|   242k|    {
  956|   242k|        return {};
  957|   242k|    }
  958|       |
  959|   246k|    auto expression_statement =
  960|   246k|            phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  961|       |
  962|   246k|    if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (962:9): [True: 188k, False: 58.3k]
  ------------------
  963|   188k|    {
  964|   188k|        err(fmt::format("Expression {:s} is not valid as an statement\n",
  965|   188k|                        expression_statement->m_Expression->Name()));
  966|   188k|        return {};
  967|   188k|    }
  968|       |
  969|  58.3k|    return phi::move(expression_statement);
  970|   246k|}
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  973|  45.6k|{
  974|  45.6k|    if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (974:9): [True: 0, False: 45.6k]
  ------------------
  975|      0|    {
  976|      0|        return {};
  977|      0|    }
  978|       |
  979|       |    // Next me MUST parse an expression
  980|  45.6k|    auto if_condition = ParseExpression();
  981|  45.6k|    if (!if_condition)
  ------------------
  |  Branch (981:9): [True: 2.39k, False: 43.2k]
  ------------------
  982|  2.39k|    {
  983|  2.39k|        err("ERR: failed to parse expression!\n");
  984|       |
  985|  2.39k|        return {};
  986|  2.39k|    }
  987|       |
  988|       |    // Next we MUST parse Then
  989|  43.2k|    if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (989:9): [True: 13.5k, False: 29.7k]
  ------------------
  990|  13.5k|    {
  991|  13.5k|        err("ERR: Missing then!\n");
  992|       |
  993|  13.5k|        return {};
  994|  13.5k|    }
  995|       |
  996|  29.7k|    ConsumeNewLineAndComments();
  997|       |
  998|  29.7k|    IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  999|       |
 1000|       |    // Next parse statements until we hit and EndIf, ElseIf or Else
 1001|  38.7k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1001:12): [True: 38.5k, False: 125]
  |  Branch (1001:12): [True: 15.7k, False: 22.9k]
  |  Branch (1001:31): [True: 38.1k, False: 440]
  ------------------
 1002|  38.7k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1002:12): [True: 28.4k, False: 9.70k]
  ------------------
 1003|  38.7k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1003:12): [True: 15.7k, False: 12.7k]
  ------------------
 1004|  15.7k|    {
 1005|  15.7k|        auto statement = ParseStatement();
 1006|  15.7k|        if (!statement)
  ------------------
  |  Branch (1006:13): [True: 6.78k, False: 8.93k]
  ------------------
 1007|  6.78k|        {
 1008|  6.78k|            err("ERR: Failed to parse statement inside of IF\n");
 1009|  6.78k|            return {};
 1010|  6.78k|        }
 1011|       |
 1012|  8.93k|        if_case.body.emplace_back(statement.release_not_null());
 1013|       |
 1014|  8.93k|        ConsumeNewLineAndComments();
 1015|  8.93k|    }
 1016|       |
 1017|  22.9k|    auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
 1018|       |
 1019|       |    // Handle all ElseIf cases which are optional
 1020|  29.6k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1020:12): [True: 29.0k, False: 546]
  |  Branch (1020:12): [True: 15.3k, False: 14.2k]
  |  Branch (1020:31): [True: 15.3k, False: 13.6k]
  ------------------
 1021|  15.3k|    {
 1022|       |        // Consume KW_ElseIf token
 1023|  15.3k|        ConsumeCurrent();
 1024|       |
 1025|       |        // Parse the condition
 1026|  15.3k|        auto else_if_condition = ParseExpression();
 1027|  15.3k|        if (!else_if_condition)
  ------------------
  |  Branch (1027:13): [True: 8.74k, False: 6.64k]
  ------------------
 1028|  8.74k|        {
 1029|  8.74k|            return {};
 1030|  8.74k|        }
 1031|       |
 1032|       |        // Parse KW_Then
 1033|  6.64k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (1033:13): [True: 6.30k, False: 332]
  ------------------
 1034|  6.30k|        {
 1035|       |            // TODO: Better error message and this error should be recoverable
 1036|  6.30k|            err("ERR: Missing then!\n");
 1037|  6.30k|        }
 1038|       |
 1039|  6.64k|        ConsumeNewLineAndComments();
 1040|       |
 1041|  6.64k|        IfCase else_if_case{.condition{else_if_condition.release_not_null()},
 1042|  6.64k|                            .body{ParseIfCaseStatements()}};
 1043|       |
 1044|       |        // Append our case to the if statement
 1045|  6.64k|        if_statement->m_ElseIfCases.emplace_back(phi::move(else_if_case));
 1046|  6.64k|    }
 1047|       |
 1048|       |    // Handle optional else case
 1049|  14.2k|    if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_Else)
  ------------------
  |  Branch (1049:9): [True: 13.6k, False: 546]
  |  Branch (1049:9): [True: 10.2k, False: 3.95k]
  |  Branch (1049:28): [True: 10.2k, False: 3.40k]
  ------------------
 1050|  10.2k|    {
 1051|       |        // Consume KW_Else token
 1052|  10.2k|        ConsumeCurrent();
 1053|       |
 1054|  10.2k|        ConsumeNewLineAndComments();
 1055|       |
 1056|  10.2k|        if_statement->m_ElseCase = ParseIfCaseStatements();
 1057|  10.2k|    }
 1058|       |
 1059|  14.2k|    if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (1059:9): [True: 10.6k, False: 3.57k]
  ------------------
 1060|  10.6k|    {
 1061|  10.6k|        err("ERR: Missing EndIf!\n");
 1062|       |        // TODO: Proper Error
 1063|  10.6k|        return {};
 1064|  10.6k|    }
 1065|       |
 1066|  3.57k|    return phi::move(if_statement);
 1067|  14.2k|}
_ZN10OpenAutoIt6Parser21ParseIfCaseStatementsEv:
 1070|  16.9k|{
 1071|  16.9k|    std::vector<phi::not_null_scope_ptr<ASTStatement>> statements;
 1072|       |
 1073|       |    // Parse statements until KW_EndIf, KW_Else, KW_ElseIf
 1074|  25.8k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1074:12): [True: 25.5k, False: 259]
  |  Branch (1074:12): [True: 16.8k, False: 8.98k]
  |  Branch (1074:31): [True: 22.8k, False: 2.74k]
  ------------------
 1075|  25.8k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1075:12): [True: 19.3k, False: 3.44k]
  ------------------
 1076|  25.8k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1076:12): [True: 16.8k, False: 2.53k]
  ------------------
 1077|  16.8k|    {
 1078|  16.8k|        auto statement = ParseStatement();
 1079|  16.8k|        if (!statement)
  ------------------
  |  Branch (1079:13): [True: 7.94k, False: 8.88k]
  ------------------
 1080|  7.94k|        {
 1081|  7.94k|            err("ERR: Failed to parse statement inside of IF\n");
 1082|  7.94k|            return {};
 1083|  7.94k|        }
 1084|       |
 1085|  8.88k|        statements.emplace_back(statement.release_not_null());
 1086|       |
 1087|  8.88k|        ConsumeNewLineAndComments();
 1088|  8.88k|    }
 1089|       |
 1090|  8.98k|    return statements;
 1091|  16.9k|}
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
 1094|   395k|{
 1095|   395k|    const Token& token = CurrentToken();
 1096|   395k|    if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1096:9): [True: 0, False: 395k]
  ------------------
 1097|      0|    {
 1098|      0|        return {};
 1099|      0|    }
 1100|       |
 1101|   395k|    phi::int64_t value{0};
 1102|   395k|    phi::boolean parsing_hex{false};
 1103|  1.00M|    for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (1103:32): [True: 612k, False: 387k]
  ------------------
 1104|   612k|    {
 1105|   612k|        const char character = token.GetText().at(index);
 1106|       |
 1107|       |        // Checking the second character
 1108|   612k|        if (index == 1u)
  ------------------
  |  Branch (1108:13): [True: 30.7k, False: 581k]
  ------------------
 1109|  30.7k|        {
 1110|  30.7k|            if (character == 'x' || character == 'X')
  ------------------
  |  Branch (1110:17): [True: 859, False: 29.8k]
  |  Branch (1110:37): [True: 4.60k, False: 25.2k]
  ------------------
 1111|  5.46k|            {
 1112|  5.46k|                parsing_hex = true;
 1113|  5.46k|                continue;
 1114|  5.46k|            }
 1115|  30.7k|        }
 1116|       |
 1117|   607k|        if (parsing_hex)
  ------------------
  |  Branch (1117:13): [True: 24.7k, False: 582k]
  ------------------
 1118|  24.7k|        {
 1119|  24.7k|            PHI_ASSERT(phi::is_hex_digit(character));
 1120|       |
 1121|  24.7k|            if (phi::detail::will_multiplication_error(phi::detail::unsigned_integer_tag{}, value,
  ------------------
  |  Branch (1121:17): [True: 206, False: 24.5k]
  ------------------
 1122|  24.7k|                                                       phi::int64_t(16)) ||
 1123|  24.7k|                phi::detail::will_addition_error(phi::detail::unsigned_integer_tag{}, value * 16,
  ------------------
  |  Branch (1123:17): [True: 195, False: 24.3k]
  ------------------
 1124|  24.5k|                                                 phi::int64_t(character - '0')))
 1125|    401|            {
 1126|    401|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1127|    401|                ConsumeCurrent();
 1128|    401|                return {};
 1129|    401|            }
 1130|       |
 1131|  24.3k|            value <<= 4;
 1132|  24.3k|            value |= phi::hex_digit_value(character).unsafe();
 1133|  24.3k|        }
 1134|   582k|        else
 1135|   582k|        {
 1136|   582k|            PHI_ASSERT(character >= '0' && character <= '9');
 1137|       |
 1138|   582k|            if (phi::detail::will_multiplication_error(phi::detail::signed_integer_tag{}, value,
  ------------------
  |  Branch (1138:17): [True: 4.09k, False: 578k]
  ------------------
 1139|   582k|                                                       phi::int64_t(10)) ||
 1140|   582k|                phi::detail::will_addition_error(phi::detail::signed_integer_tag{}, value * 10,
  ------------------
  |  Branch (1140:17): [True: 3.03k, False: 575k]
  ------------------
 1141|   578k|                                                 phi::int64_t(character - '0')))
 1142|  7.13k|            {
 1143|  7.13k|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1144|  7.13k|                ConsumeCurrent();
 1145|  7.13k|                return {};
 1146|  7.13k|            }
 1147|       |
 1148|   575k|            value *= 10;
 1149|   575k|            value += (character - '0');
 1150|   575k|        }
 1151|   607k|    }
 1152|       |
 1153|   387k|    ConsumeCurrent();
 1154|   387k|    return phi::make_scope<ASTIntegerLiteral>(value);
 1155|   395k|}
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
 1158|  28.3k|{
 1159|  28.3k|    const Token& token = CurrentToken();
 1160|  28.3k|    if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (1160:9): [True: 0, False: 28.3k]
  ------------------
 1161|      0|    {
 1162|      0|        return {};
 1163|      0|    }
 1164|  28.3k|    ConsumeCurrent();
 1165|       |
 1166|  28.3k|    auto string_literal = phi::make_scope<ASTStringLiteral>();
 1167|       |
 1168|  28.3k|    const phi::usize length = token.GetText().length();
 1169|       |    // Trim the trailing and leading "
 1170|  28.3k|    string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
 1171|       |
 1172|  28.3k|    return phi::move(string_literal);
 1173|  28.3k|}
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
 1176|  1.75M|{
 1177|  1.75M|    phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
 1178|  1.75M|    if (!lhs_expression)
  ------------------
  |  Branch (1178:9): [True: 988k, False: 766k]
  ------------------
 1179|   988k|    {
 1180|   988k|        return {};
 1181|   988k|    }
 1182|       |
 1183|   766k|    return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
 1184|  1.75M|}
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
 1187|  1.86M|{
 1188|  1.86M|    if (!HasMoreTokens())
  ------------------
  |  Branch (1188:9): [True: 1.37k, False: 1.86M]
  ------------------
 1189|  1.37k|    {
 1190|       |        // TODO: Proper error
 1191|  1.37k|        return {};
 1192|  1.37k|    }
 1193|       |
 1194|  1.86M|    const Token& token = CurrentToken();
 1195|  1.86M|    if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (1195:9): [True: 81.9k, False: 1.78M]
  ------------------
 1196|  81.9k|    {
 1197|  81.9k|        const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
 1198|  81.9k|        PHI_UNUSED_VARIABLE(op_precedence);
 1199|  81.9k|        ConsumeCurrent();
 1200|       |
 1201|  81.9k|        phi::scope_ptr<ASTExpression> unary_expression = ParseUnaryExpression(token.GetTokenKind());
 1202|  81.9k|        if (!unary_expression)
  ------------------
  |  Branch (1202:13): [True: 23.0k, False: 58.9k]
  ------------------
 1203|  23.0k|        {
 1204|       |            // TODO: Proper error
 1205|  23.0k|            return {};
 1206|  23.0k|        }
 1207|       |
 1208|  58.9k|        return phi::move(unary_expression);
 1209|  81.9k|    }
 1210|  1.78M|    if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (1210:9): [True: 90.7k, False: 1.69M]
  ------------------
 1211|  90.7k|    {
 1212|       |        // Consume the LParen
 1213|  90.7k|        ConsumeCurrent();
 1214|       |
 1215|  90.7k|        phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
 1216|  90.7k|        if (!paren_expression)
  ------------------
  |  Branch (1216:13): [True: 86.1k, False: 4.56k]
  ------------------
 1217|  86.1k|        {
 1218|       |            // TODO: Proper error
 1219|  86.1k|            return {};
 1220|  86.1k|        }
 1221|       |
 1222|  4.56k|        return phi::move(paren_expression);
 1223|  90.7k|    }
 1224|  1.69M|    if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1224:9): [True: 395k, False: 1.29M]
  ------------------
 1225|   395k|    {
 1226|   395k|        phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
 1227|   395k|        if (!int_literal)
  ------------------
  |  Branch (1227:13): [True: 7.53k, False: 387k]
  ------------------
 1228|  7.53k|        {
 1229|       |            // TODO: Error failed to parse integer literal
 1230|  7.53k|            return {};
 1231|  7.53k|        }
 1232|       |
 1233|   387k|        return phi::move(int_literal);
 1234|   395k|    }
 1235|  1.29M|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (1235:9): [True: 28.3k, False: 1.27M]
  ------------------
 1236|  28.3k|    {
 1237|  28.3k|        auto string_literal_expression = ParseStringLiteral();
 1238|  28.3k|        if (!string_literal_expression)
  ------------------
  |  Branch (1238:13): [True: 0, False: 28.3k]
  ------------------
 1239|      0|        {
 1240|       |            // TODO: Proper error
 1241|      0|            return {};
 1242|      0|        }
 1243|       |
 1244|  28.3k|        return phi::move(string_literal_expression);
 1245|  28.3k|    }
 1246|       |
 1247|       |    // Boolean literal
 1248|  1.27M|    if (token.GetTokenKind() == TokenKind::KW_True || token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1248:9): [True: 3.22k, False: 1.26M]
  |  Branch (1248:55): [True: 5.09k, False: 1.26M]
  ------------------
 1249|  8.32k|    {
 1250|  8.32k|        auto boolean_literal = ParseBooleanLiteral();
 1251|  8.32k|        if (!boolean_literal)
  ------------------
  |  Branch (1251:13): [True: 0, False: 8.32k]
  ------------------
 1252|      0|        {
 1253|       |            // TODO: Proper error
 1254|      0|            return {};
 1255|      0|        }
 1256|       |
 1257|  8.32k|        return phi::move(boolean_literal);
 1258|  8.32k|    }
 1259|       |
 1260|       |    // Function call/reference expression
 1261|  1.26M|    if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (1261:9): [True: 272k, False: 990k]
  |  Branch (1261:9): [True: 280k, False: 981k]
  |  Branch (1261:66): [True: 8.17k, False: 981k]
  ------------------
 1262|   280k|    {
 1263|   280k|        auto function_expression = ParseFunctionExpression();
 1264|   280k|        if (!function_expression)
  ------------------
  |  Branch (1264:13): [True: 36.5k, False: 243k]
  ------------------
 1265|  36.5k|        {
 1266|       |            // TODO: Proper error
 1267|  36.5k|            err("ERR: Failed to parse function expression!\n");
 1268|  36.5k|            return {};
 1269|  36.5k|        }
 1270|       |
 1271|   243k|        return phi::move(function_expression);
 1272|   280k|    }
 1273|       |    // Variable expression
 1274|   981k|    if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1274:9): [True: 35.2k, False: 946k]
  ------------------
 1275|  35.2k|    {
 1276|  35.2k|        auto variable_expression = ParseVariableExpression();
 1277|  35.2k|        if (!variable_expression)
  ------------------
  |  Branch (1277:13): [True: 0, False: 35.2k]
  ------------------
 1278|      0|        {
 1279|       |            // TODO: Proper error
 1280|      0|            err("ERR: Failed to parse Variable expression\n");
 1281|      0|            return {};
 1282|      0|        }
 1283|       |
 1284|  35.2k|        return phi::move(variable_expression);
 1285|  35.2k|    }
 1286|       |    // Keyword literal
 1287|   946k|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1287:9): [True: 4.44k, False: 942k]
  ------------------
 1288|  4.44k|    {
 1289|  4.44k|        auto keyword_literal = ParseKeywordLiteral();
 1290|  4.44k|        if (!keyword_literal)
  ------------------
  |  Branch (1290:13): [True: 0, False: 4.44k]
  ------------------
 1291|      0|        {
 1292|       |            // TODO: Proper error
 1293|      0|            err("ERR: Failed to parse keyword literal expression!\n");
 1294|      0|            return {};
 1295|      0|        }
 1296|       |
 1297|  4.44k|        return phi::move(keyword_literal);
 1298|  4.44k|    }
 1299|       |    // Float literal
 1300|   942k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1300:9): [True: 19.8k, False: 922k]
  ------------------
 1301|  19.8k|    {
 1302|  19.8k|        auto float_literal = ParseFloatLiteral();
 1303|  19.8k|        if (!float_literal)
  ------------------
  |  Branch (1303:13): [True: 0, False: 19.8k]
  ------------------
 1304|      0|        {
 1305|       |            // TODO: Proper error
 1306|      0|            err("ERR: Failed to parse float literal expression!\n");
 1307|      0|            return {};
 1308|      0|        }
 1309|       |
 1310|  19.8k|        return phi::move(float_literal);
 1311|  19.8k|    }
 1312|       |    // ArraySubscript expression
 1313|   922k|    if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (1313:9): [True: 688k, False: 234k]
  ------------------
 1314|   688k|    {
 1315|   688k|        auto subscript_expression = ParseArraySubscriptExpression();
 1316|   688k|        if (!subscript_expression)
  ------------------
  |  Branch (1316:13): [True: 659k, False: 28.8k]
  ------------------
 1317|   659k|        {
 1318|   659k|            err("ERR: Failed to parse array subscript expression\n");
 1319|   659k|            return {};
 1320|   659k|        }
 1321|       |
 1322|  28.8k|        return phi::move(subscript_expression);
 1323|   688k|    }
 1324|   234k|    if (token.IsMacro())
  ------------------
  |  Branch (1324:9): [True: 11.7k, False: 222k]
  ------------------
 1325|  11.7k|    {
 1326|  11.7k|        ConsumeCurrent();
 1327|       |
 1328|  11.7k|        phi::scope_ptr<ASTExpression> macro_expression = ParseMacroExpression(token.GetTokenKind());
 1329|  11.7k|        if (!macro_expression)
  ------------------
  |  Branch (1329:13): [True: 0, False: 11.7k]
  ------------------
 1330|      0|        {
 1331|       |            // TODO: Proper error
 1332|      0|            return {};
 1333|      0|        }
 1334|       |
 1335|  11.7k|        return macro_expression;
 1336|  11.7k|    }
 1337|       |
 1338|       |    // TODO: Error Unexpected token
 1339|   222k|    err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
 1340|   222k|                    enum_name(token.GetTokenKind())));
 1341|   222k|    return {};
 1342|   234k|}
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
 1346|   775k|{
 1347|   834k|    while (true)
  ------------------
  |  Branch (1347:12): [Folded - Ignored]
  ------------------
 1348|   834k|    {
 1349|   834k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1349:13): [True: 5.01k, False: 829k]
  ------------------
 1350|  5.01k|        {
 1351|  5.01k|            return phi::move(lhs);
 1352|  5.01k|        }
 1353|       |
 1354|   829k|        const Token& operator_token = CurrentToken();
 1355|   829k|        if (!IsBinaryOperator(operator_token.GetTokenKind()) &&
  ------------------
  |  Branch (1355:13): [True: 714k, False: 115k]
  |  Branch (1355:13): [True: 631k, False: 197k]
  ------------------
 1356|   829k|            operator_token.GetTokenKind() != TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1356:13): [True: 631k, False: 82.4k]
  ------------------
 1357|   631k|        {
 1358|       |            // If its not a binary operator and not a ternary just return the lhs expression
 1359|   631k|            return phi::move(lhs);
 1360|   631k|        }
 1361|   197k|        int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
 1362|   197k|        ConsumeCurrent();
 1363|       |
 1364|   197k|        if (token_precedence < precedence)
  ------------------
  |  Branch (1364:13): [True: 2.08k, False: 195k]
  ------------------
 1365|  2.08k|        {
 1366|  2.08k|            return phi::move(lhs);
 1367|  2.08k|        }
 1368|       |
 1369|   195k|        if (operator_token.GetTokenKind() == TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1369:13): [True: 82.2k, False: 113k]
  ------------------
 1370|  82.2k|        {
 1371|  82.2k|            phi::scope_ptr<ASTTernaryIfExpression> ternary_if_expression =
 1372|  82.2k|                    ParseTernaryIfExpression(phi::move(lhs));
 1373|  82.2k|            if (!ternary_if_expression)
  ------------------
  |  Branch (1373:17): [True: 39.7k, False: 42.4k]
  ------------------
 1374|  39.7k|            {
 1375|       |                // TODO: Proper error
 1376|  39.7k|                return {};
 1377|  39.7k|            }
 1378|       |
 1379|  42.4k|            return phi::move(ternary_if_expression);
 1380|  82.2k|        }
 1381|       |
 1382|       |        // This must be an binary expression
 1383|   113k|        phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
 1384|   113k|        if (!rhs_expression)
  ------------------
  |  Branch (1384:13): [True: 47.7k, False: 65.7k]
  ------------------
 1385|  47.7k|        {
 1386|       |            // TODO: Proper error
 1387|  47.7k|            return {};
 1388|  47.7k|        }
 1389|       |
 1390|       |        // Nothing left to parse so directly return from here
 1391|  65.7k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1391:13): [True: 720, False: 65.0k]
  ------------------
 1392|    720|        {
 1393|    720|            return phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1394|    720|                                                                 operator_token.GetTokenKind(),
 1395|    720|                                                                 rhs_expression.release_not_null());
 1396|    720|        }
 1397|       |
 1398|       |        // If BinOp binds less tightly with RHS than the operator after RHS, let
 1399|       |        // the pending operator take RHS as its LHS.
 1400|  65.0k|        const Token& next_token      = CurrentToken();
 1401|  65.0k|        int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1402|       |
 1403|  65.0k|        if (token_precedence < next_precedence)
  ------------------
  |  Branch (1403:13): [True: 9.40k, False: 55.6k]
  ------------------
 1404|  9.40k|        {
 1405|  9.40k|            rhs_expression =
 1406|  9.40k|                    ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1407|  9.40k|            if (!rhs_expression)
  ------------------
  |  Branch (1407:17): [True: 5.94k, False: 3.45k]
  ------------------
 1408|  5.94k|            {
 1409|       |                // TODO: Proper error
 1410|  5.94k|                return {};
 1411|  5.94k|            }
 1412|  9.40k|        }
 1413|       |
 1414|       |        // Merge LHS/RHS.
 1415|  59.0k|        lhs = phi::make_not_null_scope<ASTBinaryExpression>(
 1416|  59.0k|                phi::move(lhs), operator_token.GetTokenKind(), rhs_expression.release_not_null());
 1417|  59.0k|    }
 1418|   775k|}
_ZN10OpenAutoIt6Parser23ParseFunctionExpressionEv:
 1421|   280k|{
 1422|       |    // Parse the function name
 1423|   280k|    const Token& function_identifier_token = CurrentToken();
 1424|   280k|    if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1424:9): [True: 8.17k, False: 272k]
  |  Branch (1424:9): [True: 0, False: 280k]
  ------------------
 1425|   280k|        !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1425:9): [True: 0, False: 8.17k]
  ------------------
 1426|      0|    {
 1427|      0|        return {};
 1428|      0|    }
 1429|   280k|    ConsumeCurrent();
 1430|       |
 1431|   280k|    const FunctionReference function_reference =
 1432|   280k|            function_identifier_token.IsBuiltInFunction() ?
  ------------------
  |  Branch (1432:13): [True: 8.17k, False: 272k]
  ------------------
 1433|  8.17k|                    FunctionReference{function_identifier_token} :
 1434|   280k|                    FunctionReference{function_identifier_token.GetText()};
 1435|       |
 1436|       |    // If we parse an opening parenthesis we have a function call expression otherwise just a function reference
 1437|   280k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (1437:9): [True: 192k, False: 88.1k]
  ------------------
 1438|   192k|    {
 1439|   192k|        return phi::make_scope<ASTFunctionReferenceExpression>(function_reference);
 1440|   192k|    }
 1441|       |
 1442|  88.1k|    phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1443|  88.1k|            phi::make_scope<ASTFunctionCallExpression>(function_reference);
 1444|  88.1k|    if (!function_call_expression)
  ------------------
  |  Branch (1444:9): [True: 0, False: 88.1k]
  ------------------
 1445|      0|    {
 1446|       |        // TODO: Proper error
 1447|      0|        return {};
 1448|      0|    }
 1449|       |
 1450|       |    // Now parse all the arguments (which are expressions) separated by commas or nothing
 1451|  88.1k|    function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1452|       |
 1453|       |    // Finally we MUST parse an RParen
 1454|  88.1k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1454:9): [True: 36.5k, False: 51.5k]
  ------------------
 1455|  36.5k|    {
 1456|  36.5k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1457|  36.5k|                        std::string_view{function_call_expression->FunctionName()}));
 1458|       |        // TODO: Give proper error
 1459|  36.5k|        return {};
 1460|  36.5k|    }
 1461|       |
 1462|       |    // Return result
 1463|  51.5k|    return function_call_expression;
 1464|  88.1k|}
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1467|  88.1k|{
 1468|  88.1k|    std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1469|       |
 1470|   195k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1470:12): [True: 194k, False: 708]
  |  Branch (1470:12): [True: 148k, False: 47.0k]
  |  Branch (1470:31): [True: 148k, False: 46.3k]
  ------------------
 1471|   148k|    {
 1472|       |        // Parse the expression
 1473|   148k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1474|   148k|        if (!expression)
  ------------------
  |  Branch (1474:13): [True: 41.0k, False: 107k]
  ------------------
 1475|  41.0k|        {
 1476|  41.0k|            arguments.clear();
 1477|  41.0k|            return arguments;
 1478|  41.0k|        }
 1479|       |
 1480|       |        // Add argument to parameters
 1481|   107k|        arguments.emplace_back(expression.release_not_null());
 1482|       |
 1483|       |        // Next Token MUST be a comma followed by another expression or RParen
 1484|   107k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1484:13): [True: 106k, False: 588]
  |  Branch (1484:13): [True: 922, False: 106k]
  |  Branch (1484:32): [True: 922, False: 105k]
  ------------------
 1485|    922|        {
 1486|    922|            ConsumeCurrent();
 1487|    922|        }
 1488|   107k|    }
 1489|       |
 1490|  47.0k|    return arguments;
 1491|  88.1k|}
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1494|  35.2k|{
 1495|  35.2k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1495:9): [True: 0, False: 35.2k]
  ------------------
 1496|      0|    {
 1497|       |        // TODO: Proper error
 1498|      0|        return {};
 1499|      0|    }
 1500|       |
 1501|  35.2k|    const Token& token = CurrentToken();
 1502|  35.2k|    if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1502:9): [True: 0, False: 35.2k]
  ------------------
 1503|      0|    {
 1504|       |        // TODO error
 1505|      0|        return {};
 1506|      0|    }
 1507|       |
 1508|  35.2k|    auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1509|  35.2k|    variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1510|       |
 1511|  35.2k|    ConsumeCurrent();
 1512|       |
 1513|  35.2k|    return phi::move(variable_expression);
 1514|  35.2k|}
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1520|   688k|{
 1521|   688k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1521:9): [True: 0, False: 688k]
  ------------------
 1522|      0|    {
 1523|      0|        return {};
 1524|      0|    }
 1525|       |
 1526|   688k|    if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1526:9): [True: 0, False: 688k]
  ------------------
 1527|      0|    {
 1528|      0|        return {};
 1529|      0|    }
 1530|       |
 1531|   688k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1532|   688k|    if (!expression)
  ------------------
  |  Branch (1532:9): [True: 646k, False: 41.8k]
  ------------------
 1533|   646k|    {
 1534|   646k|        return {};
 1535|   646k|    }
 1536|       |
 1537|  41.8k|    if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1537:9): [True: 12.9k, False: 28.8k]
  ------------------
 1538|  12.9k|    {
 1539|  12.9k|        return {};
 1540|  12.9k|    }
 1541|       |
 1542|  28.8k|    return phi::make_scope<ASTArraySubscriptExpression>(phi::move(expression.release_not_null()));
 1543|  41.8k|}
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1548|  90.7k|{
 1549|       |    // NOTE: Me MUST have consumed the LParen before this
 1550|       |
 1551|  90.7k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1552|  90.7k|    if (!expression)
  ------------------
  |  Branch (1552:9): [True: 66.8k, False: 23.9k]
  ------------------
 1553|  66.8k|    {
 1554|       |        // TODO: Proper error
 1555|  66.8k|        return {};
 1556|  66.8k|    }
 1557|       |
 1558|  23.9k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1558:9): [True: 19.3k, False: 4.56k]
  ------------------
 1559|  19.3k|    {
 1560|       |        // TODO: Proper error expected closing paren
 1561|  19.3k|        return {};
 1562|  19.3k|    }
 1563|       |
 1564|  4.56k|    return phi::move(expression);
 1565|  23.9k|}
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1568|  6.25k|{
 1569|  6.25k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1569:9): [True: 0, False: 6.25k]
  ------------------
 1570|      0|    {
 1571|      0|        return {};
 1572|      0|    }
 1573|       |
 1574|  6.25k|    if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1574:9): [True: 0, False: 6.25k]
  ------------------
 1575|      0|    {
 1576|      0|        return {};
 1577|      0|    }
 1578|       |
 1579|       |    // Parse optional expression
 1580|  6.25k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1581|       |
 1582|  6.25k|    return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1583|  6.25k|}
_ZN10OpenAutoIt6Parser20ParseUnaryExpressionENS_9TokenKindE:
 1586|  81.9k|{
 1587|  81.9k|    PHI_ASSERT(IsUnaryOperator(operator_kind));
 1588|       |
 1589|  81.9k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1589:9): [True: 232, False: 81.7k]
  ------------------
 1590|    232|    {
 1591|    232|        return {};
 1592|    232|    }
 1593|       |
 1594|       |    // Parse expression
 1595|  81.7k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1596|  81.7k|    if (!expression)
  ------------------
  |  Branch (1596:9): [True: 22.8k, False: 58.9k]
  ------------------
 1597|  22.8k|    {
 1598|       |        // TODO: Proper error
 1599|  22.8k|        return {};
 1600|  22.8k|    }
 1601|       |
 1602|  58.9k|    return phi::make_scope<ASTUnaryExpression>(operator_kind,
 1603|  58.9k|                                               phi::move(expression.release_not_null()));
 1604|  81.7k|}
_ZN10OpenAutoIt6Parser24ParseTernaryIfExpressionEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
 1608|  82.2k|{
 1609|  82.2k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1609:9): [True: 77, False: 82.1k]
  ------------------
 1610|     77|    {
 1611|     77|        return {};
 1612|     77|    }
 1613|       |
 1614|  82.1k|    phi::scope_ptr<ASTExpression> true_expression = ParseExpression();
 1615|  82.1k|    if (!true_expression)
  ------------------
  |  Branch (1615:9): [True: 7.36k, False: 74.7k]
  ------------------
 1616|  7.36k|    {
 1617|  7.36k|        return {};
 1618|  7.36k|    }
 1619|       |
 1620|       |    // Must parse the else part ":"
 1621|  74.7k|    if (!MustParse(TokenKind::OP_TernaryElse))
  ------------------
  |  Branch (1621:9): [True: 13.9k, False: 60.8k]
  ------------------
 1622|  13.9k|    {
 1623|  13.9k|        err("Missing ':' for ternary if\n");
 1624|  13.9k|        return {};
 1625|  13.9k|    }
 1626|       |
 1627|  60.8k|    phi::scope_ptr<ASTExpression> false_expression = ParseExpression();
 1628|  60.8k|    if (!false_expression)
  ------------------
  |  Branch (1628:9): [True: 18.4k, False: 42.4k]
  ------------------
 1629|  18.4k|    {
 1630|  18.4k|        return {};
 1631|  18.4k|    }
 1632|       |
 1633|  42.4k|    return phi::make_scope<ASTTernaryIfExpression>(phi::move(condition),
 1634|  42.4k|                                                   phi::move(true_expression.release_not_null()),
 1635|  42.4k|                                                   phi::move(false_expression.release_not_null()));
 1636|  60.8k|}
_ZN10OpenAutoIt6Parser20ParseMacroExpressionENS_9TokenKindE:
 1639|  11.7k|{
 1640|  11.7k|    const auto macro = static_cast<phi::size_t>(macro_kind);
 1641|  11.7k|    PHI_ASSERT(macro >= MacroFirst && macro <= MacroLast);
 1642|       |
 1643|  11.7k|    return phi::make_scope<ASTMacroExpression>(macro_kind);
 1644|  11.7k|}
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1647|  8.32k|{
 1648|  8.32k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1648:9): [True: 0, False: 8.32k]
  ------------------
 1649|      0|    {
 1650|       |        // TODO: Proper error
 1651|      0|        return {};
 1652|      0|    }
 1653|       |
 1654|       |    // BooleanLiteral is either KW_True or KW_False
 1655|  8.32k|    const Token& token = CurrentToken();
 1656|  8.32k|    if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1656:9): [True: 3.22k, False: 5.09k]
  ------------------
 1657|  3.22k|    {
 1658|  3.22k|        ConsumeCurrent();
 1659|  3.22k|        return phi::make_scope<ASTBooleanLiteral>(true);
 1660|  3.22k|    }
 1661|       |
 1662|  5.09k|    if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1662:9): [True: 5.09k, False: 0]
  ------------------
 1663|  5.09k|    {
 1664|  5.09k|        ConsumeCurrent();
 1665|  5.09k|        return phi::make_scope<ASTBooleanLiteral>(false);
 1666|  5.09k|    }
 1667|       |
 1668|       |    // TODO: Proper error
 1669|      0|    return {};
 1670|  5.09k|}
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1673|  4.44k|{
 1674|  4.44k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1674:9): [True: 0, False: 4.44k]
  ------------------
 1675|      0|    {
 1676|       |        // TODO: Proper error
 1677|      0|        return {};
 1678|      0|    }
 1679|       |
 1680|  4.44k|    const Token& token = CurrentToken();
 1681|  4.44k|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1681:9): [True: 4.44k, False: 0]
  ------------------
 1682|  4.44k|    {
 1683|  4.44k|        ConsumeCurrent();
 1684|  4.44k|        return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1685|  4.44k|    }
 1686|       |
 1687|       |    // TODO: Proper error
 1688|      0|    return {};
 1689|  4.44k|}
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1692|  19.8k|{
 1693|  19.8k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1693:9): [True: 0, False: 19.8k]
  ------------------
 1694|      0|    {
 1695|       |        // TODO: Proper error
 1696|      0|        return {};
 1697|      0|    }
 1698|       |
 1699|  19.8k|    const Token& token = CurrentToken();
 1700|  19.8k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1700:9): [True: 19.8k, False: 0]
  ------------------
 1701|  19.8k|    {
 1702|  19.8k|        ConsumeCurrent();
 1703|       |
 1704|  19.8k|        char*    ptr   = nullptr;
 1705|  19.8k|        phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1706|       |
 1707|  19.8k|        return phi::make_scope<ASTFloatLiteral>(value);
 1708|  19.8k|    }
 1709|       |
 1710|       |    // TODO: Proper error
 1711|      0|    return {};
 1712|  19.8k|}
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   72|   344k|    {
   73|   344k|        int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   74|       |        //PHI_ASSERT(precedence != 0);
   75|       |
   76|   344k|        return precedence;
   77|   344k|    }

_ZN10OpenAutoIt10SourceFileC2ENS0_4TypeENSt3__14__fs10filesystem4pathEN3phi17basic_string_viewIcNS2_11char_traitsIcEEEE:
   12|  23.0k|{}

_ZN10OpenAutoIt13SourceManager18SetLocalSearchPathERKNSt3__14__fs10filesystem4pathE:
   14|  23.0k|{}
_ZN10OpenAutoIt18EmptySourceManager8LoadFileEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_11IncludeTypeE:
  156|    892|{
  157|    892|    return {};
  158|    892|}

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  11.5k|{
   31|       |#if defined(PHI_DEBUG)
   32|       |    PHI_ASSERT(!m_Finalized);
   33|       |#endif
   34|       |
   35|  11.5k|    m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |    m_Finalized = true;
   38|       |#endif
   39|  11.5k|}
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   68|  16.2M|{
   69|       |#if defined(PHI_DEBUG)
   70|       |    PHI_ASSERT(m_Finalized);
   71|       |#endif
   72|       |
   73|  16.2M|    return m_Index < m_Tokens.size();
   74|  16.2M|}
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   77|  10.8M|{
   78|       |#if defined(PHI_DEBUG)
   79|       |    PHI_ASSERT(m_Finalized);
   80|       |#endif
   81|       |
   82|  10.8M|    return m_Index >= m_Tokens.size();
   83|  10.8M|}
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   86|  7.83M|{
   87|  7.83M|    PHI_ASSERT(!reached_end());
   88|       |#if defined(PHI_DEBUG)
   89|       |    PHI_ASSERT(m_Finalized);
   90|       |#endif
   91|       |
   92|  7.83M|    return m_Tokens[m_Index.unsafe()];
   93|  7.83M|}
_ZNK10OpenAutoIt11TokenStream11look_behindEv:
   96|  52.1k|{
   97|  52.1k|    PHI_ASSERT(!m_Tokens.empty());
   98|       |#if defined(PHI_DEBUG)
   99|       |    PHI_ASSERT(m_Finalized);
  100|       |#endif
  101|       |
  102|  52.1k|    if (m_Index == 0u)
  ------------------
  |  Branch (102:9): [True: 0, False: 52.1k]
  ------------------
  103|      0|    {
  104|      0|        return m_Tokens[0u];
  105|      0|    }
  106|       |
  107|  52.1k|    return m_Tokens[m_Index.unsafe() - 1u];
  108|  52.1k|}
_ZN10OpenAutoIt11TokenStream7consumeEv:
  111|  3.00M|{
  112|  3.00M|    PHI_ASSERT(!reached_end());
  113|       |#if defined(PHI_DEBUG)
  114|       |    PHI_ASSERT(m_Finalized);
  115|       |#endif
  116|       |
  117|  3.00M|    m_Index += 1u;
  118|  3.00M|}

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   93|  2.23M|{
   94|  2.23M|    if (output_enabled)
  ------------------
  |  Branch (94:9): [True: 0, False: 2.23M]
  ------------------
   95|      0|    {
   96|      0|        std::cerr << data;
   97|      0|    }
   98|  2.23M|}
_ZN10OpenAutoIt14disable_outputEv:
  101|  11.5k|{
  102|  11.5k|    output_enabled = false;
  103|  11.5k|}

