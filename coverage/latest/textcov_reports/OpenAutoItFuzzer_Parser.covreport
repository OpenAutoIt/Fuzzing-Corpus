_ZN3fmt2v96detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  409|  1.24M|    typename std::make_unsigned<Int>::type {
  410|  1.24M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  368|  2.49M|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (368:37): [Folded - Ignored]
  |  |  |  Branch (368:37): [True: 1.24M, False: 0]
  |  |  ------------------
  ------------------
  411|  1.24M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  412|  1.24M|}
_ZN3fmt2v96detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  336|  10.1M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v917basic_string_viewIcE4sizeEv:
  476|  6.44M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  336|  1.24M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE4sizeEv:
  930|  1.24M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt2v96detail6bufferIcEC2EPcmm:
  902|  1.24M|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt2v96detail6bufferIcE3setEPcm:
  908|  1.24M|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  909|  1.24M|    ptr_ = buf_data;
  910|  1.24M|    capacity_ = buf_capacity;
  911|  1.24M|  }
_ZN3fmt2v96detail13ignore_unusedIJbEEEvDpRKT_:
  336|    401|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt2v96detail6bufferIcE8capacityEv:
  933|    674|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt2v96detail6bufferIcE4dataEv:
  936|  1.24M|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt2v917basic_string_viewIcE5beginEv:
  478|  2.49M|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt2v917basic_string_viewIcE3endEv:
  479|  2.49M|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKc:
  459|  1.04M|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt2v96detail10locale_refC2Ev:
 1730|  2.28M|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1297|  1.24M|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt2v99monostateC2Ev:
  319|  1.24M|  constexpr monostate() {}
_ZN3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1991|  1.24M|      : desc_(desc), values_(values) {}
_ZNK3fmt2v917basic_string_viewIcE4dataEv:
  473|  2.70M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt2v917basic_string_viewIcEC2EPKcm:
  444|  2.70M|      : data_(s), size_(count) {}
_ZN3fmt2v96detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  409|  8.90M|    typename std::make_unsigned<Int>::type {
  410|  8.90M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  368|  17.8M|      ::fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (368:37): [Folded - Ignored]
  |  |  |  Branch (368:37): [True: 8.90M, False: 0]
  |  |  ------------------
  ------------------
  411|  8.90M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  412|  8.90M|}
_ZN3fmt2v96detail6bufferIcE11try_reserveEm:
  955|  3.74M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  956|  3.74M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (956:9): [True: 401, False: 3.74M]
  ------------------
  957|  3.74M|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 2029|  1.24M|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 2030|  1.24M|    format_arg arg;
 2031|  1.24M|    if (!is_packed()) {
  ------------------
  |  Branch (2031:9): [True: 0, False: 1.24M]
  ------------------
 2032|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (2032:11): [True: 0, False: 0]
  ------------------
 2033|      0|      return arg;
 2034|      0|    }
 2035|  1.24M|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (2035:9): [True: 0, False: 1.24M]
  ------------------
 2036|  1.24M|    arg.type_ = type(id);
 2037|  1.24M|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (2037:9): [True: 0, False: 1.24M]
  ------------------
 2038|  1.24M|    arg.value_ = values_[id];
 2039|  1.24M|    return arg;
 2040|  1.24M|  }
_ZN3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1618|  1.24M|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1976|  1.24M|  constexpr auto is_packed() const -> bool {
 1977|  1.24M|    return (desc_ & detail::is_unpacked_bit) == 0;
 1978|  1.24M|  }
_ZNK3fmt2v917basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1983|  1.24M|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1984|  1.24M|    int shift = index * detail::packed_arg_bits;
 1985|  1.24M|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1986|  1.24M|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1987|  1.24M|  }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1620|  1.24M|  constexpr explicit operator bool() const noexcept {
 1621|  1.24M|    return type_ != detail::type::none_type;
 1622|  1.24M|  }
_ZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  858|  3.74M|    -> Container& {
  859|  3.74M|  using base = std::back_insert_iterator<Container>;
  860|  3.74M|  struct accessor : base {
  861|  3.74M|    accessor(base b) : base(b) {}
  862|  3.74M|    using base::container;
  863|  3.74M|  };
  864|  3.74M|  return *accessor(it).container;
  865|  3.74M|}
_ZZN3fmt2v96detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  861|  3.74M|    accessor(base b) : base(b) {}
_ZNK3fmt2v96detail6fill_tIcE4sizeEv:
 2107|  1.24M|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt2v96detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1683|  3.74M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1684|  3.74M|  get_container(out).append(begin, end);
 1685|  3.74M|  return out;
 1686|  3.74M|}
_ZN3fmt2v912format_specsIcEC2Ev:
 2158|  1.24M|        localized(false) {}
_ZN3fmt2v926basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  697|  1.24M|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1827|  1.24M|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE3outEv:
 1842|  3.74M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2586|  1.24M|    basic_string_view<Char> format_str, Handler&& handler) {
 2587|       |  // Workaround a name-lookup bug in MSVC's modules implementation.
 2588|  1.24M|  using detail::find;
 2589|       |
 2590|  1.24M|  auto begin = format_str.data();
 2591|  1.24M|  auto end = begin + format_str.size();
 2592|  1.24M|  if (end - begin < 32) {
  ------------------
  |  Branch (2592:7): [True: 580k, False: 667k]
  ------------------
 2593|       |    // Use a simple loop instead of memchr for small strings.
 2594|   580k|    const Char* p = begin;
 2595|  16.2M|    while (p != end) {
  ------------------
  |  Branch (2595:12): [True: 15.6M, False: 580k]
  ------------------
 2596|  15.6M|      auto c = *p++;
 2597|  15.6M|      if (c == '{') {
  ------------------
  |  Branch (2597:11): [True: 580k, False: 15.0M]
  ------------------
 2598|   580k|        handler.on_text(begin, p - 1);
 2599|   580k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2600|  15.0M|      } else if (c == '}') {
  ------------------
  |  Branch (2600:18): [True: 0, False: 15.0M]
  ------------------
 2601|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2601:13): [True: 0, False: 0]
  |  Branch (2601:25): [True: 0, False: 0]
  ------------------
 2602|      0|          return handler.on_error("unmatched '}' in format string");
 2603|      0|        handler.on_text(begin, p);
 2604|      0|        begin = ++p;
 2605|      0|      }
 2606|  15.6M|    }
 2607|   580k|    handler.on_text(begin, end);
 2608|   580k|    return;
 2609|   580k|  }
 2610|   667k|  struct writer {
 2611|   667k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2612|   667k|      if (from == to) return;
 2613|   667k|      for (;;) {
 2614|   667k|        const Char* p = nullptr;
 2615|   667k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2616|   667k|          return handler_.on_text(from, to);
 2617|   667k|        ++p;
 2618|   667k|        if (p == to || *p != '}')
 2619|   667k|          return handler_.on_error("unmatched '}' in format string");
 2620|   667k|        handler_.on_text(from, p);
 2621|   667k|        from = p + 1;
 2622|   667k|      }
 2623|   667k|    }
 2624|   667k|    Handler& handler_;
 2625|   667k|  } write = {handler};
 2626|  1.33M|  while (begin != end) {
  ------------------
  |  Branch (2626:10): [True: 1.33M, False: 0]
  ------------------
 2627|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2628|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2629|  1.33M|    const Char* p = begin;
 2630|  1.33M|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2630:9): [True: 1.33M, False: 0]
  |  Branch (2630:26): [True: 667k, False: 667k]
  ------------------
 2631|   667k|      return write(begin, end);
 2632|   667k|    write(begin, p);
 2633|   667k|    begin = parse_replacement_field(p, end, handler);
 2634|   667k|  }
 2635|   667k|}
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1845|  3.74M|  void advance_to(iterator it) {
 1846|  3.74M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1846:9): [Folded - Ignored]
  ------------------
 1847|  3.74M|  }
_ZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2549|  1.24M|                                           Handler&& handler) -> const Char* {
 2550|  1.24M|  struct id_adapter {
 2551|  1.24M|    Handler& handler;
 2552|  1.24M|    int arg_id;
 2553|       |
 2554|  1.24M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2555|  1.24M|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2556|  1.24M|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2557|  1.24M|      arg_id = handler.on_arg_id(id);
 2558|  1.24M|    }
 2559|  1.24M|  };
 2560|       |
 2561|  1.24M|  ++begin;
 2562|  1.24M|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2562:7): [True: 0, False: 1.24M]
  ------------------
 2563|  1.24M|  if (*begin == '}') {
  ------------------
  |  Branch (2563:7): [True: 0, False: 1.24M]
  ------------------
 2564|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2565|  1.24M|  } else if (*begin == '{') {
  ------------------
  |  Branch (2565:14): [True: 0, False: 1.24M]
  ------------------
 2566|      0|    handler.on_text(begin, begin + 1);
 2567|  1.24M|  } else {
 2568|  1.24M|    auto adapter = id_adapter{handler, 0};
 2569|  1.24M|    begin = parse_arg_id(begin, end, adapter);
 2570|  1.24M|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2570:14): [True: 1.24M, False: 0]
  ------------------
 2571|  1.24M|    if (c == '}') {
  ------------------
  |  Branch (2571:9): [True: 0, False: 1.24M]
  ------------------
 2572|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2573|  1.24M|    } else if (c == ':') {
  ------------------
  |  Branch (2573:16): [True: 1.24M, False: 0]
  ------------------
 2574|  1.24M|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2575|  1.24M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2575:11): [True: 0, False: 1.24M]
  |  Branch (2575:27): [True: 0, False: 1.24M]
  ------------------
 2576|      0|        return handler.on_error("unknown format specifier"), end;
 2577|  1.24M|    } else {
 2578|      0|      return handler.on_error("missing '}' in format string"), end;
 2579|      0|    }
 2580|  1.24M|  }
 2581|  1.24M|  return begin + 1;
 2582|  1.24M|}
_ZNK3fmt2v920basic_format_contextINS0_8appenderEcE3argEi:
 1829|  1.24M|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt2v920basic_format_contextINS0_8appenderEcE6localeEv:
 1849|  1.24M|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt2v926basic_format_parse_contextIcE11next_arg_idEv:
  721|  1.24M|  FMT_CONSTEXPR auto next_arg_id() -> int {
  722|  1.24M|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (722:9): [True: 0, False: 1.24M]
  ------------------
  723|      0|      detail::throw_format_error(
  724|      0|          "cannot switch from manual to automatic argument indexing");
  725|      0|      return 0;
  726|      0|    }
  727|  1.24M|    int id = next_arg_id_++;
  728|  1.24M|    do_check_arg_id(id);
  729|  1.24M|    return id;
  730|  1.24M|  }
_ZN3fmt2v926basic_format_parse_contextIcE15do_check_arg_idEi:
  792|  1.24M|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
  793|       |  // Argument id is only checked at compile-time during parsing because
  794|       |  // formatting has its own validation.
  795|  1.24M|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (795:7): [Folded - Ignored]
  ------------------
  796|  1.24M|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (796:8): [Folded - Ignored]
  |  Branch (796:28): [Folded - Ignored]
  ------------------
  797|      0|    using context = detail::compile_parse_context<Char>;
  798|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (798:9): [True: 0, False: 0]
  ------------------
  799|      0|      detail::throw_format_error("argument not found");
  800|      0|  }
  801|  1.24M|}
_ZN3fmt2v96detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2314|  1.24M|                                           Handler&& handler) -> const Char* {
 2315|  1.24M|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  368|  1.24M|      ::fmt::detail::ignore_unused((condition), (message))
  ------------------
 2316|  1.24M|  Char c = *begin;
 2317|  1.24M|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2317:7): [True: 1.24M, False: 0]
  |  Branch (2317:19): [True: 0, False: 1.24M]
  ------------------
 2318|  1.24M|  handler.on_auto();
 2319|  1.24M|  return begin;
 2320|  1.24M|}
_ZZN3fmt2v96detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2554|  1.24M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt2v916basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1624|  2.49M|  auto type() const -> detail::type { return type_; }
_ZN3fmt2v96detail7arg_refIcEC2Ev:
 2167|  2.49M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt2v96detail7arg_refIcE5valueC2Ei:
 2182|  2.49M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2384|  1.24M|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2385|  1.24M|  auto c = '\0';
 2386|  1.24M|  if (end - begin > 1) {
  ------------------
  |  Branch (2386:7): [True: 1.24M, False: 0]
  ------------------
 2387|  1.24M|    auto next = to_ascii(begin[1]);
 2388|  1.24M|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2388:9): [True: 1.24M, False: 0]
  ------------------
 2389|  1.24M|  } else {
 2390|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2390:9): [True: 0, False: 0]
  ------------------
 2391|      0|    c = to_ascii(*begin);
 2392|      0|  }
 2393|       |
 2394|  1.24M|  struct {
 2395|  1.24M|    state current_state = state::start;
 2396|  1.24M|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2397|  1.24M|      if (current_state >= s || !valid)
 2398|  1.24M|        throw_format_error("invalid format specifier");
 2399|  1.24M|      current_state = s;
 2400|  1.24M|    }
 2401|  1.24M|  } enter_state;
 2402|       |
 2403|  1.24M|  using pres = presentation_type;
 2404|  1.24M|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2405|  1.24M|  struct {
 2406|  1.24M|    const Char*& begin;
 2407|  1.24M|    dynamic_format_specs<Char>& specs;
 2408|  1.24M|    type arg_type;
 2409|       |
 2410|  1.24M|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2411|  1.24M|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
 2412|  1.24M|      specs.type = type;
 2413|  1.24M|      return begin + 1;
 2414|  1.24M|    }
 2415|  1.24M|  } parse_presentation_type{begin, specs, arg_type};
 2416|       |
 2417|  1.24M|  for (;;) {
 2418|  1.24M|    switch (c) {
 2419|      0|    case '<':
  ------------------
  |  Branch (2419:5): [True: 0, False: 1.24M]
  ------------------
 2420|      0|    case '>':
  ------------------
  |  Branch (2420:5): [True: 0, False: 1.24M]
  ------------------
 2421|      0|    case '^':
  ------------------
  |  Branch (2421:5): [True: 0, False: 1.24M]
  ------------------
 2422|      0|      enter_state(state::align);
 2423|      0|      specs.align = parse_align(c);
 2424|      0|      ++begin;
 2425|      0|      break;
 2426|      0|    case '+':
  ------------------
  |  Branch (2426:5): [True: 0, False: 1.24M]
  ------------------
 2427|      0|    case '-':
  ------------------
  |  Branch (2427:5): [True: 0, False: 1.24M]
  ------------------
 2428|      0|    case ' ':
  ------------------
  |  Branch (2428:5): [True: 0, False: 1.24M]
  ------------------
 2429|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2430|      0|      switch (c) {
  ------------------
  |  Branch (2430:15): [True: 0, False: 0]
  ------------------
 2431|      0|      case '+':
  ------------------
  |  Branch (2431:7): [True: 0, False: 0]
  ------------------
 2432|      0|        specs.sign = sign::plus;
 2433|      0|        break;
 2434|      0|      case '-':
  ------------------
  |  Branch (2434:7): [True: 0, False: 0]
  ------------------
 2435|      0|        specs.sign = sign::minus;
 2436|      0|        break;
 2437|      0|      case ' ':
  ------------------
  |  Branch (2437:7): [True: 0, False: 0]
  ------------------
 2438|      0|        specs.sign = sign::space;
 2439|      0|        break;
 2440|      0|      }
 2441|      0|      ++begin;
 2442|      0|      break;
 2443|      0|    case '#':
  ------------------
  |  Branch (2443:5): [True: 0, False: 1.24M]
  ------------------
 2444|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2445|      0|      specs.alt = true;
 2446|      0|      ++begin;
 2447|      0|      break;
 2448|      0|    case '0':
  ------------------
  |  Branch (2448:5): [True: 0, False: 1.24M]
  ------------------
 2449|      0|      enter_state(state::zero);
 2450|      0|      if (!is_arithmetic_type(arg_type))
  ------------------
  |  Branch (2450:11): [True: 0, False: 0]
  ------------------
 2451|      0|        throw_format_error("format specifier requires numeric argument");
 2452|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2452:11): [True: 0, False: 0]
  ------------------
 2453|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2454|      0|        specs.align = align::numeric;
 2455|      0|        specs.fill[0] = Char('0');
 2456|      0|      }
 2457|      0|      ++begin;
 2458|      0|      break;
 2459|      0|    case '1':
  ------------------
  |  Branch (2459:5): [True: 0, False: 1.24M]
  ------------------
 2460|      0|    case '2':
  ------------------
  |  Branch (2460:5): [True: 0, False: 1.24M]
  ------------------
 2461|      0|    case '3':
  ------------------
  |  Branch (2461:5): [True: 0, False: 1.24M]
  ------------------
 2462|      0|    case '4':
  ------------------
  |  Branch (2462:5): [True: 0, False: 1.24M]
  ------------------
 2463|      0|    case '5':
  ------------------
  |  Branch (2463:5): [True: 0, False: 1.24M]
  ------------------
 2464|      0|    case '6':
  ------------------
  |  Branch (2464:5): [True: 0, False: 1.24M]
  ------------------
 2465|      0|    case '7':
  ------------------
  |  Branch (2465:5): [True: 0, False: 1.24M]
  ------------------
 2466|      0|    case '8':
  ------------------
  |  Branch (2466:5): [True: 0, False: 1.24M]
  ------------------
 2467|      0|    case '9':
  ------------------
  |  Branch (2467:5): [True: 0, False: 1.24M]
  ------------------
 2468|      0|    case '{':
  ------------------
  |  Branch (2468:5): [True: 0, False: 1.24M]
  ------------------
 2469|      0|      enter_state(state::width);
 2470|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2471|      0|      break;
 2472|      0|    case '.':
  ------------------
  |  Branch (2472:5): [True: 0, False: 1.24M]
  ------------------
 2473|      0|      enter_state(state::precision,
 2474|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2475|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2476|      0|                              ctx);
 2477|      0|      break;
 2478|      0|    case 'L':
  ------------------
  |  Branch (2478:5): [True: 0, False: 1.24M]
  ------------------
 2479|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2480|      0|      specs.localized = true;
 2481|      0|      ++begin;
 2482|      0|      break;
 2483|      0|    case 'd':
  ------------------
  |  Branch (2483:5): [True: 0, False: 1.24M]
  ------------------
 2484|      0|      return parse_presentation_type(pres::dec, integral_set);
 2485|      0|    case 'o':
  ------------------
  |  Branch (2485:5): [True: 0, False: 1.24M]
  ------------------
 2486|      0|      return parse_presentation_type(pres::oct, integral_set);
 2487|      0|    case 'x':
  ------------------
  |  Branch (2487:5): [True: 0, False: 1.24M]
  ------------------
 2488|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2489|      0|    case 'X':
  ------------------
  |  Branch (2489:5): [True: 0, False: 1.24M]
  ------------------
 2490|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2491|      0|    case 'b':
  ------------------
  |  Branch (2491:5): [True: 0, False: 1.24M]
  ------------------
 2492|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2493|      0|    case 'B':
  ------------------
  |  Branch (2493:5): [True: 0, False: 1.24M]
  ------------------
 2494|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2495|      0|    case 'a':
  ------------------
  |  Branch (2495:5): [True: 0, False: 1.24M]
  ------------------
 2496|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2497|      0|    case 'A':
  ------------------
  |  Branch (2497:5): [True: 0, False: 1.24M]
  ------------------
 2498|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2499|      0|    case 'e':
  ------------------
  |  Branch (2499:5): [True: 0, False: 1.24M]
  ------------------
 2500|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2501|      0|    case 'E':
  ------------------
  |  Branch (2501:5): [True: 0, False: 1.24M]
  ------------------
 2502|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2503|      0|    case 'f':
  ------------------
  |  Branch (2503:5): [True: 0, False: 1.24M]
  ------------------
 2504|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2505|      0|    case 'F':
  ------------------
  |  Branch (2505:5): [True: 0, False: 1.24M]
  ------------------
 2506|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2507|      0|    case 'g':
  ------------------
  |  Branch (2507:5): [True: 0, False: 1.24M]
  ------------------
 2508|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2509|      0|    case 'G':
  ------------------
  |  Branch (2509:5): [True: 0, False: 1.24M]
  ------------------
 2510|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2511|      0|    case 'c':
  ------------------
  |  Branch (2511:5): [True: 0, False: 1.24M]
  ------------------
 2512|      0|      return parse_presentation_type(pres::chr, integral_set);
 2513|  1.24M|    case 's':
  ------------------
  |  Branch (2513:5): [True: 1.24M, False: 0]
  ------------------
 2514|  1.24M|      return parse_presentation_type(pres::string,
 2515|  1.24M|                                     bool_set | string_set | cstring_set);
 2516|      0|    case 'p':
  ------------------
  |  Branch (2516:5): [True: 0, False: 1.24M]
  ------------------
 2517|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2518|      0|    case '?':
  ------------------
  |  Branch (2518:5): [True: 0, False: 1.24M]
  ------------------
 2519|      0|      return parse_presentation_type(pres::debug,
 2520|      0|                                     char_set | string_set | cstring_set);
 2521|      0|    case '}':
  ------------------
  |  Branch (2521:5): [True: 0, False: 1.24M]
  ------------------
 2522|      0|      return begin;
 2523|      0|    default: {
  ------------------
  |  Branch (2523:5): [True: 0, False: 1.24M]
  ------------------
 2524|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2524:11): [True: 0, False: 0]
  ------------------
 2525|       |      // Parse fill and alignment.
 2526|      0|      auto fill_end = begin + code_point_length(begin);
 2527|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2527:11): [True: 0, False: 0]
  ------------------
 2528|      0|        throw_format_error("invalid format specifier");
 2529|      0|        return begin;
 2530|      0|      }
 2531|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2531:11): [True: 0, False: 0]
  ------------------
 2532|      0|        throw_format_error("invalid fill character '{'");
 2533|      0|        return begin;
 2534|      0|      }
 2535|      0|      auto align = parse_align(to_ascii(*fill_end));
 2536|      0|      enter_state(state::align, align != align::none);
 2537|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2538|      0|      specs.align = align;
 2539|      0|      begin = fill_end + 1;
 2540|      0|    }
 2541|  1.24M|    }
 2542|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2542:9): [True: 0, False: 0]
  ------------------
 2543|      0|    c = to_ascii(*begin);
 2544|      0|  }
 2545|  1.24M|}
_ZN3fmt2v96detail8to_asciiIcLi0EEEcT_:
 2201|  2.49M|constexpr auto to_ascii(Char c) -> char {
 2202|  2.49M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2202:10): [True: 2.49M, False: 0]
  ------------------
 2203|  2.49M|}
_ZN3fmt2v96detail11parse_alignEc:
 2267|  1.24M|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2268|  1.24M|  switch (c) {
  ------------------
  |  Branch (2268:11): [True: 1.24M, False: 0]
  ------------------
 2269|      0|  case '<':
  ------------------
  |  Branch (2269:3): [True: 0, False: 1.24M]
  ------------------
 2270|      0|    return align::left;
 2271|      0|  case '>':
  ------------------
  |  Branch (2271:3): [True: 0, False: 1.24M]
  ------------------
 2272|      0|    return align::right;
 2273|      0|  case '^':
  ------------------
  |  Branch (2273:3): [True: 0, False: 1.24M]
  ------------------
 2274|      0|    return align::center;
 2275|  1.24M|  }
 2276|  1.24M|  return align::none;
 2277|  1.24M|}
_ZN3fmt2v96detail2inENS1_4typeEi:
  643|  1.24M|constexpr auto in(type t, int set) -> bool {
  644|  1.24M|  return ((set >> static_cast<int>(t)) & 1) != 0;
  645|  1.24M|}
_ZZN3fmt2v96detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2410|  1.24M|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2411|  1.24M|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
  ------------------
  |  Branch (2411:11): [True: 0, False: 1.24M]
  ------------------
 2412|  1.24M|      specs.type = type;
 2413|  1.24M|      return begin + 1;
 2414|  1.24M|    }
_ZN3fmt2v916visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1641|  1.24M|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1642|  1.24M|  switch (arg.type_) {
  ------------------
  |  Branch (1642:11): [True: 0, False: 1.24M]
  ------------------
 1643|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1643:3): [True: 0, False: 1.24M]
  ------------------
 1644|      0|    break;
 1645|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1645:3): [True: 0, False: 1.24M]
  ------------------
 1646|      0|    return vis(arg.value_.int_value);
 1647|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1647:3): [True: 0, False: 1.24M]
  ------------------
 1648|      0|    return vis(arg.value_.uint_value);
 1649|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1649:3): [True: 0, False: 1.24M]
  ------------------
 1650|      0|    return vis(arg.value_.long_long_value);
 1651|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1651:3): [True: 0, False: 1.24M]
  ------------------
 1652|      0|    return vis(arg.value_.ulong_long_value);
 1653|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1653:3): [True: 0, False: 1.24M]
  ------------------
 1654|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1655|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1655:3): [True: 0, False: 1.24M]
  ------------------
 1656|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1657|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1657:3): [True: 0, False: 1.24M]
  ------------------
 1658|      0|    return vis(arg.value_.bool_value);
 1659|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1659:3): [True: 0, False: 1.24M]
  ------------------
 1660|      0|    return vis(arg.value_.char_value);
 1661|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1661:3): [True: 0, False: 1.24M]
  ------------------
 1662|      0|    return vis(arg.value_.float_value);
 1663|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1663:3): [True: 0, False: 1.24M]
  ------------------
 1664|      0|    return vis(arg.value_.double_value);
 1665|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1665:3): [True: 0, False: 1.24M]
  ------------------
 1666|      0|    return vis(arg.value_.long_double_value);
 1667|  1.04M|  case detail::type::cstring_type:
  ------------------
  |  Branch (1667:3): [True: 1.04M, False: 206k]
  ------------------
 1668|  1.04M|    return vis(arg.value_.string.data);
 1669|   206k|  case detail::type::string_type:
  ------------------
  |  Branch (1669:3): [True: 206k, False: 1.04M]
  ------------------
 1670|   206k|    using sv = basic_string_view<typename Context::char_type>;
 1671|   206k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1672|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1672:3): [True: 0, False: 1.24M]
  ------------------
 1673|      0|    return vis(arg.value_.pointer);
 1674|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1674:3): [True: 0, False: 1.24M]
  ------------------
 1675|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1676|  1.24M|  }
 1677|      0|  return vis(monostate());
 1678|  1.24M|}
_ZN3fmt2v96detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2236|  2.67M|                              const char*& out) -> bool {
 2237|  2.67M|  out = static_cast<const char*>(
 2238|  2.67M|      std::memchr(first, value, to_unsigned(last - first)));
 2239|  2.67M|  return out != nullptr;
 2240|  2.67M|}
_ZZN3fmt2v96detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2611|  1.33M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2612|  1.33M|      if (from == to) return;
  ------------------
  |  Branch (2612:11): [True: 0, False: 1.33M]
  ------------------
 2613|  1.33M|      for (;;) {
 2614|  1.33M|        const Char* p = nullptr;
 2615|  1.33M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2615:13): [True: 1.33M, False: 0]
  ------------------
 2616|  1.33M|          return handler_.on_text(from, to);
 2617|      0|        ++p;
 2618|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2618:13): [True: 0, False: 0]
  |  Branch (2618:24): [True: 0, False: 0]
  ------------------
 2619|      0|          return handler_.on_error("unmatched '}' in format string");
 2620|      0|        handler_.on_text(from, p);
 2621|      0|        from = p + 1;
 2622|      0|      }
 2623|  1.33M|    }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1313|   206k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1314|   206k|    string.data = val.data();
 1315|   206k|    string.size = val.size();
 1316|   206k|  }
_ZN3fmt2v96detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1441|  1.04M|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1442|  1.04M|    return val;
 1443|  1.04M|  }
_ZN3fmt2v96detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1309|  1.04M|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1310|  1.04M|    string.data = val;
 1311|  1.04M|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1311:9): [Folded - Ignored]
  ------------------
 1312|  1.04M|  }
_ZNK3fmt2v96detail6bufferIcE4dataEv:
  939|  1.24M|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt2v97vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1447|  1.24M|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1448|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1449|       |  // can be better optimized in fmt::format anyway.
 1450|  1.24M|  auto buffer = memory_buffer();
 1451|  1.24M|  detail::vformat_to(buffer, fmt, args);
 1452|  1.24M|  return to_string(buffer);
 1453|  1.24M|}

_ZN3fmt2v96detail6bufferIcE6appendIcEEvPKT_S7_:
  842|  3.74M|void buffer<T>::append(const U* begin, const U* end) {
  843|  7.48M|  while (begin != end) {
  ------------------
  |  Branch (843:10): [True: 3.74M, False: 3.74M]
  ------------------
  844|  3.74M|    auto count = to_unsigned(end - begin);
  845|  3.74M|    try_reserve(size_ + count);
  846|  3.74M|    auto free_cap = capacity_ - size_;
  847|  3.74M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (847:9): [True: 0, False: 3.74M]
  ------------------
  848|  3.74M|    std::uninitialized_copy_n(begin, count, make_checked(ptr_ + size_, count));
  849|  3.74M|    size_ += count;
  850|  3.74M|    begin += count;
  851|  3.74M|  }
  852|  3.74M|}
_ZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4489|  1.24M|                typename vformat_args<Char>::type args, locale_ref loc) {
 4490|       |  // workaround for msvc bug regarding name-lookup in module
 4491|       |  // link names into function scope
 4492|  1.24M|  using detail::arg_formatter;
 4493|  1.24M|  using detail::buffer_appender;
 4494|  1.24M|  using detail::custom_formatter;
 4495|  1.24M|  using detail::default_arg_formatter;
 4496|  1.24M|  using detail::get_arg;
 4497|  1.24M|  using detail::locale_ref;
 4498|  1.24M|  using detail::parse_format_specs;
 4499|  1.24M|  using detail::to_unsigned;
 4500|  1.24M|  using detail::type;
 4501|  1.24M|  using detail::write;
 4502|  1.24M|  auto out = buffer_appender<Char>(buf);
 4503|  1.24M|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4503:7): [True: 0, False: 1.24M]
  |  Branch (4503:26): [True: 0, False: 0]
  ------------------
 4504|      0|    auto arg = args.get(0);
 4505|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4505:9): [True: 0, False: 0]
  ------------------
 4506|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4507|      0|    return;
 4508|      0|  }
 4509|       |
 4510|  1.24M|  struct format_handler : error_handler {
 4511|  1.24M|    basic_format_parse_context<Char> parse_context;
 4512|  1.24M|    buffer_context<Char> context;
 4513|       |
 4514|  1.24M|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4515|  1.24M|                   basic_format_args<buffer_context<Char>> p_args,
 4516|  1.24M|                   locale_ref p_loc)
 4517|  1.24M|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4518|       |
 4519|  1.24M|    void on_text(const Char* begin, const Char* end) {
 4520|  1.24M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4521|  1.24M|      context.advance_to(write<Char>(context.out(), text));
 4522|  1.24M|    }
 4523|       |
 4524|  1.24M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4525|  1.24M|      return parse_context.next_arg_id();
 4526|  1.24M|    }
 4527|  1.24M|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4528|  1.24M|      return parse_context.check_arg_id(id), id;
 4529|  1.24M|    }
 4530|  1.24M|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4531|  1.24M|      int arg_id = context.arg_id(id);
 4532|  1.24M|      if (arg_id < 0) on_error("argument not found");
 4533|  1.24M|      return arg_id;
 4534|  1.24M|    }
 4535|       |
 4536|  1.24M|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4537|  1.24M|      auto arg = get_arg(context, id);
 4538|  1.24M|      context.advance_to(visit_format_arg(
 4539|  1.24M|          default_arg_formatter<Char>{context.out(), context.args(),
 4540|  1.24M|                                      context.locale()},
 4541|  1.24M|          arg));
 4542|  1.24M|    }
 4543|       |
 4544|  1.24M|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4545|  1.24M|        -> const Char* {
 4546|  1.24M|      auto arg = get_arg(context, id);
 4547|  1.24M|      if (arg.type() == type::custom_type) {
 4548|  1.24M|        parse_context.advance_to(begin);
 4549|  1.24M|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4550|  1.24M|        return parse_context.begin();
 4551|  1.24M|      }
 4552|  1.24M|      auto specs = detail::dynamic_format_specs<Char>();
 4553|  1.24M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4554|  1.24M|      detail::handle_dynamic_spec<detail::width_checker>(
 4555|  1.24M|          specs.width, specs.width_ref, context);
 4556|  1.24M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4557|  1.24M|          specs.precision, specs.precision_ref, context);
 4558|  1.24M|      if (begin == end || *begin != '}')
 4559|  1.24M|        on_error("missing '}' in format string");
 4560|  1.24M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4561|  1.24M|      context.advance_to(visit_format_arg(f, arg));
 4562|  1.24M|      return begin;
 4563|  1.24M|    }
 4564|  1.24M|  };
 4565|  1.24M|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4566|  1.24M|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  911|  1.24M|      : alloc_(alloc) {
  912|  1.24M|    this->set(store_, SIZE);
  913|  1.24M|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (913:9): [Folded - Ignored]
  ------------------
  914|  1.24M|  }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  982|    401|    size_t size) {
  983|    401|  detail::abort_fuzzing_if(size > 5000);
  984|    401|  const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  985|    401|  size_t old_capacity = this->capacity();
  986|    401|  size_t new_capacity = old_capacity + old_capacity / 2;
  987|    401|  if (size > new_capacity)
  ------------------
  |  Branch (987:7): [True: 119, False: 282]
  ------------------
  988|    119|    new_capacity = size;
  989|    282|  else if (new_capacity > max_size)
  ------------------
  |  Branch (989:12): [True: 0, False: 282]
  ------------------
  990|      0|    new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (990:20): [True: 0, False: 0]
  ------------------
  991|    401|  T* old_data = this->data();
  992|    401|  T* new_data =
  993|    401|      std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  994|       |  // The following code doesn't throw, so the raw pointer above doesn't leak.
  995|    401|  std::uninitialized_copy(old_data, old_data + this->size(),
  996|    401|                          detail::make_checked(new_data, new_capacity));
  997|    401|  this->set(new_data, new_capacity);
  998|       |  // deallocate must not throw according to the standard, but even if it does,
  999|       |  // the buffer already uses the new storage and will deallocate it in
 1000|       |  // destructor.
 1001|    401|  if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (1001:7): [True: 128, False: 273]
  ------------------
 1002|    401|}
_ZN3fmt2v96detail16abort_fuzzing_ifEb:
  259|    401|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  260|    401|  ignore_unused(condition);
  261|       |#ifdef FMT_FUZZ
  262|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  263|       |#endif
  264|    401|}
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  915|  1.24M|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt2v919basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  897|  1.24M|  FMT_CONSTEXPR20 void deallocate() {
  898|  1.24M|    T* data = this->data();
  899|  1.24M|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (899:9): [True: 273, False: 1.24M]
  ------------------
  900|  1.24M|  }
_ZN3fmt2v96detail12make_checkedIcEEPT_S4_m:
  541|  3.74M|template <typename T> constexpr auto make_checked(T* p, size_t) -> T* {
  542|  3.74M|  return p;
  543|  3.74M|}
_ZN3fmt2v96detail7reserveINS0_8appenderEEERT_S5_m:
  569|  3.74M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  570|  3.74M|  return it;
  571|  3.74M|}
_ZN3fmt2v96detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  597|  3.74M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  598|  3.74M|  return it;
  599|  3.74M|}
_ZN3fmt2v96detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  626|  2.49M|                                                  OutputIt out) -> OutputIt {
  627|  2.49M|  return copy_str<OutChar>(begin, end, out);
  628|  2.49M|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3819|  2.49M|    -> OutputIt {
 3820|  2.49M|  auto it = reserve(out, value.size());
 3821|  2.49M|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3822|  2.49M|  return base_iterator(out, it);
 3823|  2.49M|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4519|  2.49M|    void on_text(const Char* begin, const Char* end) {
 4520|  2.49M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4521|  2.49M|      context.advance_to(write<Char>(context.out(), text));
 4522|  2.49M|    }
_ZN3fmt2v96detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEENT_10format_argERS6_T0_:
 4002|  1.24M|    typename Context::format_arg {
 4003|  1.24M|  auto arg = ctx.arg(id);
 4004|  1.24M|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (4004:7): [True: 0, False: 1.24M]
  ------------------
 4005|  1.24M|  return arg;
 4006|  1.24M|}
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4524|  1.24M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4525|  1.24M|      return parse_context.next_arg_id();
 4526|  1.24M|    }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4545|  1.24M|        -> const Char* {
 4546|  1.24M|      auto arg = get_arg(context, id);
 4547|  1.24M|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4547:11): [True: 0, False: 1.24M]
  ------------------
 4548|      0|        parse_context.advance_to(begin);
 4549|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4550|      0|        return parse_context.begin();
 4551|      0|      }
 4552|  1.24M|      auto specs = detail::dynamic_format_specs<Char>();
 4553|  1.24M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4554|  1.24M|      detail::handle_dynamic_spec<detail::width_checker>(
 4555|  1.24M|          specs.width, specs.width_ref, context);
 4556|  1.24M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4557|  1.24M|          specs.precision, specs.precision_ref, context);
 4558|  1.24M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4558:11): [True: 0, False: 1.24M]
  |  Branch (4558:27): [True: 0, False: 1.24M]
  ------------------
 4559|      0|        on_error("missing '}' in format string");
 4560|  1.24M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4561|  1.24M|      context.advance_to(visit_format_arg(f, arg));
 4562|  1.24M|      return begin;
 4563|  1.24M|    }
_ZN3fmt2v96detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 4011|  1.24M|                                       Context& ctx) {
 4012|  1.24M|  switch (ref.kind) {
  ------------------
  |  Branch (4012:11): [True: 0, False: 1.24M]
  ------------------
 4013|  1.24M|  case arg_id_kind::none:
  ------------------
  |  Branch (4013:3): [True: 1.24M, False: 0]
  ------------------
 4014|  1.24M|    break;
 4015|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4015:3): [True: 0, False: 1.24M]
  ------------------
 4016|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4017|      0|                                              ctx.error_handler());
 4018|      0|    break;
 4019|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4019:3): [True: 0, False: 1.24M]
  ------------------
 4020|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4021|      0|                                              ctx.error_handler());
 4022|      0|    break;
 4023|  1.24M|  }
 4024|  1.24M|}
_ZN3fmt2v96detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 4011|  1.24M|                                       Context& ctx) {
 4012|  1.24M|  switch (ref.kind) {
  ------------------
  |  Branch (4012:11): [True: 0, False: 1.24M]
  ------------------
 4013|  1.24M|  case arg_id_kind::none:
  ------------------
  |  Branch (4013:3): [True: 1.24M, False: 0]
  ------------------
 4014|  1.24M|    break;
 4015|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (4015:3): [True: 0, False: 1.24M]
  ------------------
 4016|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 4017|      0|                                              ctx.error_handler());
 4018|      0|    break;
 4019|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (4019:3): [True: 0, False: 1.24M]
  ------------------
 4020|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 4021|      0|                                              ctx.error_handler());
 4022|      0|    break;
 4023|  1.24M|  }
 4024|  1.24M|}
_ZN3fmt2v96detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3931|  1.04M|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3932|  1.04M|    return detail::write(out, value, specs, locale);
 3933|  1.04M|  }
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2359|  1.04M|    -> OutputIt {
 2360|  1.04M|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2360:10): [True: 1.04M, False: 0]
  ------------------
 2361|  1.04M|             ? write(out, basic_string_view<Char>(s), specs, {})
 2362|  1.04M|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2363|  1.04M|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2353|  1.24M|    -> OutputIt {
 2354|  1.24M|  return write(out, s, specs);
 2355|  1.24M|}
_ZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2330|  1.24M|                         const format_specs<Char>& specs) -> OutputIt {
 2331|  1.24M|  auto data = s.data();
 2332|  1.24M|  auto size = s.size();
 2333|  1.24M|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2333:7): [True: 0, False: 1.24M]
  |  Branch (2333:31): [True: 0, False: 0]
  ------------------
 2334|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2335|  1.24M|  bool is_debug = specs.type == presentation_type::debug;
 2336|  1.24M|  size_t width = 0;
 2337|  1.24M|  if (specs.width != 0) {
  ------------------
  |  Branch (2337:7): [True: 0, False: 1.24M]
  ------------------
 2338|      0|    if (is_debug)
  ------------------
  |  Branch (2338:9): [True: 0, False: 0]
  ------------------
 2339|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2340|      0|    else
 2341|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2342|      0|  }
 2343|  1.24M|  return write_padded(out, specs, size, width,
 2344|  1.24M|                      [=](reserve_iterator<OutputIt> it) {
 2345|  1.24M|                        if (is_debug) return write_escaped_string(it, s);
 2346|  1.24M|                        return copy_str<Char>(data, data + size, it);
 2347|  1.24M|                      });
 2348|  1.24M|}
_ZN3fmt2v96detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1783|  1.24M|                                size_t size, size_t width, F&& f) -> OutputIt {
 1784|  1.24M|  static_assert(align == align::left || align == align::right, "");
 1785|  1.24M|  unsigned spec_width = to_unsigned(specs.width);
 1786|  1.24M|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1786:20): [True: 0, False: 1.24M]
  ------------------
 1787|       |  // Shifts are encoded as string literals because static constexpr is not
 1788|       |  // supported in constexpr functions.
 1789|  1.24M|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1789:18): [Folded - Ignored]
  ------------------
 1790|  1.24M|  size_t left_padding = padding >> shifts[specs.align];
 1791|  1.24M|  size_t right_padding = padding - left_padding;
 1792|  1.24M|  auto it = reserve(out, size + padding * specs.fill.size());
 1793|  1.24M|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1793:7): [True: 0, False: 1.24M]
  ------------------
 1794|  1.24M|  it = f(it);
 1795|  1.24M|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1795:7): [True: 0, False: 1.24M]
  ------------------
 1796|  1.24M|  return base_iterator(out, it);
 1797|  1.24M|}
_ZZN3fmt2v96detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2344|  1.24M|                      [=](reserve_iterator<OutputIt> it) {
 2345|  1.24M|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2345:29): [True: 0, False: 1.24M]
  ------------------
 2346|  1.24M|                        return copy_str<Char>(data, data + size, it);
 2347|  1.24M|                      });
_ZN3fmt2v96detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3931|   206k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3932|   206k|    return detail::write(out, value, specs, locale);
 3933|   206k|  }
_ZZN3fmt2v96detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4517|  1.24M|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt2v99to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4479|  1.24M|    -> std::basic_string<Char> {
 4480|  1.24M|  auto size = buf.size();
 4481|  1.24M|  detail::assume(size < std::basic_string<Char>().max_size());
 4482|  1.24M|  return std::basic_string<Char>(buf.data(), size);
 4483|  1.24M|}
_ZN3fmt2v96detail6assumeEb:
  510|  1.24M|FMT_INLINE void assume(bool condition) {
  511|  1.24M|  (void)condition;
  512|  1.24M|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  513|  1.24M|  __builtin_assume(condition);
  514|  1.24M|#endif
  515|  1.24M|}

LLVMFuzzerTestOneInput:
   12|  14.5k|{
   13|  14.5k|    OpenAutoIt::disable_output();
   14|       |
   15|  14.5k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   16|       |
   17|  14.5k|    OpenAutoIt::ParseResult parse_result;
   18|       |
   19|  14.5k|    OpenAutoIt::Lexer lexer{parse_result, source};
   20|  14.5k|    lexer.ProcessAll();
   21|       |
   22|  14.5k|    OpenAutoIt::Parser parser;
   23|  14.5k|    parser.ParseDocument(parse_result);
   24|       |
   25|  14.5k|    const volatile phi::scope_ptr<OpenAutoIt::ASTDocument> doc{phi::move(parse_result.m_Document)};
   26|       |
   27|       |    // Ignore result
   28|  14.5k|    (void)doc;
   29|       |
   30|  14.5k|    return 0;
   31|  14.5k|}

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|  83.9k|        {
   20|  83.9k|            m_NodeType = ASTNodeType::BinaryExpression;
   21|  83.9k|        }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  18.6k|        {
   18|  18.6k|            m_NodeType = ASTNodeType::BooleanLiteral;
   19|  18.6k|        }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|  55.6k|        {
   20|  55.6k|            m_Statements.emplace_back(phi::move(child));
   21|  55.6k|        }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  5.22k|        {
   25|  5.22k|            m_Functions.emplace_back(phi::move(child));
   26|  5.22k|        }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|   359k|        {
   13|   359k|            switch (m_NodeType)
   14|   359k|            {
   15|   126k|                case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:17): [True: 126k, False: 233k]
  ------------------
   16|   126k|                case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:17): [True: 0, False: 359k]
  ------------------
   17|   157k|                case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:17): [True: 30.4k, False: 329k]
  ------------------
   18|   157k|                    return true;
   19|       |
   20|   202k|                default:
  ------------------
  |  Branch (20:17): [True: 202k, False: 157k]
  ------------------
   21|   202k|                    return false;
   22|   359k|            }
   23|   359k|        }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|   359k|        {
   17|   359k|            m_NodeType = ASTNodeType::ExpressionStatement;
   18|   359k|        }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  9.38k|        {
   17|  9.38k|            m_NodeType = ASTNodeType::FloatLiteral;
   18|  9.38k|        }

_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|   289k|        {
   21|   289k|            m_NodeType = ASTNodeType::FunctionCallExpression;
   22|   289k|        }
_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|   158k|        {
   26|   158k|            if (m_IsBuiltIn)
  ------------------
  |  Branch (26:17): [True: 3.43k, False: 155k]
  ------------------
   27|  3.43k|            {
   28|  3.43k|                return enum_name(m_BuiltInFunction);
   29|  3.43k|            }
   30|       |
   31|   155k|            return m_FunctionName;
   32|   158k|        }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  14.5k|        {
   25|  14.5k|            m_NodeType = ASTNodeType::IfStatement;
   26|  14.5k|        }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|   278k|        {
   17|   278k|            m_NodeType = ASTNodeType::IntegerLiteral;
   18|   278k|        }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|  12.1k|        {
   19|  12.1k|            m_NodeType = ASTNodeType::KeywordLiteral;
   20|  12.1k|            PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|  12.1k|        }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   64|  1.54M|        virtual ~ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   67|   202k|        {
   68|   202k|            PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   69|   202k|            PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   70|       |
   71|   202k|            return enum_name(m_NodeType);
   72|   202k|        }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   43|   202k|    {
   44|   202k|        switch (node_type)
   45|   202k|        {
   46|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   47|      0|    case ASTNodeType::name:                                                                        \
   48|      0|        return "AST" #name;
   49|       |
   50|      0|            OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   13|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 202k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   14|  25.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   47|  25.0k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 25.0k, False: 177k]
  |  |  |  |  ------------------
  |  |  |  |   48|  25.0k|        return "AST" #name;
  |  |  ------------------
  |  |   15|  25.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   47|  14.6k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 14.6k, False: 187k]
  |  |  |  |  ------------------
  |  |  |  |   48|  14.6k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  14.6k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 202k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   17|  6.69k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   47|  6.69k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 6.69k, False: 195k]
  |  |  |  |  ------------------
  |  |  |  |   48|  6.69k|        return "AST" #name;
  |  |  ------------------
  |  |   18|  6.69k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 202k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 202k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   20|  75.5k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   47|  75.5k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 75.5k, False: 127k]
  |  |  |  |  ------------------
  |  |  |  |   48|  75.5k|        return "AST" #name;
  |  |  ------------------
  |  |   21|  75.5k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   47|  10.4k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 10.4k, False: 192k]
  |  |  |  |  ------------------
  |  |  |  |   48|  10.4k|        return "AST" #name;
  |  |  ------------------
  |  |   22|  70.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   47|  70.2k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 70.2k, False: 132k]
  |  |  |  |  ------------------
  |  |  |  |   48|  70.2k|        return "AST" #name;
  |  |  ------------------
  |  |   23|  70.2k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 202k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   24|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 202k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   25|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 202k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  |  |   26|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   47|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (47:5): [True: 0, False: 202k]
  |  |  |  |  ------------------
  |  |  |  |   48|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   51|       |
   52|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   53|       |
   54|      0|            default:
  ------------------
  |  Branch (54:13): [True: 0, False: 202k]
  ------------------
   55|      0|                PHI_ASSERT_NOT_REACHED();
   56|   202k|        }
   57|   202k|    }
_ZN10OpenAutoIt7ASTNodeC2Ev:
   62|  1.54M|        ASTNode() = default;

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|   102k|        {
   15|   102k|            m_NodeType = ASTNodeType::StringLiteral;
   16|   102k|        }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|   185k|        {
   20|   185k|            m_NodeType = ASTNodeType::VariableAssignment;
   21|   185k|        }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|   104k|        {
   15|   104k|            m_NodeType = ASTNodeType::VariableExpression;
   16|   104k|        }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  31.5k|        {
   18|  31.5k|            m_NodeType = ASTNodeType::WhileStatement;
   19|  31.5k|        }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  1.37M|        {
   46|  1.37M|            Token token{kind,
   47|  1.37M|                        m_Source.substring_view(
   48|  1.37M|                                static_cast<typename phi::string_view::size_type::value_type>(
   49|  1.37M|                                        m_Iterator - m_Source.begin()),
   50|  1.37M|                                1u),
   51|  1.37M|                        m_LineNumber, m_Column};
   52|       |
   53|       |            // 1 character sized token
   54|  1.37M|            ++m_Column;
   55|       |
   56|  1.37M|            return token;
   57|  1.37M|        }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  2.18M|        {
   61|  2.18M|            Token token{kind, TokenText(token_begin), m_LineNumber, m_Column};
   62|       |
   63|       |            // Consume the amount of characters that make up our new token
   64|  2.18M|            m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  2.18M|            return token;
   67|  2.18M|        }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  3.42M|        {
   71|  3.42M|            return m_Source.substring_view(token_begin, m_Iterator);
   72|  3.42M|        }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   61|  1.60M|        {
   62|  1.60M|            switch (token_kind)
   63|  1.60M|            {
   64|  2.18k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (64:17): [True: 2.18k, False: 1.60M]
  ------------------
   65|  3.66k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (65:17): [True: 1.47k, False: 1.60M]
  ------------------
   66|  4.50k|                case TokenKind::KW_Not:
  ------------------
  |  Branch (66:17): [True: 846, False: 1.60M]
  ------------------
   67|  4.50k|                    return true;
   68|       |
   69|  1.60M|                default:
  ------------------
  |  Branch (69:17): [True: 1.60M, False: 4.50k]
  ------------------
   70|  1.60M|                    return false;
   71|  1.60M|            }
   72|  1.60M|        }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   76|   697k|        {
   77|   697k|            switch (token_kind)
   78|   697k|            {
   79|    411|                case TokenKind::KW_And:
  ------------------
  |  Branch (79:17): [True: 411, False: 697k]
  ------------------
   80|    698|                case TokenKind::KW_Or:
  ------------------
  |  Branch (80:17): [True: 287, False: 697k]
  ------------------
   81|  45.8k|                case TokenKind::OP_Equals:
  ------------------
  |  Branch (81:17): [True: 45.1k, False: 652k]
  ------------------
   82|  66.7k|                case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (82:17): [True: 20.9k, False: 677k]
  ------------------
   83|  67.9k|                case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (83:17): [True: 1.20k, False: 696k]
  ------------------
   84|  70.0k|                case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (84:17): [True: 2.03k, False: 695k]
  ------------------
   85|  78.5k|                case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (85:17): [True: 8.56k, False: 689k]
  ------------------
   86|  87.0k|                case TokenKind::OP_Plus:
  ------------------
  |  Branch (86:17): [True: 8.44k, False: 689k]
  ------------------
   87|  91.2k|                case TokenKind::OP_Minus:
  ------------------
  |  Branch (87:17): [True: 4.25k, False: 693k]
  ------------------
   88|  94.9k|                case TokenKind::OP_Multiply:
  ------------------
  |  Branch (88:17): [True: 3.65k, False: 694k]
  ------------------
   89|   104k|                case TokenKind::OP_Divide:
  ------------------
  |  Branch (89:17): [True: 9.25k, False: 688k]
  ------------------
   90|   104k|                case TokenKind::OP_Raise:
  ------------------
  |  Branch (90:17): [True: 697, False: 697k]
  ------------------
   91|   105k|                case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (91:17): [True: 1.03k, False: 696k]
  ------------------
   92|   106k|                case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (92:17): [True: 425, False: 697k]
  ------------------
   93|   112k|                case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (93:17): [True: 6.35k, False: 691k]
  ------------------
   94|   113k|                case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (94:17): [True: 551, False: 697k]
  ------------------
   95|   116k|                case TokenKind::OP_LessThan:
  ------------------
  |  Branch (95:17): [True: 3.49k, False: 694k]
  ------------------
   96|   117k|                case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (96:17): [True: 1.12k, False: 696k]
  ------------------
   97|   117k|                    return true;
   98|       |
   99|   580k|                default:
  ------------------
  |  Branch (99:17): [True: 580k, False: 117k]
  ------------------
  100|   580k|                    return false;
  101|   697k|            }
  102|   697k|        }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  123|  5.22k|        {
  124|  5.22k|            m_ParseResult->m_Document->AppendFunction(phi::move(function));
  125|  5.22k|        }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  116|  55.6k|        {
  117|  55.6k|            m_ParseResult->m_Document->AppendStatement(phi::move(statement));
  118|  55.6k|        }

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS2_7integerImEES9_:
   23|  3.55M|        {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   36|  16.1M|        {
   37|  16.1M|            return m_Kind;
   38|  16.1M|        }
_ZNK10OpenAutoIt5Token7GetTextEv:
   41|  2.25M|        {
   42|  2.25M|            return m_Text;
   43|  2.25M|        }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   68|   676k|        {
   69|   676k|            const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   70|       |
   71|   676k|            if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (71:17): [True: 10.5k, False: 666k]
  ------------------
   72|   676k|                underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (72:17): [True: 10.5k, False: 0]
  ------------------
   73|  10.5k|            {
   74|  10.5k|                return true;
   75|  10.5k|            }
   76|       |
   77|   666k|            return false;
   78|   676k|        }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
   81|   288k|        {
   82|   288k|            switch (m_Kind)
   83|   288k|            {
   84|  10.1k|                case TokenKind::KW_Default:
  ------------------
  |  Branch (84:17): [True: 10.1k, False: 278k]
  ------------------
   85|  24.3k|                case TokenKind::KW_Null:
  ------------------
  |  Branch (85:17): [True: 14.2k, False: 273k]
  ------------------
   86|  24.3k|                    return true;
   87|       |
   88|   263k|                default:
  ------------------
  |  Branch (88:17): [True: 263k, False: 24.3k]
  ------------------
   89|   263k|                    return false;
   90|   288k|            }
   91|   288k|        }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  679|   842k|    {
  680|   842k|        switch (token_kind)
  681|   842k|        {
  682|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  683|      0|    case TokenKind::name:                                                                          \
  684|      0|        return #name;
  685|       |
  686|      0|            OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  5.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  683|  5.14k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.14k, False: 837k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.14k|        return #name;
  |  |  ------------------
  |  |   13|  32.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  683|  32.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 32.4k, False: 810k]
  |  |  |  |  ------------------
  |  |  |  |  684|  32.4k|        return #name;
  |  |  ------------------
  |  |   14|  32.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   15|  5.71k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  683|  5.71k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.71k, False: 836k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.71k|        return #name;
  |  |  ------------------
  |  |   16|  5.71k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  683|     62|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 62, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     62|        return #name;
  |  |  ------------------
  |  |   17|     62|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   18|   124k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  683|   124k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 124k, False: 718k]
  |  |  |  |  ------------------
  |  |  |  |  684|   124k|        return #name;
  |  |  ------------------
  |  |   19|   124k|    /* Literals */                                                                                 \
  |  |   20|   124k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  683|   106k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 106k, False: 735k]
  |  |  |  |  ------------------
  |  |  |  |  684|   106k|        return #name;
  |  |  ------------------
  |  |   21|   106k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  683|  7.29k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7.29k, False: 835k]
  |  |  |  |  ------------------
  |  |  |  |  684|  7.29k|        return #name;
  |  |  ------------------
  |  |   22|  72.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  683|  72.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 72.3k, False: 770k]
  |  |  |  |  ------------------
  |  |  |  |  684|  72.3k|        return #name;
  |  |  ------------------
  |  |   23|  72.3k|    /* Punctuation */                                                                              \
  |  |   24|  72.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  683|  16.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16.4k, False: 826k]
  |  |  |  |  ------------------
  |  |  |  |  684|  16.4k|        return #name;
  |  |  ------------------
  |  |   25|  40.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  40.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40.1k, False: 802k]
  |  |  |  |  ------------------
  |  |  |  |  684|  40.1k|        return #name;
  |  |  ------------------
  |  |   26|  82.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  683|  82.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 82.1k, False: 760k]
  |  |  |  |  ------------------
  |  |  |  |  684|  82.1k|        return #name;
  |  |  ------------------
  |  |   27|  82.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   28|  2.46k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  2.46k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.46k, False: 840k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.46k|        return #name;
  |  |  ------------------
  |  |   29|  4.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  683|  4.29k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.29k, False: 838k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.29k|        return #name;
  |  |  ------------------
  |  |   30|  4.29k|    /* Macros */                                                                                   \
  |  |   31|  4.29k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  4.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   33|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   34|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   35|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   36|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   37|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   38|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   39|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |   40|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |   41|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   42|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   43|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   44|    600|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  683|    600|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 600, False: 841k]
  |  |  |  |  ------------------
  |  |  |  |  684|    600|        return #name;
  |  |  ------------------
  |  |   45|    600|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   46|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   47|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   49|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |   50|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   51|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   52|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   53|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   54|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   55|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   56|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   58|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   59|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   60|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |   61|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   65|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   67|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   68|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   69|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   70|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   72|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   73|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   74|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |   75|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |   76|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   77|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   81|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |   82|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   83|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   84|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   86|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  683|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     28|        return #name;
  |  |  ------------------
  |  |   87|     76|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  683|     76|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 76, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     76|        return #name;
  |  |  ------------------
  |  |   88|     76|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |   89|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   91|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   92|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  683|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 68, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     68|        return #name;
  |  |  ------------------
  |  |   93|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   94|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   95|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |   96|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   97|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   98|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  100|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  101|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  102|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  683|     54|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 54, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     54|        return #name;
  |  |  ------------------
  |  |  103|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  105|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  106|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  107|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  108|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  109|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  110|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  111|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  683|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     24|        return #name;
  |  |  ------------------
  |  |  112|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  113|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  119|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  120|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  122|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  123|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  124|     90|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  683|     90|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 90, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     90|        return #name;
  |  |  ------------------
  |  |  125|     90|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  127|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  128|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  129|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  130|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  131|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  132|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  133|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  134|     34|    /* Preprocessor identifiers */                                                                 \
  |  |  135|     34|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|     34|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|  2.05k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  683|  2.05k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.05k, False: 840k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.05k|        return #name;
  |  |  ------------------
  |  |  138|  3.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  683|  3.37k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.37k, False: 839k]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.37k|        return #name;
  |  |  ------------------
  |  |  139|  3.37k|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|  3.37k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  683|    844|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 844, False: 841k]
  |  |  |  |  ------------------
  |  |  |  |  684|    844|        return #name;
  |  |  ------------------
  |  |  141|    844|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|    844|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  683|    249|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 249, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    249|        return #name;
  |  |  ------------------
  |  |  143|    249|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|    594|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|    594|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 594, False: 841k]
  |  |  |  |  ------------------
  |  |  |  |  684|    594|        return #name;
  |  |  ------------------
  |  |  145|    594|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|    929|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  683|    929|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 929, False: 841k]
  |  |  |  |  ------------------
  |  |  |  |  684|    929|        return #name;
  |  |  ------------------
  |  |  147|    929|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    929|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  683|    220|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 220, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    220|        return #name;
  |  |  ------------------
  |  |  149|    220|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    400|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  683|    400|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 400, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    400|        return #name;
  |  |  ------------------
  |  |  151|    400|    /* Keywords */                                                                                 \
  |  |  152|    400|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    400|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    400|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|  10.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  683|  10.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10.7k, False: 831k]
  |  |  |  |  ------------------
  |  |  |  |  684|  10.7k|        return #name;
  |  |  ------------------
  |  |  156|  10.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  683|  5.86k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.86k, False: 836k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.86k|        return #name;
  |  |  ------------------
  |  |  157|  5.86k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  5.86k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  161|      7|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|  4.11k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  683|  4.11k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.11k, False: 838k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.11k|        return #name;
  |  |  ------------------
  |  |  163|  4.11k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|  4.11k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  165|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  166|    132|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  683|    132|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 132, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    132|        return #name;
  |  |  ------------------
  |  |  167|    132|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  683|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     40|        return #name;
  |  |  ------------------
  |  |  168|     40|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|    116|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  683|    116|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 116, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    116|        return #name;
  |  |  ------------------
  |  |  170|    116|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  171|     12|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  173|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  175|     26|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  179|    132|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  683|    132|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 132, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    132|        return #name;
  |  |  ------------------
  |  |  180|    132|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  181|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  182|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|    288|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  683|    288|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 288, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    288|        return #name;
  |  |  ------------------
  |  |  184|    288|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  13.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  683|  13.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 13.4k, False: 829k]
  |  |  |  |  ------------------
  |  |  |  |  684|  13.4k|        return #name;
  |  |  ------------------
  |  |  186|  13.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  187|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  188|  3.83k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  683|  3.83k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3.83k, False: 838k]
  |  |  |  |  ------------------
  |  |  |  |  684|  3.83k|        return #name;
  |  |  ------------------
  |  |  189|  3.83k|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  3.83k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  683|    449|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 449, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    449|        return #name;
  |  |  ------------------
  |  |  191|  5.89k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  683|  5.89k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.89k, False: 836k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.89k|        return #name;
  |  |  ------------------
  |  |  192|  5.89k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  683|  5.29k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.29k, False: 837k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.29k|        return #name;
  |  |  ------------------
  |  |  193|  5.29k|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|  5.29k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  683|  4.69k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.69k, False: 837k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.69k|        return #name;
  |  |  ------------------
  |  |  195|  5.55k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  683|  5.55k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.55k, False: 836k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.55k|        return #name;
  |  |  ------------------
  |  |  196|  5.55k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|  6.74k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  683|  6.74k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6.74k, False: 835k]
  |  |  |  |  ------------------
  |  |  |  |  684|  6.74k|        return #name;
  |  |  ------------------
  |  |  198|  6.74k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|  6.74k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  200|      4|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|     44|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  683|     44|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 44, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     44|        return #name;
  |  |  ------------------
  |  |  202|     44|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  203|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  204|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  206|     14|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  208|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|    405|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  683|    405|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 405, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    405|        return #name;
  |  |  ------------------
  |  |  213|  9.27k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|  9.27k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 9.27k, False: 833k]
  |  |  |  |  ------------------
  |  |  |  |  684|  9.27k|        return #name;
  |  |  ------------------
  |  |  214|  9.27k|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|  9.27k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  216|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  219|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  220|  1.43k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  683|  1.43k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.43k, False: 841k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.43k|        return #name;
  |  |  ------------------
  |  |  221|  1.43k|    /* Operator */                                                                                 \
  |  |  222|  1.43k|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  95.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)                                                     \
  |  |  ------------------
  |  |  |  |  683|  95.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 95.0k, False: 747k]
  |  |  |  |  ------------------
  |  |  |  |  684|  95.0k|        return #name;
  |  |  ------------------
  |  |  224|  95.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)                                                 \
  |  |  ------------------
  |  |  |  |  683|  17.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 17.7k, False: 824k]
  |  |  |  |  ------------------
  |  |  |  |  684|  17.7k|        return #name;
  |  |  ------------------
  |  |  225|  17.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)                                                \
  |  |  ------------------
  |  |  |  |  683|    832|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 832, False: 841k]
  |  |  |  |  ------------------
  |  |  |  |  684|    832|        return #name;
  |  |  ------------------
  |  |  226|    832|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)                                             \
  |  |  ------------------
  |  |  |  |  683|    226|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 226, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    226|        return #name;
  |  |  ------------------
  |  |  227|  4.44k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|  4.44k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.44k, False: 838k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.44k|        return #name;
  |  |  ------------------
  |  |  228|  5.01k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)                                                \
  |  |  ------------------
  |  |  |  |  683|  5.01k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.01k, False: 837k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.01k|        return #name;
  |  |  ------------------
  |  |  229|  5.01k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals)                                          \
  |  |  ------------------
  |  |  |  |  683|     36|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 36, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     36|        return #name;
  |  |  ------------------
  |  |  230|  4.23k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)                                                       \
  |  |  ------------------
  |  |  |  |  683|  4.23k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.23k, False: 838k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.23k|        return #name;
  |  |  ------------------
  |  |  231|  4.23k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)                                                      \
  |  |  ------------------
  |  |  |  |  683|  2.56k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.56k, False: 839k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.56k|        return #name;
  |  |  ------------------
  |  |  232|  4.96k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)                                                   \
  |  |  ------------------
  |  |  |  |  683|  4.96k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4.96k, False: 837k]
  |  |  |  |  ------------------
  |  |  |  |  684|  4.96k|        return #name;
  |  |  ------------------
  |  |  233|  28.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)                                                     \
  |  |  ------------------
  |  |  |  |  683|  28.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 28.4k, False: 814k]
  |  |  |  |  ------------------
  |  |  |  |  684|  28.4k|        return #name;
  |  |  ------------------
  |  |  234|  28.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)                                                      \
  |  |  ------------------
  |  |  |  |  683|  8.93k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8.93k, False: 833k]
  |  |  |  |  ------------------
  |  |  |  |  684|  8.93k|        return #name;
  |  |  ------------------
  |  |  235|  8.93k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)                                               \
  |  |  ------------------
  |  |  |  |  683|  5.14k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5.14k, False: 837k]
  |  |  |  |  ------------------
  |  |  |  |  684|  5.14k|        return #name;
  |  |  ------------------
  |  |  236|  5.14k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)                                                   \
  |  |  ------------------
  |  |  |  |  683|  1.54k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.54k, False: 840k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.54k|        return #name;
  |  |  ------------------
  |  |  237|  40.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)                                                \
  |  |  ------------------
  |  |  |  |  683|  40.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 40.6k, False: 801k]
  |  |  |  |  ------------------
  |  |  |  |  684|  40.6k|        return #name;
  |  |  ------------------
  |  |  238|  40.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)                                           \
  |  |  ------------------
  |  |  |  |  683|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 68, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     68|        return #name;
  |  |  ------------------
  |  |  239|  10.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)                                                   \
  |  |  ------------------
  |  |  |  |  683|  10.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10.2k, False: 832k]
  |  |  |  |  ------------------
  |  |  |  |  684|  10.2k|        return #name;
  |  |  ------------------
  |  |  240|  10.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)                                              \
  |  |  ------------------
  |  |  |  |  683|    179|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 179, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    179|        return #name;
  |  |  ------------------
  |  |  241|  2.40k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)                                                  \
  |  |  ------------------
  |  |  |  |  683|  2.40k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2.40k, False: 840k]
  |  |  |  |  ------------------
  |  |  |  |  684|  2.40k|        return #name;
  |  |  ------------------
  |  |  242|  16.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)                                                \
  |  |  ------------------
  |  |  |  |  683|  16.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16.3k, False: 826k]
  |  |  |  |  ------------------
  |  |  |  |  684|  16.3k|        return #name;
  |  |  ------------------
  |  |  243|  16.3k|    /* Built-in Functions */                                                                       \
  |  |  244|  16.3k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  16.3k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  16.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  683|    498|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 498, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    498|        return #name;
  |  |  ------------------
  |  |  247|    498|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  248|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  249|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  250|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  251|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  252|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  254|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  255|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  256|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  257|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  263|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  264|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  265|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  269|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  270|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  271|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  272|  1.00k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  683|  1.00k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1.00k, False: 841k]
  |  |  |  |  ------------------
  |  |  |  |  684|  1.00k|        return #name;
  |  |  ------------------
  |  |  273|  1.00k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  274|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  683|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 17, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     17|        return #name;
  |  |  ------------------
  |  |  275|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  276|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  277|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  279|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  280|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  282|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  283|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  287|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  288|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  295|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  296|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  297|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  683|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 19, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     19|        return #name;
  |  |  ------------------
  |  |  298|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  299|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  300|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  301|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  683|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 16, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     16|        return #name;
  |  |  ------------------
  |  |  302|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  307|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  683|     64|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 64, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     64|        return #name;
  |  |  ------------------
  |  |  308|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  309|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  310|    244|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|    244|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 244, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    244|        return #name;
  |  |  ------------------
  |  |  311|    244|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  312|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  313|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  683|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 10, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     10|        return #name;
  |  |  ------------------
  |  |  314|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  315|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |  316|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  320|     63|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  683|     63|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 63, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     63|        return #name;
  |  |  ------------------
  |  |  321|     63|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  322|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  323|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  324|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  327|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  328|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  329|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  330|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  331|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  332|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  333|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  334|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  335|     58|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|     58|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 58, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     58|        return #name;
  |  |  ------------------
  |  |  336|     58|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  337|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  338|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  339|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  340|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  341|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  342|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  343|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  344|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  345|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  347|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  348|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  349|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  352|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  683|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 24, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     24|        return #name;
  |  |  ------------------
  |  |  353|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  355|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  357|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  358|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  359|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  361|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  362|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  363|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  364|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  365|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  366|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  367|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  368|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  683|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 11, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     11|        return #name;
  |  |  ------------------
  |  |  369|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  370|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  683|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 68, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     68|        return #name;
  |  |  ------------------
  |  |  371|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  372|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  373|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  374|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  683|     36|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 36, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     36|        return #name;
  |  |  ------------------
  |  |  375|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  379|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  380|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  384|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  385|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  397|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  398|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  402|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  403|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  404|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  406|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  407|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  415|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  417|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  418|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  419|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  421|     53|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  683|     53|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 53, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     53|        return #name;
  |  |  ------------------
  |  |  422|     53|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  427|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  428|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  430|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  431|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  434|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  435|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  436|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  437|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  438|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  440|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  683|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 30, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     30|        return #name;
  |  |  ------------------
  |  |  441|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  443|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  444|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  445|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  446|    102|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  683|    102|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 102, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    102|        return #name;
  |  |  ------------------
  |  |  447|    102|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  448|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  683|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 18, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     18|        return #name;
  |  |  ------------------
  |  |  449|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  450|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  451|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  452|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  453|    480|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  683|    480|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 480, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    480|        return #name;
  |  |  ------------------
  |  |  454|    480|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|    205|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 205, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    205|        return #name;
  |  |  ------------------
  |  |  455|    205|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  456|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  460|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  461|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  462|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  463|     34|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  683|     34|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 34, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     34|        return #name;
  |  |  ------------------
  |  |  464|    168|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  683|    168|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 168, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    168|        return #name;
  |  |  ------------------
  |  |  465|    168|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  466|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  467|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  468|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  470|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  471|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  472|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  683|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 23, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     23|        return #name;
  |  |  ------------------
  |  |  473|     61|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  683|     61|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 61, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     61|        return #name;
  |  |  ------------------
  |  |  474|     61|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  475|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  476|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  477|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  479|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  480|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  482|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  483|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  485|     56|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  683|     56|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 56, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     56|        return #name;
  |  |  ------------------
  |  |  486|     56|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  488|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  489|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  491|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  492|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  493|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  494|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  495|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  496|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  497|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  498|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  683|     50|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 50, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     50|        return #name;
  |  |  ------------------
  |  |  499|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  500|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  503|    240|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  683|    240|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 240, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    240|        return #name;
  |  |  ------------------
  |  |  504|    240|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  683|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 8, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      8|        return #name;
  |  |  ------------------
  |  |  505|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  507|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  508|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  509|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  510|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  511|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  683|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 30, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     30|        return #name;
  |  |  ------------------
  |  |  512|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  517|    571|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  683|    571|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 571, False: 841k]
  |  |  |  |  ------------------
  |  |  |  |  684|    571|        return #name;
  |  |  ------------------
  |  |  518|    571|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  519|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  521|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  522|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  523|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  524|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  525|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  683|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 26, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     26|        return #name;
  |  |  ------------------
  |  |  526|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  528|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  529|     44|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  683|     44|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 44, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     44|        return #name;
  |  |  ------------------
  |  |  530|     44|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  533|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  534|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  536|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  537|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  538|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  683|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 14, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     14|        return #name;
  |  |  ------------------
  |  |  539|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  540|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  541|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  542|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  543|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  683|     25|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 25, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     25|        return #name;
  |  |  ------------------
  |  |  544|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  548|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  549|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  550|     62|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  683|     62|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 62, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     62|        return #name;
  |  |  ------------------
  |  |  551|     62|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  553|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  554|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  555|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  562|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  563|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  566|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  567|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  568|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  569|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  570|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  578|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  683|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 7, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      7|        return #name;
  |  |  ------------------
  |  |  579|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  580|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  582|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  583|     33|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  683|     33|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 33, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     33|        return #name;
  |  |  ------------------
  |  |  584|     33|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  585|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  586|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  588|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  589|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  590|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 30, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     30|        return #name;
  |  |  ------------------
  |  |  591|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  596|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  597|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  600|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  683|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 38, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     38|        return #name;
  |  |  ------------------
  |  |  601|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  603|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  604|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  611|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  612|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  613|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  615|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  683|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 5, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      5|        return #name;
  |  |  ------------------
  |  |  616|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  618|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  619|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  620|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  683|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 4, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      4|        return #name;
  |  |  ------------------
  |  |  621|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  622|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  623|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  624|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  627|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  628|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  683|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 23, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     23|        return #name;
  |  |  ------------------
  |  |  629|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  631|    107|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  683|    107|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 107, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|    107|        return #name;
  |  |  ------------------
  |  |  632|    107|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  683|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 12, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     12|        return #name;
  |  |  ------------------
  |  |  633|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  635|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 22, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     22|        return #name;
  |  |  ------------------
  |  |  636|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  637|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  638|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  683|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 2, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      2|        return #name;
  |  |  ------------------
  |  |  639|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  644|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  683|     72|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 72, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|     72|        return #name;
  |  |  ------------------
  |  |  645|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  646|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  683|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 3, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      3|        return #name;
  |  |  ------------------
  |  |  647|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  648|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  683|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 6, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      6|        return #name;
  |  |  ------------------
  |  |  649|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  683|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 1, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  683|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (683:5): [True: 0, False: 842k]
  |  |  |  |  ------------------
  |  |  |  |  684|      0|        return #name;
  |  |  ------------------
  ------------------
  687|       |
  688|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  689|       |
  690|      0|            default:
  ------------------
  |  Branch (690:13): [True: 0, False: 842k]
  ------------------
  691|      0|                PHI_ASSERT_NOT_REACHED();
  692|   842k|        }
  693|   842k|    }

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  3.55M|        {
   21|       |#if defined(PHI_DEBUG)
   22|       |            PHI_ASSERT(!m_Finialized);
   23|       |#endif
   24|       |
   25|  3.55M|            m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  3.55M|        }

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  157|  23.3k|{
  158|  23.3k|    static constexpr auto map =
  159|  23.3k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  160|  23.3k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  161|       |
  162|  23.3k|    std::string str{token.begin(), token.end()};
  163|  23.3k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  164|       |
  165|  23.3k|    return map.at(phi::string_view(str.c_str(), str.size()));
  166|  23.3k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  183|  23.1k|{
  184|  23.1k|    static constexpr auto map =
  185|  23.1k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  186|  23.1k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  187|       |
  188|  23.1k|    std::string str{token.begin(), token.end()};
  189|  23.1k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  190|       |
  191|  23.1k|    return map.at(phi::string_view(str.c_str(), str.size()));
  192|  23.1k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  660|   896k|{
  661|   896k|    static constexpr auto keyword_map =
  662|   896k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  663|   896k|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  664|   896k|    static constexpr auto builtin_map =
  665|   896k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  666|   896k|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  667|       |
  668|   896k|    std::string str{token.begin(), token.end()};
  669|   896k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  670|       |
  671|   896k|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  672|       |
  673|   896k|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  674|   896k|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (674:9): [True: 502k, False: 393k]
  ------------------
  675|   502k|    {
  676|   502k|        return builtin_map.at(string);
  677|   502k|    }
  678|       |
  679|   393k|    return keyword;
  680|   896k|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  706|   322k|{
  707|   322k|    static constexpr auto map =
  708|   322k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  709|   322k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  710|       |
  711|   322k|    return map.at(token);
  712|   322k|}
_ZN10OpenAutoIt5LexerC2ERNS_11ParseResultEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  783|  14.5k|    {}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  803|  13.7M|    {
  804|  13.7M|        return m_Iterator == m_Source.end();
  805|  13.7M|    }
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  813|  3.55M|    {
  814|  4.75M|        while (!IsFinished())
  ------------------
  |  Branch (814:16): [True: 4.75M, False: 2.78k]
  ------------------
  815|  4.75M|        {
  816|  4.75M|            char current_character = *m_Iterator;
  817|       |
  818|       |            /* Embedded null character */
  819|       |
  820|  4.75M|            if (current_character == '\0')
  ------------------
  |  Branch (820:17): [True: 274k, False: 4.47M]
  ------------------
  821|   274k|            {
  822|   274k|                m_ParseResult.m_Warnings.emplace_back(
  823|   274k|                        ParseWarning::EmbeddedNullCharacter(m_LineNumber, m_Column));
  824|       |
  825|   274k|                SkipCurrentCharacter();
  826|   274k|            }
  827|       |
  828|       |            /* Multiline comments */
  829|       |
  830|  4.47M|            else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (830:22): [True: 1.04k, False: 4.47M]
  ------------------
  831|  1.04k|            {
  832|  1.04k|                iterator       begin_of_multiline_comment            = m_Iterator;
  833|  1.04k|                const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  834|  1.04k|                const phi::u64 beginning_column_of_multiline_comment = m_Column;
  835|       |
  836|  6.09k|                while (!IsFinished())
  ------------------
  |  Branch (836:24): [True: 5.98k, False: 107]
  ------------------
  837|  5.98k|                {
  838|  5.98k|                    current_character = *m_Iterator;
  839|       |
  840|       |                    // Check for end comment multiline
  841|  5.98k|                    if (current_character == '#')
  ------------------
  |  Branch (841:25): [True: 2.53k, False: 3.45k]
  ------------------
  842|  2.53k|                    {
  843|  2.53k|                        iterator begin_of_token = m_Iterator;
  844|  2.53k|                        ConsumeCurrentCharacter();
  845|       |
  846|  20.3k|                        while (!IsFinished())
  ------------------
  |  Branch (846:32): [True: 20.3k, False: 54]
  ------------------
  847|  20.3k|                        {
  848|  20.3k|                            current_character = *m_Iterator;
  849|       |
  850|  20.3k|                            if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (850:33): [True: 17.8k, False: 2.48k]
  ------------------
  851|  17.8k|                            {
  852|  17.8k|                                ConsumeCurrentCharacter();
  853|  17.8k|                                continue;
  854|  17.8k|                            }
  855|       |
  856|  2.48k|                            break;
  857|  20.3k|                        }
  858|       |
  859|  2.53k|                        const TokenKind pre_processor_token_kind =
  860|  2.53k|                                lookup_pre_processor(TokenText(begin_of_token));
  861|       |
  862|  2.53k|                        if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (862:29): [True: 933, False: 1.60k]
  ------------------
  863|    933|                        {
  864|    933|                            m_InsideMultiLineComment = false;
  865|       |
  866|       |                            // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  867|    933|                            m_Iterator -= TokenText(begin_of_token).length().unsafe();
  868|       |
  869|    933|                            Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  870|    933|                                        beginning_line_of_multiline_comment,
  871|    933|                                        beginning_column_of_multiline_comment};
  872|       |
  873|    933|                            return token;
  874|    933|                        }
  875|  2.53k|                    }
  876|  3.45k|                    else if (current_character == '\n')
  ------------------
  |  Branch (876:30): [True: 557, False: 2.89k]
  ------------------
  877|    557|                    {
  878|    557|                        ConsumeCurrentCharacter();
  879|    557|                        AdvanceToNextLine();
  880|    557|                    }
  881|  2.89k|                    else
  882|  2.89k|                    {
  883|       |                        // Otherwise simply consume the character
  884|  2.89k|                        ConsumeCurrentCharacter();
  885|  2.89k|                        m_Column += 1u;
  886|  2.89k|                    }
  887|  5.98k|                }
  888|  1.04k|            }
  889|       |
  890|       |            /* Skip characters */
  891|       |
  892|  4.47M|            else if (is_skip_character(current_character))
  ------------------
  |  Branch (892:22): [True: 285k, False: 4.18M]
  ------------------
  893|   285k|            {
  894|   285k|                SkipCurrentCharacter();
  895|   285k|            }
  896|       |
  897|       |            /* New Lines */
  898|       |
  899|  4.18M|            else if (current_character == '\n')
  ------------------
  |  Branch (899:22): [True: 306k, False: 3.88M]
  ------------------
  900|   306k|            {
  901|   306k|                Token new_line_token = ConstructToken(TokenKind::NewLine);
  902|       |
  903|   306k|                ConsumeCurrentCharacter();
  904|   306k|                AdvanceToNextLine();
  905|       |
  906|   306k|                return new_line_token;
  907|   306k|            }
  908|       |
  909|       |            /* Comment */
  910|       |
  911|  3.88M|            else if (current_character == ';')
  ------------------
  |  Branch (911:22): [True: 16.9k, False: 3.86M]
  ------------------
  912|  16.9k|            {
  913|  16.9k|                iterator begin_of_token = m_Iterator;
  914|  16.9k|                ConsumeCurrentCharacter();
  915|       |
  916|  99.1k|                while (!IsFinished())
  ------------------
  |  Branch (916:24): [True: 98.8k, False: 355]
  ------------------
  917|  98.8k|                {
  918|  98.8k|                    current_character = *m_Iterator;
  919|       |
  920|  98.8k|                    if (current_character != '\n')
  ------------------
  |  Branch (920:25): [True: 82.1k, False: 16.6k]
  ------------------
  921|  82.1k|                    {
  922|  82.1k|                        ConsumeCurrentCharacter();
  923|  82.1k|                        continue;
  924|  82.1k|                    }
  925|       |
  926|  16.6k|                    break;
  927|  98.8k|                }
  928|       |
  929|  16.9k|                return ConstructToken(TokenKind::Comment, begin_of_token);
  930|  16.9k|            }
  931|       |
  932|       |            /* Macros */
  933|       |
  934|  3.86M|            else if (current_character == '@')
  ------------------
  |  Branch (934:22): [True: 23.3k, False: 3.84M]
  ------------------
  935|  23.3k|            {
  936|  23.3k|                iterator begin_of_token = m_Iterator;
  937|  23.3k|                ConsumeCurrentCharacter();
  938|       |
  939|   139k|                while (!IsFinished())
  ------------------
  |  Branch (939:24): [True: 139k, False: 286]
  ------------------
  940|   139k|                {
  941|   139k|                    current_character = *m_Iterator;
  942|       |
  943|   139k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (943:25): [True: 116k, False: 23.0k]
  ------------------
  944|   116k|                    {
  945|   116k|                        ConsumeCurrentCharacter();
  946|   116k|                        continue;
  947|   116k|                    }
  948|       |
  949|  23.0k|                    break;
  950|   139k|                }
  951|       |
  952|       |                // Emit token
  953|  23.3k|                return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  954|  23.3k|            }
  955|       |
  956|       |            /* Variable identifier */
  957|       |
  958|  3.84M|            else if (current_character == '$')
  ------------------
  |  Branch (958:22): [True: 367k, False: 3.47M]
  ------------------
  959|   367k|            {
  960|   367k|                iterator     begin_of_token = m_Iterator;
  961|   367k|                phi::boolean parsed_something{false};
  962|   367k|                ConsumeCurrentCharacter();
  963|       |
  964|   836k|                while (!IsFinished())
  ------------------
  |  Branch (964:24): [True: 834k, False: 2.14k]
  ------------------
  965|   834k|                {
  966|   834k|                    current_character = *m_Iterator;
  967|       |
  968|   834k|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (968:25): [True: 468k, False: 365k]
  ------------------
  969|   468k|                    {
  970|   468k|                        ConsumeCurrentCharacter();
  971|   468k|                        parsed_something = true;
  972|   468k|                        continue;
  973|   468k|                    }
  974|       |
  975|   365k|                    break;
  976|   834k|                }
  977|       |
  978|       |                // Ensure that '$' is not a valid variable identifier
  979|   367k|                if (!parsed_something)
  ------------------
  |  Branch (979:21): [True: 19.1k, False: 348k]
  ------------------
  980|  19.1k|                {
  981|  19.1k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
  982|  19.1k|                }
  983|       |
  984|       |                // Emit Token
  985|   348k|                return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  986|   367k|            }
  987|       |
  988|       |            /* PreProcessor directive */
  989|       |
  990|  3.47M|            else if (current_character == '#')
  ------------------
  |  Branch (990:22): [True: 20.6k, False: 3.45M]
  ------------------
  991|  20.6k|            {
  992|  20.6k|                iterator begin_of_token = m_Iterator;
  993|  20.6k|                ConsumeCurrentCharacter();
  994|       |
  995|   180k|                while (!IsFinished())
  ------------------
  |  Branch (995:24): [True: 180k, False: 352]
  ------------------
  996|   180k|                {
  997|   180k|                    current_character = *m_Iterator;
  998|       |
  999|   180k|                    if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (999:25): [True: 160k, False: 20.2k]
  ------------------
 1000|   160k|                    {
 1001|   160k|                        ConsumeCurrentCharacter();
 1002|   160k|                        continue;
 1003|   160k|                    }
 1004|       |
 1005|  20.2k|                    break;
 1006|   180k|                }
 1007|       |
 1008|       |                // Check for start of multiline comment
 1009|  20.6k|                const TokenKind pre_processor_token_kind =
 1010|  20.6k|                        lookup_pre_processor(TokenText(begin_of_token));
 1011|       |
 1012|  20.6k|                if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (1012:21): [True: 1.04k, False: 19.5k]
  ------------------
 1013|  1.04k|                {
 1014|  1.04k|                    m_InsideMultiLineComment = true;
 1015|  1.04k|                }
 1016|       |
 1017|  20.6k|                return ConstructToken(pre_processor_token_kind, begin_of_token);
 1018|  20.6k|            }
 1019|       |
 1020|       |            /* SingleQuoteStringLiteral */
 1021|       |
 1022|  3.45M|            else if (current_character == '\'')
  ------------------
  |  Branch (1022:22): [True: 121k, False: 3.33M]
  ------------------
 1023|   121k|            {
 1024|   121k|                iterator     begin_of_token = m_Iterator;
 1025|   121k|                phi::boolean did_terminate  = false;
 1026|   121k|                ConsumeCurrentCharacter();
 1027|       |
 1028|   250k|                while (!IsFinished())
  ------------------
  |  Branch (1028:24): [True: 250k, False: 344]
  ------------------
 1029|   250k|                {
 1030|   250k|                    current_character = *m_Iterator;
 1031|   250k|                    ConsumeCurrentCharacter();
 1032|       |
 1033|   250k|                    if (current_character == '\'')
  ------------------
  |  Branch (1033:25): [True: 121k, False: 128k]
  ------------------
 1034|   121k|                    {
 1035|   121k|                        did_terminate = true;
 1036|   121k|                        break;
 1037|   121k|                    }
 1038|   250k|                }
 1039|       |
 1040|   121k|                if (did_terminate)
  ------------------
  |  Branch (1040:21): [True: 121k, False: 344]
  ------------------
 1041|   121k|                {
 1042|   121k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1043|   121k|                }
 1044|       |
 1045|       |                // TODO: Warn unterminated string literal
 1046|   121k|            }
 1047|       |
 1048|       |            /* DoubleQuoteStringLiteral */
 1049|       |
 1050|  3.33M|            else if (current_character == '\"')
  ------------------
  |  Branch (1050:22): [True: 45.8k, False: 3.28M]
  ------------------
 1051|  45.8k|            {
 1052|  45.8k|                iterator     begin_of_token = m_Iterator;
 1053|  45.8k|                phi::boolean did_terminate  = false;
 1054|  45.8k|                ConsumeCurrentCharacter();
 1055|       |
 1056|  57.3k|                while (!IsFinished())
  ------------------
  |  Branch (1056:24): [True: 57.1k, False: 215]
  ------------------
 1057|  57.1k|                {
 1058|  57.1k|                    current_character = *m_Iterator;
 1059|  57.1k|                    ConsumeCurrentCharacter();
 1060|       |
 1061|  57.1k|                    if (current_character == '\"')
  ------------------
  |  Branch (1061:25): [True: 45.5k, False: 11.5k]
  ------------------
 1062|  45.5k|                    {
 1063|  45.5k|                        did_terminate = true;
 1064|  45.5k|                        break;
 1065|  45.5k|                    }
 1066|  57.1k|                }
 1067|       |
 1068|  45.8k|                if (did_terminate)
  ------------------
  |  Branch (1068:21): [True: 45.5k, False: 215]
  ------------------
 1069|  45.5k|                {
 1070|  45.5k|                    return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1071|  45.5k|                }
 1072|  45.8k|            }
 1073|       |
 1074|       |            /* Number Literals - IntegerLiteral/FloatLiteral */
 1075|       |
 1076|  3.28M|            else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1076:22): [True: 364k, False: 2.92M]
  |  Branch (1076:22): [True: 386k, False: 2.90M]
  |  Branch (1076:58): [True: 21.9k, False: 2.90M]
  ------------------
 1077|   386k|            {
 1078|   386k|                const phi::boolean start_with_zero{current_character == '0'};
 1079|   386k|                phi::boolean       parsing_hex{false};
 1080|   386k|                phi::boolean       parsing_float{current_character == '.'};
 1081|       |
 1082|   386k|                iterator begin_of_token = m_Iterator;
 1083|   386k|                ConsumeCurrentCharacter();
 1084|       |
 1085|   491k|                while (!IsFinished())
  ------------------
  |  Branch (1085:24): [True: 490k, False: 1.30k]
  ------------------
 1086|   490k|                {
 1087|   490k|                    current_character = *m_Iterator;
 1088|       |
 1089|       |                    // Is the second character
 1090|   490k|                    if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1090:25): [True: 385k, False: 104k]
  |  Branch (1090:62): [True: 101k, False: 283k]
  ------------------
 1091|   101k|                    {
 1092|       |                        // Hex character
 1093|   101k|                        if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1093:29): [True: 13.6k, False: 87.9k]
  |  Branch (1093:57): [True: 15.4k, False: 72.5k]
  ------------------
 1094|  29.0k|                        {
 1095|  29.0k|                            parsing_hex = true;
 1096|  29.0k|                            ConsumeCurrentCharacter();
 1097|  29.0k|                            continue;
 1098|  29.0k|                        }
 1099|   101k|                    }
 1100|       |
 1101|       |                    // Actually parsing
 1102|   461k|                    if (parsing_hex)
  ------------------
  |  Branch (1102:25): [True: 57.9k, False: 403k]
  ------------------
 1103|  57.9k|                    {
 1104|  57.9k|                        if (parsing_float)
  ------------------
  |  Branch (1104:29): [True: 0, False: 57.9k]
  ------------------
 1105|      0|                        {
 1106|       |                            // TODO: Error hexliteral not allowed for floats
 1107|      0|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1108|      0|                        }
 1109|       |
 1110|  57.9k|                        if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1110:29): [True: 29.0k, False: 28.8k]
  ------------------
 1111|  29.0k|                        {
 1112|  29.0k|                            ConsumeCurrentCharacter();
 1113|  29.0k|                            continue;
 1114|  29.0k|                        }
 1115|  57.9k|                    }
 1116|   403k|                    else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1116:30): [True: 46.5k, False: 356k]
  ------------------
 1117|  46.5k|                    {
 1118|  46.5k|                        ConsumeCurrentCharacter();
 1119|  46.5k|                        continue;
 1120|  46.5k|                    }
 1121|       |                    // Literal dot
 1122|   356k|                    else if (current_character == '.')
  ------------------
  |  Branch (1122:30): [True: 1.22k, False: 355k]
  ------------------
 1123|  1.22k|                    {
 1124|  1.22k|                        if (parsing_float)
  ------------------
  |  Branch (1124:29): [True: 651, False: 571]
  ------------------
 1125|    651|                        {
 1126|       |                            // TODO: Error more than one dot in float literal
 1127|    651|                            return ConstructToken(TokenKind::Garbage, begin_of_token);
 1128|    651|                        }
 1129|       |
 1130|    571|                        parsing_float = true;
 1131|    571|                        ConsumeCurrentCharacter();
 1132|    571|                        continue;
 1133|  1.22k|                    }
 1134|       |
 1135|   384k|                    break;
 1136|   461k|                }
 1137|       |
 1138|   385k|                if (parsing_float)
  ------------------
  |  Branch (1138:21): [True: 21.8k, False: 363k]
  ------------------
 1139|  21.8k|                {
 1140|       |                    // Were not allowed to end with a dot
 1141|       |                    // TODO: This is very hacky and looks nasty
 1142|  21.8k|                    if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1142:25): [True: 6.62k, False: 15.2k]
  ------------------
 1143|  6.62k|                    {
 1144|       |                        // TODO: Prober error
 1145|  6.62k|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1146|  6.62k|                    }
 1147|       |
 1148|  15.2k|                    return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1149|  21.8k|                }
 1150|       |
 1151|   363k|                return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1152|   385k|            }
 1153|       |
 1154|       |            /* Operators */
 1155|       |
 1156|  2.90M|            else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1156:22): [True: 302k, False: 2.59M]
  ------------------
 1157|   302k|            {
 1158|   302k|                iterator begin_of_token = m_Iterator;
 1159|   302k|                ConsumeCurrentCharacter();
 1160|       |
 1161|   302k|                if (!IsFinished())
  ------------------
  |  Branch (1161:21): [True: 302k, False: 678]
  ------------------
 1162|   302k|                {
 1163|   302k|                    if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1163:25): [True: 57.2k, False: 244k]
  |  Branch (1163:48): [True: 12.9k, False: 231k]
  |  Branch (1163:74): [True: 1.48k, False: 11.4k]
  ------------------
 1164|  58.7k|                    {
 1165|       |                        // We have an actual two part operator
 1166|  58.7k|                        ConsumeCurrentCharacter();
 1167|  58.7k|                    }
 1168|   302k|                }
 1169|       |
 1170|   302k|                return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1171|   302k|            }
 1172|       |
 1173|  2.59M|            else if (is_single_operator(current_character))
  ------------------
  |  Branch (1173:22): [True: 19.9k, False: 2.57M]
  ------------------
 1174|  19.9k|            {
 1175|  19.9k|                Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1176|       |
 1177|  19.9k|                ConsumeCurrentCharacter();
 1178|       |
 1179|  19.9k|                return token;
 1180|  19.9k|            }
 1181|       |
 1182|       |            /* Punctioation */
 1183|       |
 1184|  2.57M|            else if (current_character == ',')
  ------------------
  |  Branch (1184:22): [True: 20.6k, False: 2.55M]
  ------------------
 1185|  20.6k|            {
 1186|  20.6k|                Token token = ConstructToken(TokenKind::Comma);
 1187|       |
 1188|  20.6k|                ConsumeCurrentCharacter();
 1189|       |
 1190|  20.6k|                return token;
 1191|  20.6k|            }
 1192|       |
 1193|  2.55M|            else if (current_character == '(')
  ------------------
  |  Branch (1193:22): [True: 743k, False: 1.81M]
  ------------------
 1194|   743k|            {
 1195|   743k|                Token token = ConstructToken(TokenKind::LParen);
 1196|       |
 1197|   743k|                ConsumeCurrentCharacter();
 1198|       |
 1199|   743k|                return token;
 1200|   743k|            }
 1201|       |
 1202|  1.81M|            else if (current_character == ')')
  ------------------
  |  Branch (1202:22): [True: 273k, False: 1.53M]
  ------------------
 1203|   273k|            {
 1204|   273k|                Token token = ConstructToken(TokenKind::RParen);
 1205|       |
 1206|   273k|                ConsumeCurrentCharacter();
 1207|       |
 1208|   273k|                return token;
 1209|   273k|            }
 1210|       |
 1211|  1.53M|            else if (current_character == '.')
  ------------------
  |  Branch (1211:22): [True: 0, False: 1.53M]
  ------------------
 1212|      0|            {
 1213|      0|                Token token = ConstructToken(TokenKind::Dot);
 1214|       |
 1215|      0|                ConsumeCurrentCharacter();
 1216|       |
 1217|      0|                return token;
 1218|      0|            }
 1219|       |
 1220|  1.53M|            else if (current_character == '[')
  ------------------
  |  Branch (1220:22): [True: 2.01k, False: 1.53M]
  ------------------
 1221|  2.01k|            {
 1222|  2.01k|                Token token = ConstructToken(TokenKind::LSquare);
 1223|       |
 1224|  2.01k|                ConsumeCurrentCharacter();
 1225|       |
 1226|  2.01k|                return token;
 1227|  2.01k|            }
 1228|       |
 1229|  1.53M|            else if (current_character == ']')
  ------------------
  |  Branch (1229:22): [True: 4.87k, False: 1.53M]
  ------------------
 1230|  4.87k|            {
 1231|  4.87k|                Token token = ConstructToken(TokenKind::RSquare);
 1232|       |
 1233|  4.87k|                ConsumeCurrentCharacter();
 1234|       |
 1235|  4.87k|                return token;
 1236|  4.87k|            }
 1237|       |
 1238|       |            /* Identifier */
 1239|       |
 1240|  1.53M|            else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1240:22): [True: 896k, False: 636k]
  ------------------
 1241|   896k|            {
 1242|   896k|                iterator begin_of_token = m_Iterator;
 1243|   896k|                ConsumeCurrentCharacter();
 1244|       |
 1245|  3.04M|                while (!IsFinished())
  ------------------
  |  Branch (1245:24): [True: 3.04M, False: 4.14k]
  ------------------
 1246|  3.04M|                {
 1247|  3.04M|                    current_character = *m_Iterator;
 1248|       |
 1249|  3.04M|                    if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1249:25): [True: 2.14M, False: 892k]
  ------------------
 1250|  2.14M|                    {
 1251|  2.14M|                        ConsumeCurrentCharacter();
 1252|  2.14M|                        continue;
 1253|  2.14M|                    }
 1254|       |
 1255|   892k|                    break;
 1256|  3.04M|                }
 1257|       |
 1258|   896k|                return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1259|   896k|            }
 1260|       |
 1261|       |            /* Unknown/Unexpected character */
 1262|       |
 1263|   636k|            else
 1264|   636k|            {
 1265|       |                // TODO: Warn unexpected character encountered
 1266|   636k|                SkipCurrentCharacter();
 1267|   636k|            }
 1268|  4.75M|        }
 1269|       |
 1270|  2.78k|        return {};
 1271|  3.55M|    }
_ZN10OpenAutoIt5Lexer10ProcessAllEv:
 1274|  14.5k|    {
 1275|  14.5k|        TokenStream& stream = m_ParseResult.m_TokenStream;
 1276|       |
 1277|  3.57M|        while (!IsFinished())
  ------------------
  |  Branch (1277:16): [True: 3.55M, False: 14.5k]
  ------------------
 1278|  3.55M|        {
 1279|  3.55M|            phi::optional<Token> maybe_token = GetNextToken();
 1280|       |
 1281|  3.55M|            if (maybe_token.has_value())
  ------------------
  |  Branch (1281:17): [True: 3.55M, False: 2.78k]
  ------------------
 1282|  3.55M|            {
 1283|  3.55M|                stream.emplace_back(maybe_token.value());
 1284|  3.55M|            }
 1285|  3.55M|        }
 1286|       |
 1287|  14.5k|        stream.finalize();
 1288|  14.5k|    }
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1298|  8.22M|    {
 1299|  8.22M|        ++m_Iterator;
 1300|  8.22M|    }
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1303|   307k|    {
 1304|   307k|        ++m_LineNumber;
 1305|   307k|        m_Column = 1u;
 1306|   307k|    }
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1309|  1.19M|    {
 1310|  1.19M|        ConsumeCurrentCharacter();
 1311|  1.19M|        ++m_Column;
 1312|  1.19M|    }
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   34|  23.3k|    {
   35|  23.3k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  23.3k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  23.3k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 836, False: 22.4k]
  ------------------
   39|    836|        {
   40|    836|            return itr->second;
   41|    836|        }
   42|       |
   43|  22.4k|        return m_Default;
   44|  23.3k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  2.31M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   34|  23.1k|    {
   35|  23.1k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|  23.1k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|  23.1k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 7.06k, False: 16.0k]
  ------------------
   39|  7.06k|        {
   40|  7.06k|            return itr->second;
   41|  7.06k|        }
   42|       |
   43|  16.0k|        return m_Default;
   44|  23.1k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   193k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   34|   502k|    {
   35|   502k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|   502k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|   502k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 4.38k, False: 498k]
  ------------------
   39|  4.38k|        {
   40|  4.38k|            return itr->second;
   41|  4.38k|        }
   42|       |
   43|   498k|        return m_Default;
   44|   502k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|   202M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   34|   896k|    {
   35|   896k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|   896k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|   896k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 393k, False: 502k]
  ------------------
   39|   393k|        {
   40|   393k|            return itr->second;
   41|   393k|        }
   42|       |
   43|   502k|        return m_Default;
   44|   896k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  31.3M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   34|   322k|    {
   35|   322k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   36|   322k|                                      [&key](const auto& v) { return v.first == key; });
   37|       |
   38|   322k|        if (itr != end(m_Data))
  ------------------
  |  Branch (38:13): [True: 322k, False: 0]
  ------------------
   39|   322k|        {
   40|   322k|            return itr->second;
   41|   322k|        }
   42|       |
   43|      0|        return m_Default;
   44|   322k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   36|  1.91M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  735|   200k|{
  736|   200k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (736:12): [True: 175k, False: 25.2k]
  |  Branch (736:40): [True: 2.49k, False: 22.7k]
  ------------------
  737|   200k|}
_Z17is_skip_characterc:
  715|  4.47M|{
  716|  4.47M|    switch (c)
  717|  4.47M|    {
  718|   263k|        case ' ':
  ------------------
  |  Branch (718:9): [True: 263k, False: 4.21M]
  ------------------
  719|   265k|        case '\v':
  ------------------
  |  Branch (719:9): [True: 2.04k, False: 4.47M]
  ------------------
  720|   270k|        case '\t':
  ------------------
  |  Branch (720:9): [True: 5.33k, False: 4.46M]
  ------------------
  721|   282k|        case '\b':
  ------------------
  |  Branch (721:9): [True: 12.2k, False: 4.46M]
  ------------------
  722|   285k|        case '\f':
  ------------------
  |  Branch (722:9): [True: 2.46k, False: 4.47M]
  ------------------
  723|   285k|            return true;
  724|  4.18M|        default:
  ------------------
  |  Branch (724:9): [True: 4.18M, False: 285k]
  ------------------
  725|  4.18M|            return false;
  726|  4.47M|    }
  727|  4.47M|}
_Z24is_valid_identifier_charc:
  730|  5.54M|{
  731|  5.54M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (731:12): [True: 3.62M, False: 1.92M]
  |  Branch (731:40): [True: 10.7k, False: 1.91M]
  ------------------
  732|  5.54M|}
_Z20is_two_part_operatorc:
  740|  2.90M|{
  741|  2.90M|    switch (c)
  742|  2.90M|    {
  743|   154k|        case '=':
  ------------------
  |  Branch (743:9): [True: 154k, False: 2.74M]
  ------------------
  744|   199k|        case '+':
  ------------------
  |  Branch (744:9): [True: 44.9k, False: 2.85M]
  ------------------
  745|   208k|        case '-':
  ------------------
  |  Branch (745:9): [True: 9.27k, False: 2.89M]
  ------------------
  746|   217k|        case '*':
  ------------------
  |  Branch (746:9): [True: 9.51k, False: 2.89M]
  ------------------
  747|   254k|        case '/':
  ------------------
  |  Branch (747:9): [True: 36.9k, False: 2.86M]
  ------------------
  748|   260k|        case '&':
  ------------------
  |  Branch (748:9): [True: 5.35k, False: 2.89M]
  ------------------
  749|   274k|        case '<':
  ------------------
  |  Branch (749:9): [True: 14.2k, False: 2.88M]
  ------------------
  750|   302k|        case '>':
  ------------------
  |  Branch (750:9): [True: 28.3k, False: 2.87M]
  ------------------
  751|   302k|            return true;
  752|       |
  753|  2.59M|        default:
  ------------------
  |  Branch (753:9): [True: 2.59M, False: 302k]
  ------------------
  754|  2.59M|            return false;
  755|  2.90M|    }
  756|  2.90M|}
_Z18is_single_operatorc:
  759|  2.59M|{
  760|  2.59M|    switch (c)
  761|  2.59M|    {
  762|  5.84k|        case '^':
  ------------------
  |  Branch (762:9): [True: 5.84k, False: 2.59M]
  ------------------
  763|  9.24k|        case '?':
  ------------------
  |  Branch (763:9): [True: 3.39k, False: 2.59M]
  ------------------
  764|  19.9k|        case ':':
  ------------------
  |  Branch (764:9): [True: 10.6k, False: 2.58M]
  ------------------
  765|  19.9k|            return true;
  766|       |
  767|  2.57M|        default:
  ------------------
  |  Branch (767:9): [True: 2.57M, False: 19.9k]
  ------------------
  768|  2.57M|            return false;
  769|  2.59M|    }
  770|  2.59M|}

_ZN10OpenAutoIt12ParseWarning21EmbeddedNullCharacterEN3phi7integerImEES3_:
   12|   274k|    {
   13|   274k|        ParseWarning warn;
   14|       |
   15|   274k|        warn.m_Type = ParseWarningType::EmbeddedNullCharacter;
   16|       |
   17|   274k|        warn.m_LocationBegin.line_number = line;
   18|   274k|        warn.m_LocationBegin.column      = column;
   19|       |
   20|   274k|        warn.m_LocationEnd.line_number = line;
   21|   274k|        warn.m_LocationEnd.column      = column;
   22|       |
   23|   274k|        return warn;
   24|   274k|    }

_ZN10OpenAutoIt6ParserC2Ev:
  127|  14.5k|    Parser::Parser() noexcept = default;
_ZN10OpenAutoIt6Parser13ParseDocumentERNS_11ParseResultE:
  130|  14.5k|    {
  131|  14.5k|        m_ParseResult = &parse_result;
  132|  14.5k|        m_TokenStream = &parse_result.m_TokenStream;
  133|       |
  134|  14.5k|        m_ParseResult->m_Document = phi::make_not_null_scope<ASTDocument>();
  135|       |
  136|   944k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (136:16): [True: 929k, False: 14.5k]
  ------------------
  137|   929k|        {
  138|   929k|            const Token& token = CurrentToken();
  139|       |
  140|       |            // Parse global function definition
  141|   929k|            switch (token.GetTokenKind())
  142|   929k|            {
  143|  46.5k|                case TokenKind::KW_Func: {
  ------------------
  |  Branch (143:17): [True: 46.5k, False: 883k]
  ------------------
  144|  46.5k|                    ConsumeCurrent();
  145|       |
  146|  46.5k|                    auto function_definition = ParseFunctionDefinition();
  147|  46.5k|                    if (!function_definition)
  ------------------
  |  Branch (147:25): [True: 41.3k, False: 5.22k]
  ------------------
  148|  41.3k|                    {
  149|  41.3k|                        err("ERR: Failed to parse function definition!\n");
  150|  41.3k|                        continue;
  151|  41.3k|                    }
  152|       |
  153|  5.22k|                    AppendFunctionToDocument(function_definition.release_not_null());
  154|  5.22k|                    break;
  155|  46.5k|                }
  156|       |
  157|  1.85k|                case TokenKind::Comment:
  ------------------
  |  Branch (157:17): [True: 1.85k, False: 927k]
  ------------------
  158|  52.2k|                case TokenKind::NewLine: {
  ------------------
  |  Branch (158:17): [True: 50.4k, False: 879k]
  ------------------
  159|       |                    // Simply ignore and consume newlines and comments
  160|  52.2k|                    ConsumeCurrent();
  161|  52.2k|                    break;
  162|  1.85k|                }
  163|  27.1k|                case TokenKind::NotAToken: {
  ------------------
  |  Branch (163:17): [True: 27.1k, False: 902k]
  ------------------
  164|  27.1k|                    err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  165|  27.1k|                                    std::string_view(token.GetText())));
  166|  27.1k|                    ConsumeCurrent();
  167|  27.1k|                    break;
  168|  1.85k|                }
  169|       |
  170|   803k|                default: {
  ------------------
  |  Branch (170:17): [True: 803k, False: 126k]
  ------------------
  171|   803k|                    auto statement = ParseStatement();
  172|   803k|                    if (!statement)
  ------------------
  |  Branch (172:25): [True: 747k, False: 55.6k]
  ------------------
  173|   747k|                    {
  174|       |                        // TODO: Proper error reporting
  175|   747k|                        err("ERR: Failed to parse statement!\n");
  176|       |
  177|   747k|                        if (m_TokenStream->has_more())
  ------------------
  |  Branch (177:29): [True: 740k, False: 7.03k]
  ------------------
  178|   740k|                        {
  179|       |                            // Swallow the bad token
  180|   740k|                            ConsumeCurrent();
  181|   740k|                        }
  182|   747k|                        continue;
  183|   747k|                    }
  184|       |
  185|  55.6k|                    AppendStatementToDocument(statement.release_not_null());
  186|  55.6k|                }
  187|   929k|            }
  188|   929k|        }
  189|  14.5k|    }
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  192|  8.96M|    {
  193|  8.96M|        PHI_ASSERT(m_TokenStream->has_more());
  194|       |
  195|  8.96M|        return m_TokenStream->look_ahead();
  196|  8.96M|    }
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  199|  3.02M|    {
  200|  3.02M|        m_TokenStream->consume();
  201|  3.02M|    }
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  204|   315k|    {
  205|   323k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (205:16): [True: 320k, False: 2.43k]
  ------------------
  206|   320k|        {
  207|   320k|            switch (CurrentToken().GetTokenKind())
  208|   320k|            {
  209|  7.92k|                case TokenKind::Comment:
  ------------------
  |  Branch (209:17): [True: 7.92k, False: 312k]
  ------------------
  210|  7.92k|                    ConsumeCurrent();
  211|  7.92k|                    break;
  212|       |
  213|   312k|                default:
  ------------------
  |  Branch (213:17): [True: 312k, False: 7.92k]
  ------------------
  214|   312k|                    return;
  215|   320k|            }
  216|   320k|        }
  217|   315k|    }
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  220|  1.12M|    {
  221|  1.12M|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (221:16): [True: 1.12M, False: 420]
  ------------------
  222|  1.12M|        {
  223|  1.12M|            switch (CurrentToken().GetTokenKind())
  224|  1.12M|            {
  225|  2.10k|                case TokenKind::NewLine:
  ------------------
  |  Branch (225:17): [True: 2.10k, False: 1.12M]
  ------------------
  226|  2.13k|                case TokenKind::Comment:
  ------------------
  |  Branch (226:17): [True: 32, False: 1.12M]
  ------------------
  227|  2.13k|                    ConsumeCurrent();
  228|  2.13k|                    break;
  229|       |
  230|  1.12M|                default:
  ------------------
  |  Branch (230:17): [True: 1.12M, False: 2.13k]
  ------------------
  231|  1.12M|                    return;
  232|  1.12M|            }
  233|  1.12M|        }
  234|  1.12M|    }
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  237|   638k|    {
  238|       |        // Do we even have more tokens?
  239|   638k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (239:13): [True: 864, False: 637k]
  ------------------
  240|    864|        {
  241|    864|            return {};
  242|    864|        }
  243|       |
  244|   637k|        const Token& token = CurrentToken();
  245|       |
  246|       |        // Is this the correct token kind
  247|   637k|        if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (247:13): [True: 184k, False: 452k]
  ------------------
  248|   184k|        {
  249|   184k|            return {};
  250|   184k|        }
  251|       |
  252|   452k|        ConsumeCurrent();
  253|   452k|        return token;
  254|   637k|    }
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  257|  46.5k|    {
  258|       |        // Next we MUST parse the function name
  259|  46.5k|        auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  260|  46.5k|        if (!function_name_token)
  ------------------
  |  Branch (260:13): [True: 2.69k, False: 43.8k]
  ------------------
  261|  2.69k|        {
  262|  2.69k|            err("Expected identifier for function name");
  263|  2.69k|            return {};
  264|  2.69k|        }
  265|       |
  266|  43.8k|        auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  267|  43.8k|        function_definition->m_FunctionName = function_name_token->GetText();
  268|       |
  269|       |        // Next we MUST parse an opening parenthesis (LParen)
  270|  43.8k|        if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (270:13): [True: 5.85k, False: 38.0k]
  ------------------
  271|  5.85k|        {
  272|  5.85k|            err("Expected opening parenthesis");
  273|  5.85k|            return {};
  274|  5.85k|        }
  275|       |
  276|       |        // Next we parse the function parameter declarations until right parenthesis (RParen)
  277|  46.3k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (277:16): [True: 46.3k, False: 34]
  |  Branch (277:16): [True: 17.0k, False: 29.3k]
  |  Branch (277:45): [True: 17.0k, False: 29.2k]
  ------------------
  278|  17.0k|        {
  279|  17.0k|            phi::optional<FunctionParameter> function_paremeter_optional =
  280|  17.0k|                    ParseFunctionParameterDefinition();
  281|  17.0k|            if (!function_paremeter_optional)
  ------------------
  |  Branch (281:17): [True: 8.66k, False: 8.33k]
  ------------------
  282|  8.66k|            {
  283|       |                // TODO: Proper error reporting
  284|  8.66k|                return {};
  285|  8.66k|            }
  286|  8.33k|            FunctionParameter& function_paremeter = function_paremeter_optional.value();
  287|       |
  288|  8.33k|            function_definition->m_Parameters.emplace_back(phi::move(function_paremeter));
  289|       |
  290|       |            // Parse comma
  291|  8.33k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (291:17): [True: 8.33k, False: 0]
  |  Branch (291:17): [True: 1.81k, False: 6.52k]
  |  Branch (291:46): [True: 1.81k, False: 6.52k]
  ------------------
  292|  1.81k|            {
  293|  1.81k|                ConsumeCurrent();
  294|  1.81k|            }
  295|  8.33k|        }
  296|       |
  297|       |        // Next we MUST parse a right parenthesis (RParen)
  298|  29.3k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (298:13): [True: 34, False: 29.2k]
  ------------------
  299|     34|        {
  300|       |            // TODO: Proper error
  301|     34|            return {};
  302|     34|        }
  303|       |
  304|       |        // Next we MUST parse a new line
  305|  29.2k|        if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (305:13): [True: 3.84k, False: 25.4k]
  ------------------
  306|  3.84k|        {
  307|       |            // TODO: Proper error
  308|  3.84k|            return {};
  309|  3.84k|        }
  310|       |
  311|       |        // Next parse Statements until EndFunc
  312|  61.5k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (312:16): [True: 61.3k, False: 172]
  |  Branch (312:16): [True: 56.1k, False: 5.40k]
  |  Branch (312:45): [True: 56.1k, False: 5.22k]
  ------------------
  313|  56.1k|        {
  314|  56.1k|            auto statement = ParseStatement();
  315|  56.1k|            if (!statement)
  ------------------
  |  Branch (315:17): [True: 20.0k, False: 36.0k]
  ------------------
  316|  20.0k|            {
  317|  20.0k|                err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  318|  20.0k|                                std::string_view(function_definition->m_FunctionName)));
  319|       |                // TODO: Report proper error
  320|  20.0k|                return {};
  321|  20.0k|            }
  322|       |
  323|  36.0k|            function_definition->m_FunctionBody.emplace_back(
  324|  36.0k|                    phi::move(statement.release_not_null()));
  325|       |
  326|  36.0k|            ConsumeNewLineAndComments();
  327|  36.0k|        }
  328|       |
  329|       |        // Next we MUST parse EndFunc
  330|  5.40k|        if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (330:13): [True: 172, False: 5.22k]
  ------------------
  331|    172|        {
  332|       |            // TODO: Proper error
  333|    172|            return {};
  334|    172|        }
  335|       |
  336|  5.22k|        return phi::move(function_definition);
  337|  5.40k|    }
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  340|  17.0k|    {
  341|       |        // TODO: This entire function requres more error checks
  342|  17.0k|        FunctionParameter parameter;
  343|       |
  344|  58.3k|        while (m_TokenStream->has_more())
  ------------------
  |  Branch (344:16): [True: 58.3k, False: 61]
  ------------------
  345|  58.3k|        {
  346|  58.3k|            const Token& token = CurrentToken();
  347|       |
  348|  58.3k|            switch (token.GetTokenKind())
  349|  58.3k|            {
  350|  25.3k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (350:17): [True: 25.3k, False: 32.9k]
  ------------------
  351|  25.3k|                    parameter.name = token.GetText().substring_view(1u);
  352|  25.3k|                    ConsumeCurrent();
  353|  25.3k|                    break;
  354|      0|                }
  355|  1.18k|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (355:17): [True: 1.18k, False: 57.1k]
  ------------------
  356|  1.18k|                    parameter.as_const = true;
  357|  1.18k|                    ConsumeCurrent();
  358|  1.18k|                    break;
  359|      0|                }
  360|    126|                case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (360:17): [True: 126, False: 58.2k]
  ------------------
  361|    126|                    parameter.by_ref = true;
  362|    126|                    ConsumeCurrent();
  363|    126|                    break;
  364|      0|                }
  365|  18.0k|                case TokenKind::OP_Equals: {
  ------------------
  |  Branch (365:17): [True: 18.0k, False: 40.3k]
  ------------------
  366|  18.0k|                    if (parameter.name.is_empty())
  ------------------
  |  Branch (366:25): [True: 821, False: 17.1k]
  ------------------
  367|    821|                    {
  368|       |                        // TODO: PROPER ERROR
  369|    821|                        return {};
  370|    821|                    }
  371|       |
  372|       |                    // Consume the '='
  373|  17.1k|                    ConsumeCurrent();
  374|       |
  375|       |                    // Default value is an expression
  376|  17.1k|                    auto default_expression = ParseExpression();
  377|  17.1k|                    if (!default_expression)
  ------------------
  |  Branch (377:25): [True: 2.46k, False: 14.7k]
  ------------------
  378|  2.46k|                    {
  379|       |                        // TODO: Report error
  380|  2.46k|                        return {};
  381|  2.46k|                    }
  382|       |
  383|       |                    // For default values we artificially create a variable assignment
  384|  14.7k|                    auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  385|       |
  386|  14.7k|                    default_var_assignment->m_Scope        = VariableScope::Auto;
  387|  14.7k|                    default_var_assignment->m_VariableName = parameter.name;
  388|  14.7k|                    default_var_assignment->m_InitialValueExpression =
  389|  14.7k|                            phi::move(default_expression);
  390|       |
  391|  14.7k|                    parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  392|  14.7k|                    break;
  393|  17.1k|                }
  394|  1.81k|                case TokenKind::Comma:
  ------------------
  |  Branch (394:17): [True: 1.81k, False: 56.5k]
  ------------------
  395|  8.33k|                case TokenKind::RParen: {
  ------------------
  |  Branch (395:17): [True: 6.52k, False: 51.8k]
  ------------------
  396|  8.33k|                    return phi::move(parameter);
  397|  1.81k|                }
  398|  5.32k|                default: {
  ------------------
  |  Branch (398:17): [True: 5.32k, False: 53.0k]
  ------------------
  399|       |                    // TODO: Report error
  400|  5.32k|                    return {};
  401|  1.81k|                }
  402|  58.3k|            }
  403|  58.3k|        }
  404|       |
  405|       |        // TODO: Report error unexpected EOF
  406|     61|        return {};
  407|  17.0k|    }
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  410|   995k|    {
  411|   995k|        ConsumeNewLineAndComments();
  412|       |
  413|   995k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (413:13): [True: 9, False: 995k]
  ------------------
  414|      9|        {
  415|       |            // TODO: Report proper error
  416|      9|            return {};
  417|      9|        }
  418|       |
  419|   995k|        phi::scope_ptr<ASTStatement> ret_statement;
  420|       |
  421|       |        // Loop until we parse something or there is nothing left to parse
  422|   995k|        const Token& token = CurrentToken();
  423|   995k|        switch (token.GetTokenKind())
  424|   995k|        {
  425|       |            // Variable assignment
  426|  6.29k|            case TokenKind::KW_Const:
  ------------------
  |  Branch (426:13): [True: 6.29k, False: 988k]
  ------------------
  427|  7.34k|            case TokenKind::KW_Local:
  ------------------
  |  Branch (427:13): [True: 1.04k, False: 994k]
  ------------------
  428|  13.2k|            case TokenKind::KW_Global:
  ------------------
  |  Branch (428:13): [True: 5.93k, False: 989k]
  ------------------
  429|  17.2k|            case TokenKind::KW_Static:
  ------------------
  |  Branch (429:13): [True: 4.01k, False: 991k]
  ------------------
  430|   171k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (430:13): [True: 153k, False: 841k]
  ------------------
  431|   171k|                ret_statement = ParseVariableAssignment();
  432|   171k|                if (!ret_statement)
  ------------------
  |  Branch (432:21): [True: 26.6k, False: 144k]
  ------------------
  433|  26.6k|                {
  434|  26.6k|                    err("ERR: Failed to parse variable assignment!\n");
  435|  26.6k|                    return {};
  436|  26.6k|                }
  437|   144k|                break;
  438|   171k|            }
  439|       |
  440|       |            // If Statement
  441|   144k|            case TokenKind::KW_If: {
  ------------------
  |  Branch (441:13): [True: 50.3k, False: 944k]
  ------------------
  442|  50.3k|                ret_statement = ParseIfStatement();
  443|  50.3k|                if (!ret_statement)
  ------------------
  |  Branch (443:21): [True: 46.1k, False: 4.17k]
  ------------------
  444|  46.1k|                {
  445|  46.1k|                    err("ERR: Failed to parse if statement!\n");
  446|  46.1k|                    return {};
  447|  46.1k|                }
  448|  4.17k|                break;
  449|  50.3k|            }
  450|       |
  451|       |            // While statement
  452|  36.4k|            case TokenKind::KW_While: {
  ------------------
  |  Branch (452:13): [True: 36.4k, False: 958k]
  ------------------
  453|  36.4k|                ret_statement = ParseWhileStatement();
  454|  36.4k|                if (!ret_statement)
  ------------------
  |  Branch (454:21): [True: 27.1k, False: 9.27k]
  ------------------
  455|  27.1k|                {
  456|  27.1k|                    err("ERR: Failed to parse while statement!\n");
  457|  27.1k|                    return {};
  458|  27.1k|                }
  459|  9.27k|                break;
  460|  36.4k|            }
  461|       |
  462|   737k|            default: {
  ------------------
  |  Branch (462:13): [True: 737k, False: 257k]
  ------------------
  463|       |                // Try to parse ExpressionStatement
  464|   737k|                ret_statement = ParseExpressionStatement();
  465|   737k|                if (!ret_statement)
  ------------------
  |  Branch (465:21): [True: 580k, False: 157k]
  ------------------
  466|   580k|                {
  467|   580k|                    err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  468|   580k|                                    enum_name(token.GetTokenKind())));
  469|   580k|                    return {};
  470|   580k|                }
  471|   157k|                break;
  472|   737k|            }
  473|   995k|        }
  474|       |
  475|   315k|        ConsumeComments();
  476|       |
  477|   315k|        if (m_TokenStream->has_more() && !MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (477:13): [True: 312k, False: 2.43k]
  |  Branch (477:13): [True: 134k, False: 181k]
  |  Branch (477:42): [True: 134k, False: 178k]
  ------------------
  478|   134k|        {
  479|   134k|            err("Requires newline after statement\n");
  480|   134k|            return {};
  481|   134k|        }
  482|       |
  483|   181k|        return phi::move(ret_statement);
  484|   315k|    }
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  487|  36.4k|    {
  488|  36.4k|        const Token& token = CurrentToken();
  489|  36.4k|        if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (489:13): [True: 0, False: 36.4k]
  ------------------
  490|      0|        {
  491|       |            // TODO: Proper error
  492|      0|            return {};
  493|      0|        }
  494|  36.4k|        ConsumeCurrent();
  495|       |
  496|       |        // Next we MUST parse an Expression
  497|  36.4k|        auto while_condition_expression = ParseExpression();
  498|  36.4k|        if (!while_condition_expression)
  ------------------
  |  Branch (498:13): [True: 4.83k, False: 31.5k]
  ------------------
  499|  4.83k|        {
  500|       |            // TODO: Proper error
  501|  4.83k|            return {};
  502|  4.83k|        }
  503|       |
  504|  31.5k|        auto while_statement =
  505|  31.5k|                phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  506|       |
  507|       |        // Parse statements until KW_WEnd
  508|  87.6k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (508:16): [True: 87.2k, False: 427]
  |  Branch (508:16): [True: 77.9k, False: 9.70k]
  |  Branch (508:45): [True: 77.9k, False: 9.27k]
  ------------------
  509|  77.9k|        {
  510|       |            // Skip NewLines and comments
  511|  77.9k|            if (CurrentToken().GetTokenKind() == TokenKind::NewLine ||
  ------------------
  |  Branch (511:17): [True: 9.88k, False: 68.0k]
  ------------------
  512|  77.9k|                CurrentToken().GetTokenKind() == TokenKind::Comment)
  ------------------
  |  Branch (512:17): [True: 7.26k, False: 60.8k]
  ------------------
  513|  17.1k|            {
  514|  17.1k|                ConsumeCurrent();
  515|  17.1k|                continue;
  516|  17.1k|            }
  517|       |
  518|       |            // Parse statements
  519|  60.8k|            auto statement = ParseStatement();
  520|  60.8k|            if (!statement)
  ------------------
  |  Branch (520:17): [True: 21.8k, False: 38.9k]
  ------------------
  521|  21.8k|            {
  522|       |                // TODO: Propeer error
  523|  21.8k|                return {};
  524|  21.8k|            }
  525|       |
  526|  38.9k|            while_statement->m_Statements.emplace_back(statement.release_not_null());
  527|  38.9k|        }
  528|       |
  529|  9.70k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (529:13): [True: 427, False: 9.27k]
  ------------------
  530|    427|        {
  531|       |            // TODO: Proper error
  532|    427|            return {};
  533|    427|        }
  534|       |
  535|       |        // Next token MUST be KW_Wend
  536|  9.27k|        const Token& wend_token = CurrentToken();
  537|  9.27k|        if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (537:13): [True: 0, False: 9.27k]
  ------------------
  538|      0|        {
  539|       |            // TODO: Proper error
  540|      0|            return {};
  541|      0|        }
  542|  9.27k|        ConsumeCurrent();
  543|       |
  544|  9.27k|        return phi::move(while_statement);
  545|  9.27k|    }
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  548|   171k|    {
  549|   171k|        auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  550|       |
  551|   171k|        phi::boolean parsed_identifier = false;
  552|       |        // Parse all specifiers until we hit a VariableIdentifier
  553|   342k|        while (m_TokenStream->has_more() && !parsed_identifier)
  ------------------
  |  Branch (553:16): [True: 340k, False: 1.37k]
  |  Branch (553:16): [True: 188k, False: 153k]
  |  Branch (553:45): [True: 188k, False: 152k]
  ------------------
  554|   188k|        {
  555|   188k|            const Token& current_token = CurrentToken();
  556|   188k|            ConsumeCurrent();
  557|       |
  558|   188k|            switch (current_token.GetTokenKind())
  559|   188k|            {
  560|  9.19k|                case TokenKind::KW_Const: {
  ------------------
  |  Branch (560:17): [True: 9.19k, False: 179k]
  ------------------
  561|  9.19k|                    if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (561:25): [True: 2.89k, False: 6.29k]
  ------------------
  562|  2.89k|                    {
  563|       |                        // TODO: Error more than one const specifier
  564|  2.89k|                        err("ERR: More than one const specifier given\n");
  565|  2.89k|                        return {};
  566|  2.89k|                    }
  567|  6.29k|                    variable_declaration->m_IsConst = true;
  568|  6.29k|                    break;
  569|  9.19k|                }
  570|       |
  571|  6.96k|                case TokenKind::KW_Static: {
  ------------------
  |  Branch (571:17): [True: 6.96k, False: 181k]
  ------------------
  572|  6.96k|                    if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (572:25): [True: 2.94k, False: 4.01k]
  ------------------
  573|  2.94k|                    {
  574|       |                        // TODO: Error more than one static specifier
  575|  2.94k|                        err("ERR: More than one static specifier given\n");
  576|  2.94k|                        return {};
  577|  2.94k|                    }
  578|  4.01k|                    variable_declaration->m_IsStatic = true;
  579|  4.01k|                    break;
  580|  6.96k|                }
  581|       |
  582|  10.6k|                case TokenKind::KW_Global: {
  ------------------
  |  Branch (582:17): [True: 10.6k, False: 177k]
  ------------------
  583|  10.6k|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (583:25): [True: 4.74k, False: 5.93k]
  ------------------
  584|  4.74k|                    {
  585|       |                        // TODO: Error more than one scope specifier
  586|  4.74k|                        err("ERR: More than one scope specifier given\n");
  587|  4.74k|                        return {};
  588|  4.74k|                    }
  589|  5.93k|                    variable_declaration->m_Scope = VariableScope::Global;
  590|  5.93k|                    break;
  591|  10.6k|                }
  592|       |
  593|  1.80k|                case TokenKind::KW_Local: {
  ------------------
  |  Branch (593:17): [True: 1.80k, False: 186k]
  ------------------
  594|  1.80k|                    if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (594:25): [True: 761, False: 1.04k]
  ------------------
  595|    761|                    {
  596|       |                        // TODO: Error more than one scope specifier
  597|    761|                        err("ERR: More than one scope specifier given\n");
  598|    761|                        return {};
  599|    761|                    }
  600|  1.04k|                    variable_declaration->m_Scope = VariableScope::Local;
  601|  1.04k|                    break;
  602|  1.80k|                }
  603|       |
  604|   153k|                case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (604:17): [True: 153k, False: 34.4k]
  ------------------
  605|       |                    // VariableIdentifiers begin with a '$'
  606|       |                    // Like: $MyVariable
  607|       |                    // So for the name we ignore the very first character
  608|   153k|                    PHI_ASSERT(current_token.GetText().length() > 1u);
  609|   153k|                    variable_declaration->m_VariableName =
  610|   153k|                            current_token.GetText().substring_view(1u);
  611|       |
  612|   153k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  613|   153k|                    PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  614|       |
  615|   153k|                    parsed_identifier = true;
  616|   153k|                    break;
  617|  1.80k|                }
  618|       |
  619|  5.85k|                default: {
  ------------------
  |  Branch (619:17): [True: 5.85k, False: 182k]
  ------------------
  620|       |                    // TODO: Error unexpected token
  621|  5.85k|                    return {};
  622|  1.80k|                }
  623|   188k|            }
  624|   188k|        }
  625|       |
  626|   153k|        if (!parsed_identifier)
  ------------------
  |  Branch (626:13): [True: 37, False: 153k]
  ------------------
  627|     37|        {
  628|       |            // TODO: Error variable declaration ends before the VariableIdentifier
  629|     37|            err("ERR: Missing variable identifier!\n");
  630|     37|            return {};
  631|     37|        }
  632|       |
  633|       |        // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  634|   153k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (634:13): [True: 1.33k, False: 152k]
  ------------------
  635|  1.33k|        {
  636|  1.33k|            return variable_declaration;
  637|  1.33k|        }
  638|       |
  639|       |        // Check for equals
  640|   152k|        const Token& next_token = CurrentToken();
  641|       |
  642|   152k|        if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (642:13): [True: 23.8k, False: 128k]
  ------------------
  643|  23.8k|        {
  644|  23.8k|            ConsumeCurrent();
  645|       |
  646|       |            // Now me MUST parse an expression
  647|  23.8k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
  648|  23.8k|            if (!expression)
  ------------------
  |  Branch (648:17): [True: 9.41k, False: 14.4k]
  ------------------
  649|  9.41k|            {
  650|       |                // TODO: Error failed to parse a valid expression
  651|  9.41k|                err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  652|  9.41k|                return {};
  653|  9.41k|            }
  654|       |
  655|  14.4k|            variable_declaration->m_InitialValueExpression = phi::move(expression);
  656|  14.4k|        }
  657|       |
  658|   143k|        return variable_declaration;
  659|   152k|    }
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  662|   737k|    {
  663|   737k|        auto expression = ParseExpression();
  664|   737k|        if (!expression)
  ------------------
  |  Branch (664:13): [True: 377k, False: 359k]
  ------------------
  665|   377k|        {
  666|   377k|            return {};
  667|   377k|        }
  668|       |
  669|   359k|        auto expression_statement =
  670|   359k|                phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  671|       |
  672|   359k|        if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (672:13): [True: 202k, False: 157k]
  ------------------
  673|   202k|        {
  674|   202k|            err(fmt::format("Expression {:s} is not valid as an statement\n",
  675|   202k|                            expression_statement->m_Expression->Name()));
  676|   202k|            return {};
  677|   202k|        }
  678|       |
  679|   157k|        return phi::move(expression_statement);
  680|   359k|    }
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  683|  50.3k|    {
  684|  50.3k|        if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (684:13): [True: 0, False: 50.3k]
  ------------------
  685|      0|        {
  686|      0|            return {};
  687|      0|        }
  688|       |
  689|       |        // Next me MUST parse an expression
  690|  50.3k|        auto if_condition = ParseExpression();
  691|  50.3k|        if (!if_condition)
  ------------------
  |  Branch (691:13): [True: 3.57k, False: 46.7k]
  ------------------
  692|  3.57k|        {
  693|  3.57k|            err("ERR: failed to parse expression!\n");
  694|       |
  695|  3.57k|            return {};
  696|  3.57k|        }
  697|       |
  698|       |        // Next we MUST parse Then
  699|  46.7k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (699:13): [True: 7.74k, False: 39.0k]
  ------------------
  700|  7.74k|        {
  701|  7.74k|            err("ERR: Missing then!\n");
  702|       |
  703|  7.74k|            return {};
  704|  7.74k|        }
  705|       |
  706|  39.0k|        ConsumeNewLineAndComments();
  707|       |
  708|  39.0k|        IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  709|       |
  710|       |        // Next parse statements until we hit and EndIf, ElseIf or Else
  711|  89.3k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (711:16): [True: 89.1k, False: 273]
  |  Branch (711:16): [True: 74.7k, False: 14.5k]
  |  Branch (711:45): [True: 84.9k, False: 4.17k]
  ------------------
  712|  89.3k|               CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (712:16): [True: 79.8k, False: 5.08k]
  ------------------
  713|  89.3k|               CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (713:16): [True: 74.7k, False: 5.06k]
  ------------------
  714|  74.7k|        {
  715|  74.7k|            auto statement = ParseStatement();
  716|  74.7k|            if (!statement)
  ------------------
  |  Branch (716:17): [True: 24.4k, False: 50.3k]
  ------------------
  717|  24.4k|            {
  718|  24.4k|                err("ERR: Failed to parse statement inside of IF\n");
  719|  24.4k|                return {};
  720|  24.4k|            }
  721|       |
  722|  50.3k|            if_case.body.emplace_back(statement.release_not_null());
  723|       |
  724|  50.3k|            ConsumeNewLineAndComments();
  725|  50.3k|        }
  726|       |
  727|  14.5k|        auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
  728|       |
  729|       |        // TODO: Handle ElseIf, Else
  730|       |
  731|  14.5k|        if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (731:13): [True: 10.4k, False: 4.17k]
  ------------------
  732|  10.4k|        {
  733|  10.4k|            err("ERR: Missing EndIf!\n");
  734|       |            // TODO: Proper Error
  735|  10.4k|            return {};
  736|  10.4k|        }
  737|       |
  738|  4.17k|        return phi::move(if_statement);
  739|  14.5k|    }
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
  742|   278k|    {
  743|   278k|        const Token& token = CurrentToken();
  744|   278k|        if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (744:13): [True: 0, False: 278k]
  ------------------
  745|      0|        {
  746|      0|            return {};
  747|      0|        }
  748|       |
  749|   278k|        if (token.GetText().length() > 18u)
  ------------------
  |  Branch (749:13): [True: 401, False: 278k]
  ------------------
  750|    401|        {
  751|       |            // TODO: Better check and proper error
  752|    401|            return {};
  753|    401|        }
  754|       |
  755|   278k|        phi::int64_t value{0};
  756|   278k|        phi::boolean parsing_hex{false};
  757|   621k|        for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (757:36): [True: 343k, False: 278k]
  ------------------
  758|   343k|        {
  759|   343k|            char character = token.GetText().at(index);
  760|       |
  761|       |            // Checking the second character
  762|   343k|            if (index == 1u)
  ------------------
  |  Branch (762:17): [True: 35.2k, False: 307k]
  ------------------
  763|  35.2k|            {
  764|  35.2k|                if (character == 'x' || character == 'X')
  ------------------
  |  Branch (764:21): [True: 7.95k, False: 27.2k]
  |  Branch (764:41): [True: 12.9k, False: 14.3k]
  ------------------
  765|  20.8k|                {
  766|  20.8k|                    parsing_hex = true;
  767|  20.8k|                    continue;
  768|  20.8k|                }
  769|  35.2k|            }
  770|       |
  771|   322k|            if (parsing_hex)
  ------------------
  |  Branch (771:17): [True: 26.2k, False: 295k]
  ------------------
  772|  26.2k|            {
  773|  26.2k|                PHI_ASSERT(phi::is_hex_digit(character));
  774|       |
  775|  26.2k|                value <<= 4;
  776|  26.2k|                value |= phi::hex_digit_value(character).unsafe();
  777|  26.2k|            }
  778|   295k|            else
  779|   295k|            {
  780|   295k|                PHI_ASSERT(character >= '0' && character <= '9');
  781|       |
  782|   295k|                value *= 10;
  783|   295k|                value += (character - '0');
  784|   295k|            }
  785|   322k|        }
  786|       |
  787|   278k|        ConsumeCurrent();
  788|   278k|        return phi::make_scope<ASTIntegerLiteral>(value);
  789|   278k|    }
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
  792|   102k|    {
  793|   102k|        const Token& token = CurrentToken();
  794|   102k|        if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (794:13): [True: 0, False: 102k]
  ------------------
  795|      0|        {
  796|      0|            return {};
  797|      0|        }
  798|   102k|        ConsumeCurrent();
  799|       |
  800|   102k|        auto string_literal = phi::make_scope<ASTStringLiteral>();
  801|       |
  802|   102k|        const phi::usize length = token.GetText().length();
  803|       |        // Trim the trailing and leading "
  804|   102k|        string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
  805|       |
  806|   102k|        return phi::move(string_literal);
  807|   102k|    }
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
  810|  1.49M|    {
  811|  1.49M|        phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
  812|  1.49M|        if (!lhs_expression)
  ------------------
  |  Branch (812:13): [True: 885k, False: 607k]
  ------------------
  813|   885k|        {
  814|   885k|            return {};
  815|   885k|        }
  816|       |
  817|   607k|        return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
  818|  1.49M|    }
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
  821|  1.60M|    {
  822|  1.60M|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (822:13): [True: 809, False: 1.60M]
  ------------------
  823|    809|        {
  824|       |            // TODO: Proper error
  825|    809|            return {};
  826|    809|        }
  827|       |
  828|  1.60M|        const Token& token = CurrentToken();
  829|  1.60M|        if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (829:13): [True: 4.50k, False: 1.60M]
  ------------------
  830|  4.50k|        {
  831|  4.50k|            const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
  832|  4.50k|            PHI_UNUSED_VARIABLE(op_precedence);
  833|  4.50k|            ConsumeCurrent();
  834|       |
  835|       |            // TODO: Implement me
  836|  4.50k|        }
  837|  1.60M|        else if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (837:18): [True: 530k, False: 1.06M]
  ------------------
  838|   530k|        {
  839|       |            // Consume the LParen
  840|   530k|            m_TokenStream->consume();
  841|       |
  842|   530k|            phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
  843|   530k|            if (!paren_expression)
  ------------------
  |  Branch (843:17): [True: 491k, False: 38.5k]
  ------------------
  844|   491k|            {
  845|       |                // TODO: Proper error
  846|   491k|                return {};
  847|   491k|            }
  848|       |
  849|  38.5k|            return phi::move(paren_expression);
  850|   530k|        }
  851|  1.06M|        else if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (851:18): [True: 278k, False: 791k]
  ------------------
  852|   278k|        {
  853|   278k|            phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
  854|   278k|            if (!int_literal)
  ------------------
  |  Branch (854:17): [True: 401, False: 278k]
  ------------------
  855|    401|            {
  856|       |                // TODO: Error failed to parse integer literal
  857|    401|                return {};
  858|    401|            }
  859|       |
  860|   278k|            return phi::move(int_literal);
  861|   278k|        }
  862|   791k|        else if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (862:18): [True: 102k, False: 688k]
  ------------------
  863|   102k|        {
  864|   102k|            auto string_literal_expression = ParseStringLiteral();
  865|   102k|            if (!string_literal_expression)
  ------------------
  |  Branch (865:17): [True: 0, False: 102k]
  ------------------
  866|      0|            {
  867|       |                // TODO: Proper error
  868|      0|                return {};
  869|      0|            }
  870|       |
  871|   102k|            return phi::move(string_literal_expression);
  872|   102k|        }
  873|       |
  874|       |        // Boolean literal
  875|   688k|        else if (token.GetTokenKind() == TokenKind::KW_True ||
  ------------------
  |  Branch (875:18): [True: 7.30k, False: 681k]
  ------------------
  876|   688k|                 token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (876:18): [True: 11.3k, False: 669k]
  ------------------
  877|  18.6k|        {
  878|  18.6k|            auto boolean_literal = ParseBooleanLiteral();
  879|  18.6k|            if (!boolean_literal)
  ------------------
  |  Branch (879:17): [True: 0, False: 18.6k]
  ------------------
  880|      0|            {
  881|       |                // TODO: Proper error
  882|      0|                return {};
  883|      0|            }
  884|       |
  885|  18.6k|            return phi::move(boolean_literal);
  886|  18.6k|        }
  887|       |
  888|       |        // Function call expression
  889|   669k|        else if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (889:18): [True: 285k, False: 383k]
  |  Branch (889:18): [True: 289k, False: 380k]
  |  Branch (889:75): [True: 3.50k, False: 380k]
  ------------------
  890|   289k|        {
  891|   289k|            auto function_call_expression = ParseFunctionCallExpression();
  892|   289k|            if (!function_call_expression)
  ------------------
  |  Branch (892:17): [True: 158k, False: 130k]
  ------------------
  893|   158k|            {
  894|       |                // TODO: Proper error
  895|   158k|                err("ERR: Failed to parse function call expression!\n");
  896|   158k|                return {};
  897|   158k|            }
  898|       |
  899|   130k|            return phi::move(function_call_expression);
  900|   289k|        }
  901|       |        // Variable expression
  902|   380k|        else if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (902:18): [True: 104k, False: 275k]
  ------------------
  903|   104k|        {
  904|   104k|            auto variable_expression = ParseVariableExpression();
  905|   104k|            if (!variable_expression)
  ------------------
  |  Branch (905:17): [True: 0, False: 104k]
  ------------------
  906|      0|            {
  907|       |                // TODO: Proper error
  908|      0|                err("ERR: Failed to parse Variable expression\n");
  909|      0|                return {};
  910|      0|            }
  911|       |
  912|   104k|            return phi::move(variable_expression);
  913|   104k|        }
  914|       |        // Keyword literal
  915|   275k|        else if (token.IsKeywordLiteral())
  ------------------
  |  Branch (915:18): [True: 12.1k, False: 263k]
  ------------------
  916|  12.1k|        {
  917|  12.1k|            auto keyword_literal = ParseKeywordLiteral();
  918|  12.1k|            if (!keyword_literal)
  ------------------
  |  Branch (918:17): [True: 0, False: 12.1k]
  ------------------
  919|      0|            {
  920|       |                // TODO: Proper error
  921|      0|                err("ERR: Failed to parse keyword literal expression!\n");
  922|      0|                return {};
  923|      0|            }
  924|       |
  925|  12.1k|            return phi::move(keyword_literal);
  926|  12.1k|        }
  927|       |        // Float literal
  928|   263k|        else if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (928:18): [True: 9.38k, False: 254k]
  ------------------
  929|  9.38k|        {
  930|  9.38k|            auto float_literal = ParseFloatLiteral();
  931|  9.38k|            if (!float_literal)
  ------------------
  |  Branch (931:17): [True: 0, False: 9.38k]
  ------------------
  932|      0|            {
  933|       |                // TODO: Proper error
  934|      0|                err("ERR: Failed to parse float literal expression!\n");
  935|      0|                return {};
  936|      0|            }
  937|       |
  938|  9.38k|            return phi::move(float_literal);
  939|  9.38k|        }
  940|       |
  941|       |        // TODO: Error Unexpected token
  942|   258k|        err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
  943|   258k|                        enum_name(token.GetTokenKind())));
  944|   258k|        return {};
  945|  1.60M|    }
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
  949|   617k|    {
  950|   700k|        while (true)
  ------------------
  |  Branch (950:16): [Folded - Ignored]
  ------------------
  951|   700k|        {
  952|   700k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (952:17): [True: 2.57k, False: 697k]
  ------------------
  953|  2.57k|            {
  954|  2.57k|                return phi::move(lhs);
  955|  2.57k|            }
  956|       |
  957|   697k|            const Token& operator_token = CurrentToken();
  958|   697k|            if (!IsBinaryOperator(operator_token.GetTokenKind()))
  ------------------
  |  Branch (958:17): [True: 580k, False: 117k]
  ------------------
  959|   580k|            {
  960|       |                // If its not a binary operator just return the lhs expression
  961|   580k|                return phi::move(lhs);
  962|   580k|            }
  963|   117k|            int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
  964|   117k|            ConsumeCurrent();
  965|       |
  966|   117k|            if (token_precedence < precedence)
  ------------------
  |  Branch (966:17): [True: 5.39k, False: 112k]
  ------------------
  967|  5.39k|            {
  968|  5.39k|                return phi::move(lhs);
  969|  5.39k|            }
  970|       |
  971|       |            // This must be an binary expression
  972|   112k|            phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
  973|   112k|            if (!rhs_expression)
  ------------------
  |  Branch (973:17): [True: 24.9k, False: 87.5k]
  ------------------
  974|  24.9k|            {
  975|       |                // TODO: Proper error
  976|  24.9k|                return {};
  977|  24.9k|            }
  978|       |
  979|       |            // Nothing left to parse so directly return from here
  980|  87.5k|            if (!m_TokenStream->has_more())
  ------------------
  |  Branch (980:17): [True: 499, False: 87.0k]
  ------------------
  981|    499|            {
  982|    499|                return phi::make_not_null_scope<ASTBinaryExpression>(
  983|    499|                        phi::move(lhs), operator_token.GetTokenKind(),
  984|    499|                        rhs_expression.release_not_null());
  985|    499|            }
  986|       |
  987|       |            // If BinOp binds less tightly with RHS than the operator after RHS, let
  988|       |            // the pending operator take RHS as its LHS.
  989|  87.0k|            const Token& next_token      = CurrentToken();
  990|  87.0k|            int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
  991|       |
  992|  87.0k|            if (token_precedence < next_precedence)
  ------------------
  |  Branch (992:17): [True: 9.64k, False: 77.3k]
  ------------------
  993|  9.64k|            {
  994|  9.64k|                rhs_expression =
  995|  9.64k|                        ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
  996|  9.64k|                if (!rhs_expression)
  ------------------
  |  Branch (996:21): [True: 3.53k, False: 6.10k]
  ------------------
  997|  3.53k|                {
  998|       |                    // TODO: Proper error
  999|  3.53k|                    return {};
 1000|  3.53k|                }
 1001|  9.64k|            }
 1002|       |
 1003|       |            // Merge LHS/RHS.
 1004|  83.4k|            lhs = phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1005|  83.4k|                                                                operator_token.GetTokenKind(),
 1006|  83.4k|                                                                rhs_expression.release_not_null());
 1007|  83.4k|        }
 1008|   617k|    }
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
 1011|   289k|    {
 1012|       |        // Parse the function name
 1013|   289k|        const Token& function_identifier_token = CurrentToken();
 1014|   289k|        if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1014:13): [True: 3.50k, False: 285k]
  |  Branch (1014:13): [True: 0, False: 289k]
  ------------------
 1015|   289k|            !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1015:13): [True: 0, False: 3.50k]
  ------------------
 1016|      0|        {
 1017|      0|            return {};
 1018|      0|        }
 1019|   289k|        ConsumeCurrent();
 1020|       |
 1021|   289k|        phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1022|   289k|                phi::make_scope<ASTFunctionCallExpression>();
 1023|   289k|        if (!function_call_expression)
  ------------------
  |  Branch (1023:13): [True: 0, False: 289k]
  ------------------
 1024|      0|        {
 1025|       |            // TODO: Proper error
 1026|      0|            return {};
 1027|      0|        }
 1028|       |
 1029|   289k|        if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1029:13): [True: 3.50k, False: 285k]
  ------------------
 1030|  3.50k|        {
 1031|  3.50k|            function_call_expression->m_IsBuiltIn       = true;
 1032|  3.50k|            function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
 1033|  3.50k|        }
 1034|   285k|        else
 1035|   285k|        {
 1036|   285k|            const phi::string_view function_name = function_identifier_token.GetText();
 1037|       |
 1038|   285k|            function_call_expression->m_IsBuiltIn    = false;
 1039|   285k|            function_call_expression->m_FunctionName = function_name;
 1040|   285k|        }
 1041|       |
 1042|       |        // TODO: These 2 checks should be combined
 1043|       |        // Now me MUST parse an LParen
 1044|   289k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1044:13): [True: 2.06k, False: 287k]
  ------------------
 1045|  2.06k|        {
 1046|       |            // TODO: Give proper error
 1047|  2.06k|            err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1048|  2.06k|                            std::string_view{function_call_expression->FunctionName()}));
 1049|  2.06k|            return {};
 1050|  2.06k|        }
 1051|       |
 1052|   287k|        const Token& left_paren_token = CurrentToken();
 1053|   287k|        ConsumeCurrent();
 1054|   287k|        if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1054:13): [True: 128k, False: 159k]
  ------------------
 1055|   128k|        {
 1056|       |            // TODO: Give error
 1057|   128k|            err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1058|   128k|                            std::string_view{function_call_expression->FunctionName()}));
 1059|   128k|            return {};
 1060|   128k|        }
 1061|       |
 1062|       |        // Now parse all the arguments (which are expressions) separated by commas or nothing
 1063|   159k|        function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1064|       |
 1065|       |        // Finally we MUST parse an RParen
 1066|   159k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1066:13): [True: 10.9k, False: 148k]
  ------------------
 1067|  10.9k|        {
 1068|  10.9k|            err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1069|  10.9k|                            std::string_view{function_call_expression->FunctionName()}));
 1070|       |            // TODO: Give proper error
 1071|  10.9k|            return {};
 1072|  10.9k|        }
 1073|       |
 1074|   148k|        const Token& right_paren_token = CurrentToken();
 1075|   148k|        ConsumeCurrent();
 1076|   148k|        if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1076:13): [True: 17.4k, False: 130k]
  ------------------
 1077|  17.4k|        {
 1078|  17.4k|            err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1079|  17.4k|                            std::string_view{function_call_expression->FunctionName()}));
 1080|       |            // TODO: Give Error
 1081|  17.4k|            return {};
 1082|  17.4k|        }
 1083|       |
 1084|       |        // Return result
 1085|   130k|        return function_call_expression;
 1086|   148k|    }
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1090|   159k|    {
 1091|   159k|        std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1092|       |
 1093|   214k|        while (m_TokenStream->has_more() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1093:16): [True: 214k, False: 459]
  |  Branch (1093:16): [True: 97.6k, False: 117k]
  |  Branch (1093:45): [True: 97.6k, False: 116k]
  ------------------
 1094|  97.6k|        {
 1095|       |            // Parse the expression
 1096|  97.6k|            phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1097|  97.6k|            if (!expression)
  ------------------
  |  Branch (1097:17): [True: 41.9k, False: 55.7k]
  ------------------
 1098|  41.9k|            {
 1099|  41.9k|                err("ERR: While parsing expression for function call arguments\n");
 1100|       |                // TODO: Give Prober error
 1101|  41.9k|                arguments.clear();
 1102|  41.9k|                return arguments;
 1103|  41.9k|            }
 1104|       |
 1105|       |            // Add argument to parameters
 1106|  55.7k|            arguments.emplace_back(expression.release_not_null());
 1107|       |
 1108|       |            // Next Token MUST be a comma followed by another expression or RParen
 1109|  55.7k|            if (m_TokenStream->has_more() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1109:17): [True: 55.4k, False: 306]
  |  Branch (1109:17): [True: 241, False: 55.4k]
  |  Branch (1109:46): [True: 241, False: 55.1k]
  ------------------
 1110|    241|            {
 1111|    241|                ConsumeCurrent();
 1112|    241|            }
 1113|  55.7k|        }
 1114|       |
 1115|   117k|        return arguments;
 1116|   159k|    }
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1119|   104k|    {
 1120|   104k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1120:13): [True: 0, False: 104k]
  ------------------
 1121|      0|        {
 1122|       |            // TODO: Proper error
 1123|      0|            return {};
 1124|      0|        }
 1125|       |
 1126|   104k|        const Token& token = CurrentToken();
 1127|   104k|        if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1127:13): [True: 0, False: 104k]
  ------------------
 1128|      0|        {
 1129|       |            // TODO error
 1130|      0|            return {};
 1131|      0|        }
 1132|       |
 1133|   104k|        auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1134|   104k|        variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1135|       |
 1136|   104k|        ConsumeCurrent();
 1137|       |
 1138|   104k|        return phi::move(variable_expression);
 1139|   104k|    }
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1154|   530k|    {
 1155|       |        // NOTE: Me MUST have consumed the LParen before this
 1156|       |
 1157|   530k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1158|   530k|        if (!expression)
  ------------------
  |  Branch (1158:13): [True: 470k, False: 59.4k]
  ------------------
 1159|   470k|        {
 1160|       |            // TODO: Proper error
 1161|   470k|            return {};
 1162|   470k|        }
 1163|       |
 1164|  59.4k|        if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1164:13): [True: 20.9k, False: 38.5k]
  ------------------
 1165|  20.9k|        {
 1166|       |            // TODO: Proper error expected closing paren
 1167|  20.9k|            return {};
 1168|  20.9k|        }
 1169|       |
 1170|  38.5k|        return phi::move(expression);
 1171|  59.4k|    }
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1174|  18.6k|    {
 1175|  18.6k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1175:13): [True: 0, False: 18.6k]
  ------------------
 1176|      0|        {
 1177|       |            // TODO: Proper error
 1178|      0|            return {};
 1179|      0|        }
 1180|       |
 1181|       |        // BooleanLiteral is either KW_True or KW_False
 1182|  18.6k|        const Token& token = CurrentToken();
 1183|  18.6k|        if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1183:13): [True: 7.30k, False: 11.3k]
  ------------------
 1184|  7.30k|        {
 1185|  7.30k|            ConsumeCurrent();
 1186|  7.30k|            return phi::make_scope<ASTBooleanLiteral>(true);
 1187|  7.30k|        }
 1188|       |
 1189|  11.3k|        if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1189:13): [True: 11.3k, False: 0]
  ------------------
 1190|  11.3k|        {
 1191|  11.3k|            ConsumeCurrent();
 1192|  11.3k|            return phi::make_scope<ASTBooleanLiteral>(false);
 1193|  11.3k|        }
 1194|       |
 1195|       |        // TODO: Proper error
 1196|      0|        return {};
 1197|  11.3k|    }
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1200|  12.1k|    {
 1201|  12.1k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1201:13): [True: 0, False: 12.1k]
  ------------------
 1202|      0|        {
 1203|       |            // TODO: Proper error
 1204|      0|            return {};
 1205|      0|        }
 1206|       |
 1207|  12.1k|        const Token& token = CurrentToken();
 1208|  12.1k|        if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1208:13): [True: 12.1k, False: 0]
  ------------------
 1209|  12.1k|        {
 1210|  12.1k|            ConsumeCurrent();
 1211|  12.1k|            return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1212|  12.1k|        }
 1213|       |
 1214|       |        // TODO: Proper error
 1215|      0|        return {};
 1216|  12.1k|    }
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1219|  9.38k|    {
 1220|  9.38k|        if (!m_TokenStream->has_more())
  ------------------
  |  Branch (1220:13): [True: 0, False: 9.38k]
  ------------------
 1221|      0|        {
 1222|       |            // TODO: Proper error
 1223|      0|            return {};
 1224|      0|        }
 1225|       |
 1226|  9.38k|        const Token& token = CurrentToken();
 1227|  9.38k|        if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1227:13): [True: 9.38k, False: 0]
  ------------------
 1228|  9.38k|        {
 1229|  9.38k|            ConsumeCurrent();
 1230|       |
 1231|  9.38k|            char*    ptr   = nullptr;
 1232|  9.38k|            phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1233|       |
 1234|  9.38k|            return phi::make_scope<ASTFloatLiteral>(value);
 1235|  9.38k|        }
 1236|       |
 1237|       |        // TODO: Proper error
 1238|      0|        return {};
 1239|  9.38k|    }
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   70|   209k|        {
   71|   209k|            int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   72|       |            //PHI_ASSERT(precedence != 0);
   73|       |
   74|   209k|            return precedence;
   75|   209k|        }

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  14.5k|    {
   31|       |#if defined(PHI_DEBUG)
   32|       |        PHI_ASSERT(!m_Finialized);
   33|       |#endif
   34|       |
   35|  14.5k|        m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |        m_Finialized = true;
   38|       |#endif
   39|  14.5k|    }
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   69|  18.1M|    {
   70|       |#if defined(PHI_DEBUG)
   71|       |        PHI_ASSERT(m_Finialized);
   72|       |#endif
   73|       |
   74|  18.1M|        return m_Index < m_Tokens.size();
   75|  18.1M|    }
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   78|  12.5M|    {
   79|       |#if defined(PHI_DEBUG)
   80|       |        PHI_ASSERT(m_Finialized);
   81|       |#endif
   82|       |
   83|  12.5M|        return m_Index >= m_Tokens.size();
   84|  12.5M|    }
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   87|  8.96M|    {
   88|  8.96M|        PHI_ASSERT(!reached_end());
   89|       |#if defined(PHI_DEBUG)
   90|       |        PHI_ASSERT(m_Finialized);
   91|       |#endif
   92|       |
   93|  8.96M|        return m_Tokens[m_Index.unsafe()];
   94|  8.96M|    }
_ZN10OpenAutoIt11TokenStream7consumeEv:
   97|  3.55M|    {
   98|  3.55M|        PHI_ASSERT(!reached_end());
   99|       |#if defined(PHI_DEBUG)
  100|       |        PHI_ASSERT(m_Finialized);
  101|       |#endif
  102|       |
  103|  3.55M|        m_Index += 1u;
  104|  3.55M|    }

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  2.54M|    {
  100|  2.54M|        if (output_enabled)
  ------------------
  |  Branch (100:13): [True: 0, False: 2.54M]
  ------------------
  101|      0|        {
  102|      0|            std::cerr << data;
  103|      0|        }
  104|  2.54M|    }
_ZN10OpenAutoIt14disable_outputEv:
  107|  14.5k|    {
  108|  14.5k|        output_enabled = false;
  109|  14.5k|    }

