_ZN3fmt3v106detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  388|  1.82M|    typename std::make_unsigned<Int>::type {
  389|  1.82M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  347|  3.64M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (347:35): [Folded - Ignored]
  |  |  |  Branch (347:35): [True: 1.82M, False: 0]
  |  |  ------------------
  ------------------
  390|  1.82M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  391|  1.82M|}
_ZN3fmt3v106detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  315|  15.3M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v1017basic_string_viewIcE4sizeEv:
  456|  10.4M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  315|  1.82M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE4sizeEv:
  851|  2.22M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail6bufferIcEC2EPcmm:
  823|  2.22M|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt3v106detail6bufferIcE3setEPcm:
  829|  2.22M|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  830|  2.22M|    ptr_ = buf_data;
  831|  2.22M|    capacity_ = buf_capacity;
  832|  2.22M|  }
_ZN3fmt3v106detail13ignore_unusedIJbEEEvDpRKT_:
  315|    157|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE8capacityEv:
  854|    275|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt3v106detail6bufferIcE4dataEv:
  857|  2.22M|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt3v1017basic_string_viewIcE5beginEv:
  458|  4.04M|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt3v1017basic_string_viewIcE3endEv:
  459|  4.04M|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKc:
  439|  2.18M|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt3v106detail10locale_refC2Ev:
 1550|  3.90M|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZNK3fmt3v1019basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2775|   399k|  FMT_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt3v1016make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJEEENS0_16format_arg_storeIT_JDpNSt3__19remove_cvINS7_16remove_referenceIT0_E4typeEE4typeEEEEDpRSA_:
 1841|   399k|    -> format_arg_store<Context, remove_cvref_t<T>...> {
 1842|   399k|  return {args...};
 1843|   399k|}
_ZN3fmt3v1016format_arg_storeINS0_20basic_format_contextINS0_8appenderEcEEJEEC2IJEEEDpRT_:
 1824|   399k|        data_{detail::make_arg<is_packed, Context>(args)...} {
 1825|   399k|    if (detail::const_check(num_named_args != 0))
  ------------------
  |  Branch (1825:9): [Folded - Ignored]
  ------------------
 1826|      0|      detail::init_named_args(data_.named_args(), 0, 0, args...);
 1827|   399k|  }
_ZN3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EEC2IJEEEDpRKT_:
 1181|   399k|  FMT_CONSTEXPR FMT_INLINE arg_data(const U&... init) : args_{init...} {}
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1274|  2.22M|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt3v109monostateC2Ev:
  290|  2.22M|  constexpr monostate() {}
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2IJEEERKNS0_16format_arg_storeIS4_JDpT_EEE:
 1925|   399k|                          store.data_.args()) {}
_ZNK3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE4argsEv:
 1182|   399k|  FMT_CONSTEXPR FMT_INLINE auto args() const -> const T* { return args_; }
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1909|  2.22M|      : desc_(desc), values_(values) {}
_ZNK3fmt3v1017basic_string_viewIcE4dataEv:
  453|  4.19M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKcm:
  424|  4.19M|      : data_(s), size_(count) {}
_ZN3fmt3v106detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  388|  13.4M|    typename std::make_unsigned<Int>::type {
  389|  13.4M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  347|  26.9M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (347:35): [Folded - Ignored]
  |  |  |  Branch (347:35): [True: 13.4M, False: 0]
  |  |  ------------------
  ------------------
  390|  13.4M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  391|  13.4M|}
_ZN3fmt3v106detail6bufferIcE11try_reserveEm:
  874|  5.76M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  875|  5.76M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (875:9): [True: 157, False: 5.76M]
  ------------------
  876|  5.76M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 1947|  1.82M|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1948|  1.82M|    format_arg arg;
 1949|  1.82M|    if (!is_packed()) {
  ------------------
  |  Branch (1949:9): [True: 0, False: 1.82M]
  ------------------
 1950|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1950:11): [True: 0, False: 0]
  ------------------
 1951|      0|      return arg;
 1952|      0|    }
 1953|  1.82M|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1953:9): [True: 0, False: 1.82M]
  ------------------
 1954|  1.82M|    arg.type_ = type(id);
 1955|  1.82M|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1955:9): [True: 0, False: 1.82M]
  ------------------
 1956|  1.82M|    arg.value_ = values_[id];
 1957|  1.82M|    return arg;
 1958|  1.82M|  }
_ZN3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1658|  1.82M|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1894|  1.82M|  constexpr auto is_packed() const -> bool {
 1895|  1.82M|    return (desc_ & detail::is_unpacked_bit) == 0;
 1896|  1.82M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1901|  1.82M|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1902|  1.82M|    int shift = index * detail::packed_arg_bits;
 1903|  1.82M|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1904|  1.82M|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1905|  1.82M|  }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1660|  1.82M|  constexpr explicit operator bool() const noexcept {
 1661|  1.82M|    return type_ != detail::type::none_type;
 1662|  1.82M|  }
_ZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  779|  5.87M|    -> Container& {
  780|  5.87M|  using base = std::back_insert_iterator<Container>;
  781|  5.87M|  struct accessor : base {
  782|  5.87M|    accessor(base b) : base(b) {}
  783|  5.87M|    using base::container;
  784|  5.87M|  };
  785|  5.87M|  return *accessor(it).container;
  786|  5.87M|}
_ZZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  782|  5.87M|    accessor(base b) : base(b) {}
_ZNK3fmt3v106detail6fill_tIcE4sizeEv:
 2025|  1.82M|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt3v106detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1502|  5.87M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1503|  5.87M|  get_container(out).append(begin, end);
 1504|  5.87M|  return out;
 1505|  5.87M|}
_ZN3fmt3v1012format_specsIcEC2Ev:
 2075|  1.82M|        localized(false) {}
_ZN3fmt3v1026basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  682|  2.22M|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1747|  2.22M|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE3outEv:
 1762|  5.87M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2504|  2.22M|    basic_string_view<Char> format_str, Handler&& handler) {
 2505|  2.22M|  auto begin = format_str.data();
 2506|  2.22M|  auto end = begin + format_str.size();
 2507|  2.22M|  if (end - begin < 32) {
  ------------------
  |  Branch (2507:7): [True: 1.30M, False: 917k]
  ------------------
 2508|       |    // Use a simple loop instead of memchr for small strings.
 2509|  1.30M|    const Char* p = begin;
 2510|  32.7M|    while (p != end) {
  ------------------
  |  Branch (2510:12): [True: 31.4M, False: 1.30M]
  ------------------
 2511|  31.4M|      auto c = *p++;
 2512|  31.4M|      if (c == '{') {
  ------------------
  |  Branch (2512:11): [True: 907k, False: 30.5M]
  ------------------
 2513|   907k|        handler.on_text(begin, p - 1);
 2514|   907k|        begin = p = parse_replacement_field(p - 1, end, handler);
 2515|  30.5M|      } else if (c == '}') {
  ------------------
  |  Branch (2515:18): [True: 0, False: 30.5M]
  ------------------
 2516|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2516:13): [True: 0, False: 0]
  |  Branch (2516:25): [True: 0, False: 0]
  ------------------
 2517|      0|          return handler.on_error("unmatched '}' in format string");
 2518|      0|        handler.on_text(begin, p);
 2519|      0|        begin = ++p;
 2520|      0|      }
 2521|  31.4M|    }
 2522|  1.30M|    handler.on_text(begin, end);
 2523|  1.30M|    return;
 2524|  1.30M|  }
 2525|   917k|  struct writer {
 2526|   917k|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2527|   917k|      if (from == to) return;
 2528|   917k|      for (;;) {
 2529|   917k|        const Char* p = nullptr;
 2530|   917k|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2531|   917k|          return handler_.on_text(from, to);
 2532|   917k|        ++p;
 2533|   917k|        if (p == to || *p != '}')
 2534|   917k|          return handler_.on_error("unmatched '}' in format string");
 2535|   917k|        handler_.on_text(from, p);
 2536|   917k|        from = p + 1;
 2537|   917k|      }
 2538|   917k|    }
 2539|   917k|    Handler& handler_;
 2540|   917k|  } write = {handler};
 2541|  1.83M|  while (begin != end) {
  ------------------
  |  Branch (2541:10): [True: 1.83M, False: 12]
  ------------------
 2542|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2543|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2544|  1.83M|    const Char* p = begin;
 2545|  1.83M|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2545:9): [True: 1.83M, False: 0]
  |  Branch (2545:26): [True: 917k, False: 917k]
  ------------------
 2546|   917k|      return write(begin, end);
 2547|   917k|    write(begin, p);
 2548|   917k|    begin = parse_replacement_field(p, end, handler);
 2549|   917k|  }
 2550|   917k|}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1765|  5.87M|  void advance_to(iterator it) {
 1766|  5.87M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1766:9): [Folded - Ignored]
  ------------------
 1767|  5.87M|  }
_ZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2467|  1.82M|                                           Handler&& handler) -> const Char* {
 2468|  1.82M|  struct id_adapter {
 2469|  1.82M|    Handler& handler;
 2470|  1.82M|    int arg_id;
 2471|       |
 2472|  1.82M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2473|  1.82M|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2474|  1.82M|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2475|  1.82M|      arg_id = handler.on_arg_id(id);
 2476|  1.82M|    }
 2477|  1.82M|  };
 2478|       |
 2479|  1.82M|  ++begin;
 2480|  1.82M|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2480:7): [True: 0, False: 1.82M]
  ------------------
 2481|  1.82M|  if (*begin == '}') {
  ------------------
  |  Branch (2481:7): [True: 0, False: 1.82M]
  ------------------
 2482|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2483|  1.82M|  } else if (*begin == '{') {
  ------------------
  |  Branch (2483:14): [True: 0, False: 1.82M]
  ------------------
 2484|      0|    handler.on_text(begin, begin + 1);
 2485|  1.82M|  } else {
 2486|  1.82M|    auto adapter = id_adapter{handler, 0};
 2487|  1.82M|    begin = parse_arg_id(begin, end, adapter);
 2488|  1.82M|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2488:14): [True: 1.82M, False: 0]
  ------------------
 2489|  1.82M|    if (c == '}') {
  ------------------
  |  Branch (2489:9): [True: 0, False: 1.82M]
  ------------------
 2490|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2491|  1.82M|    } else if (c == ':') {
  ------------------
  |  Branch (2491:16): [True: 1.82M, False: 0]
  ------------------
 2492|  1.82M|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2493|  1.82M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2493:11): [True: 0, False: 1.82M]
  |  Branch (2493:27): [True: 0, False: 1.82M]
  ------------------
 2494|      0|        return handler.on_error("unknown format specifier"), end;
 2495|  1.82M|    } else {
 2496|      0|      return handler.on_error("missing '}' in format string"), end;
 2497|      0|    }
 2498|  1.82M|  }
 2499|  1.82M|  return begin + 1;
 2500|  1.82M|}
_ZNK3fmt3v1020basic_format_contextINS0_8appenderEcE3argEi:
 1749|  1.82M|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE6localeEv:
 1769|  1.82M|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt3v1026basic_format_parse_contextIcE11next_arg_idEv:
  706|  1.82M|  FMT_CONSTEXPR auto next_arg_id() -> int {
  707|  1.82M|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (707:9): [True: 0, False: 1.82M]
  ------------------
  708|      0|      detail::throw_format_error(
  709|      0|          "cannot switch from manual to automatic argument indexing");
  710|      0|      return 0;
  711|      0|    }
  712|  1.82M|    int id = next_arg_id_++;
  713|  1.82M|    do_check_arg_id(id);
  714|  1.82M|    return id;
  715|  1.82M|  }
_ZN3fmt3v1026basic_format_parse_contextIcE15do_check_arg_idEi:
 1053|  1.82M|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
 1054|       |  // Argument id is only checked at compile-time during parsing because
 1055|       |  // formatting has its own validation.
 1056|  1.82M|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (1056:7): [Folded - Ignored]
  ------------------
 1057|  1.82M|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   33|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (1057:8): [Folded - Ignored]
  |  Branch (1057:28): [Folded - Ignored]
  ------------------
 1058|      0|    using context = detail::compile_parse_context<Char>;
 1059|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (1059:9): [True: 0, False: 0]
  ------------------
 1060|      0|      detail::throw_format_error("argument not found");
 1061|      0|  }
 1062|  1.82M|}
_ZN3fmt3v106detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2223|  1.82M|                                           Handler&& handler) -> const Char* {
 2224|  1.82M|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  347|  1.82M|      fmt::detail::ignore_unused((condition), (message))
  ------------------
 2225|  1.82M|  Char c = *begin;
 2226|  1.82M|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2226:7): [True: 1.82M, False: 0]
  |  Branch (2226:19): [True: 0, False: 1.82M]
  ------------------
 2227|  1.82M|  handler.on_auto();
 2228|  1.82M|  return begin;
 2229|  1.82M|}
_ZZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2472|  1.82M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1664|  3.64M|  auto type() const -> detail::type { return type_; }
_ZN3fmt3v106detail7arg_refIcEC2Ev:
 2084|  3.64M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt3v106detail7arg_refIcE5valueC2Ei:
 2099|  3.64M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2293|  1.82M|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2294|  1.82M|  auto c = '\0';
 2295|  1.82M|  if (end - begin > 1) {
  ------------------
  |  Branch (2295:7): [True: 1.82M, False: 0]
  ------------------
 2296|  1.82M|    auto next = to_ascii(begin[1]);
 2297|  1.82M|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2297:9): [True: 1.82M, False: 0]
  ------------------
 2298|  1.82M|  } else {
 2299|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2299:9): [True: 0, False: 0]
  ------------------
 2300|      0|    c = to_ascii(*begin);
 2301|      0|  }
 2302|       |
 2303|  1.82M|  struct {
 2304|  1.82M|    state current_state = state::start;
 2305|  1.82M|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2306|  1.82M|      if (current_state >= s || !valid)
 2307|  1.82M|        throw_format_error("invalid format specifier");
 2308|  1.82M|      current_state = s;
 2309|  1.82M|    }
 2310|  1.82M|  } enter_state;
 2311|       |
 2312|  1.82M|  using pres = presentation_type;
 2313|  1.82M|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2314|  1.82M|  struct {
 2315|  1.82M|    const Char*& begin;
 2316|  1.82M|    dynamic_format_specs<Char>& specs;
 2317|  1.82M|    type arg_type;
 2318|       |
 2319|  1.82M|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2320|  1.82M|      if (!in(arg_type, set)) {
 2321|  1.82M|        if (arg_type == type::none_type) return begin;
 2322|  1.82M|        throw_format_error("invalid format specifier");
 2323|  1.82M|      }
 2324|  1.82M|      specs.type = pres_type;
 2325|  1.82M|      return begin + 1;
 2326|  1.82M|    }
 2327|  1.82M|  } parse_presentation_type{begin, specs, arg_type};
 2328|       |
 2329|  1.82M|  for (;;) {
 2330|  1.82M|    switch (c) {
 2331|      0|    case '<':
  ------------------
  |  Branch (2331:5): [True: 0, False: 1.82M]
  ------------------
 2332|      0|    case '>':
  ------------------
  |  Branch (2332:5): [True: 0, False: 1.82M]
  ------------------
 2333|      0|    case '^':
  ------------------
  |  Branch (2333:5): [True: 0, False: 1.82M]
  ------------------
 2334|      0|      enter_state(state::align);
 2335|      0|      specs.align = parse_align(c);
 2336|      0|      ++begin;
 2337|      0|      break;
 2338|      0|    case '+':
  ------------------
  |  Branch (2338:5): [True: 0, False: 1.82M]
  ------------------
 2339|      0|    case '-':
  ------------------
  |  Branch (2339:5): [True: 0, False: 1.82M]
  ------------------
 2340|      0|    case ' ':
  ------------------
  |  Branch (2340:5): [True: 0, False: 1.82M]
  ------------------
 2341|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2341:11): [True: 0, False: 0]
  ------------------
 2342|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2343|      0|      switch (c) {
  ------------------
  |  Branch (2343:15): [True: 0, False: 0]
  ------------------
 2344|      0|      case '+':
  ------------------
  |  Branch (2344:7): [True: 0, False: 0]
  ------------------
 2345|      0|        specs.sign = sign::plus;
 2346|      0|        break;
 2347|      0|      case '-':
  ------------------
  |  Branch (2347:7): [True: 0, False: 0]
  ------------------
 2348|      0|        specs.sign = sign::minus;
 2349|      0|        break;
 2350|      0|      case ' ':
  ------------------
  |  Branch (2350:7): [True: 0, False: 0]
  ------------------
 2351|      0|        specs.sign = sign::space;
 2352|      0|        break;
 2353|      0|      }
 2354|      0|      ++begin;
 2355|      0|      break;
 2356|      0|    case '#':
  ------------------
  |  Branch (2356:5): [True: 0, False: 1.82M]
  ------------------
 2357|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2357:11): [True: 0, False: 0]
  ------------------
 2358|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2359|      0|      specs.alt = true;
 2360|      0|      ++begin;
 2361|      0|      break;
 2362|      0|    case '0':
  ------------------
  |  Branch (2362:5): [True: 0, False: 1.82M]
  ------------------
 2363|      0|      enter_state(state::zero);
 2364|      0|      if (!is_arithmetic_type(arg_type)) {
  ------------------
  |  Branch (2364:11): [True: 0, False: 0]
  ------------------
 2365|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2365:13): [True: 0, False: 0]
  ------------------
 2366|      0|        throw_format_error("format specifier requires numeric argument");
 2367|      0|      }
 2368|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2368:11): [True: 0, False: 0]
  ------------------
 2369|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2370|      0|        specs.align = align::numeric;
 2371|      0|        specs.fill[0] = Char('0');
 2372|      0|      }
 2373|      0|      ++begin;
 2374|      0|      break;
 2375|      0|    case '1':
  ------------------
  |  Branch (2375:5): [True: 0, False: 1.82M]
  ------------------
 2376|      0|    case '2':
  ------------------
  |  Branch (2376:5): [True: 0, False: 1.82M]
  ------------------
 2377|      0|    case '3':
  ------------------
  |  Branch (2377:5): [True: 0, False: 1.82M]
  ------------------
 2378|      0|    case '4':
  ------------------
  |  Branch (2378:5): [True: 0, False: 1.82M]
  ------------------
 2379|      0|    case '5':
  ------------------
  |  Branch (2379:5): [True: 0, False: 1.82M]
  ------------------
 2380|      0|    case '6':
  ------------------
  |  Branch (2380:5): [True: 0, False: 1.82M]
  ------------------
 2381|      0|    case '7':
  ------------------
  |  Branch (2381:5): [True: 0, False: 1.82M]
  ------------------
 2382|      0|    case '8':
  ------------------
  |  Branch (2382:5): [True: 0, False: 1.82M]
  ------------------
 2383|      0|    case '9':
  ------------------
  |  Branch (2383:5): [True: 0, False: 1.82M]
  ------------------
 2384|      0|    case '{':
  ------------------
  |  Branch (2384:5): [True: 0, False: 1.82M]
  ------------------
 2385|      0|      enter_state(state::width);
 2386|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2387|      0|      break;
 2388|      0|    case '.':
  ------------------
  |  Branch (2388:5): [True: 0, False: 1.82M]
  ------------------
 2389|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2389:11): [True: 0, False: 0]
  ------------------
 2390|      0|      enter_state(state::precision,
 2391|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2392|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2393|      0|                              ctx);
 2394|      0|      break;
 2395|      0|    case 'L':
  ------------------
  |  Branch (2395:5): [True: 0, False: 1.82M]
  ------------------
 2396|      0|      if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2396:11): [True: 0, False: 0]
  ------------------
 2397|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2398|      0|      specs.localized = true;
 2399|      0|      ++begin;
 2400|      0|      break;
 2401|      0|    case 'd':
  ------------------
  |  Branch (2401:5): [True: 0, False: 1.82M]
  ------------------
 2402|      0|      return parse_presentation_type(pres::dec, integral_set);
 2403|      0|    case 'o':
  ------------------
  |  Branch (2403:5): [True: 0, False: 1.82M]
  ------------------
 2404|      0|      return parse_presentation_type(pres::oct, integral_set);
 2405|      0|    case 'x':
  ------------------
  |  Branch (2405:5): [True: 0, False: 1.82M]
  ------------------
 2406|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2407|      0|    case 'X':
  ------------------
  |  Branch (2407:5): [True: 0, False: 1.82M]
  ------------------
 2408|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2409|      0|    case 'b':
  ------------------
  |  Branch (2409:5): [True: 0, False: 1.82M]
  ------------------
 2410|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2411|      0|    case 'B':
  ------------------
  |  Branch (2411:5): [True: 0, False: 1.82M]
  ------------------
 2412|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2413|      0|    case 'a':
  ------------------
  |  Branch (2413:5): [True: 0, False: 1.82M]
  ------------------
 2414|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2415|      0|    case 'A':
  ------------------
  |  Branch (2415:5): [True: 0, False: 1.82M]
  ------------------
 2416|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2417|      0|    case 'e':
  ------------------
  |  Branch (2417:5): [True: 0, False: 1.82M]
  ------------------
 2418|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2419|      0|    case 'E':
  ------------------
  |  Branch (2419:5): [True: 0, False: 1.82M]
  ------------------
 2420|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2421|      0|    case 'f':
  ------------------
  |  Branch (2421:5): [True: 0, False: 1.82M]
  ------------------
 2422|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2423|      0|    case 'F':
  ------------------
  |  Branch (2423:5): [True: 0, False: 1.82M]
  ------------------
 2424|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2425|      0|    case 'g':
  ------------------
  |  Branch (2425:5): [True: 0, False: 1.82M]
  ------------------
 2426|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2427|      0|    case 'G':
  ------------------
  |  Branch (2427:5): [True: 0, False: 1.82M]
  ------------------
 2428|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2429|      0|    case 'c':
  ------------------
  |  Branch (2429:5): [True: 0, False: 1.82M]
  ------------------
 2430|      0|      return parse_presentation_type(pres::chr, integral_set);
 2431|  1.82M|    case 's':
  ------------------
  |  Branch (2431:5): [True: 1.82M, False: 0]
  ------------------
 2432|  1.82M|      return parse_presentation_type(pres::string,
 2433|  1.82M|                                     bool_set | string_set | cstring_set);
 2434|      0|    case 'p':
  ------------------
  |  Branch (2434:5): [True: 0, False: 1.82M]
  ------------------
 2435|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2436|      0|    case '?':
  ------------------
  |  Branch (2436:5): [True: 0, False: 1.82M]
  ------------------
 2437|      0|      return parse_presentation_type(pres::debug,
 2438|      0|                                     char_set | string_set | cstring_set);
 2439|      0|    case '}':
  ------------------
  |  Branch (2439:5): [True: 0, False: 1.82M]
  ------------------
 2440|      0|      return begin;
 2441|      0|    default: {
  ------------------
  |  Branch (2441:5): [True: 0, False: 1.82M]
  ------------------
 2442|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2442:11): [True: 0, False: 0]
  ------------------
 2443|       |      // Parse fill and alignment.
 2444|      0|      auto fill_end = begin + code_point_length(begin);
 2445|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2445:11): [True: 0, False: 0]
  ------------------
 2446|      0|        throw_format_error("invalid format specifier");
 2447|      0|        return begin;
 2448|      0|      }
 2449|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2449:11): [True: 0, False: 0]
  ------------------
 2450|      0|        throw_format_error("invalid fill character '{'");
 2451|      0|        return begin;
 2452|      0|      }
 2453|      0|      auto align = parse_align(to_ascii(*fill_end));
 2454|      0|      enter_state(state::align, align != align::none);
 2455|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2456|      0|      specs.align = align;
 2457|      0|      begin = fill_end + 1;
 2458|      0|    }
 2459|  1.82M|    }
 2460|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2460:9): [True: 0, False: 0]
  ------------------
 2461|      0|    c = to_ascii(*begin);
 2462|      0|  }
 2463|  1.82M|}
_ZN3fmt3v106detail8to_asciiIcLi0EEEcT_:
 2118|  3.64M|constexpr auto to_ascii(Char c) -> char {
 2119|  3.64M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2119:10): [True: 3.64M, False: 0]
  ------------------
 2120|  3.64M|}
_ZN3fmt3v106detail11parse_alignEc:
 2176|  1.82M|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2177|  1.82M|  switch (c) {
  ------------------
  |  Branch (2177:11): [True: 1.82M, False: 0]
  ------------------
 2178|      0|  case '<':
  ------------------
  |  Branch (2178:3): [True: 0, False: 1.82M]
  ------------------
 2179|      0|    return align::left;
 2180|      0|  case '>':
  ------------------
  |  Branch (2180:3): [True: 0, False: 1.82M]
  ------------------
 2181|      0|    return align::right;
 2182|      0|  case '^':
  ------------------
  |  Branch (2182:3): [True: 0, False: 1.82M]
  ------------------
 2183|      0|    return align::center;
 2184|  1.82M|  }
 2185|  1.82M|  return align::none;
 2186|  1.82M|}
_ZN3fmt3v106detail2inENS1_4typeEi:
  624|  1.82M|constexpr auto in(type t, int set) -> bool {
  625|  1.82M|  return ((set >> static_cast<int>(t)) & 1) != 0;
  626|  1.82M|}
_ZZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2319|  1.82M|    FMT_CONSTEXPR auto operator()(pres pres_type, int set) -> const Char* {
 2320|  1.82M|      if (!in(arg_type, set)) {
  ------------------
  |  Branch (2320:11): [True: 0, False: 1.82M]
  ------------------
 2321|      0|        if (arg_type == type::none_type) return begin;
  ------------------
  |  Branch (2321:13): [True: 0, False: 0]
  ------------------
 2322|      0|        throw_format_error("invalid format specifier");
 2323|      0|      }
 2324|  1.82M|      specs.type = pres_type;
 2325|  1.82M|      return begin + 1;
 2326|  1.82M|    }
_ZN3fmt3v1016visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1682|  1.82M|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1683|  1.82M|  switch (arg.type_) {
  ------------------
  |  Branch (1683:11): [True: 0, False: 1.82M]
  ------------------
 1684|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1684:3): [True: 0, False: 1.82M]
  ------------------
 1685|      0|    break;
 1686|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1686:3): [True: 0, False: 1.82M]
  ------------------
 1687|      0|    return vis(arg.value_.int_value);
 1688|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1688:3): [True: 0, False: 1.82M]
  ------------------
 1689|      0|    return vis(arg.value_.uint_value);
 1690|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1690:3): [True: 0, False: 1.82M]
  ------------------
 1691|      0|    return vis(arg.value_.long_long_value);
 1692|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1692:3): [True: 0, False: 1.82M]
  ------------------
 1693|      0|    return vis(arg.value_.ulong_long_value);
 1694|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1694:3): [True: 0, False: 1.82M]
  ------------------
 1695|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1696|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1696:3): [True: 0, False: 1.82M]
  ------------------
 1697|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1698|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1698:3): [True: 0, False: 1.82M]
  ------------------
 1699|      0|    return vis(arg.value_.bool_value);
 1700|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1700:3): [True: 0, False: 1.82M]
  ------------------
 1701|      0|    return vis(arg.value_.char_value);
 1702|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1702:3): [True: 0, False: 1.82M]
  ------------------
 1703|      0|    return vis(arg.value_.float_value);
 1704|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1704:3): [True: 0, False: 1.82M]
  ------------------
 1705|      0|    return vis(arg.value_.double_value);
 1706|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1706:3): [True: 0, False: 1.82M]
  ------------------
 1707|      0|    return vis(arg.value_.long_double_value);
 1708|  1.68M|  case detail::type::cstring_type:
  ------------------
  |  Branch (1708:3): [True: 1.68M, False: 143k]
  ------------------
 1709|  1.68M|    return vis(arg.value_.string.data);
 1710|   143k|  case detail::type::string_type:
  ------------------
  |  Branch (1710:3): [True: 143k, False: 1.68M]
  ------------------
 1711|   143k|    using sv = basic_string_view<typename Context::char_type>;
 1712|   143k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1713|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1713:3): [True: 0, False: 1.82M]
  ------------------
 1714|      0|    return vis(arg.value_.pointer);
 1715|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1715:3): [True: 0, False: 1.82M]
  ------------------
 1716|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1717|  1.82M|  }
 1718|      0|  return vis(monostate());
 1719|  1.82M|}
_ZN3fmt3v106detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2145|  3.66M|                              const char*& out) -> bool {
 2146|  3.66M|  out = static_cast<const char*>(
 2147|  3.66M|      std::memchr(first, value, to_unsigned(last - first)));
 2148|  3.66M|  return out != nullptr;
 2149|  3.66M|}
_ZZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2526|  1.83M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2527|  1.83M|      if (from == to) return;
  ------------------
  |  Branch (2527:11): [True: 0, False: 1.83M]
  ------------------
 2528|  1.83M|      for (;;) {
 2529|  1.83M|        const Char* p = nullptr;
 2530|  1.83M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2530:13): [True: 1.83M, False: 0]
  ------------------
 2531|  1.83M|          return handler_.on_text(from, to);
 2532|      0|        ++p;
 2533|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2533:13): [True: 0, False: 0]
  |  Branch (2533:24): [True: 0, False: 0]
  ------------------
 2534|      0|          return handler_.on_error("unmatched '}' in format string");
 2535|      0|        handler_.on_text(from, p);
 2536|      0|        from = p + 1;
 2537|      0|      }
 2538|  1.83M|    }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1290|   143k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1291|   143k|    string.data = val.data();
 1292|   143k|    string.size = val.size();
 1293|   143k|  }
_ZN3fmt3v106detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1405|  1.68M|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1406|  1.68M|    return val;
 1407|  1.68M|  }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1286|  1.68M|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1287|  1.68M|    string.data = val;
 1288|  1.68M|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1288:9): [Folded - Ignored]
  ------------------
 1289|  1.68M|  }
_ZNK3fmt3v106detail6bufferIcE4dataEv:
  858|  2.22M|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt3v107vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1418|  2.22M|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1419|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1420|       |  // can be better optimized in fmt::format anyway.
 1421|  2.22M|  auto buffer = memory_buffer();
 1422|  2.22M|  detail::vformat_to(buffer, fmt, args);
 1423|  2.22M|  return to_string(buffer);
 1424|  2.22M|}

_ZN3fmt3v106detail6bufferIcE6appendIcEEvPKT_S7_:
  881|  5.87M|void buffer<T>::append(const U* begin, const U* end) {
  882|  11.6M|  while (begin != end) {
  ------------------
  |  Branch (882:10): [True: 5.76M, False: 5.87M]
  ------------------
  883|  5.76M|    auto count = to_unsigned(end - begin);
  884|  5.76M|    try_reserve(size_ + count);
  885|  5.76M|    auto free_cap = capacity_ - size_;
  886|  5.76M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (886:9): [True: 0, False: 5.76M]
  ------------------
  887|  5.76M|    std::uninitialized_copy_n(begin, count, ptr_ + size_);
  888|  5.76M|    size_ += count;
  889|  5.76M|    begin += count;
  890|  5.76M|  }
  891|  5.87M|}
_ZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4387|  2.22M|                typename vformat_args<Char>::type args, locale_ref loc) {
 4388|  2.22M|  auto out = buffer_appender<Char>(buf);
 4389|  2.22M|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4389:7): [True: 0, False: 2.22M]
  |  Branch (4389:26): [True: 0, False: 0]
  ------------------
 4390|      0|    auto arg = args.get(0);
 4391|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4391:9): [True: 0, False: 0]
  ------------------
 4392|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4393|      0|    return;
 4394|      0|  }
 4395|       |
 4396|  2.22M|  struct format_handler : error_handler {
 4397|  2.22M|    basic_format_parse_context<Char> parse_context;
 4398|  2.22M|    buffer_context<Char> context;
 4399|       |
 4400|  2.22M|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4401|  2.22M|                   basic_format_args<buffer_context<Char>> p_args,
 4402|  2.22M|                   locale_ref p_loc)
 4403|  2.22M|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4404|       |
 4405|  2.22M|    void on_text(const Char* begin, const Char* end) {
 4406|  2.22M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4407|  2.22M|      context.advance_to(write<Char>(context.out(), text));
 4408|  2.22M|    }
 4409|       |
 4410|  2.22M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4411|  2.22M|      return parse_context.next_arg_id();
 4412|  2.22M|    }
 4413|  2.22M|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4414|  2.22M|      return parse_context.check_arg_id(id), id;
 4415|  2.22M|    }
 4416|  2.22M|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4417|  2.22M|      int arg_id = context.arg_id(id);
 4418|  2.22M|      if (arg_id < 0) on_error("argument not found");
 4419|  2.22M|      return arg_id;
 4420|  2.22M|    }
 4421|       |
 4422|  2.22M|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4423|  2.22M|      auto arg = get_arg(context, id);
 4424|  2.22M|      context.advance_to(visit_format_arg(
 4425|  2.22M|          default_arg_formatter<Char>{context.out(), context.args(),
 4426|  2.22M|                                      context.locale()},
 4427|  2.22M|          arg));
 4428|  2.22M|    }
 4429|       |
 4430|  2.22M|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4431|  2.22M|        -> const Char* {
 4432|  2.22M|      auto arg = get_arg(context, id);
 4433|  2.22M|      if (arg.type() == type::custom_type) {
 4434|  2.22M|        parse_context.advance_to(begin);
 4435|  2.22M|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4436|  2.22M|        return parse_context.begin();
 4437|  2.22M|      }
 4438|  2.22M|      auto specs = detail::dynamic_format_specs<Char>();
 4439|  2.22M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4440|  2.22M|      detail::handle_dynamic_spec<detail::width_checker>(
 4441|  2.22M|          specs.width, specs.width_ref, context);
 4442|  2.22M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4443|  2.22M|          specs.precision, specs.precision_ref, context);
 4444|  2.22M|      if (begin == end || *begin != '}')
 4445|  2.22M|        on_error("missing '}' in format string");
 4446|  2.22M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4447|  2.22M|      context.advance_to(visit_format_arg(f, arg));
 4448|  2.22M|      return begin;
 4449|  2.22M|    }
 4450|  2.22M|  };
 4451|  2.22M|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4452|  2.22M|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  971|  2.22M|      : alloc_(alloc) {
  972|  2.22M|    this->set(store_, SIZE);
  973|  2.22M|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (973:9): [Folded - Ignored]
  ------------------
  974|  2.22M|  }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  942|    157|  FMT_CONSTEXPR20 void grow(size_t size) override {
  943|    157|    detail::abort_fuzzing_if(size > 5000);
  944|    157|    const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  945|    157|    size_t old_capacity = this->capacity();
  946|    157|    size_t new_capacity = old_capacity + old_capacity / 2;
  947|    157|    if (size > new_capacity)
  ------------------
  |  Branch (947:9): [True: 27, False: 130]
  ------------------
  948|     27|      new_capacity = size;
  949|    130|    else if (new_capacity > max_size)
  ------------------
  |  Branch (949:14): [True: 0, False: 130]
  ------------------
  950|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (950:22): [True: 0, False: 0]
  ------------------
  951|    157|    T* old_data = this->data();
  952|    157|    T* new_data =
  953|    157|        std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  954|       |    // Suppress a bogus -Wstringop-overflow in gcc 13.1 (#3481).
  955|    157|    detail::assume(this->size() <= new_capacity);
  956|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  957|    157|    std::uninitialized_copy_n(old_data, this->size(), new_data);
  958|    157|    this->set(new_data, new_capacity);
  959|       |    // deallocate must not throw according to the standard, but even if it does,
  960|       |    // the buffer already uses the new storage and will deallocate it in
  961|       |    // destructor.
  962|    157|    if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (962:9): [True: 39, False: 118]
  ------------------
  963|    157|  }
_ZN3fmt3v106detail16abort_fuzzing_ifEb:
  295|    157|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  296|    157|  ignore_unused(condition);
  297|       |#ifdef FMT_FUZZ
  298|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  299|       |#endif
  300|    157|}
_ZN3fmt3v106detail6assumeEb:
  544|  2.22M|FMT_INLINE void assume(bool condition) {
  545|  2.22M|  (void)condition;
  546|  2.22M|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  547|  2.22M|  __builtin_assume(condition);
  548|       |#elif FMT_GCC_VERSION
  549|       |  if (!condition) __builtin_unreachable();
  550|       |#endif
  551|  2.22M|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  975|  2.22M|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  936|  2.22M|  FMT_CONSTEXPR20 void deallocate() {
  937|  2.22M|    T* data = this->data();
  938|  2.22M|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (938:9): [True: 118, False: 2.22M]
  ------------------
  939|  2.22M|  }
_ZN3fmt3v106detail7reserveINS0_8appenderEEERT_S5_m:
  591|  5.87M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  592|  5.87M|  return it;
  593|  5.87M|}
_ZN3fmt3v106detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  619|  5.87M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  620|  5.87M|  return it;
  621|  5.87M|}
_ZN3fmt3v106detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  648|  4.04M|                                                  OutputIt out) -> OutputIt {
  649|  4.04M|  return copy_str<OutChar>(begin, end, out);
  650|  4.04M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3688|  4.04M|    -> OutputIt {
 3689|  4.04M|  auto it = reserve(out, value.size());
 3690|  4.04M|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3691|  4.04M|  return base_iterator(out, it);
 3692|  4.04M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4405|  4.04M|    void on_text(const Char* begin, const Char* end) {
 4406|  4.04M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4407|  4.04M|      context.advance_to(write<Char>(context.out(), text));
 4408|  4.04M|    }
_ZN3fmt3v106detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEEDTcldtfp_3argfp0_EERT_T0_:
 3869|  1.82M|FMT_CONSTEXPR auto get_arg(Context& ctx, ID id) -> decltype(ctx.arg(id)) {
 3870|  1.82M|  auto arg = ctx.arg(id);
 3871|  1.82M|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3871:7): [True: 0, False: 1.82M]
  ------------------
 3872|  1.82M|  return arg;
 3873|  1.82M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4410|  1.82M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4411|  1.82M|      return parse_context.next_arg_id();
 4412|  1.82M|    }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4431|  1.82M|        -> const Char* {
 4432|  1.82M|      auto arg = get_arg(context, id);
 4433|  1.82M|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4433:11): [True: 0, False: 1.82M]
  ------------------
 4434|      0|        parse_context.advance_to(begin);
 4435|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4436|      0|        return parse_context.begin();
 4437|      0|      }
 4438|  1.82M|      auto specs = detail::dynamic_format_specs<Char>();
 4439|  1.82M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4440|  1.82M|      detail::handle_dynamic_spec<detail::width_checker>(
 4441|  1.82M|          specs.width, specs.width_ref, context);
 4442|  1.82M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4443|  1.82M|          specs.precision, specs.precision_ref, context);
 4444|  1.82M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4444:11): [True: 0, False: 1.82M]
  |  Branch (4444:27): [True: 0, False: 1.82M]
  ------------------
 4445|      0|        on_error("missing '}' in format string");
 4446|  1.82M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4447|  1.82M|      context.advance_to(visit_format_arg(f, arg));
 4448|  1.82M|      return begin;
 4449|  1.82M|    }
_ZN3fmt3v106detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3878|  1.82M|                                       Context& ctx) {
 3879|  1.82M|  switch (ref.kind) {
  ------------------
  |  Branch (3879:11): [True: 0, False: 1.82M]
  ------------------
 3880|  1.82M|  case arg_id_kind::none:
  ------------------
  |  Branch (3880:3): [True: 1.82M, False: 0]
  ------------------
 3881|  1.82M|    break;
 3882|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3882:3): [True: 0, False: 1.82M]
  ------------------
 3883|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3884|      0|                                              ctx.error_handler());
 3885|      0|    break;
 3886|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3886:3): [True: 0, False: 1.82M]
  ------------------
 3887|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3888|      0|                                              ctx.error_handler());
 3889|      0|    break;
 3890|  1.82M|  }
 3891|  1.82M|}
_ZN3fmt3v106detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3878|  1.82M|                                       Context& ctx) {
 3879|  1.82M|  switch (ref.kind) {
  ------------------
  |  Branch (3879:11): [True: 0, False: 1.82M]
  ------------------
 3880|  1.82M|  case arg_id_kind::none:
  ------------------
  |  Branch (3880:3): [True: 1.82M, False: 0]
  ------------------
 3881|  1.82M|    break;
 3882|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3882:3): [True: 0, False: 1.82M]
  ------------------
 3883|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3884|      0|                                              ctx.error_handler());
 3885|      0|    break;
 3886|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3886:3): [True: 0, False: 1.82M]
  ------------------
 3887|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3888|      0|                                              ctx.error_handler());
 3889|      0|    break;
 3890|  1.82M|  }
 3891|  1.82M|}
_ZN3fmt3v106detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3799|  1.68M|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3800|  1.68M|    return detail::write(out, value, specs, locale);
 3801|  1.68M|  }
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2350|  1.68M|    -> OutputIt {
 2351|  1.68M|  if (specs.type == presentation_type::pointer)
  ------------------
  |  Branch (2351:7): [True: 0, False: 1.68M]
  ------------------
 2352|      0|    return write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2353|  1.68M|  if (!s) throw_format_error("string pointer is null");
  ------------------
  |  Branch (2353:7): [True: 0, False: 1.68M]
  ------------------
 2354|  1.68M|  return write(out, basic_string_view<Char>(s), specs, {});
 2355|  1.68M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2344|  1.82M|    -> OutputIt {
 2345|  1.82M|  return write(out, s, specs);
 2346|  1.82M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2321|  1.82M|                         const format_specs<Char>& specs) -> OutputIt {
 2322|  1.82M|  auto data = s.data();
 2323|  1.82M|  auto size = s.size();
 2324|  1.82M|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2324:7): [True: 0, False: 1.82M]
  |  Branch (2324:31): [True: 0, False: 0]
  ------------------
 2325|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2326|  1.82M|  bool is_debug = specs.type == presentation_type::debug;
 2327|  1.82M|  size_t width = 0;
 2328|  1.82M|  if (specs.width != 0) {
  ------------------
  |  Branch (2328:7): [True: 0, False: 1.82M]
  ------------------
 2329|      0|    if (is_debug)
  ------------------
  |  Branch (2329:9): [True: 0, False: 0]
  ------------------
 2330|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2331|      0|    else
 2332|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2333|      0|  }
 2334|  1.82M|  return write_padded(out, specs, size, width,
 2335|  1.82M|                      [=](reserve_iterator<OutputIt> it) {
 2336|  1.82M|                        if (is_debug) return write_escaped_string(it, s);
 2337|  1.82M|                        return copy_str<Char>(data, data + size, it);
 2338|  1.82M|                      });
 2339|  1.82M|}
_ZN3fmt3v106detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1774|  1.82M|                                size_t size, size_t width, F&& f) -> OutputIt {
 1775|  1.82M|  static_assert(align == align::left || align == align::right, "");
 1776|  1.82M|  unsigned spec_width = to_unsigned(specs.width);
 1777|  1.82M|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1777:20): [True: 0, False: 1.82M]
  ------------------
 1778|       |  // Shifts are encoded as string literals because static constexpr is not
 1779|       |  // supported in constexpr functions.
 1780|  1.82M|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1780:18): [Folded - Ignored]
  ------------------
 1781|  1.82M|  size_t left_padding = padding >> shifts[specs.align];
 1782|  1.82M|  size_t right_padding = padding - left_padding;
 1783|  1.82M|  auto it = reserve(out, size + padding * specs.fill.size());
 1784|  1.82M|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1784:7): [True: 0, False: 1.82M]
  ------------------
 1785|  1.82M|  it = f(it);
 1786|  1.82M|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1786:7): [True: 0, False: 1.82M]
  ------------------
 1787|  1.82M|  return base_iterator(out, it);
 1788|  1.82M|}
_ZZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2335|  1.82M|                      [=](reserve_iterator<OutputIt> it) {
 2336|  1.82M|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2336:29): [True: 0, False: 1.82M]
  ------------------
 2337|  1.82M|                        return copy_str<Char>(data, data + size, it);
 2338|  1.82M|                      });
_ZN3fmt3v106detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3799|   143k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3800|   143k|    return detail::write(out, value, specs, locale);
 3801|   143k|  }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4403|  2.22M|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt3v109to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4369|  2.22M|    -> std::basic_string<Char> {
 4370|  2.22M|  auto size = buf.size();
 4371|  2.22M|  detail::assume(size < std::basic_string<Char>().max_size());
 4372|  2.22M|  return std::basic_string<Char>(buf.data(), size);
 4373|  2.22M|}

LLVMFuzzerTestOneInput:
   14|  14.1k|{
   15|  14.1k|    disable_output();
   16|       |
   17|  14.1k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   18|       |
   19|  14.1k|    EmptySourceManager source_manager;
   20|  14.1k|    DiagnosticEngine   diagnostic_engine;
   21|  14.1k|    Lexer              lexer{&diagnostic_engine};
   22|  14.1k|    auto               document = phi::make_not_null_scope<ASTDocument>();
   23|       |
   24|  14.1k|    Parser parser{&source_manager, &diagnostic_engine, &lexer};
   25|  14.1k|    parser.ParseString(document, "Fuzz.au3", source);
   26|       |
   27|  14.1k|    return 0;
   28|  14.1k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|   103k|    {
   18|   103k|        m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|   103k|    }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|   234k|    {
   20|   234k|        m_NodeType = ASTNodeType::BinaryExpression;
   21|   234k|    }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  17.4k|    {
   18|  17.4k|        m_NodeType = ASTNodeType::BooleanLiteral;
   19|  17.4k|    }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|   157k|    {
   20|   157k|        m_Statements.emplace_back(phi::move(child));
   21|   157k|    }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  5.94k|    {
   25|  5.94k|        m_Functions.emplace_back(phi::move(child));
   26|  5.94k|    }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|    812|    {
   18|    812|        m_NodeType = ASTNodeType::ExitStatement;
   19|    812|    }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|   336k|    {
   13|   336k|        switch (m_NodeType)
   14|   336k|        {
   15|  38.3k|            case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:13): [True: 38.3k, False: 297k]
  ------------------
   16|  98.4k|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:13): [True: 60.1k, False: 276k]
  ------------------
   17|   105k|            case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:13): [True: 6.60k, False: 329k]
  ------------------
   18|   105k|                return true;
   19|       |
   20|   231k|            default:
  ------------------
  |  Branch (20:13): [True: 231k, False: 105k]
  ------------------
   21|   231k|                return false;
   22|   336k|        }
   23|   336k|    }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|   336k|    {
   17|   336k|        m_NodeType = ASTNodeType::ExpressionStatement;
   18|   336k|    }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|  2.74k|    {
   17|  2.74k|        m_NodeType = ASTNodeType::FloatLiteral;
   18|  2.74k|    }

_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   28|  79.3k|    {
   29|  79.3k|        return m_FunctionReference.FunctionName();
   30|  79.3k|    }
_ZN10OpenAutoIt25ASTFunctionCallExpressionC2ENS_17FunctionReferenceE:
   18|   137k|    {
   19|   137k|        m_NodeType = ASTNodeType::FunctionCallExpression;
   20|   137k|    }

_ZN10OpenAutoIt30ASTFunctionReferenceExpressionC2ENS_17FunctionReferenceE:
   19|   310k|    {
   20|   310k|        m_NodeType = ASTNodeType::FunctionReferenceExpression;
   21|   310k|    }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|  15.6k|    {
   25|  15.6k|        m_NodeType = ASTNodeType::IfStatement;
   26|  15.6k|    }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|   418k|    {
   17|   418k|        m_NodeType = ASTNodeType::IntegerLiteral;
   18|   418k|    }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|    546|    {
   19|    546|        m_NodeType = ASTNodeType::KeywordLiteral;
   20|    546|        PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|    546|    }

_ZN10OpenAutoIt18ASTMacroExpressionC2ENS_9TokenKindE:
   18|  10.9k|    {
   19|  10.9k|        m_NodeType = ASTNodeType::MacroExpression;
   20|  10.9k|        PHI_ASSERT(static_cast<phi::size_t>(m_Macro) >= MacroFirst &&
   21|  10.9k|                   static_cast<phi::size_t>(m_Macro) <= MacroLast);
   22|  10.9k|    }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   75|  2.53M|    virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   73|  2.53M|    ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   78|   231k|    {
   79|   231k|        PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   80|   231k|        PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   81|       |
   82|   231k|        return enum_name(m_NodeType);
   83|   231k|    }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   51|   231k|{
   52|   231k|    switch (node_type)
   53|   231k|    {
   54|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   55|      0|    case ASTNodeType::name:                                                                        \
   56|      0|        return "AST" #name;
   57|       |
   58|      0|        OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   15|  6.12k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   55|  6.12k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 6.12k, False: 224k]
  |  |  |  |  ------------------
  |  |  |  |   56|  6.12k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  32.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   55|  32.0k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 32.0k, False: 199k]
  |  |  |  |  ------------------
  |  |  |  |   56|  32.0k|        return "AST" #name;
  |  |  ------------------
  |  |   17|  32.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|    819|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 819, False: 230k]
  |  |  |  |  ------------------
  |  |  |  |   56|    819|        return "AST" #name;
  |  |  ------------------
  |  |   18|    819|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 231k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 231k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   20|  2.24k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   55|  2.24k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 2.24k, False: 228k]
  |  |  |  |  ------------------
  |  |  |  |   56|  2.24k|        return "AST" #name;
  |  |  ------------------
  |  |   21|  2.24k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 231k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   22|   127k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionReferenceExpression)                                \
  |  |  ------------------
  |  |  |  |   55|   127k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 127k, False: 103k]
  |  |  |  |  ------------------
  |  |  |  |   56|   127k|        return "AST" #name;
  |  |  ------------------
  |  |   23|   127k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 231k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   24|  33.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|  33.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 33.1k, False: 197k]
  |  |  |  |  ------------------
  |  |  |  |   56|  33.1k|        return "AST" #name;
  |  |  ------------------
  |  |   25|  33.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   55|    304|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 304, False: 230k]
  |  |  |  |  ------------------
  |  |  |  |   56|    304|        return "AST" #name;
  |  |  ------------------
  |  |   26|  2.60k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(MacroExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|  2.60k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 2.60k, False: 228k]
  |  |  |  |  ------------------
  |  |  |  |   56|  2.60k|        return "AST" #name;
  |  |  ------------------
  |  |   27|  16.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   55|  16.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 16.1k, False: 214k]
  |  |  |  |  ------------------
  |  |  |  |   56|  16.1k|        return "AST" #name;
  |  |  ------------------
  |  |   28|  16.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(TernaryIfExpression)                                        \
  |  |  ------------------
  |  |  |  |   55|  9.73k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 9.73k, False: 221k]
  |  |  |  |  ------------------
  |  |  |  |   56|  9.73k|        return "AST" #name;
  |  |  ------------------
  |  |   29|  9.73k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 231k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   30|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 231k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   31|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 231k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  |  |   32|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   55|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (55:5): [True: 0, False: 231k]
  |  |  |  |  ------------------
  |  |  |  |   56|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   59|       |
   60|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   61|       |
   62|      0|        default:
  ------------------
  |  Branch (62:9): [True: 0, False: 231k]
  ------------------
   63|      0|            PHI_ASSERT_NOT_REACHED();
   64|      0|            return "";
   65|   231k|    }
   66|   231k|}

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  72.6k|    {
   15|  72.6k|        m_NodeType = ASTNodeType::StringLiteral;
   16|  72.6k|    }

_ZN10OpenAutoIt22ASTTernaryIfExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEES5_S5_:
   19|  14.7k|    {
   20|  14.7k|        m_NodeType = ASTNodeType::TernaryIfExpression;
   21|  14.7k|    }

_ZN10OpenAutoIt18ASTUnaryExpressionC2ENS_9TokenKindEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   15|   252k|    {
   16|   252k|        m_NodeType = ASTNodeType::UnaryExpression;
   17|   252k|    }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|   279k|    {
   20|   279k|        m_NodeType = ASTNodeType::VariableAssignment;
   21|   279k|    }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|   102k|    {
   15|   102k|        m_NodeType = ASTNodeType::VariableExpression;
   16|   102k|    }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  53.4k|    {
   18|  53.4k|        m_NodeType = ASTNodeType::WhileStatement;
   19|  53.4k|    }

_ZN10OpenAutoIt17DiagnosticBuilder7WarningIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   55|   395k|    {
   56|   395k|        m_Diagnostics.emplace_back(Diagnostic{
   57|   395k|                id, DiagnosticLevel::Warning, location,
   58|   395k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   59|       |
   60|   395k|        return *this;
   61|   395k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA9_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|   102k|    {
   66|   102k|        m_Diagnostics.emplace_back(Diagnostic{
   67|   102k|                id, DiagnosticLevel::Error, location,
   68|   102k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|   102k|        return *this;
   71|   102k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA18_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|     12|    {
   66|     12|        m_Diagnostics.emplace_back(Diagnostic{
   67|     12|                id, DiagnosticLevel::Error, location,
   68|     12|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|     12|        return *this;
   71|     12|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA4_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  2.02k|    {
   66|  2.02k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  2.02k|                id, DiagnosticLevel::Error, location,
   68|  2.02k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  2.02k|        return *this;
   71|  2.02k|    }
_ZN10OpenAutoIt17DiagnosticBuilder4NoteIJEEERS0_NS_14SourceLocationENSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   31|  2.02k|    {
   32|  2.02k|        PHI_ASSERT(!m_Diagnostics.empty());
   33|       |
   34|  2.02k|        m_Diagnostics.back().AddNote(
   35|  2.02k|                Diagnostic{DiagnosticId::None, DiagnosticLevel::Note, location,
   36|  2.02k|                           std::string{fmt::format(fmt::runtime(format_string),
   37|  2.02k|                                                   phi::forward<ArgsT>(args)...)}});
   38|       |
   39|  2.02k|        return *this;
   40|  2.02k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA25_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  1.39k|    {
   66|  1.39k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  1.39k|                id, DiagnosticLevel::Error, location,
   68|  1.39k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  1.39k|        return *this;
   71|  1.39k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  2.05k|    {
   66|  2.05k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  2.05k|                id, DiagnosticLevel::Error, location,
   68|  2.05k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  2.05k|        return *this;
   71|  2.05k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|    267|    {
   66|    267|        m_Diagnostics.emplace_back(Diagnostic{
   67|    267|                id, DiagnosticLevel::Error, location,
   68|    267|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|    267|        return *this;
   71|    267|    }

_ZN10OpenAutoIt19DiagnosticIdMessageENS_12DiagnosticIdE:
   87|   503k|{
   88|   503k|    PHI_ASSERT(id != DiagnosticId::None);
   89|       |
   90|   503k|    switch (id)
   91|   503k|    {
   92|      0|#define OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EnumName, FlagName, DiagnosticMessage)                 \
   93|      0|    case DiagnosticId::EnumName: {                                                                 \
   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
   95|      0|        return DiagnosticMessage;                                                                  \
   96|      0|    }
   97|       |
   98|      0|        OPENAUTOIT_ENUM_DIAGNOSTIC_IDS()
  ------------------
  |  |   12|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(None, "", "")                                              \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 503k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   13|      0|    /* Lexer warnings */                                                                           \
  |  |   14|   395k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(NullCharacter, "-Wnull-character",                         \
  |  |  ------------------
  |  |  |  |   93|   395k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 395k, False: 108k]
  |  |  |  |  ------------------
  |  |  |  |   94|   395k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|   395k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|   395k|    }
  |  |  ------------------
  |  |   15|   395k|                                        "null character ignored")                                  \
  |  |   16|   395k|    /* Lexer errors */                                                                             \
  |  |   17|   395k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(InvalidFloatLiteral, "",                                   \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 503k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   18|      0|                                        "invalid float literal declaration")                       \
  |  |   19|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FloatHexLiteral, "",                                       \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 503k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   20|      0|                                        "hexadecimal float literal are not allowed")               \
  |  |   21|      0|    /* Parser error */                                                                             \
  |  |   22|     12|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(UnexpectedEndOfFile, "",                                   \
  |  |  ------------------
  |  |  |  |   93|     12|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 12, False: 503k]
  |  |  |  |  ------------------
  |  |  |  |   94|     12|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|     12|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|     12|    }
  |  |  ------------------
  |  |   23|     12|                                        "unexpected end of file while parsing {:s}")               \
  |  |   24|   105k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(Expected, "", "expected {:s}")                             \
  |  |  ------------------
  |  |  |  |   93|   105k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 105k, False: 397k]
  |  |  |  |  ------------------
  |  |  |  |   94|   105k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|   105k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|   105k|    }
  |  |  ------------------
  |  |   25|   105k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IntegerLiteralTooLarge, "",                                \
  |  |  ------------------
  |  |  |  |   93|  1.85k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 1.85k, False: 501k]
  |  |  |  |  ------------------
  |  |  |  |   94|  1.85k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|  1.85k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|  1.85k|    }
  |  |  ------------------
  |  |   26|  1.85k|                                        "integer literal is too large.")                           \
  |  |   27|  1.85k|    /* Parser fatal error */                                                                       \
  |  |   28|  1.85k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNotFound, "", "'{:s}' file not found")                 \
  |  |  ------------------
  |  |  |  |   93|    194|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 194, False: 503k]
  |  |  |  |  ------------------
  |  |  |  |   94|    194|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    194|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    194|    }
  |  |  ------------------
  |  |   29|    194|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EmptyFilename, "", "empty filename")                       \
  |  |  ------------------
  |  |  |  |   93|    194|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 194, False: 503k]
  |  |  |  |  ------------------
  |  |  |  |   94|    194|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|    194|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|    194|    }
  |  |  ------------------
  |  |   30|    194|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IncludeNestingTooDeeply, "", "#include nested too deeply") \
  |  |  ------------------
  |  |  |  |   93|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 0, False: 503k]
  |  |  |  |  ------------------
  |  |  |  |   94|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|      0|    }
  |  |  ------------------
  |  |   31|     73|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNameTooLong, "",                                       \
  |  |  ------------------
  |  |  |  |   93|     73|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (93:5): [True: 73, False: 503k]
  |  |  |  |  ------------------
  |  |  |  |   94|     73|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   95|     73|        return DiagnosticMessage;                                                                  \
  |  |  |  |   96|     73|    }
  |  |  ------------------
  |  |   32|     73|                                        "cannot open file '{:s}': File name too long")
  ------------------
   99|       |
  100|      0|#undef OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL
  101|       |
  102|      0|        default:
  ------------------
  |  Branch (102:9): [True: 0, False: 503k]
  ------------------
  103|      0|            PHI_ASSERT_NOT_REACHED();
  104|   503k|    }
  105|   503k|}

_ZN10OpenAutoIt17FunctionReferenceC2ERKNS_5TokenE:
   23|  3.92k|    {
   24|  3.92k|        PHI_ASSERT(built_in_function.IsBuiltInFunction());
   25|  3.92k|    }
_ZN10OpenAutoIt17FunctionReferenceC2EN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
   18|   443k|    {}
_ZNK10OpenAutoIt17FunctionReference12FunctionNameEv:
   33|  79.3k|    {
   34|  79.3k|        return m_IsBuiltIn ? enum_name(m_BuiltInFunction) : m_FunctionName;
  ------------------
  |  Branch (34:16): [True: 605, False: 78.7k]
  ------------------
   35|  79.3k|    }

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  2.13M|    {
   46|  2.13M|        Token token{kind,
   47|  2.13M|                    m_Source.substring_view(
   48|  2.13M|                            static_cast<typename phi::string_view::size_type::value_type>(
   49|  2.13M|                                    m_Iterator - m_Source.cbegin()),
   50|  2.13M|                            1u),
   51|  2.13M|                    CurrentSourceLocation()};
   52|       |
   53|       |        // 1 character sized token
   54|  2.13M|        ++m_Column;
   55|       |
   56|  2.13M|        return token;
   57|  2.13M|    }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  3.08M|    {
   61|  3.08M|        Token token{kind, TokenText(token_begin), CurrentSourceLocation()};
   62|       |
   63|       |        // Consume the amount of characters that make up our new token
   64|  3.08M|        m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  3.08M|        return token;
   67|  3.08M|    }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  5.13M|    {
   71|  5.13M|        return m_Source.substring_view(token_begin, m_Iterator);
   72|  5.13M|    }
_ZNK10OpenAutoIt5Lexer21CurrentSourceLocationEv:
   75|  5.61M|    {
   76|  5.61M|        return BuildSourceLocation(m_LineNumber, m_Column);
   77|  5.61M|    }
_ZNK10OpenAutoIt5Lexer19BuildSourceLocationEN3phi7integerImEES3_:
   81|  5.61M|    {
   82|  5.61M|        return {m_SourceFile, line_number, column};
   83|  5.61M|    }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   71|  3.11M|    {
   72|  3.11M|        switch (token_kind)
   73|  3.11M|        {
   74|   113k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (74:13): [True: 113k, False: 3.00M]
  ------------------
   75|   619k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (75:13): [True: 506k, False: 2.60M]
  ------------------
   76|   620k|            case TokenKind::KW_Not:
  ------------------
  |  Branch (76:13): [True: 418, False: 3.11M]
  ------------------
   77|   620k|                return true;
   78|       |
   79|  2.49M|            default:
  ------------------
  |  Branch (79:13): [True: 2.49M, False: 620k]
  ------------------
   80|  2.49M|                return false;
   81|  3.11M|        }
   82|  3.11M|    }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   86|  1.37M|    {
   87|  1.37M|        switch (token_kind)
   88|  1.37M|        {
   89|    194|            case TokenKind::KW_And:
  ------------------
  |  Branch (89:13): [True: 194, False: 1.37M]
  ------------------
   90|    389|            case TokenKind::KW_Or:
  ------------------
  |  Branch (90:13): [True: 195, False: 1.37M]
  ------------------
   91|   116k|            case TokenKind::OP_Equals:
  ------------------
  |  Branch (91:13): [True: 115k, False: 1.25M]
  ------------------
   92|   116k|            case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (92:13): [True: 212, False: 1.37M]
  ------------------
   93|   116k|            case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (93:13): [True: 293, False: 1.37M]
  ------------------
   94|   118k|            case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (94:13): [True: 1.66k, False: 1.37M]
  ------------------
   95|   118k|            case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (95:13): [True: 280, False: 1.37M]
  ------------------
   96|   135k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (96:13): [True: 16.7k, False: 1.35M]
  ------------------
   97|   226k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (97:13): [True: 91.6k, False: 1.28M]
  ------------------
   98|   230k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (98:13): [True: 3.89k, False: 1.37M]
  ------------------
   99|   258k|            case TokenKind::OP_Divide:
  ------------------
  |  Branch (99:13): [True: 27.4k, False: 1.34M]
  ------------------
  100|   267k|            case TokenKind::OP_Raise:
  ------------------
  |  Branch (100:13): [True: 9.22k, False: 1.36M]
  ------------------
  101|   267k|            case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (101:13): [True: 517, False: 1.37M]
  ------------------
  102|   268k|            case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (102:13): [True: 236, False: 1.37M]
  ------------------
  103|   286k|            case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (103:13): [True: 18.0k, False: 1.35M]
  ------------------
  104|   286k|            case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (104:13): [True: 299, False: 1.37M]
  ------------------
  105|   363k|            case TokenKind::OP_LessThan:
  ------------------
  |  Branch (105:13): [True: 77.1k, False: 1.29M]
  ------------------
  106|   363k|            case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (106:13): [True: 234, False: 1.37M]
  ------------------
  107|   365k|            case TokenKind::OP_Concatenate:
  ------------------
  |  Branch (107:13): [True: 1.71k, False: 1.37M]
  ------------------
  108|   365k|            case TokenKind::OP_ConcatenateEquals:
  ------------------
  |  Branch (108:13): [True: 196, False: 1.37M]
  ------------------
  109|   365k|                return true;
  110|       |
  111|  1.00M|            default:
  ------------------
  |  Branch (111:13): [True: 1.00M, False: 365k]
  ------------------
  112|  1.00M|                return false;
  113|  1.37M|        }
  114|  1.37M|    }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  155|  5.94k|    {
  156|  5.94k|        m_Document->AppendFunction(phi::move(function));
  157|  5.94k|    }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  149|   157k|    {
  150|   157k|        m_Document->AppendStatement(phi::move(statement));
  151|   157k|    }

_ZN10OpenAutoIt14SourceLocation7InvalidEv:
   23|  14.1k|    {
   24|  14.1k|        return {nullptr, 1u, 1u};
   25|  14.1k|    }

_ZN10OpenAutoIt13SourceManagerC2Ev:
   21|  14.1k|    SourceManager()          = default;

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_14SourceLocationE:
   27|  5.21M|    {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   39|  34.3M|    {
   40|  34.3M|        return m_Kind;
   41|  34.3M|    }
_ZNK10OpenAutoIt5Token7GetTextEv:
   44|  2.78M|    {
   45|  2.78M|        return m_Text;
   46|  2.78M|    }
_ZNK10OpenAutoIt5Token16GetBeginLocationEv:
   64|   106k|    {
   65|   106k|        return m_SourceLocation;
   66|   106k|    }
_ZNK10OpenAutoIt5Token14GetEndLocationEv:
   69|  3.42k|    {
   70|  3.42k|        return {.source_file = m_SourceLocation.source_file,
   71|  3.42k|                .line_number = m_SourceLocation.line_number,
   72|  3.42k|                .column      = m_SourceLocation.column + m_Text.length()};
   73|  3.42k|    }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   88|  1.88M|    {
   89|  1.88M|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   90|       |
   91|  1.88M|        if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (91:13): [True: 15.7k, False: 1.87M]
  ------------------
   92|  1.88M|            underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (92:13): [True: 15.7k, False: 0]
  ------------------
   93|  15.7k|        {
   94|  15.7k|            return true;
   95|  15.7k|        }
   96|       |
   97|  1.87M|        return false;
   98|  1.88M|    }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
  101|  1.32M|    {
  102|  1.32M|        switch (m_Kind)
  103|  1.32M|        {
  104|    670|            case TokenKind::KW_Default:
  ------------------
  |  Branch (104:13): [True: 670, False: 1.32M]
  ------------------
  105|  1.09k|            case TokenKind::KW_Null:
  ------------------
  |  Branch (105:13): [True: 422, False: 1.32M]
  ------------------
  106|  1.09k|                return true;
  107|       |
  108|  1.32M|            default:
  ------------------
  |  Branch (108:13): [True: 1.32M, False: 1.09k]
  ------------------
  109|  1.32M|                return false;
  110|  1.32M|        }
  111|  1.32M|    }
_ZNK10OpenAutoIt5Token7IsMacroEv:
  158|   553k|    {
  159|   553k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
  160|       |
  161|   553k|        if (underlying_value >= MacroFirst && underlying_value <= MacroLast)
  ------------------
  |  Branch (161:13): [True: 233k, False: 320k]
  |  Branch (161:47): [True: 10.9k, False: 222k]
  ------------------
  162|  10.9k|        {
  163|  10.9k|            return true;
  164|  10.9k|        }
  165|       |
  166|   542k|        return false;
  167|   553k|    }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  682|  1.34M|{
  683|  1.34M|    switch (token_kind)
  684|  1.34M|    {
  685|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  686|      0|    case TokenKind::name:                                                                          \
  687|      0|        return #name;
  688|       |
  689|      0|        OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  13.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  686|  13.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13.5k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |  687|  13.5k|        return #name;
  |  |  ------------------
  |  |   13|  53.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  686|  53.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 53.9k, False: 1.29M]
  |  |  |  |  ------------------
  |  |  |  |  687|  53.9k|        return #name;
  |  |  ------------------
  |  |   14|  53.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   15|  10.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  686|  10.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10.4k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |  687|  10.4k|        return #name;
  |  |  ------------------
  |  |   16|  10.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  686|     78|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 78, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     78|        return #name;
  |  |  ------------------
  |  |   17|     78|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   18|   219k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|   219k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 219k, False: 1.12M]
  |  |  |  |  ------------------
  |  |  |  |  687|   219k|        return #name;
  |  |  ------------------
  |  |   19|   219k|    /* Literals */                                                                                 \
  |  |   20|   219k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  686|  65.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 65.2k, False: 1.27M]
  |  |  |  |  ------------------
  |  |  |  |  687|  65.2k|        return #name;
  |  |  ------------------
  |  |   21|  65.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  686|  2.42k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.42k, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.42k|        return #name;
  |  |  ------------------
  |  |   22|  16.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  686|  16.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16.6k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  687|  16.6k|        return #name;
  |  |  ------------------
  |  |   23|  16.6k|    /* Punctuation */                                                                              \
  |  |   24|   253k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  686|   253k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 253k, False: 1.09M]
  |  |  |  |  ------------------
  |  |  |  |  687|   253k|        return #name;
  |  |  ------------------
  |  |   25|   253k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  66.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 66.7k, False: 1.27M]
  |  |  |  |  ------------------
  |  |  |  |  687|  66.7k|        return #name;
  |  |  ------------------
  |  |   26|  97.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  97.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 97.3k, False: 1.24M]
  |  |  |  |  ------------------
  |  |  |  |  687|  97.3k|        return #name;
  |  |  ------------------
  |  |   27|  97.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   28|  35.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  35.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 35.0k, False: 1.30M]
  |  |  |  |  ------------------
  |  |  |  |  687|  35.0k|        return #name;
  |  |  ------------------
  |  |   29|   138k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|   138k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 138k, False: 1.20M]
  |  |  |  |  ------------------
  |  |  |  |  687|   138k|        return #name;
  |  |  ------------------
  |  |   30|   138k|    /* Macros */                                                                                   \
  |  |   31|   138k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|   138k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   33|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   34|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   35|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   36|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |   37|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   38|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   39|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   40|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   41|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  686|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     19|        return #name;
  |  |  ------------------
  |  |   42|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |   43|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   44|    605|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  686|    605|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 605, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    605|        return #name;
  |  |  ------------------
  |  |   45|    605|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |   46|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   47|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   48|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   49|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   51|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |   52|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   53|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   54|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   55|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   56|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   57|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   58|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   59|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   60|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   62|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   63|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   64|    156|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  686|    156|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 156, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    156|        return #name;
  |  |  ------------------
  |  |   65|    156|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   66|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   67|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   68|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   69|    110|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  686|    110|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 110, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    110|        return #name;
  |  |  ------------------
  |  |   70|    110|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   71|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   72|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   74|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   75|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |   76|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  686|     36|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 36, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     36|        return #name;
  |  |  ------------------
  |  |   77|     36|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   78|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   80|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   81|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   82|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   83|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   84|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   85|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   86|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   87|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |   88|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   89|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   90|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   91|     84|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  686|     84|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 84, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     84|        return #name;
  |  |  ------------------
  |  |   92|     84|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   93|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   94|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   95|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   96|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   97|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   98|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   99|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  100|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  101|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  102|    300|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  686|    300|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 300, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    300|        return #name;
  |  |  ------------------
  |  |  103|    300|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  104|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  105|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  106|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  107|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  108|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  109|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  110|  2.79k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|  2.79k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.79k, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.79k|        return #name;
  |  |  ------------------
  |  |  111|  2.79k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  112|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  113|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  114|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  117|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  118|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  120|    466|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  686|    466|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 466, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    466|        return #name;
  |  |  ------------------
  |  |  121|    466|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  122|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  123|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  124|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  125|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  126|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  127|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  128|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  129|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  130|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  131|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|     25|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 25, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     25|        return #name;
  |  |  ------------------
  |  |  132|     25|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  133|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  138|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  139|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  141|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  143|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|  1.75k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|  1.75k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.75k, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.75k|        return #name;
  |  |  ------------------
  |  |  145|  1.75k|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|  1.75k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  686|    618|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 618, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    618|        return #name;
  |  |  ------------------
  |  |  147|    618|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    618|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  686|    374|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 374, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    374|        return #name;
  |  |  ------------------
  |  |  149|    374|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    396|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  686|    396|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 396, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    396|        return #name;
  |  |  ------------------
  |  |  151|    396|    /* Keywords */                                                                                 \
  |  |  152|    396|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    396|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    396|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|    396|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  686|    175|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 175, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    175|        return #name;
  |  |  ------------------
  |  |  156|  6.58k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  686|  6.58k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6.58k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |  687|  6.58k|        return #name;
  |  |  ------------------
  |  |  157|  6.58k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  6.58k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  159|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|    278|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  686|    278|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 278, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    278|        return #name;
  |  |  ------------------
  |  |  163|    278|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|    278|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  165|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  686|     64|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 64, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     64|        return #name;
  |  |  ------------------
  |  |  166|     64|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  167|    122|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  686|    122|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 122, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    122|        return #name;
  |  |  ------------------
  |  |  168|    122|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|    122|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  686|     45|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 45, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     45|        return #name;
  |  |  ------------------
  |  |  170|     45|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  686|     21|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 21, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     21|        return #name;
  |  |  ------------------
  |  |  171|     21|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  173|     16|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  175|      3|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|    128|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  686|    128|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 128, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    128|        return #name;
  |  |  ------------------
  |  |  179|    128|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  686|     53|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 53, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     53|        return #name;
  |  |  ------------------
  |  |  180|     53|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  181|     98|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  686|     98|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 98, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     98|        return #name;
  |  |  ------------------
  |  |  182|     98|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|     98|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  686|     44|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 44, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     44|        return #name;
  |  |  ------------------
  |  |  184|     44|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  92.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  686|  92.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 92.6k, False: 1.25M]
  |  |  |  |  ------------------
  |  |  |  |  687|  92.6k|        return #name;
  |  |  ------------------
  |  |  186|  92.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  686|  6.04k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6.04k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |  687|  6.04k|        return #name;
  |  |  ------------------
  |  |  187|  6.04k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  686|  4.80k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.80k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.80k|        return #name;
  |  |  ------------------
  |  |  188|  4.80k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  686|  1.76k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.76k, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.76k|        return #name;
  |  |  ------------------
  |  |  189|  1.76k|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  4.67k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  686|  4.67k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.67k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.67k|        return #name;
  |  |  ------------------
  |  |  191|  15.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  686|  15.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15.3k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  687|  15.3k|        return #name;
  |  |  ------------------
  |  |  192|  15.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  193|      4|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|  1.35k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  686|  1.35k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.35k, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.35k|        return #name;
  |  |  ------------------
  |  |  195|  16.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  686|  16.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16.8k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  687|  16.8k|        return #name;
  |  |  ------------------
  |  |  196|  16.8k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|  16.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  686|     67|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 67, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     67|        return #name;
  |  |  ------------------
  |  |  198|     67|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|     67|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  200|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  202|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  203|    142|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  686|    142|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 142, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    142|        return #name;
  |  |  ------------------
  |  |  204|    142|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|    142|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  206|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  208|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  209|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  211|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|  1.58k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  686|  1.58k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.58k, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.58k|        return #name;
  |  |  ------------------
  |  |  213|  1.58k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  214|      6|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  216|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  217|      4|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|    156|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  686|    156|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 156, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    156|        return #name;
  |  |  ------------------
  |  |  219|    156|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  686|     33|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 33, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     33|        return #name;
  |  |  ------------------
  |  |  220|    193|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  686|    193|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 193, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    193|        return #name;
  |  |  ------------------
  |  |  221|    193|    /* Operator */                                                                                 \
  |  |  222|    193|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  81.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)            /* = */                                  \
  |  |  ------------------
  |  |  |  |  686|  81.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 81.1k, False: 1.26M]
  |  |  |  |  ------------------
  |  |  |  |  687|  81.1k|        return #name;
  |  |  ------------------
  |  |  224|  81.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)        /* += */                                 \
  |  |  ------------------
  |  |  |  |  686|    109|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 109, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    109|        return #name;
  |  |  ------------------
  |  |  225|    448|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)       /* -= */                                 \
  |  |  ------------------
  |  |  |  |  686|    448|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 448, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    448|        return #name;
  |  |  ------------------
  |  |  226|    648|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)    /* *= */                                 \
  |  |  ------------------
  |  |  |  |  686|    648|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 648, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    648|        return #name;
  |  |  ------------------
  |  |  227|    648|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)      /* /= */                                 \
  |  |  ------------------
  |  |  |  |  686|     41|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 41, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     41|        return #name;
  |  |  ------------------
  |  |  228|  3.48k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)       /* & */                                  \
  |  |  ------------------
  |  |  |  |  686|  3.48k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.48k, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.48k|        return #name;
  |  |  ------------------
  |  |  229|  3.48k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals) /* &= */                                 \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  230|  12.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)              /* + */                                  \
  |  |  ------------------
  |  |  |  |  686|  12.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12.2k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |  687|  12.2k|        return #name;
  |  |  ------------------
  |  |  231|  12.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)             /* - */                                  \
  |  |  ------------------
  |  |  |  |  686|  9.07k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9.07k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |  687|  9.07k|        return #name;
  |  |  ------------------
  |  |  232|  9.07k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)          /* * */                                  \
  |  |  ------------------
  |  |  |  |  686|  3.19k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.19k, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.19k|        return #name;
  |  |  ------------------
  |  |  233|  23.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)            /* / */                                  \
  |  |  ------------------
  |  |  |  |  686|  23.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23.8k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  687|  23.8k|        return #name;
  |  |  ------------------
  |  |  234|  23.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)             /* ^ */                                  \
  |  |  ------------------
  |  |  |  |  686|  14.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14.4k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  687|  14.4k|        return #name;
  |  |  ------------------
  |  |  235|  14.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)      /* == */                                 \
  |  |  ------------------
  |  |  |  |  686|    670|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 670, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    670|        return #name;
  |  |  ------------------
  |  |  236|    670|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)          /* <> */                                 \
  |  |  ------------------
  |  |  |  |  686|    543|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 543, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    543|        return #name;
  |  |  ------------------
  |  |  237|  15.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)       /* > */                                  \
  |  |  ------------------
  |  |  |  |  686|  15.2k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15.2k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  687|  15.2k|        return #name;
  |  |  ------------------
  |  |  238|  15.2k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)  /* >= */                                 \
  |  |  ------------------
  |  |  |  |  686|    111|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 111, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    111|        return #name;
  |  |  ------------------
  |  |  239|  17.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)          /* < */                                  \
  |  |  ------------------
  |  |  |  |  686|  17.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17.1k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  687|  17.1k|        return #name;
  |  |  ------------------
  |  |  240|  17.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)     /* <= */                                 \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  241|  20.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)         /* ? */                                  \
  |  |  ------------------
  |  |  |  |  686|  20.6k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20.6k, False: 1.32M]
  |  |  |  |  ------------------
  |  |  |  |  687|  20.6k|        return #name;
  |  |  ------------------
  |  |  242|  20.6k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)       /* : */                                  \
  |  |  ------------------
  |  |  |  |  686|  5.16k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.16k, False: 1.33M]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.16k|        return #name;
  |  |  ------------------
  |  |  243|  5.16k|    /* Built-in Functions */                                                                       \
  |  |  244|  5.16k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  5.16k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  5.16k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  686|    395|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 395, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    395|        return #name;
  |  |  ------------------
  |  |  247|    395|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  248|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  249|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  250|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  251|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  252|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  253|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  254|    319|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  686|    319|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 319, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    319|        return #name;
  |  |  ------------------
  |  |  255|    319|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  256|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  257|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  262|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  263|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  264|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  265|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  266|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  268|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  269|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  270|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  271|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  272|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  273|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  274|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  275|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  276|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  279|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  280|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  281|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  282|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  283|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  284|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  287|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  288|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  289|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  295|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  296|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  297|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  298|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  299|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  300|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  301|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  302|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  306|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  307|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  308|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  309|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  310|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  311|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  312|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  313|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  314|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  315|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  316|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  320|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  321|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  686|     39|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 39, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     39|        return #name;
  |  |  ------------------
  |  |  322|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  323|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  327|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  328|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  330|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  331|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  332|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  333|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  334|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  335|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|     21|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 21, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     21|        return #name;
  |  |  ------------------
  |  |  336|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  337|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  338|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  339|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  340|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  341|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  342|     58|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  686|     58|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 58, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     58|        return #name;
  |  |  ------------------
  |  |  343|     58|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  344|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  345|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  346|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  347|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  348|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  349|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  350|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  351|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  352|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  354|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  355|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  356|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  357|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  358|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  359|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  361|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  362|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  363|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  364|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  365|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  366|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  367|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  368|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  369|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  370|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  371|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  372|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  373|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  374|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  375|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  376|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  377|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  378|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  384|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  385|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  387|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  388|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  393|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  394|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  395|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  396|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  401|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  402|     38|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  686|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 38, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     38|        return #name;
  |  |  ------------------
  |  |  403|    192|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  686|    192|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 192, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    192|        return #name;
  |  |  ------------------
  |  |  404|    192|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  407|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  408|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  411|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  412|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  413|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  414|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  415|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  416|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  417|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  418|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  419|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  421|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  422|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  423|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  424|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  425|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  426|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  427|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  428|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  429|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  430|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  433|    177|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  686|    177|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 177, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    177|        return #name;
  |  |  ------------------
  |  |  434|    177|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  435|    238|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  686|    238|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 238, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|    238|        return #name;
  |  |  ------------------
  |  |  436|    238|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  437|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  438|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  440|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  441|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  444|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  445|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  448|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  449|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  450|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  451|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  452|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  453|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  454|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  455|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  456|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  457|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  458|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  459|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  460|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  461|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  462|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  463|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  465|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  466|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  467|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  468|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  469|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  470|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  471|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  686|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     28|        return #name;
  |  |  ------------------
  |  |  472|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  473|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  474|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  476|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  477|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  479|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  480|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  482|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  483|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  485|     71|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  686|     71|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 71, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     71|        return #name;
  |  |  ------------------
  |  |  486|     71|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  488|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  489|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  490|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  491|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  492|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  493|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  494|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  495|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  496|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  497|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  498|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  499|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  500|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  501|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  503|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  504|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  505|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  506|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  507|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  508|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  509|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  510|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  511|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  512|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  516|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  517|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  518|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  519|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  520|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  521|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  522|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  523|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  524|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  525|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  686|     29|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     29|        return #name;
  |  |  ------------------
  |  |  526|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  527|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  528|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  529|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  530|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  533|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  534|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  535|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  536|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |  537|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  686|     41|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 41, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     41|        return #name;
  |  |  ------------------
  |  |  538|     41|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  539|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  540|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  541|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  542|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  543|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  544|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  545|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  546|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  547|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  548|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  549|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  550|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  551|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  552|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  553|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  554|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  561|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  562|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  563|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  565|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  566|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  567|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  568|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  569|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  570|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  571|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  572|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  573|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  574|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  575|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  579|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  580|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  582|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  583|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  584|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  585|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  586|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  587|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  588|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  589|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  590|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  591|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  592|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  593|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  594|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  595|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  596|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  597|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  599|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  600|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  601|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  603|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  604|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  609|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  610|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  611|     79|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  686|     79|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 79, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     79|        return #name;
  |  |  ------------------
  |  |  612|     79|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  613|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  614|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  615|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  616|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  617|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  618|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  619|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  620|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  621|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  622|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  625|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  626|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  627|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  628|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  629|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  630|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  631|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  632|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  634|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  635|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  636|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  637|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  638|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  639|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  640|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  641|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  645|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  646|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  647|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  649|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  650|      0|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 1.34M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  ------------------
  690|       |
  691|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  692|       |
  693|      0|        default:
  ------------------
  |  Branch (693:9): [True: 0, False: 1.34M]
  ------------------
  694|      0|            PHI_ASSERT_NOT_REACHED();
  695|  1.34M|    }
  696|  1.34M|}

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  5.21M|    {
   21|       |#if defined(PHI_DEBUG)
   22|       |        PHI_ASSERT(!m_Finalized);
   23|       |#endif
   24|       |
   25|  5.21M|        m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  5.21M|    }

_ZN10OpenAutoIt10DiagnosticC2ENS_12DiagnosticIdENS_15DiagnosticLevelENS_14SourceLocationEONSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE:
   14|   505k|{}
_ZNK10OpenAutoIt10Diagnostic6IsNoteEv:
   42|   505k|{
   43|   505k|    return m_Level == DiagnosticLevel::Note;
   44|   505k|}
_ZNK10OpenAutoIt10Diagnostic9IsWarningEv:
   47|   503k|{
   48|   503k|    return m_Level == DiagnosticLevel::Warning;
   49|   503k|}
_ZNK10OpenAutoIt10Diagnostic7IsErrorEv:
   52|   503k|{
   53|   503k|    return m_Level == DiagnosticLevel::Error;
   54|   503k|}
_ZNK10OpenAutoIt10Diagnostic12IsFatalErrorEv:
   57|   899k|{
   58|   899k|    return m_Level == DiagnosticLevel::FatalError;
   59|   899k|}
_ZNK10OpenAutoIt10Diagnostic14IsErrorOrFatalEv:
   62|   503k|{
   63|   503k|    return IsError() || IsFatalError();
  ------------------
  |  Branch (63:12): [True: 108k, False: 395k]
  |  Branch (63:25): [True: 0, False: 395k]
  ------------------
   64|   503k|}
_ZN10OpenAutoIt10Diagnostic7AddNoteEOS0_:
   93|  2.02k|{
   94|  2.02k|    PHI_ASSERT(note.IsNote());
   95|       |
   96|  2.02k|    m_Notes.emplace_back(note);
   97|  2.02k|}

_ZN10OpenAutoIt17DiagnosticBuilderC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
   11|   503k|{}
_ZN10OpenAutoIt17DiagnosticBuilderD2Ev:
   14|   503k|{
   15|   503k|    for (auto& diagnostic : m_Diagnostics)
  ------------------
  |  Branch (15:27): [True: 503k, False: 503k]
  ------------------
   16|   503k|    {
   17|   503k|        m_DiagnosticEngine->Report(diagnostic);
   18|   503k|    }
   19|   503k|}

_ZN10OpenAutoIt16DiagnosticEngineC2Ev:
   12|  14.1k|{}
_ZNK10OpenAutoIt16DiagnosticEngine13GetErrorLimitEv:
   29|  1.23M|{
   30|  1.23M|    return m_ErrorLimit;
   31|  1.23M|}
_ZNK10OpenAutoIt16DiagnosticEngine21HasFatalErrorOccurredEv:
   44|  1.23M|{
   45|  1.23M|    return m_FatalErrorOccurred;
   46|  1.23M|}
_ZN10OpenAutoIt16DiagnosticEngine6ReportENS_10DiagnosticE:
   69|   503k|{
   70|   503k|    PHI_ASSERT(!diagnostic.IsNote());
   71|       |
   72|   503k|    if (m_IgnoreAllWarnings)
  ------------------
  |  Branch (72:9): [True: 0, False: 503k]
  ------------------
   73|      0|    {
   74|      0|        diagnostic.IgnoreWarning();
   75|      0|    }
   76|       |
   77|   503k|    if (m_WarningsAsError)
  ------------------
  |  Branch (77:9): [True: 0, False: 503k]
  ------------------
   78|      0|    {
   79|      0|        diagnostic.UpgradeWarningToError();
   80|      0|    }
   81|       |
   82|   503k|    if (diagnostic.IsErrorOrFatal())
  ------------------
  |  Branch (82:9): [True: 108k, False: 395k]
  ------------------
   83|   108k|    {
   84|   108k|        m_ErrorOccurred = true;
   85|   108k|        ++m_NumberOfErrors;
   86|   108k|    }
   87|       |
   88|   503k|    if (diagnostic.IsFatalError())
  ------------------
  |  Branch (88:9): [True: 0, False: 503k]
  ------------------
   89|      0|    {
   90|      0|        m_FatalErrorOccurred = true;
   91|      0|    }
   92|       |
   93|   503k|    if (diagnostic.IsWarning())
  ------------------
  |  Branch (93:9): [True: 395k, False: 108k]
  ------------------
   94|   395k|    {
   95|   395k|        ++m_NumberOfWarnings;
   96|   395k|    }
   97|       |
   98|   503k|    if (m_Consumer)
  ------------------
  |  Branch (98:9): [True: 0, False: 503k]
  ------------------
   99|      0|    {
  100|      0|        m_Consumer->Report(diagnostic);
  101|      0|    }
  102|   503k|}

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  160|  30.8k|{
  161|  30.8k|    static constexpr auto map =
  162|  30.8k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  163|  30.8k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  164|       |
  165|  30.8k|    std::string str{token.begin(), token.end()};
  166|  30.8k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  167|       |
  168|  30.8k|    return map.at(phi::string_view(str.c_str(), str.size()));
  169|  30.8k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  186|  22.9k|{
  187|  22.9k|    static constexpr auto map =
  188|  22.9k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  189|  22.9k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  190|       |
  191|  22.9k|    std::string str{token.begin(), token.end()};
  192|  22.9k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  193|       |
  194|  22.9k|    return map.at(phi::string_view(str.c_str(), str.size()));
  195|  22.9k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  662|  1.17M|{
  663|  1.17M|    static constexpr auto keyword_map =
  664|  1.17M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  665|  1.17M|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  666|  1.17M|    static constexpr auto builtin_map =
  667|  1.17M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  668|  1.17M|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  669|       |
  670|  1.17M|    std::string str{token.begin(), token.end()};
  671|  1.17M|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  672|       |
  673|  1.17M|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  674|       |
  675|  1.17M|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  676|  1.17M|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (676:9): [True: 723k, False: 453k]
  ------------------
  677|   723k|    {
  678|   723k|        return builtin_map.at(string);
  679|   723k|    }
  680|       |
  681|   453k|    return keyword;
  682|  1.17M|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  707|   897k|{
  708|   897k|    static constexpr auto map =
  709|   897k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  710|   897k|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  711|       |
  712|   897k|    return map.at(token);
  713|   897k|}
_ZN10OpenAutoIt5LexerC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
  778|  14.1k|{}
_ZN10OpenAutoIt5Lexer5ResetEv:
  781|  14.1k|{
  782|  14.1k|    m_Iterator = m_Source.begin();
  783|       |
  784|  14.1k|    m_InsideMultiLineComment = false;
  785|       |
  786|  14.1k|    m_LineNumber = 1u;
  787|  14.1k|    m_Column     = 1u;
  788|  14.1k|}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  791|  18.4M|{
  792|  18.4M|    return m_Iterator == m_Source.end();
  793|  18.4M|}
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  796|  5.21M|{
  797|  6.63M|    while (!IsFinished())
  ------------------
  |  Branch (797:12): [True: 6.62M, False: 1.64k]
  ------------------
  798|  6.62M|    {
  799|  6.62M|        char current_character = *m_Iterator;
  800|       |
  801|       |        /* null character */
  802|       |
  803|  6.62M|        if (current_character == '\0')
  ------------------
  |  Branch (803:13): [True: 395k, False: 6.23M]
  ------------------
  804|   395k|        {
  805|   395k|            Diag().Warning(DiagnosticId::NullCharacter, CurrentSourceLocation());
  806|       |
  807|   395k|            SkipCurrentCharacter();
  808|   395k|        }
  809|       |
  810|       |        /* Multiline comments */
  811|       |
  812|  6.23M|        else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (812:18): [True: 1.58k, False: 6.23M]
  ------------------
  813|  1.58k|        {
  814|  1.58k|            iterator       begin_of_multiline_comment            = m_Iterator;
  815|  1.58k|            const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  816|  1.58k|            const phi::u64 beginning_column_of_multiline_comment = m_Column;
  817|       |
  818|  3.21k|            while (!IsFinished())
  ------------------
  |  Branch (818:20): [True: 3.14k, False: 63]
  ------------------
  819|  3.14k|            {
  820|  3.14k|                current_character = *m_Iterator;
  821|       |
  822|       |                // Check for end comment multiline
  823|  3.14k|                if (current_character == '#')
  ------------------
  |  Branch (823:21): [True: 2.58k, False: 568]
  ------------------
  824|  2.58k|                {
  825|  2.58k|                    iterator begin_of_token = m_Iterator;
  826|  2.58k|                    ConsumeCurrentCharacter();
  827|       |
  828|  13.9k|                    while (!IsFinished())
  ------------------
  |  Branch (828:28): [True: 13.8k, False: 69]
  ------------------
  829|  13.8k|                    {
  830|  13.8k|                        current_character = *m_Iterator;
  831|       |
  832|  13.8k|                        if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (832:29): [True: 11.3k, False: 2.51k]
  ------------------
  833|  11.3k|                        {
  834|  11.3k|                            ConsumeCurrentCharacter();
  835|  11.3k|                            continue;
  836|  11.3k|                        }
  837|       |
  838|  2.51k|                        break;
  839|  13.8k|                    }
  840|       |
  841|  2.58k|                    const TokenKind pre_processor_token_kind =
  842|  2.58k|                            lookup_pre_processor(TokenText(begin_of_token));
  843|       |
  844|  2.58k|                    if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (844:25): [True: 1.52k, False: 1.05k]
  ------------------
  845|  1.52k|                    {
  846|  1.52k|                        m_InsideMultiLineComment = false;
  847|       |
  848|       |                        // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  849|  1.52k|                        m_Iterator -= TokenText(begin_of_token).length().unsafe();
  850|       |
  851|  1.52k|                        Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  852|  1.52k|                                    BuildSourceLocation(beginning_line_of_multiline_comment,
  853|  1.52k|                                                        beginning_column_of_multiline_comment)};
  854|       |
  855|  1.52k|                        return token;
  856|  1.52k|                    }
  857|  2.58k|                }
  858|    568|                else if (current_character == '\n')
  ------------------
  |  Branch (858:26): [True: 200, False: 368]
  ------------------
  859|    200|                {
  860|    200|                    ConsumeCurrentCharacter();
  861|    200|                    AdvanceToNextLine();
  862|    200|                }
  863|    368|                else
  864|    368|                {
  865|       |                    // Otherwise simply consume the character
  866|    368|                    ConsumeCurrentCharacter();
  867|    368|                    m_Column += 1u;
  868|    368|                }
  869|  3.14k|            }
  870|  1.58k|        }
  871|       |
  872|       |        /* Skip characters */
  873|       |
  874|  6.23M|        else if (is_skip_character(current_character))
  ------------------
  |  Branch (874:18): [True: 296k, False: 5.93M]
  ------------------
  875|   296k|        {
  876|   296k|            SkipCurrentCharacter();
  877|   296k|        }
  878|       |
  879|       |        /* New Lines */
  880|       |
  881|  5.93M|        else if (current_character == '\n')
  ------------------
  |  Branch (881:18): [True: 285k, False: 5.65M]
  ------------------
  882|   285k|        {
  883|   285k|            Token new_line_token = ConstructToken(TokenKind::NewLine);
  884|       |
  885|   285k|            ConsumeCurrentCharacter();
  886|   285k|            AdvanceToNextLine();
  887|       |
  888|   285k|            return new_line_token;
  889|   285k|        }
  890|       |
  891|       |        /* Comment */
  892|       |
  893|  5.65M|        else if (current_character == ';')
  ------------------
  |  Branch (893:18): [True: 2.03k, False: 5.64M]
  ------------------
  894|  2.03k|        {
  895|  2.03k|            iterator begin_of_token = m_Iterator;
  896|  2.03k|            ConsumeCurrentCharacter();
  897|       |
  898|  20.3k|            while (!IsFinished())
  ------------------
  |  Branch (898:20): [True: 20.2k, False: 40]
  ------------------
  899|  20.2k|            {
  900|  20.2k|                current_character = *m_Iterator;
  901|       |
  902|  20.2k|                if (current_character != '\n')
  ------------------
  |  Branch (902:21): [True: 18.2k, False: 1.99k]
  ------------------
  903|  18.2k|                {
  904|  18.2k|                    ConsumeCurrentCharacter();
  905|  18.2k|                    continue;
  906|  18.2k|                }
  907|       |
  908|  1.99k|                break;
  909|  20.2k|            }
  910|       |
  911|  2.03k|            return ConstructToken(TokenKind::Comment, begin_of_token);
  912|  2.03k|        }
  913|       |
  914|       |        /* Macros */
  915|       |
  916|  5.64M|        else if (current_character == '@')
  ------------------
  |  Branch (916:18): [True: 30.8k, False: 5.61M]
  ------------------
  917|  30.8k|        {
  918|  30.8k|            iterator begin_of_token = m_Iterator;
  919|  30.8k|            ConsumeCurrentCharacter();
  920|       |
  921|   255k|            while (!IsFinished())
  ------------------
  |  Branch (921:20): [True: 255k, False: 356]
  ------------------
  922|   255k|            {
  923|   255k|                current_character = *m_Iterator;
  924|       |
  925|   255k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (925:21): [True: 224k, False: 30.4k]
  ------------------
  926|   224k|                {
  927|   224k|                    ConsumeCurrentCharacter();
  928|   224k|                    continue;
  929|   224k|                }
  930|       |
  931|  30.4k|                break;
  932|   255k|            }
  933|       |
  934|       |            // Emit token
  935|  30.8k|            return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  936|  30.8k|        }
  937|       |
  938|       |        /* Variable identifier */
  939|       |
  940|  5.61M|        else if (current_character == '$')
  ------------------
  |  Branch (940:18): [True: 473k, False: 5.14M]
  ------------------
  941|   473k|        {
  942|   473k|            iterator     begin_of_token = m_Iterator;
  943|   473k|            phi::boolean parsed_something{false};
  944|   473k|            ConsumeCurrentCharacter();
  945|       |
  946|  1.05M|            while (!IsFinished())
  ------------------
  |  Branch (946:20): [True: 1.05M, False: 2.04k]
  ------------------
  947|  1.05M|            {
  948|  1.05M|                current_character = *m_Iterator;
  949|       |
  950|  1.05M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (950:21): [True: 581k, False: 471k]
  ------------------
  951|   581k|                {
  952|   581k|                    ConsumeCurrentCharacter();
  953|   581k|                    parsed_something = true;
  954|   581k|                    continue;
  955|   581k|                }
  956|       |
  957|   471k|                break;
  958|  1.05M|            }
  959|       |
  960|       |            // Ensure that '$' is not a valid variable identifier
  961|   473k|            if (!parsed_something)
  ------------------
  |  Branch (961:17): [True: 22.3k, False: 451k]
  ------------------
  962|  22.3k|            {
  963|  22.3k|                return ConstructToken(TokenKind::Garbage, begin_of_token);
  964|  22.3k|            }
  965|       |
  966|       |            // Emit Token
  967|   451k|            return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  968|   473k|        }
  969|       |
  970|       |        /* PreProcessor directive */
  971|       |
  972|  5.14M|        else if (current_character == '#')
  ------------------
  |  Branch (972:18): [True: 20.4k, False: 5.12M]
  ------------------
  973|  20.4k|        {
  974|  20.4k|            iterator begin_of_token = m_Iterator;
  975|  20.4k|            ConsumeCurrentCharacter();
  976|       |
  977|   184k|            while (!IsFinished())
  ------------------
  |  Branch (977:20): [True: 183k, False: 392]
  ------------------
  978|   183k|            {
  979|   183k|                current_character = *m_Iterator;
  980|       |
  981|   183k|                if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (981:21): [True: 163k, False: 20.0k]
  ------------------
  982|   163k|                {
  983|   163k|                    ConsumeCurrentCharacter();
  984|   163k|                    continue;
  985|   163k|                }
  986|       |
  987|  20.0k|                break;
  988|   183k|            }
  989|       |
  990|       |            // Check for start of multiline comment
  991|  20.4k|            const TokenKind pre_processor_token_kind =
  992|  20.4k|                    lookup_pre_processor(TokenText(begin_of_token));
  993|       |
  994|  20.4k|            if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (994:17): [True: 1.60k, False: 18.8k]
  ------------------
  995|  1.60k|            {
  996|  1.60k|                m_InsideMultiLineComment = true;
  997|  1.60k|            }
  998|       |
  999|  20.4k|            return ConstructToken(pre_processor_token_kind, begin_of_token);
 1000|  20.4k|        }
 1001|       |
 1002|       |        /* SingleQuoteStringLiteral */
 1003|       |
 1004|  5.12M|        else if (current_character == '\'')
  ------------------
  |  Branch (1004:18): [True: 6.02k, False: 5.11M]
  ------------------
 1005|  6.02k|        {
 1006|  6.02k|            iterator     begin_of_token = m_Iterator;
 1007|  6.02k|            phi::boolean did_terminate  = false;
 1008|  6.02k|            ConsumeCurrentCharacter();
 1009|       |
 1010|  8.77k|            while (!IsFinished())
  ------------------
  |  Branch (1010:20): [True: 8.72k, False: 46]
  ------------------
 1011|  8.72k|            {
 1012|  8.72k|                current_character = *m_Iterator;
 1013|  8.72k|                ConsumeCurrentCharacter();
 1014|       |
 1015|  8.72k|                if (current_character == '\'')
  ------------------
  |  Branch (1015:21): [True: 5.98k, False: 2.74k]
  ------------------
 1016|  5.98k|                {
 1017|  5.98k|                    did_terminate = true;
 1018|  5.98k|                    break;
 1019|  5.98k|                }
 1020|  8.72k|            }
 1021|       |
 1022|  6.02k|            if (did_terminate)
  ------------------
  |  Branch (1022:17): [True: 5.98k, False: 46]
  ------------------
 1023|  5.98k|            {
 1024|  5.98k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1025|  5.98k|            }
 1026|       |
 1027|       |            // TODO: Warn unterminated string literal
 1028|  6.02k|        }
 1029|       |
 1030|       |        /* DoubleQuoteStringLiteral */
 1031|       |
 1032|  5.11M|        else if (current_character == '\"')
  ------------------
  |  Branch (1032:18): [True: 101k, False: 5.01M]
  ------------------
 1033|   101k|        {
 1034|   101k|            iterator     begin_of_token = m_Iterator;
 1035|   101k|            phi::boolean did_terminate  = false;
 1036|   101k|            ConsumeCurrentCharacter();
 1037|       |
 1038|   192k|            while (!IsFinished())
  ------------------
  |  Branch (1038:20): [True: 192k, False: 350]
  ------------------
 1039|   192k|            {
 1040|   192k|                current_character = *m_Iterator;
 1041|   192k|                ConsumeCurrentCharacter();
 1042|       |
 1043|   192k|                if (current_character == '\"')
  ------------------
  |  Branch (1043:21): [True: 101k, False: 91.1k]
  ------------------
 1044|   101k|                {
 1045|   101k|                    did_terminate = true;
 1046|   101k|                    break;
 1047|   101k|                }
 1048|   192k|            }
 1049|       |
 1050|   101k|            if (did_terminate)
  ------------------
  |  Branch (1050:17): [True: 101k, False: 350]
  ------------------
 1051|   101k|            {
 1052|   101k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1053|   101k|            }
 1054|   101k|        }
 1055|       |
 1056|       |        /* Number Literals - IntegerLiteral/FloatLiteral */
 1057|       |
 1058|  5.01M|        else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1058:18): [True: 442k, False: 4.57M]
  |  Branch (1058:18): [True: 457k, False: 4.55M]
  |  Branch (1058:54): [True: 15.2k, False: 4.55M]
  ------------------
 1059|   457k|        {
 1060|   457k|            const phi::boolean start_with_zero{current_character == '0'};
 1061|   457k|            phi::boolean       parsing_hex{false};
 1062|   457k|            phi::boolean       parsing_float{current_character == '.'};
 1063|       |
 1064|   457k|            iterator begin_of_token = m_Iterator;
 1065|   457k|            ConsumeCurrentCharacter();
 1066|       |
 1067|   566k|            while (!IsFinished())
  ------------------
  |  Branch (1067:20): [True: 565k, False: 1.04k]
  ------------------
 1068|   565k|            {
 1069|   565k|                current_character = *m_Iterator;
 1070|       |
 1071|       |                // Is the second character
 1072|   565k|                if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1072:21): [True: 456k, False: 108k]
  |  Branch (1072:58): [True: 155k, False: 301k]
  ------------------
 1073|   155k|                {
 1074|       |                    // Hex character
 1075|   155k|                    if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1075:25): [True: 417, False: 154k]
  |  Branch (1075:53): [True: 2.17k, False: 152k]
  ------------------
 1076|  2.59k|                    {
 1077|  2.59k|                        parsing_hex = true;
 1078|  2.59k|                        ConsumeCurrentCharacter();
 1079|  2.59k|                        continue;
 1080|  2.59k|                    }
 1081|   155k|                }
 1082|       |
 1083|       |                // Actually parsing
 1084|   563k|                if (parsing_hex)
  ------------------
  |  Branch (1084:21): [True: 17.1k, False: 545k]
  ------------------
 1085|  17.1k|                {
 1086|  17.1k|                    if (parsing_float)
  ------------------
  |  Branch (1086:25): [True: 0, False: 17.1k]
  ------------------
 1087|      0|                    {
 1088|       |                        // TODO: Fix include and enable this warning
 1089|       |                        //Diag().Error(DiagnosticId::FloatHexLiteral, CurrentSourceLocation());
 1090|       |
 1091|      0|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1092|      0|                    }
 1093|       |
 1094|  17.1k|                    if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1094:25): [True: 14.5k, False: 2.53k]
  ------------------
 1095|  14.5k|                    {
 1096|  14.5k|                        ConsumeCurrentCharacter();
 1097|  14.5k|                        continue;
 1098|  14.5k|                    }
 1099|  17.1k|                }
 1100|   545k|                else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1100:26): [True: 91.5k, False: 454k]
  ------------------
 1101|  91.5k|                {
 1102|  91.5k|                    ConsumeCurrentCharacter();
 1103|  91.5k|                    continue;
 1104|  91.5k|                }
 1105|       |                // Literal dot
 1106|   454k|                else if (current_character == '.')
  ------------------
  |  Branch (1106:26): [True: 4.79k, False: 449k]
  ------------------
 1107|  4.79k|                {
 1108|  4.79k|                    if (parsing_float)
  ------------------
  |  Branch (1108:25): [True: 4.55k, False: 240]
  ------------------
 1109|  4.55k|                    {
 1110|       |                        //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1111|       |
 1112|  4.55k|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1113|  4.55k|                    }
 1114|       |
 1115|    240|                    parsing_float = true;
 1116|    240|                    ConsumeCurrentCharacter();
 1117|    240|                    continue;
 1118|  4.79k|                }
 1119|       |
 1120|   452k|                break;
 1121|   563k|            }
 1122|       |
 1123|   453k|            if (parsing_float)
  ------------------
  |  Branch (1123:17): [True: 10.9k, False: 442k]
  ------------------
 1124|  10.9k|            {
 1125|       |                // Were not allowed to end with a dot
 1126|       |                // TODO: This is very hacky and looks nasty
 1127|  10.9k|                if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1127:21): [True: 7.97k, False: 2.95k]
  ------------------
 1128|  7.97k|                {
 1129|       |                    //Diag().Error(DiagnosticId::InvalidFloatLiteral, CurrentSourceLocation());
 1130|       |
 1131|  7.97k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
 1132|  7.97k|                }
 1133|       |
 1134|  2.95k|                return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1135|  10.9k|            }
 1136|       |
 1137|   442k|            return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1138|   453k|        }
 1139|       |
 1140|       |        /* Operators */
 1141|       |
 1142|  4.55M|        else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1142:18): [True: 814k, False: 3.74M]
  ------------------
 1143|   814k|        {
 1144|   814k|            iterator begin_of_token = m_Iterator;
 1145|   814k|            ConsumeCurrentCharacter();
 1146|       |
 1147|   814k|            if (!IsFinished())
  ------------------
  |  Branch (1147:17): [True: 813k, False: 1.12k]
  ------------------
 1148|   813k|            {
 1149|   813k|                if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1149:21): [True: 4.99k, False: 808k]
  |  Branch (1149:44): [True: 90.4k, False: 718k]
  |  Branch (1149:70): [True: 515, False: 89.8k]
  ------------------
 1150|  5.50k|                {
 1151|       |                    // We have an actual two part operator
 1152|  5.50k|                    ConsumeCurrentCharacter();
 1153|  5.50k|                }
 1154|   813k|            }
 1155|       |
 1156|   814k|            return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1157|   814k|        }
 1158|       |
 1159|  3.74M|        else if (is_single_operator(current_character))
  ------------------
  |  Branch (1159:18): [True: 82.7k, False: 3.66M]
  ------------------
 1160|  82.7k|        {
 1161|  82.7k|            Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1162|       |
 1163|  82.7k|            ConsumeCurrentCharacter();
 1164|       |
 1165|  82.7k|            return token;
 1166|  82.7k|        }
 1167|       |
 1168|       |        /* Punctioation */
 1169|       |
 1170|  3.66M|        else if (current_character == ',')
  ------------------
  |  Branch (1170:18): [True: 186k, False: 3.47M]
  ------------------
 1171|   186k|        {
 1172|   186k|            Token token = ConstructToken(TokenKind::Comma);
 1173|       |
 1174|   186k|            ConsumeCurrentCharacter();
 1175|       |
 1176|   186k|            return token;
 1177|   186k|        }
 1178|       |
 1179|  3.47M|        else if (current_character == '(')
  ------------------
  |  Branch (1179:18): [True: 398k, False: 3.07M]
  ------------------
 1180|   398k|        {
 1181|   398k|            Token token = ConstructToken(TokenKind::LParen);
 1182|       |
 1183|   398k|            ConsumeCurrentCharacter();
 1184|       |
 1185|   398k|            return token;
 1186|   398k|        }
 1187|       |
 1188|  3.07M|        else if (current_character == ')')
  ------------------
  |  Branch (1188:18): [True: 212k, False: 2.86M]
  ------------------
 1189|   212k|        {
 1190|   212k|            Token token = ConstructToken(TokenKind::RParen);
 1191|       |
 1192|   212k|            ConsumeCurrentCharacter();
 1193|       |
 1194|   212k|            return token;
 1195|   212k|        }
 1196|       |
 1197|  2.86M|        else if (current_character == '.')
  ------------------
  |  Branch (1197:18): [True: 0, False: 2.86M]
  ------------------
 1198|      0|        {
 1199|      0|            Token token = ConstructToken(TokenKind::Dot);
 1200|       |
 1201|      0|            ConsumeCurrentCharacter();
 1202|       |
 1203|      0|            return token;
 1204|      0|        }
 1205|       |
 1206|  2.86M|        else if (current_character == '[')
  ------------------
  |  Branch (1206:18): [True: 775k, False: 2.08M]
  ------------------
 1207|   775k|        {
 1208|   775k|            Token token = ConstructToken(TokenKind::LSquare);
 1209|       |
 1210|   775k|            ConsumeCurrentCharacter();
 1211|       |
 1212|   775k|            return token;
 1213|   775k|        }
 1214|       |
 1215|  2.08M|        else if (current_character == ']')
  ------------------
  |  Branch (1215:18): [True: 191k, False: 1.89M]
  ------------------
 1216|   191k|        {
 1217|   191k|            Token token = ConstructToken(TokenKind::RSquare);
 1218|       |
 1219|   191k|            ConsumeCurrentCharacter();
 1220|       |
 1221|   191k|            return token;
 1222|   191k|        }
 1223|       |
 1224|       |        /* Identifier */
 1225|       |
 1226|  1.89M|        else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1226:18): [True: 1.17M, False: 718k]
  ------------------
 1227|  1.17M|        {
 1228|  1.17M|            iterator begin_of_token = m_Iterator;
 1229|  1.17M|            ConsumeCurrentCharacter();
 1230|       |
 1231|  3.49M|            while (!IsFinished())
  ------------------
  |  Branch (1231:20): [True: 3.48M, False: 5.01k]
  ------------------
 1232|  3.48M|            {
 1233|  3.48M|                current_character = *m_Iterator;
 1234|       |
 1235|  3.48M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1235:21): [True: 2.31M, False: 1.17M]
  ------------------
 1236|  2.31M|                {
 1237|  2.31M|                    ConsumeCurrentCharacter();
 1238|  2.31M|                    continue;
 1239|  2.31M|                }
 1240|       |
 1241|  1.17M|                break;
 1242|  3.48M|            }
 1243|       |
 1244|  1.17M|            return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1245|  1.17M|        }
 1246|       |
 1247|       |        /* Unknown/Unexpected character */
 1248|       |
 1249|   718k|        else
 1250|   718k|        {
 1251|       |            // TODO: Warn unexpected character encountered
 1252|   718k|            SkipCurrentCharacter();
 1253|   718k|        }
 1254|  6.62M|    }
 1255|       |
 1256|  1.64k|    return {};
 1257|  5.21M|}
_ZN10OpenAutoIt5Lexer13ProcessStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEES6_:
 1260|  14.1k|{
 1261|  14.1k|    SourceFile fake_source{SourceFile::Type::Basic, file_name.data(), source};
 1262|       |
 1263|  14.1k|    return ProcessFile(&fake_source);
 1264|  14.1k|}
_ZN10OpenAutoIt5Lexer11ProcessFileEN3phi21not_null_observer_ptrIKNS_10SourceFileEEE:
 1267|  14.1k|{
 1268|  14.1k|    TokenStream stream;
 1269|       |
 1270|  14.1k|    m_SourceFile = source_file;
 1271|  14.1k|    m_Source     = m_SourceFile->m_Content;
 1272|  14.1k|    Reset();
 1273|       |
 1274|  5.23M|    while (!IsFinished())
  ------------------
  |  Branch (1274:12): [True: 5.21M, False: 14.1k]
  ------------------
 1275|  5.21M|    {
 1276|  5.21M|        phi::optional<Token> maybe_token = GetNextToken();
 1277|       |
 1278|  5.21M|        if (maybe_token.has_value())
  ------------------
  |  Branch (1278:13): [True: 5.21M, False: 1.64k]
  ------------------
 1279|  5.21M|        {
 1280|  5.21M|            stream.emplace_back(maybe_token.value());
 1281|  5.21M|        }
 1282|  5.21M|    }
 1283|       |
 1284|  14.1k|    stream.finalize();
 1285|  14.1k|    return stream;
 1286|  14.1k|}
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1289|  10.2M|{
 1290|  10.2M|    ++m_Iterator;
 1291|  10.2M|}
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1294|   285k|{
 1295|   285k|    ++m_LineNumber;
 1296|   285k|    m_Column = 1u;
 1297|   285k|}
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1300|  1.41M|{
 1301|  1.41M|    ConsumeCurrentCharacter();
 1302|  1.41M|    ++m_Column;
 1303|  1.41M|}
_ZN10OpenAutoIt5Lexer4DiagEv:
 1306|   395k|{
 1307|   395k|    return DiagnosticBuilder{m_DiagnosticEngine};
 1308|   395k|}
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   37|  30.8k|    {
   38|  30.8k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  30.8k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  30.8k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 11.7k, False: 19.0k]
  ------------------
   42|  11.7k|        {
   43|  11.7k|            return itr->second;
   44|  11.7k|        }
   45|       |
   46|  19.0k|        return m_Default;
   47|  30.8k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  2.63M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   37|  22.9k|    {
   38|  22.9k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  22.9k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  22.9k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 12.0k, False: 10.9k]
  ------------------
   42|  12.0k|        {
   43|  12.0k|            return itr->second;
   44|  12.0k|        }
   45|       |
   46|  10.9k|        return m_Default;
   47|  22.9k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   165k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   37|   723k|    {
   38|   723k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   723k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   723k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 4.33k, False: 719k]
  ------------------
   42|  4.33k|        {
   43|  4.33k|            return itr->second;
   44|  4.33k|        }
   45|       |
   46|   719k|        return m_Default;
   47|   723k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   291M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   37|  1.17M|    {
   38|  1.17M|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  1.17M|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  1.17M|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 453k, False: 723k]
  ------------------
   42|   453k|        {
   43|   453k|            return itr->second;
   44|   453k|        }
   45|       |
   46|   723k|        return m_Default;
   47|  1.17M|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  42.2M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   37|   897k|    {
   38|   897k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|   897k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|   897k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 897k, False: 0]
  ------------------
   42|   897k|        {
   43|   897k|            return itr->second;
   44|   897k|        }
   45|       |
   46|      0|        return m_Default;
   47|   897k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  7.97M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  736|   197k|{
  737|   197k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (737:12): [True: 173k, False: 24.5k]
  |  Branch (737:40): [True: 2.06k, False: 22.5k]
  ------------------
  738|   197k|}
_Z17is_skip_characterc:
  716|  6.23M|{
  717|  6.23M|    switch (c)
  718|  6.23M|    {
  719|   287k|        case ' ':
  ------------------
  |  Branch (719:9): [True: 287k, False: 5.94M]
  ------------------
  720|   290k|        case '\v':
  ------------------
  |  Branch (720:9): [True: 2.92k, False: 6.22M]
  ------------------
  721|   294k|        case '\t':
  ------------------
  |  Branch (721:9): [True: 3.82k, False: 6.22M]
  ------------------
  722|   295k|        case '\b':
  ------------------
  |  Branch (722:9): [True: 1.55k, False: 6.23M]
  ------------------
  723|   296k|        case '\f':
  ------------------
  |  Branch (723:9): [True: 1.08k, False: 6.23M]
  ------------------
  724|   296k|            return true;
  725|  5.93M|        default:
  ------------------
  |  Branch (725:9): [True: 5.93M, False: 296k]
  ------------------
  726|  5.93M|            return false;
  727|  6.23M|    }
  728|  6.23M|}
_Z24is_valid_identifier_charc:
  731|  6.69M|{
  732|  6.69M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (732:12): [True: 4.27M, False: 2.41M]
  |  Branch (732:40): [True: 19.1k, False: 2.39M]
  ------------------
  733|  6.69M|}
_Z20is_two_part_operatorc:
  741|  4.55M|{
  742|  4.55M|    switch (c)
  743|  4.55M|    {
  744|   214k|        case '=':
  ------------------
  |  Branch (744:9): [True: 214k, False: 4.34M]
  ------------------
  745|   288k|        case '+':
  ------------------
  |  Branch (745:9): [True: 73.9k, False: 4.48M]
  ------------------
  746|   638k|        case '-':
  ------------------
  |  Branch (746:9): [True: 350k, False: 4.20M]
  ------------------
  747|   646k|        case '*':
  ------------------
  |  Branch (747:9): [True: 7.88k, False: 4.55M]
  ------------------
  748|   691k|        case '/':
  ------------------
  |  Branch (748:9): [True: 45.7k, False: 4.51M]
  ------------------
  749|   695k|        case '&':
  ------------------
  |  Branch (749:9): [True: 4.10k, False: 4.55M]
  ------------------
  750|   786k|        case '<':
  ------------------
  |  Branch (750:9): [True: 90.7k, False: 4.46M]
  ------------------
  751|   814k|        case '>':
  ------------------
  |  Branch (751:9): [True: 27.9k, False: 4.53M]
  ------------------
  752|   814k|            return true;
  753|       |
  754|  3.74M|        default:
  ------------------
  |  Branch (754:9): [True: 3.74M, False: 814k]
  ------------------
  755|  3.74M|            return false;
  756|  4.55M|    }
  757|  4.55M|}
_Z18is_single_operatorc:
  760|  3.74M|{
  761|  3.74M|    switch (c)
  762|  3.74M|    {
  763|  20.2k|        case '^':
  ------------------
  |  Branch (763:9): [True: 20.2k, False: 3.72M]
  ------------------
  764|  57.6k|        case '?':
  ------------------
  |  Branch (764:9): [True: 37.4k, False: 3.70M]
  ------------------
  765|  82.7k|        case ':':
  ------------------
  |  Branch (765:9): [True: 25.0k, False: 3.71M]
  ------------------
  766|  82.7k|            return true;
  767|       |
  768|  3.66M|        default:
  ------------------
  |  Branch (768:9): [True: 3.66M, False: 82.7k]
  ------------------
  769|  3.66M|            return false;
  770|  3.74M|    }
  771|  3.74M|}

_ZN10OpenAutoIt6ParserC2EN3phi21not_null_observer_ptrINS_13SourceManagerEEENS2_INS_16DiagnosticEngineEEENS2_INS_5LexerEEE:
  135|  14.1k|{}
_ZN10OpenAutoIt6Parser16ParseTokenStreamEN3phi21not_null_observer_ptrINS_11ASTDocumentEEEONS_11TokenStreamENS2_IKNS_10SourceFileEEE:
  140|  14.1k|{
  141|  14.1k|    PushParsingContext(phi::move(source_file), phi::move(stream));
  142|       |
  143|  14.1k|    ParseDocument(phi::move(document));
  144|  14.1k|}
_ZN10OpenAutoIt6Parser11ParseStringEN3phi21not_null_observer_ptrINS_11ASTDocumentEEENS1_17basic_string_viewIcNSt3__111char_traitsIcEEEES9_:
  148|  14.1k|{
  149|  14.1k|    TokenStream stream = m_Lexer->ProcessString(file_name, source);
  150|       |
  151|  14.1k|    SourceFile fake_source_file{SourceFile::Type::Basic, std::string_view(file_name),
  152|  14.1k|                                phi::move(source)};
  153|  14.1k|    ParseTokenStream(phi::move(document), phi::move(stream), &fake_source_file);
  154|  14.1k|}
_ZN10OpenAutoIt6Parser13ParseDocumentEN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
  174|  14.1k|{
  175|  14.1k|    m_Document = phi::move(document);
  176|       |
  177|  14.1k|    m_IncludeOnceFiles.clear();
  178|       |
  179|  1.23M|    while (ShouldContinueParsing())
  ------------------
  |  Branch (179:12): [True: 1.22M, False: 14.1k]
  ------------------
  180|  1.22M|    {
  181|  1.22M|        if (!CurrentTokenStream().has_more())
  ------------------
  |  Branch (181:13): [True: 14.1k, False: 1.20M]
  ------------------
  182|  14.1k|        {
  183|  14.1k|            PopParsingContext();
  184|  14.1k|            continue;
  185|  14.1k|        }
  186|       |
  187|  1.20M|        const Token& token = CurrentToken();
  188|       |
  189|       |        // Parse global function definition
  190|  1.20M|        switch (token.GetTokenKind())
  191|  1.20M|        {
  192|   169k|            case TokenKind::KW_Func: {
  ------------------
  |  Branch (192:13): [True: 169k, False: 1.03M]
  ------------------
  193|   169k|                ConsumeCurrent();
  194|       |
  195|   169k|                auto function_definition = ParseFunctionDefinition();
  196|   169k|                if (!function_definition)
  ------------------
  |  Branch (196:21): [True: 163k, False: 5.94k]
  ------------------
  197|   163k|                {
  198|   163k|                    err("ERR: Failed to parse function definition!\n");
  199|   163k|                    continue;
  200|   163k|                }
  201|       |
  202|  5.94k|                AppendFunctionToDocument(function_definition.release_not_null());
  203|  5.94k|                break;
  204|   169k|            }
  205|       |
  206|  2.00k|            case TokenKind::Comment:
  ------------------
  |  Branch (206:13): [True: 2.00k, False: 1.20M]
  ------------------
  207|  3.20k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (207:13): [True: 1.19k, False: 1.20M]
  ------------------
  208|  4.78k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (208:13): [True: 1.57k, False: 1.20M]
  ------------------
  209|  81.3k|            case TokenKind::NewLine: {
  ------------------
  |  Branch (209:13): [True: 76.5k, False: 1.12M]
  ------------------
  210|       |                // Simply ignore and consume newlines and comments
  211|  81.3k|                ConsumeCurrent();
  212|  81.3k|                break;
  213|  4.78k|            }
  214|  15.5k|            case TokenKind::NotAToken: {
  ------------------
  |  Branch (214:13): [True: 15.5k, False: 1.19M]
  ------------------
  215|  15.5k|                err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  216|  15.5k|                                std::string_view(token.GetText())));
  217|  15.5k|                ConsumeCurrent();
  218|  15.5k|                break;
  219|  4.78k|            }
  220|       |
  221|  3.89k|            case TokenKind::PP_Include: {
  ------------------
  |  Branch (221:13): [True: 3.89k, False: 1.20M]
  ------------------
  222|  3.89k|                ConsumeCurrent();
  223|       |
  224|  3.89k|                ParseIncludeDirective();
  225|       |
  226|  3.89k|                break;
  227|  4.78k|            }
  228|       |
  229|    441|            case TokenKind::PP_IncludeOnce: {
  ------------------
  |  Branch (229:13): [True: 441, False: 1.20M]
  ------------------
  230|    441|                ConsumeCurrent();
  231|       |
  232|    441|                m_IncludeOnceFiles.emplace(CurrentSourceFile().get());
  233|       |
  234|    441|                RequireNewLine();
  235|       |
  236|    441|                break;
  237|  4.78k|            }
  238|       |
  239|   935k|            default: {
  ------------------
  |  Branch (239:13): [True: 935k, False: 270k]
  ------------------
  240|   935k|                auto statement = ParseStatement();
  241|   935k|                if (!statement)
  ------------------
  |  Branch (241:21): [True: 777k, False: 157k]
  ------------------
  242|   777k|                {
  243|       |                    // TODO: Proper error reporting
  244|   777k|                    err("ERR: Failed to parse statement!\n");
  245|       |
  246|   777k|                    if (HasMoreTokens())
  ------------------
  |  Branch (246:25): [True: 770k, False: 6.90k]
  ------------------
  247|   770k|                    {
  248|       |                        // Swallow the bad token
  249|   770k|                        ConsumeCurrent();
  250|   770k|                    }
  251|   777k|                    continue;
  252|   777k|                }
  253|       |
  254|   157k|                AppendStatementToDocument(statement.release_not_null());
  255|       |
  256|   157k|                RequireNewLine();
  257|   157k|                break;
  258|   935k|            }
  259|  1.20M|        }
  260|  1.20M|    }
  261|  14.1k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamE:
  265|  14.1k|{
  266|  14.1k|    PushParsingContext(phi::move(source_file), phi::move(token_stream), SourceLocation::Invalid());
  267|  14.1k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamENS_14SourceLocationE:
  271|  14.1k|{
  272|  14.1k|    ParsingContext context{.source_file   = phi::move(source_file),
  273|  14.1k|                           .token_stream  = phi::move(token_stream),
  274|  14.1k|                           .included_from = phi::move(included_from)};
  275|       |
  276|  14.1k|    m_ParsingContextStack.emplace(phi::move(context));
  277|  14.1k|    m_SourceManager->SetLocalSearchPath(source_file->m_FilePath.parent_path());
  278|  14.1k|}
_ZN10OpenAutoIt6Parser17PopParsingContextEv:
  281|  14.1k|{
  282|  14.1k|    m_ParsingContextStack.pop();
  283|  14.1k|    if (!m_ParsingContextStack.empty())
  ------------------
  |  Branch (283:9): [True: 0, False: 14.1k]
  ------------------
  284|      0|    {
  285|      0|        m_SourceManager->SetLocalSearchPath(
  286|      0|                m_ParsingContextStack.top().source_file->m_FilePath.parent_path());
  287|      0|    }
  288|  14.1k|    else
  289|  14.1k|    {
  290|  14.1k|        m_SourceManager->SetLocalSearchPath("");
  291|  14.1k|    }
  292|  14.1k|}
_ZN10OpenAutoIt6Parser21CurrentParsingContextEv:
  295|    441|{
  296|    441|    PHI_ASSERT(!m_ParsingContextStack.empty());
  297|       |
  298|    441|    return m_ParsingContextStack.top();
  299|    441|}
_ZN10OpenAutoIt6Parser17CurrentSourceFileEv:
  302|    441|{
  303|    441|    return CurrentParsingContext().source_file.not_null();
  304|    441|}
_ZN10OpenAutoIt6Parser18CurrentTokenStreamEv:
  307|  6.43M|{
  308|  6.43M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  309|       |
  310|  6.43M|    return m_ParsingContextStack.top().token_stream;
  311|  6.43M|}
_ZNK10OpenAutoIt6Parser18CurrentTokenStreamEv:
  314|  41.4M|{
  315|  41.4M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  316|       |
  317|  41.4M|    return m_ParsingContextStack.top().token_stream;
  318|  41.4M|}
_ZNK10OpenAutoIt6Parser13HasMoreTokensEv:
  321|  13.6M|{
  322|  13.6M|    return CurrentTokenStream().has_more();
  323|  13.6M|}
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  326|  13.8M|{
  327|  13.8M|    PHI_ASSERT(CurrentTokenStream().has_more());
  328|       |
  329|  13.8M|    return CurrentTokenStream().look_ahead();
  330|  13.8M|}
_ZNK10OpenAutoIt6Parser13PreviousTokenEv:
  333|   104k|{
  334|   104k|    return CurrentTokenStream().look_behind();
  335|   104k|}
_ZNK10OpenAutoIt6Parser21ShouldContinueParsingEv:
  338|  1.23M|{
  339|  1.23M|    const phi::boolean stack_empty          = m_ParsingContextStack.empty();
  340|  1.23M|    const phi::boolean fatal_error_occurred = m_DiagnosticEngine->HasFatalErrorOccurred();
  341|  1.23M|    const phi::boolean error_limit_reached =
  342|  1.23M|            (m_DiagnosticEngine->GetErrorLimit() == 0u ?
  ------------------
  |  Branch (342:14): [True: 1.23M, False: 0]
  ------------------
  343|  1.23M|                     false :
  344|  1.23M|                     m_DiagnosticEngine->GetNumberOfError() >= m_DiagnosticEngine->GetErrorLimit());
  345|       |
  346|  1.23M|    return !stack_empty && !fatal_error_occurred && !error_limit_reached;
  ------------------
  |  Branch (346:12): [True: 1.22M, False: 14.1k]
  |  Branch (346:28): [True: 1.22M, False: 0]
  |  Branch (346:53): [True: 1.22M, False: 0]
  ------------------
  347|  1.23M|}
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  350|  5.21M|{
  351|  5.21M|    CurrentTokenStream().consume();
  352|  5.21M|}
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  355|   158k|{
  356|   159k|    while (HasMoreTokens())
  ------------------
  |  Branch (356:12): [True: 157k, False: 1.47k]
  ------------------
  357|   157k|    {
  358|   157k|        switch (CurrentToken().GetTokenKind())
  359|   157k|        {
  360|    496|            case TokenKind::Comment:
  ------------------
  |  Branch (360:13): [True: 496, False: 157k]
  ------------------
  361|    700|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (361:13): [True: 204, False: 157k]
  ------------------
  362|  1.03k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (362:13): [True: 335, False: 157k]
  ------------------
  363|  1.03k|                ConsumeCurrent();
  364|  1.03k|                break;
  365|       |
  366|   156k|            default:
  ------------------
  |  Branch (366:13): [True: 156k, False: 1.03k]
  ------------------
  367|   156k|                return;
  368|   157k|        }
  369|   157k|    }
  370|   158k|}
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  373|  1.57M|{
  374|  1.63M|    while (HasMoreTokens())
  ------------------
  |  Branch (374:12): [True: 1.63M, False: 505]
  ------------------
  375|  1.63M|    {
  376|  1.63M|        switch (CurrentToken().GetTokenKind())
  377|  1.63M|        {
  378|    670|            case TokenKind::Comment:
  ------------------
  |  Branch (378:13): [True: 670, False: 1.63M]
  ------------------
  379|    864|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (379:13): [True: 194, False: 1.63M]
  ------------------
  380|  1.06k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (380:13): [True: 199, False: 1.63M]
  ------------------
  381|  58.3k|            case TokenKind::NewLine:
  ------------------
  |  Branch (381:13): [True: 57.2k, False: 1.57M]
  ------------------
  382|  58.3k|                ConsumeCurrent();
  383|  58.3k|                break;
  384|       |
  385|  1.57M|            default:
  ------------------
  |  Branch (385:13): [True: 1.57M, False: 58.3k]
  ------------------
  386|  1.57M|                return;
  387|  1.63M|        }
  388|  1.63M|    }
  389|  1.57M|}
_ZN10OpenAutoIt6Parser14RequireNewLineEv:
  392|   158k|{
  393|   158k|    ConsumeComments();
  394|       |
  395|   158k|    if (!HasMoreTokens())
  ------------------
  |  Branch (395:9): [True: 1.47k, False: 156k]
  ------------------
  396|  1.47k|    {
  397|  1.47k|        return;
  398|  1.47k|    }
  399|       |
  400|   156k|    const Token& token = CurrentToken();
  401|       |
  402|   156k|    if (token.GetTokenKind() != TokenKind::NewLine)
  ------------------
  |  Branch (402:9): [True: 102k, False: 54.2k]
  ------------------
  403|   102k|    {
  404|   102k|        Diag().Error(DiagnosticId::Expected, PreviousToken().GetBeginLocation(), "new line");
  405|   102k|    }
  406|       |
  407|   156k|    ConsumeCurrent();
  408|   156k|}
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  411|  2.11M|{
  412|       |    // Do we even have more tokens?
  413|  2.11M|    if (!HasMoreTokens())
  ------------------
  |  Branch (413:9): [True: 12.0k, False: 2.10M]
  ------------------
  414|  12.0k|    {
  415|  12.0k|        return {};
  416|  12.0k|    }
  417|       |
  418|  2.10M|    const Token& token = CurrentToken();
  419|       |
  420|       |    // Is this the correct token kind
  421|  2.10M|    if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (421:9): [True: 516k, False: 1.59M]
  ------------------
  422|   516k|    {
  423|   516k|        return {};
  424|   516k|    }
  425|       |
  426|  1.59M|    ConsumeCurrent();
  427|  1.59M|    return token;
  428|  2.10M|}
_ZN10OpenAutoIt6Parser4DiagEv:
  444|   108k|{
  445|   108k|    return {m_DiagnosticEngine};
  446|   108k|}
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  449|   169k|{
  450|       |    // Next we MUST parse the function name
  451|   169k|    auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  452|   169k|    if (!function_name_token)
  ------------------
  |  Branch (452:9): [True: 13.1k, False: 156k]
  ------------------
  453|  13.1k|    {
  454|  13.1k|        err("Expected identifier for function name");
  455|  13.1k|        return {};
  456|  13.1k|    }
  457|       |
  458|   156k|    auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  459|   156k|    function_definition->m_FunctionName = function_name_token->GetText();
  460|       |
  461|       |    // Next we MUST parse an opening parenthesis (LParen)
  462|   156k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (462:9): [True: 21.2k, False: 134k]
  ------------------
  463|  21.2k|    {
  464|  21.2k|        err("Expected opening parenthesis");
  465|  21.2k|        return {};
  466|  21.2k|    }
  467|       |
  468|       |    // Next we parse the function parameter declarations until right parenthesis (RParen)
  469|   187k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (469:12): [True: 187k, False: 147]
  |  Branch (469:12): [True: 120k, False: 67.3k]
  |  Branch (469:31): [True: 120k, False: 67.2k]
  ------------------
  470|   120k|    {
  471|   120k|        phi::optional<FunctionParameter> function_parameter_optional =
  472|   120k|                ParseFunctionParameterDefinition();
  473|   120k|        if (!function_parameter_optional)
  ------------------
  |  Branch (473:13): [True: 67.5k, False: 53.0k]
  ------------------
  474|  67.5k|        {
  475|       |            // TODO: Proper error reporting
  476|  67.5k|            return {};
  477|  67.5k|        }
  478|  53.0k|        FunctionParameter& function_parameter = function_parameter_optional.value();
  479|       |
  480|  53.0k|        function_definition->m_Parameters.emplace_back(phi::move(function_parameter));
  481|       |
  482|       |        // Parse comma
  483|  53.0k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (483:13): [True: 53.0k, False: 0]
  |  Branch (483:13): [True: 43.9k, False: 9.03k]
  |  Branch (483:32): [True: 43.9k, False: 9.03k]
  ------------------
  484|  43.9k|        {
  485|  43.9k|            ConsumeCurrent();
  486|  43.9k|        }
  487|  53.0k|    }
  488|       |
  489|       |    // Next we MUST parse a right parenthesis (RParen)
  490|  67.3k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (490:9): [True: 147, False: 67.2k]
  ------------------
  491|    147|    {
  492|    147|        err("ERR: Expected ')'");
  493|    147|        return {};
  494|    147|    }
  495|       |
  496|       |    // Next we MUST parse a new line
  497|  67.2k|    if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (497:9): [True: 12.7k, False: 54.4k]
  ------------------
  498|  12.7k|    {
  499|  12.7k|        err("ERR: Missing newline!");
  500|  12.7k|        return {};
  501|  12.7k|    }
  502|       |
  503|       |    // Next parse Statements until EndFunc
  504|   207k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (504:12): [True: 207k, False: 180]
  |  Branch (504:12): [True: 201k, False: 6.12k]
  |  Branch (504:31): [True: 201k, False: 5.94k]
  ------------------
  505|   201k|    {
  506|   201k|        auto statement = ParseStatement();
  507|   201k|        if (!statement)
  ------------------
  |  Branch (507:13): [True: 48.3k, False: 153k]
  ------------------
  508|  48.3k|        {
  509|  48.3k|            err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  510|  48.3k|                            std::string_view(function_definition->m_FunctionName)));
  511|       |            // TODO: Report proper error
  512|  48.3k|            return {};
  513|  48.3k|        }
  514|       |
  515|   153k|        function_definition->m_FunctionBody.emplace_back(phi::move(statement.release_not_null()));
  516|       |
  517|   153k|        ConsumeNewLineAndComments();
  518|   153k|    }
  519|       |
  520|       |    // Next we MUST parse EndFunc
  521|  6.12k|    if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (521:9): [True: 180, False: 5.94k]
  ------------------
  522|    180|    {
  523|       |        // TODO: Proper error
  524|    180|        return {};
  525|    180|    }
  526|       |
  527|  5.94k|    return phi::move(function_definition);
  528|  6.12k|}
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  531|   120k|{
  532|       |    // TODO: This entire function requires more error checks
  533|   120k|    FunctionParameter parameter;
  534|       |
  535|   177k|    while (HasMoreTokens())
  ------------------
  |  Branch (535:12): [True: 177k, False: 160]
  ------------------
  536|   177k|    {
  537|   177k|        const Token& token = CurrentToken();
  538|       |
  539|   177k|        switch (token.GetTokenKind())
  540|   177k|        {
  541|  41.3k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (541:13): [True: 41.3k, False: 136k]
  ------------------
  542|  41.3k|                parameter.name = token.GetText().substring_view(1u);
  543|  41.3k|                ConsumeCurrent();
  544|  41.3k|                break;
  545|      0|            }
  546|    196|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (546:13): [True: 196, False: 177k]
  ------------------
  547|    196|                parameter.as_const = true;
  548|    196|                ConsumeCurrent();
  549|    196|                break;
  550|      0|            }
  551|     66|            case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (551:13): [True: 66, False: 177k]
  ------------------
  552|     66|                parameter.by_ref = true;
  553|     66|                ConsumeCurrent();
  554|     66|                break;
  555|      0|            }
  556|  51.2k|            case TokenKind::OP_Equals: {
  ------------------
  |  Branch (556:13): [True: 51.2k, False: 126k]
  ------------------
  557|  51.2k|                if (parameter.name.is_empty())
  ------------------
  |  Branch (557:21): [True: 17.1k, False: 34.0k]
  ------------------
  558|  17.1k|                {
  559|       |                    // TODO: PROPER ERROR
  560|  17.1k|                    return {};
  561|  17.1k|                }
  562|       |
  563|       |                // Consume the '='
  564|  34.0k|                ConsumeCurrent();
  565|       |
  566|       |                // Default value is an expression
  567|  34.0k|                auto default_expression = ParseExpression();
  568|  34.0k|                if (!default_expression)
  ------------------
  |  Branch (568:21): [True: 18.5k, False: 15.4k]
  ------------------
  569|  18.5k|                {
  570|       |                    // TODO: Report error
  571|  18.5k|                    return {};
  572|  18.5k|                }
  573|       |
  574|       |                // For default values we artificially create a variable assignment
  575|  15.4k|                auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  576|       |
  577|  15.4k|                default_var_assignment->m_Scope                  = VariableScope::Auto;
  578|  15.4k|                default_var_assignment->m_VariableName           = parameter.name;
  579|  15.4k|                default_var_assignment->m_InitialValueExpression = phi::move(default_expression);
  580|       |
  581|  15.4k|                parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  582|  15.4k|                break;
  583|  34.0k|            }
  584|  43.9k|            case TokenKind::Comma:
  ------------------
  |  Branch (584:13): [True: 43.9k, False: 133k]
  ------------------
  585|  53.0k|            case TokenKind::RParen: {
  ------------------
  |  Branch (585:13): [True: 9.03k, False: 168k]
  ------------------
  586|  53.0k|                return phi::move(parameter);
  587|  43.9k|            }
  588|  31.6k|            default: {
  ------------------
  |  Branch (588:13): [True: 31.6k, False: 145k]
  ------------------
  589|       |                // TODO: Report error
  590|  31.6k|                return {};
  591|  43.9k|            }
  592|   177k|        }
  593|   177k|    }
  594|       |
  595|       |    // TODO: Report error unexpected EOF
  596|    160|    return {};
  597|   120k|}
_ZN10OpenAutoIt6Parser21ParseIncludeDirectiveEv:
  600|  3.89k|{
  601|  3.89k|    if (!HasMoreTokens())
  ------------------
  |  Branch (601:9): [True: 12, False: 3.88k]
  ------------------
  602|     12|    {
  603|     12|        Diag().Error(DiagnosticId::UnexpectedEndOfFile, PreviousToken().GetBeginLocation(),
  604|     12|                     "include directive");
  605|     12|        return;
  606|     12|    }
  607|       |
  608|  3.88k|    const Token&     token = CurrentToken();
  609|  3.88k|    phi::string_view file_name;
  610|  3.88k|    IncludeType      include_type = IncludeType::Local;
  611|       |
  612|       |    // Local include like this '#include "foo.au3"'
  613|  3.88k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (613:9): [True: 267, False: 3.61k]
  ------------------
  614|    267|    {
  615|    267|        ConsumeCurrent();
  616|       |
  617|       |        // Get the file name
  618|    267|        file_name = token.GetText().substring_view(1u, token.GetText().length() - 2u);
  619|    267|    }
  620|       |    // Global include like this '#include <foo.au3>'
  621|  3.61k|    else if (token.GetTokenKind() == TokenKind::OP_LessThan)
  ------------------
  |  Branch (621:14): [True: 2.22k, False: 1.39k]
  ------------------
  622|  2.22k|    {
  623|       |        // FIXME: This is not really a nice way, but we essentially start from after the opening '<' and include everything upto the closing '>'
  624|  2.22k|        ConsumeCurrent();
  625|       |
  626|  2.22k|        include_type = IncludeType::Global;
  627|  2.22k|        file_name    = token.GetText().remove_prefix(1u);
  628|       |
  629|  2.22k|        phi::boolean found_end{false};
  630|  2.22k|        phi::boolean continue_parsing{true};
  631|  5.33k|        while (HasMoreTokens() && continue_parsing)
  ------------------
  |  Branch (631:16): [True: 5.23k, False: 107]
  |  Branch (631:16): [True: 3.11k, False: 2.22k]
  |  Branch (631:35): [True: 3.11k, False: 2.11k]
  ------------------
  632|  3.11k|        {
  633|  3.11k|            const Token& end_token = CurrentToken();
  634|       |
  635|  3.11k|            if (end_token.GetTokenKind() == TokenKind::OP_GreaterThan)
  ------------------
  |  Branch (635:17): [True: 194, False: 2.92k]
  ------------------
  636|    194|            {
  637|    194|                found_end        = true;
  638|    194|                continue_parsing = false;
  639|    194|                const phi::usize difference =
  640|    194|                        phi::narrow_cast<phi::usize>(end_token.GetText().data() - file_name.data());
  641|    194|                file_name.add_postfix(difference);
  642|    194|            }
  643|  2.92k|            else if (end_token.GetTokenKind() == TokenKind::NewLine)
  ------------------
  |  Branch (643:22): [True: 1.92k, False: 997]
  ------------------
  644|  1.92k|            {
  645|       |                // Stop once we hit a newline
  646|  1.92k|                continue_parsing = false;
  647|  1.92k|            }
  648|       |
  649|  3.11k|            ConsumeCurrent();
  650|  3.11k|        }
  651|       |
  652|  2.22k|        if (!found_end)
  ------------------
  |  Branch (652:13): [True: 2.02k, False: 194]
  ------------------
  653|  2.02k|        {
  654|  2.02k|            Diag().Error(DiagnosticId::Expected, PreviousToken().GetEndLocation(), "'>'")
  655|  2.02k|                    .Note(token.GetBeginLocation(), "to match this '<'");
  656|  2.02k|            return;
  657|  2.02k|        }
  658|  2.22k|    }
  659|  1.39k|    else
  660|  1.39k|    {
  661|  1.39k|        Diag().Error(DiagnosticId::Expected, token.GetEndLocation(), "\"Filename\" or <Filename>");
  662|  1.39k|        return;
  663|  1.39k|    }
  664|       |
  665|       |    // Limit include nesting
  666|    461|    if (m_ParsingContextStack.size() >= MaxNumberOfIncludeNesting)
  ------------------
  |  Branch (666:9): [True: 0, False: 461]
  ------------------
  667|      0|    {
  668|      0|        Diag().Error(DiagnosticId::IncludeNestingTooDeeply, token.GetBeginLocation());
  669|      0|        return;
  670|      0|    }
  671|       |
  672|       |    // Emit error for empty file names
  673|    461|    if (file_name.is_empty())
  ------------------
  |  Branch (673:9): [True: 194, False: 267]
  ------------------
  674|    194|    {
  675|    194|        Diag().Error(DiagnosticId::EmptyFilename, token.GetBeginLocation());
  676|    194|        return;
  677|    194|    }
  678|       |
  679|       |    // Emit error if the file name is too long
  680|    267|    if (file_name.length() > 255u)
  ------------------
  |  Branch (680:9): [True: 73, False: 194]
  ------------------
  681|     73|    {
  682|     73|        Diag().Error(DiagnosticId::FileNameTooLong, token.GetBeginLocation(),
  683|     73|                     std::string_view(file_name));
  684|     73|        return;
  685|     73|    }
  686|       |
  687|       |    // Load the file from the SourceManager
  688|    194|    phi::observer_ptr<const SourceFile> include_file =
  689|    194|            m_SourceManager->LoadFile(std::string_view(file_name), include_type);
  690|    194|    if (!include_file)
  ------------------
  |  Branch (690:9): [True: 194, False: 0]
  ------------------
  691|    194|    {
  692|    194|        Diag().Error(DiagnosticId::FileNotFound, token.GetBeginLocation(),
  693|    194|                     std::string_view(file_name));
  694|    194|        return;
  695|    194|    }
  696|       |
  697|      0|    RequireNewLine();
  698|       |
  699|       |    // Append the file
  700|      0|    AppendSourceFileToDocument(include_file.not_null(), token.GetBeginLocation());
  701|      0|}
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  704|  1.26M|{
  705|  1.26M|    ConsumeNewLineAndComments();
  706|       |
  707|  1.26M|    if (!HasMoreTokens())
  ------------------
  |  Branch (707:9): [True: 28, False: 1.26M]
  ------------------
  708|     28|    {
  709|       |        // TODO: Report proper error
  710|     28|        return {};
  711|     28|    }
  712|       |
  713|  1.26M|    phi::scope_ptr<ASTStatement> ret_statement;
  714|       |
  715|       |    // Loop until we parse something or there is nothing left to parse
  716|  1.26M|    const Token& token = CurrentToken();
  717|  1.26M|    switch (token.GetTokenKind())
  718|  1.26M|    {
  719|       |        // Variable assignment
  720|    548|        case TokenKind::KW_Const:
  ------------------
  |  Branch (720:9): [True: 548, False: 1.26M]
  ------------------
  721|  6.23k|        case TokenKind::KW_Local:
  ------------------
  |  Branch (721:9): [True: 5.68k, False: 1.26M]
  ------------------
  722|  6.62k|        case TokenKind::KW_Global:
  ------------------
  |  Branch (722:9): [True: 393, False: 1.26M]
  ------------------
  723|  7.02k|        case TokenKind::KW_Static:
  ------------------
  |  Branch (723:9): [True: 403, False: 1.26M]
  ------------------
  724|   263k|        case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (724:9): [True: 256k, False: 1.01M]
  ------------------
  725|   263k|            ret_statement = ParseVariableAssignment();
  726|   263k|            if (!ret_statement)
  ------------------
  |  Branch (726:17): [True: 8.35k, False: 255k]
  ------------------
  727|  8.35k|            {
  728|  8.35k|                err("ERR: Failed to parse variable assignment!\n");
  729|  8.35k|                return {};
  730|  8.35k|            }
  731|   255k|            break;
  732|   263k|        }
  733|       |
  734|       |        // If Statement
  735|   255k|        case TokenKind::KW_If: {
  ------------------
  |  Branch (735:9): [True: 44.3k, False: 1.22M]
  ------------------
  736|  44.3k|            ret_statement = ParseIfStatement();
  737|  44.3k|            if (!ret_statement)
  ------------------
  |  Branch (737:17): [True: 43.8k, False: 536]
  ------------------
  738|  43.8k|            {
  739|  43.8k|                err("ERR: Failed to parse if statement!\n");
  740|  43.8k|                return {};
  741|  43.8k|            }
  742|    536|            break;
  743|  44.3k|        }
  744|       |
  745|       |        // While statement
  746|  54.9k|        case TokenKind::KW_While: {
  ------------------
  |  Branch (746:9): [True: 54.9k, False: 1.21M]
  ------------------
  747|  54.9k|            ret_statement = ParseWhileStatement();
  748|  54.9k|            if (!ret_statement)
  ------------------
  |  Branch (748:17): [True: 54.3k, False: 533]
  ------------------
  749|  54.3k|            {
  750|  54.3k|                err("ERR: Failed to parse while statement!\n");
  751|  54.3k|                return {};
  752|  54.3k|            }
  753|    533|            break;
  754|  54.9k|        }
  755|       |
  756|       |        // Exit statement
  757|    812|        case TokenKind::KW_Exit: {
  ------------------
  |  Branch (757:9): [True: 812, False: 1.26M]
  ------------------
  758|    812|            ret_statement = ParseExitStatement();
  759|    812|            if (!ret_statement)
  ------------------
  |  Branch (759:17): [True: 0, False: 812]
  ------------------
  760|      0|            {
  761|      0|                err("ERR: Failed to parse exit statement!\n");
  762|      0|                return {};
  763|      0|            }
  764|    812|            break;
  765|    812|        }
  766|       |
  767|   906k|        default: {
  ------------------
  |  Branch (767:9): [True: 906k, False: 363k]
  ------------------
  768|       |            // Try to parse ExpressionStatement
  769|   906k|            ret_statement = ParseExpressionStatement();
  770|   906k|            if (!ret_statement)
  ------------------
  |  Branch (770:17): [True: 800k, False: 105k]
  ------------------
  771|   800k|            {
  772|   800k|                err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  773|   800k|                                enum_name(token.GetTokenKind())));
  774|   800k|                return {};
  775|   800k|            }
  776|   105k|            break;
  777|   906k|        }
  778|  1.26M|    }
  779|       |
  780|   362k|    return phi::move(ret_statement);
  781|  1.26M|}
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  784|  54.9k|{
  785|  54.9k|    const Token& token = CurrentToken();
  786|  54.9k|    if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (786:9): [True: 0, False: 54.9k]
  ------------------
  787|      0|    {
  788|       |        // TODO: Proper error
  789|      0|        return {};
  790|      0|    }
  791|  54.9k|    ConsumeCurrent();
  792|       |
  793|       |    // Next we MUST parse an Expression
  794|  54.9k|    auto while_condition_expression = ParseExpression();
  795|  54.9k|    if (!while_condition_expression)
  ------------------
  |  Branch (795:9): [True: 1.45k, False: 53.4k]
  ------------------
  796|  1.45k|    {
  797|       |        // TODO: Proper error
  798|  1.45k|        return {};
  799|  1.45k|    }
  800|       |
  801|  53.4k|    auto while_statement =
  802|  53.4k|            phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  803|       |
  804|       |    // Parse statements until KW_WEnd
  805|  98.6k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (805:12): [True: 98.3k, False: 315]
  |  Branch (805:12): [True: 97.7k, False: 848]
  |  Branch (805:31): [True: 97.7k, False: 533]
  ------------------
  806|  97.7k|    {
  807|  97.7k|        ConsumeNewLineAndComments();
  808|       |
  809|       |        // Parse statements
  810|  97.7k|        auto statement = ParseStatement();
  811|  97.7k|        if (!statement)
  ------------------
  |  Branch (811:13): [True: 52.5k, False: 45.1k]
  ------------------
  812|  52.5k|        {
  813|       |            // TODO: Propeer error
  814|  52.5k|            return {};
  815|  52.5k|        }
  816|       |
  817|  45.1k|        while_statement->m_Statements.emplace_back(statement.release_not_null());
  818|  45.1k|    }
  819|       |
  820|    848|    if (!HasMoreTokens())
  ------------------
  |  Branch (820:9): [True: 315, False: 533]
  ------------------
  821|    315|    {
  822|       |        // TODO: Proper error
  823|    315|        return {};
  824|    315|    }
  825|       |
  826|       |    // Next token MUST be KW_Wend
  827|    533|    const Token& wend_token = CurrentToken();
  828|    533|    if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (828:9): [True: 0, False: 533]
  ------------------
  829|      0|    {
  830|       |        // TODO: Proper error
  831|      0|        return {};
  832|      0|    }
  833|    533|    ConsumeCurrent();
  834|       |
  835|    533|    return phi::move(while_statement);
  836|    533|}
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  839|   263k|{
  840|   263k|    auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  841|       |
  842|   263k|    phi::boolean parsed_identifier = false;
  843|       |    // Parse all specifiers until we hit a VariableIdentifier
  844|   527k|    while (HasMoreTokens() && !parsed_identifier)
  ------------------
  |  Branch (844:12): [True: 526k, False: 1.06k]
  |  Branch (844:12): [True: 270k, False: 256k]
  |  Branch (844:31): [True: 270k, False: 255k]
  ------------------
  845|   270k|    {
  846|   270k|        const Token& current_token = CurrentToken();
  847|   270k|        ConsumeCurrent();
  848|       |
  849|   270k|        switch (current_token.GetTokenKind())
  850|   270k|        {
  851|    822|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (851:13): [True: 822, False: 270k]
  ------------------
  852|    822|                if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (852:21): [True: 274, False: 548]
  ------------------
  853|    274|                {
  854|       |                    // TODO: Error more than one const specifier
  855|    274|                    err("ERR: More than one const specifier given\n");
  856|    274|                    return {};
  857|    274|                }
  858|    548|                variable_declaration->m_IsConst = true;
  859|    548|                break;
  860|    822|            }
  861|       |
  862|    597|            case TokenKind::KW_Static: {
  ------------------
  |  Branch (862:13): [True: 597, False: 270k]
  ------------------
  863|    597|                if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (863:21): [True: 194, False: 403]
  ------------------
  864|    194|                {
  865|       |                    // TODO: Error more than one static specifier
  866|    194|                    err("ERR: More than one static specifier given\n");
  867|    194|                    return {};
  868|    194|                }
  869|    403|                variable_declaration->m_IsStatic = true;
  870|    403|                break;
  871|    597|            }
  872|       |
  873|    609|            case TokenKind::KW_Global: {
  ------------------
  |  Branch (873:13): [True: 609, False: 270k]
  ------------------
  874|    609|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (874:21): [True: 216, False: 393]
  ------------------
  875|    216|                {
  876|       |                    // TODO: Error more than one scope specifier
  877|    216|                    err("ERR: More than one scope specifier given\n");
  878|    216|                    return {};
  879|    216|                }
  880|    393|                variable_declaration->m_Scope = VariableScope::Global;
  881|    393|                break;
  882|    609|            }
  883|       |
  884|  9.21k|            case TokenKind::KW_Local: {
  ------------------
  |  Branch (884:13): [True: 9.21k, False: 261k]
  ------------------
  885|  9.21k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (885:21): [True: 3.52k, False: 5.68k]
  ------------------
  886|  3.52k|                {
  887|       |                    // TODO: Error more than one scope specifier
  888|  3.52k|                    err("ERR: More than one scope specifier given\n");
  889|  3.52k|                    return {};
  890|  3.52k|                }
  891|  5.68k|                variable_declaration->m_Scope = VariableScope::Local;
  892|  5.68k|                break;
  893|  9.21k|            }
  894|       |
  895|   256k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (895:13): [True: 256k, False: 13.9k]
  ------------------
  896|       |                // VariableIdentifiers begin with a '$'
  897|       |                // Like: $MyVariable
  898|       |                // So for the name we ignore the very first character
  899|   256k|                PHI_ASSERT(current_token.GetText().length() > 1u);
  900|   256k|                variable_declaration->m_VariableName = current_token.GetText().substring_view(1u);
  901|       |
  902|   256k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  903|   256k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  904|       |
  905|   256k|                parsed_identifier = true;
  906|   256k|                break;
  907|  9.21k|            }
  908|       |
  909|  2.68k|            default: {
  ------------------
  |  Branch (909:13): [True: 2.68k, False: 268k]
  ------------------
  910|       |                // TODO: Error unexpected token
  911|  2.68k|                return {};
  912|  9.21k|            }
  913|   270k|        }
  914|   270k|    }
  915|       |
  916|   256k|    if (!parsed_identifier)
  ------------------
  |  Branch (916:9): [True: 31, False: 256k]
  ------------------
  917|     31|    {
  918|       |        // TODO: Error variable declaration ends before the VariableIdentifier
  919|     31|        err("ERR: Missing variable identifier!\n");
  920|     31|        return {};
  921|     31|    }
  922|       |
  923|       |    // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  924|   256k|    if (!HasMoreTokens())
  ------------------
  |  Branch (924:9): [True: 1.03k, False: 255k]
  ------------------
  925|  1.03k|    {
  926|  1.03k|        return variable_declaration;
  927|  1.03k|    }
  928|       |
  929|       |    // Check for equals
  930|   255k|    const Token& next_token = CurrentToken();
  931|       |
  932|   255k|    if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (932:9): [True: 10.8k, False: 245k]
  ------------------
  933|  10.8k|    {
  934|  10.8k|        ConsumeCurrent();
  935|       |
  936|       |        // Now me MUST parse an expression
  937|  10.8k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
  938|  10.8k|        if (!expression)
  ------------------
  |  Branch (938:13): [True: 1.42k, False: 9.42k]
  ------------------
  939|  1.42k|        {
  940|       |            // TODO: Error failed to parse a valid expression
  941|  1.42k|            err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  942|  1.42k|            return {};
  943|  1.42k|        }
  944|       |
  945|  9.42k|        variable_declaration->m_InitialValueExpression = phi::move(expression);
  946|  9.42k|    }
  947|       |
  948|   254k|    return variable_declaration;
  949|   255k|}
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  952|   906k|{
  953|   906k|    auto expression = ParseExpression();
  954|   906k|    if (!expression)
  ------------------
  |  Branch (954:9): [True: 569k, False: 336k]
  ------------------
  955|   569k|    {
  956|   569k|        return {};
  957|   569k|    }
  958|       |
  959|   336k|    auto expression_statement =
  960|   336k|            phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  961|       |
  962|   336k|    if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (962:9): [True: 231k, False: 105k]
  ------------------
  963|   231k|    {
  964|   231k|        err(fmt::format("Expression {:s} is not valid as an statement\n",
  965|   231k|                        expression_statement->m_Expression->Name()));
  966|   231k|        return {};
  967|   231k|    }
  968|       |
  969|   105k|    return phi::move(expression_statement);
  970|   336k|}
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  973|  44.3k|{
  974|  44.3k|    if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (974:9): [True: 0, False: 44.3k]
  ------------------
  975|      0|    {
  976|      0|        return {};
  977|      0|    }
  978|       |
  979|       |    // Next me MUST parse an expression
  980|  44.3k|    auto if_condition = ParseExpression();
  981|  44.3k|    if (!if_condition)
  ------------------
  |  Branch (981:9): [True: 1.43k, False: 42.9k]
  ------------------
  982|  1.43k|    {
  983|  1.43k|        err("ERR: failed to parse expression!\n");
  984|       |
  985|  1.43k|        return {};
  986|  1.43k|    }
  987|       |
  988|       |    // Next we MUST parse Then
  989|  42.9k|    if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (989:9): [True: 11.6k, False: 31.2k]
  ------------------
  990|  11.6k|    {
  991|  11.6k|        err("ERR: Missing then!\n");
  992|       |
  993|  11.6k|        return {};
  994|  11.6k|    }
  995|       |
  996|  31.2k|    ConsumeNewLineAndComments();
  997|       |
  998|  31.2k|    IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  999|       |
 1000|       |    // Next parse statements until we hit and EndIf, ElseIf or Else
 1001|  35.2k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1001:12): [True: 35.1k, False: 111]
  |  Branch (1001:12): [True: 19.6k, False: 15.6k]
  |  Branch (1001:31): [True: 34.8k, False: 342]
  ------------------
 1002|  35.2k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1002:12): [True: 29.4k, False: 5.37k]
  ------------------
 1003|  35.2k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1003:12): [True: 19.6k, False: 9.82k]
  ------------------
 1004|  19.6k|    {
 1005|  19.6k|        auto statement = ParseStatement();
 1006|  19.6k|        if (!statement)
  ------------------
  |  Branch (1006:13): [True: 15.6k, False: 3.98k]
  ------------------
 1007|  15.6k|        {
 1008|  15.6k|            err("ERR: Failed to parse statement inside of IF\n");
 1009|  15.6k|            return {};
 1010|  15.6k|        }
 1011|       |
 1012|  3.98k|        if_case.body.emplace_back(statement.release_not_null());
 1013|       |
 1014|  3.98k|        ConsumeNewLineAndComments();
 1015|  3.98k|    }
 1016|       |
 1017|  15.6k|    auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
 1018|       |
 1019|       |    // Handle all ElseIf cases which are optional
 1020|  25.9k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1020:12): [True: 25.4k, False: 483]
  |  Branch (1020:12): [True: 11.4k, False: 14.5k]
  |  Branch (1020:31): [True: 11.4k, False: 14.0k]
  ------------------
 1021|  11.4k|    {
 1022|       |        // Consume KW_ElseIf token
 1023|  11.4k|        ConsumeCurrent();
 1024|       |
 1025|       |        // Parse the condition
 1026|  11.4k|        auto else_if_condition = ParseExpression();
 1027|  11.4k|        if (!else_if_condition)
  ------------------
  |  Branch (1027:13): [True: 1.12k, False: 10.3k]
  ------------------
 1028|  1.12k|        {
 1029|  1.12k|            return {};
 1030|  1.12k|        }
 1031|       |
 1032|       |        // Parse KW_Then
 1033|  10.3k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (1033:13): [True: 9.83k, False: 483]
  ------------------
 1034|  9.83k|        {
 1035|       |            // TODO: Better error message and this error should be recoverable
 1036|  9.83k|            err("ERR: Missing then!\n");
 1037|  9.83k|        }
 1038|       |
 1039|  10.3k|        ConsumeNewLineAndComments();
 1040|       |
 1041|  10.3k|        IfCase else_if_case{.condition{else_if_condition.release_not_null()},
 1042|  10.3k|                            .body{ParseIfCaseStatements()}};
 1043|       |
 1044|       |        // Append our case to the if statement
 1045|  10.3k|        if_statement->m_ElseIfCases.emplace_back(phi::move(else_if_case));
 1046|  10.3k|    }
 1047|       |
 1048|       |    // Handle optional else case
 1049|  14.5k|    if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_Else)
  ------------------
  |  Branch (1049:9): [True: 14.0k, False: 483]
  |  Branch (1049:9): [True: 10.3k, False: 4.18k]
  |  Branch (1049:28): [True: 10.3k, False: 3.70k]
  ------------------
 1050|  10.3k|    {
 1051|       |        // Consume KW_Else token
 1052|  10.3k|        ConsumeCurrent();
 1053|       |
 1054|  10.3k|        ConsumeNewLineAndComments();
 1055|       |
 1056|  10.3k|        if_statement->m_ElseCase = ParseIfCaseStatements();
 1057|  10.3k|    }
 1058|       |
 1059|  14.5k|    if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (1059:9): [True: 13.9k, False: 536]
  ------------------
 1060|  13.9k|    {
 1061|  13.9k|        err("ERR: Missing EndIf!\n");
 1062|       |        // TODO: Proper Error
 1063|  13.9k|        return {};
 1064|  13.9k|    }
 1065|       |
 1066|    536|    return phi::move(if_statement);
 1067|  14.5k|}
_ZN10OpenAutoIt6Parser21ParseIfCaseStatementsEv:
 1070|  20.6k|{
 1071|  20.6k|    std::vector<phi::not_null_scope_ptr<ASTStatement>> statements;
 1072|       |
 1073|       |    // Parse statements until KW_EndIf, KW_Else, KW_ElseIf
 1074|  22.7k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1074:12): [True: 22.5k, False: 174]
  |  Branch (1074:12): [True: 15.4k, False: 7.31k]
  |  Branch (1074:31): [True: 22.3k, False: 194]
  ------------------
 1075|  22.7k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1075:12): [True: 16.9k, False: 5.41k]
  ------------------
 1076|  22.7k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1076:12): [True: 15.4k, False: 1.53k]
  ------------------
 1077|  15.4k|    {
 1078|  15.4k|        auto statement = ParseStatement();
 1079|  15.4k|        if (!statement)
  ------------------
  |  Branch (1079:13): [True: 13.3k, False: 2.10k]
  ------------------
 1080|  13.3k|        {
 1081|  13.3k|            err("ERR: Failed to parse statement inside of IF\n");
 1082|  13.3k|            return {};
 1083|  13.3k|        }
 1084|       |
 1085|  2.10k|        statements.emplace_back(statement.release_not_null());
 1086|       |
 1087|  2.10k|        ConsumeNewLineAndComments();
 1088|  2.10k|    }
 1089|       |
 1090|  7.31k|    return statements;
 1091|  20.6k|}
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
 1094|   420k|{
 1095|   420k|    const Token& token = CurrentToken();
 1096|   420k|    if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1096:9): [True: 0, False: 420k]
  ------------------
 1097|      0|    {
 1098|      0|        return {};
 1099|      0|    }
 1100|       |
 1101|   420k|    phi::int64_t value{0};
 1102|   420k|    phi::boolean parsing_hex{false};
 1103|   891k|    for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (1103:32): [True: 473k, False: 418k]
  ------------------
 1104|   473k|    {
 1105|   473k|        const char character = token.GetText().at(index);
 1106|       |
 1107|       |        // Checking the second character
 1108|   473k|        if (index == 1u)
  ------------------
  |  Branch (1108:13): [True: 9.51k, False: 463k]
  ------------------
 1109|  9.51k|        {
 1110|  9.51k|            if (character == 'x' || character == 'X')
  ------------------
  |  Branch (1110:17): [True: 314, False: 9.19k]
  |  Branch (1110:37): [True: 2.11k, False: 7.08k]
  ------------------
 1111|  2.43k|            {
 1112|  2.43k|                parsing_hex = true;
 1113|  2.43k|                continue;
 1114|  2.43k|            }
 1115|  9.51k|        }
 1116|       |
 1117|   470k|        if (parsing_hex)
  ------------------
  |  Branch (1117:13): [True: 14.1k, False: 456k]
  ------------------
 1118|  14.1k|        {
 1119|  14.1k|            PHI_ASSERT(phi::is_hex_digit(character));
 1120|       |
 1121|  14.1k|            if (phi::detail::will_multiplication_error(phi::detail::unsigned_integer_tag{}, value,
  ------------------
  |  Branch (1121:17): [True: 596, False: 13.5k]
  ------------------
 1122|  14.1k|                                                       phi::int64_t(16)) ||
 1123|  14.1k|                phi::detail::will_addition_error(phi::detail::unsigned_integer_tag{}, value * 16,
  ------------------
  |  Branch (1123:17): [True: 194, False: 13.3k]
  ------------------
 1124|  13.5k|                                                 phi::int64_t(character - '0')))
 1125|    790|            {
 1126|    790|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1127|    790|                ConsumeCurrent();
 1128|    790|                return {};
 1129|    790|            }
 1130|       |
 1131|  13.3k|            value <<= 4;
 1132|  13.3k|            value |= phi::hex_digit_value(character).unsafe();
 1133|  13.3k|        }
 1134|   456k|        else
 1135|   456k|        {
 1136|   456k|            PHI_ASSERT(character >= '0' && character <= '9');
 1137|       |
 1138|   456k|            if (phi::detail::will_multiplication_error(phi::detail::signed_integer_tag{}, value,
  ------------------
  |  Branch (1138:17): [True: 480, False: 455k]
  ------------------
 1139|   456k|                                                       phi::int64_t(10)) ||
 1140|   456k|                phi::detail::will_addition_error(phi::detail::signed_integer_tag{}, value * 10,
  ------------------
  |  Branch (1140:17): [True: 589, False: 455k]
  ------------------
 1141|   455k|                                                 phi::int64_t(character - '0')))
 1142|  1.06k|            {
 1143|  1.06k|                Diag().Error(DiagnosticId::IntegerLiteralTooLarge, token.GetBeginLocation());
 1144|  1.06k|                ConsumeCurrent();
 1145|  1.06k|                return {};
 1146|  1.06k|            }
 1147|       |
 1148|   455k|            value *= 10;
 1149|   455k|            value += (character - '0');
 1150|   455k|        }
 1151|   470k|    }
 1152|       |
 1153|   418k|    ConsumeCurrent();
 1154|   418k|    return phi::make_scope<ASTIntegerLiteral>(value);
 1155|   420k|}
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
 1158|  72.6k|{
 1159|  72.6k|    const Token& token = CurrentToken();
 1160|  72.6k|    if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (1160:9): [True: 0, False: 72.6k]
  ------------------
 1161|      0|    {
 1162|      0|        return {};
 1163|      0|    }
 1164|  72.6k|    ConsumeCurrent();
 1165|       |
 1166|  72.6k|    auto string_literal = phi::make_scope<ASTStringLiteral>();
 1167|       |
 1168|  72.6k|    const phi::usize length = token.GetText().length();
 1169|       |    // Trim the trailing and leading "
 1170|  72.6k|    string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
 1171|       |
 1172|  72.6k|    return phi::move(string_literal);
 1173|  72.6k|}
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
 1176|  2.44M|{
 1177|  2.44M|    phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
 1178|  2.44M|    if (!lhs_expression)
  ------------------
  |  Branch (1178:9): [True: 1.33M, False: 1.11M]
  ------------------
 1179|  1.33M|    {
 1180|  1.33M|        return {};
 1181|  1.33M|    }
 1182|       |
 1183|  1.11M|    return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
 1184|  2.44M|}
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
 1187|  2.80M|{
 1188|  2.80M|    if (!HasMoreTokens())
  ------------------
  |  Branch (1188:9): [True: 1.37k, False: 2.80M]
  ------------------
 1189|  1.37k|    {
 1190|       |        // TODO: Proper error
 1191|  1.37k|        return {};
 1192|  1.37k|    }
 1193|       |
 1194|  2.80M|    const Token& token = CurrentToken();
 1195|  2.80M|    if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (1195:9): [True: 310k, False: 2.49M]
  ------------------
 1196|   310k|    {
 1197|   310k|        const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
 1198|   310k|        PHI_UNUSED_VARIABLE(op_precedence);
 1199|   310k|        ConsumeCurrent();
 1200|       |
 1201|   310k|        phi::scope_ptr<ASTExpression> unary_expression = ParseUnaryExpression(token.GetTokenKind());
 1202|   310k|        if (!unary_expression)
  ------------------
  |  Branch (1202:13): [True: 57.3k, False: 252k]
  ------------------
 1203|  57.3k|        {
 1204|       |            // TODO: Proper error
 1205|  57.3k|            return {};
 1206|  57.3k|        }
 1207|       |
 1208|   252k|        return phi::move(unary_expression);
 1209|   310k|    }
 1210|  2.49M|    if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (1210:9): [True: 108k, False: 2.38M]
  ------------------
 1211|   108k|    {
 1212|       |        // Consume the LParen
 1213|   108k|        ConsumeCurrent();
 1214|       |
 1215|   108k|        phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
 1216|   108k|        if (!paren_expression)
  ------------------
  |  Branch (1216:13): [True: 97.3k, False: 10.8k]
  ------------------
 1217|  97.3k|        {
 1218|       |            // TODO: Proper error
 1219|  97.3k|            return {};
 1220|  97.3k|        }
 1221|       |
 1222|  10.8k|        return phi::move(paren_expression);
 1223|   108k|    }
 1224|  2.38M|    if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1224:9): [True: 420k, False: 1.96M]
  ------------------
 1225|   420k|    {
 1226|   420k|        phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
 1227|   420k|        if (!int_literal)
  ------------------
  |  Branch (1227:13): [True: 1.85k, False: 418k]
  ------------------
 1228|  1.85k|        {
 1229|       |            // TODO: Error failed to parse integer literal
 1230|  1.85k|            return {};
 1231|  1.85k|        }
 1232|       |
 1233|   418k|        return phi::move(int_literal);
 1234|   420k|    }
 1235|  1.96M|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (1235:9): [True: 72.6k, False: 1.89M]
  ------------------
 1236|  72.6k|    {
 1237|  72.6k|        auto string_literal_expression = ParseStringLiteral();
 1238|  72.6k|        if (!string_literal_expression)
  ------------------
  |  Branch (1238:13): [True: 0, False: 72.6k]
  ------------------
 1239|      0|        {
 1240|       |            // TODO: Proper error
 1241|      0|            return {};
 1242|      0|        }
 1243|       |
 1244|  72.6k|        return phi::move(string_literal_expression);
 1245|  72.6k|    }
 1246|       |
 1247|       |    // Boolean literal
 1248|  1.89M|    if (token.GetTokenKind() == TokenKind::KW_True || token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1248:9): [True: 17.2k, False: 1.87M]
  |  Branch (1248:55): [True: 201, False: 1.87M]
  ------------------
 1249|  17.4k|    {
 1250|  17.4k|        auto boolean_literal = ParseBooleanLiteral();
 1251|  17.4k|        if (!boolean_literal)
  ------------------
  |  Branch (1251:13): [True: 0, False: 17.4k]
  ------------------
 1252|      0|        {
 1253|       |            // TODO: Proper error
 1254|      0|            return {};
 1255|      0|        }
 1256|       |
 1257|  17.4k|        return phi::move(boolean_literal);
 1258|  17.4k|    }
 1259|       |
 1260|       |    // Function call/reference expression
 1261|  1.87M|    if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (1261:9): [True: 443k, False: 1.43M]
  |  Branch (1261:9): [True: 447k, False: 1.42M]
  |  Branch (1261:66): [True: 3.92k, False: 1.42M]
  ------------------
 1262|   447k|    {
 1263|   447k|        auto function_expression = ParseFunctionExpression();
 1264|   447k|        if (!function_expression)
  ------------------
  |  Branch (1264:13): [True: 79.3k, False: 367k]
  ------------------
 1265|  79.3k|        {
 1266|       |            // TODO: Proper error
 1267|  79.3k|            err("ERR: Failed to parse function expression!\n");
 1268|  79.3k|            return {};
 1269|  79.3k|        }
 1270|       |
 1271|   367k|        return phi::move(function_expression);
 1272|   447k|    }
 1273|       |    // Variable expression
 1274|  1.42M|    if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1274:9): [True: 102k, False: 1.32M]
  ------------------
 1275|   102k|    {
 1276|   102k|        auto variable_expression = ParseVariableExpression();
 1277|   102k|        if (!variable_expression)
  ------------------
  |  Branch (1277:13): [True: 0, False: 102k]
  ------------------
 1278|      0|        {
 1279|       |            // TODO: Proper error
 1280|      0|            err("ERR: Failed to parse Variable expression\n");
 1281|      0|            return {};
 1282|      0|        }
 1283|       |
 1284|   102k|        return phi::move(variable_expression);
 1285|   102k|    }
 1286|       |    // Keyword literal
 1287|  1.32M|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1287:9): [True: 546, False: 1.32M]
  ------------------
 1288|    546|    {
 1289|    546|        auto keyword_literal = ParseKeywordLiteral();
 1290|    546|        if (!keyword_literal)
  ------------------
  |  Branch (1290:13): [True: 0, False: 546]
  ------------------
 1291|      0|        {
 1292|       |            // TODO: Proper error
 1293|      0|            err("ERR: Failed to parse keyword literal expression!\n");
 1294|      0|            return {};
 1295|      0|        }
 1296|       |
 1297|    546|        return phi::move(keyword_literal);
 1298|    546|    }
 1299|       |    // Float literal
 1300|  1.32M|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1300:9): [True: 2.74k, False: 1.32M]
  ------------------
 1301|  2.74k|    {
 1302|  2.74k|        auto float_literal = ParseFloatLiteral();
 1303|  2.74k|        if (!float_literal)
  ------------------
  |  Branch (1303:13): [True: 0, False: 2.74k]
  ------------------
 1304|      0|        {
 1305|       |            // TODO: Proper error
 1306|      0|            err("ERR: Failed to parse float literal expression!\n");
 1307|      0|            return {};
 1308|      0|        }
 1309|       |
 1310|  2.74k|        return phi::move(float_literal);
 1311|  2.74k|    }
 1312|       |    // ArraySubscript expression
 1313|  1.32M|    if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (1313:9): [True: 769k, False: 553k]
  ------------------
 1314|   769k|    {
 1315|   769k|        auto subscript_expression = ParseArraySubscriptExpression();
 1316|   769k|        if (!subscript_expression)
  ------------------
  |  Branch (1316:13): [True: 665k, False: 103k]
  ------------------
 1317|   665k|        {
 1318|   665k|            err("ERR: Failed to parse array subscript expression\n");
 1319|   665k|            return {};
 1320|   665k|        }
 1321|       |
 1322|   103k|        return phi::move(subscript_expression);
 1323|   769k|    }
 1324|   553k|    if (token.IsMacro())
  ------------------
  |  Branch (1324:9): [True: 10.9k, False: 542k]
  ------------------
 1325|  10.9k|    {
 1326|  10.9k|        ConsumeCurrent();
 1327|       |
 1328|  10.9k|        phi::scope_ptr<ASTExpression> macro_expression = ParseMacroExpression(token.GetTokenKind());
 1329|  10.9k|        if (!macro_expression)
  ------------------
  |  Branch (1329:13): [True: 0, False: 10.9k]
  ------------------
 1330|      0|        {
 1331|       |            // TODO: Proper error
 1332|      0|            return {};
 1333|      0|        }
 1334|       |
 1335|  10.9k|        return macro_expression;
 1336|  10.9k|    }
 1337|       |
 1338|       |    // TODO: Error Unexpected token
 1339|   542k|    err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
 1340|   542k|                    enum_name(token.GetTokenKind())));
 1341|   542k|    return {};
 1342|   553k|}
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
 1346|  1.14M|{
 1347|  1.38M|    while (true)
  ------------------
  |  Branch (1347:12): [Folded - Ignored]
  ------------------
 1348|  1.38M|    {
 1349|  1.38M|        if (!HasMoreTokens())
  ------------------
  |  Branch (1349:13): [True: 7.19k, False: 1.37M]
  ------------------
 1350|  7.19k|        {
 1351|  7.19k|            return phi::move(lhs);
 1352|  7.19k|        }
 1353|       |
 1354|  1.37M|        const Token& operator_token = CurrentToken();
 1355|  1.37M|        if (!IsBinaryOperator(operator_token.GetTokenKind()) &&
  ------------------
  |  Branch (1355:13): [True: 1.00M, False: 365k]
  |  Branch (1355:13): [True: 983k, False: 392k]
  ------------------
 1356|  1.37M|            operator_token.GetTokenKind() != TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1356:13): [True: 983k, False: 26.7k]
  ------------------
 1357|   983k|        {
 1358|       |            // If its not a binary operator and not a ternary just return the lhs expression
 1359|   983k|            return phi::move(lhs);
 1360|   983k|        }
 1361|   392k|        int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
 1362|   392k|        ConsumeCurrent();
 1363|       |
 1364|   392k|        if (token_precedence < precedence)
  ------------------
  |  Branch (1364:13): [True: 5.13k, False: 387k]
  ------------------
 1365|  5.13k|        {
 1366|  5.13k|            return phi::move(lhs);
 1367|  5.13k|        }
 1368|       |
 1369|   387k|        if (operator_token.GetTokenKind() == TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1369:13): [True: 26.4k, False: 361k]
  ------------------
 1370|  26.4k|        {
 1371|  26.4k|            phi::scope_ptr<ASTTernaryIfExpression> ternary_if_expression =
 1372|  26.4k|                    ParseTernaryIfExpression(phi::move(lhs));
 1373|  26.4k|            if (!ternary_if_expression)
  ------------------
  |  Branch (1373:17): [True: 11.7k, False: 14.7k]
  ------------------
 1374|  11.7k|            {
 1375|       |                // TODO: Proper error
 1376|  11.7k|                return {};
 1377|  11.7k|            }
 1378|       |
 1379|  14.7k|            return phi::move(ternary_if_expression);
 1380|  26.4k|        }
 1381|       |
 1382|       |        // This must be an binary expression
 1383|   361k|        phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
 1384|   361k|        if (!rhs_expression)
  ------------------
  |  Branch (1384:13): [True: 114k, False: 246k]
  ------------------
 1385|   114k|        {
 1386|       |            // TODO: Proper error
 1387|   114k|            return {};
 1388|   114k|        }
 1389|       |
 1390|       |        // Nothing left to parse so directly return from here
 1391|   246k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1391:13): [True: 1.17k, False: 245k]
  ------------------
 1392|  1.17k|        {
 1393|  1.17k|            return phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1394|  1.17k|                                                                 operator_token.GetTokenKind(),
 1395|  1.17k|                                                                 rhs_expression.release_not_null());
 1396|  1.17k|        }
 1397|       |
 1398|       |        // If BinOp binds less tightly with RHS than the operator after RHS, let
 1399|       |        // the pending operator take RHS as its LHS.
 1400|   245k|        const Token& next_token      = CurrentToken();
 1401|   245k|        int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1402|       |
 1403|   245k|        if (token_precedence < next_precedence)
  ------------------
  |  Branch (1403:13): [True: 34.8k, False: 210k]
  ------------------
 1404|  34.8k|        {
 1405|  34.8k|            rhs_expression =
 1406|  34.8k|                    ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1407|  34.8k|            if (!rhs_expression)
  ------------------
  |  Branch (1407:17): [True: 12.0k, False: 22.7k]
  ------------------
 1408|  12.0k|            {
 1409|       |                // TODO: Proper error
 1410|  12.0k|                return {};
 1411|  12.0k|            }
 1412|  34.8k|        }
 1413|       |
 1414|       |        // Merge LHS/RHS.
 1415|   233k|        lhs = phi::make_not_null_scope<ASTBinaryExpression>(
 1416|   233k|                phi::move(lhs), operator_token.GetTokenKind(), rhs_expression.release_not_null());
 1417|   233k|    }
 1418|  1.14M|}
_ZN10OpenAutoIt6Parser23ParseFunctionExpressionEv:
 1421|   447k|{
 1422|       |    // Parse the function name
 1423|   447k|    const Token& function_identifier_token = CurrentToken();
 1424|   447k|    if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1424:9): [True: 3.92k, False: 443k]
  |  Branch (1424:9): [True: 0, False: 447k]
  ------------------
 1425|   447k|        !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1425:9): [True: 0, False: 3.92k]
  ------------------
 1426|      0|    {
 1427|      0|        return {};
 1428|      0|    }
 1429|   447k|    ConsumeCurrent();
 1430|       |
 1431|   447k|    const FunctionReference function_reference =
 1432|   447k|            function_identifier_token.IsBuiltInFunction() ?
  ------------------
  |  Branch (1432:13): [True: 3.92k, False: 443k]
  ------------------
 1433|  3.92k|                    FunctionReference{function_identifier_token} :
 1434|   447k|                    FunctionReference{function_identifier_token.GetText()};
 1435|       |
 1436|       |    // If we parse an opening parenthesis we have a function call expression otherwise just a function reference
 1437|   447k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (1437:9): [True: 310k, False: 137k]
  ------------------
 1438|   310k|    {
 1439|   310k|        return phi::make_scope<ASTFunctionReferenceExpression>(function_reference);
 1440|   310k|    }
 1441|       |
 1442|   137k|    phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1443|   137k|            phi::make_scope<ASTFunctionCallExpression>(function_reference);
 1444|   137k|    if (!function_call_expression)
  ------------------
  |  Branch (1444:9): [True: 0, False: 137k]
  ------------------
 1445|      0|    {
 1446|       |        // TODO: Proper error
 1447|      0|        return {};
 1448|      0|    }
 1449|       |
 1450|       |    // Now parse all the arguments (which are expressions) separated by commas or nothing
 1451|   137k|    function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1452|       |
 1453|       |    // Finally we MUST parse an RParen
 1454|   137k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1454:9): [True: 79.3k, False: 57.6k]
  ------------------
 1455|  79.3k|    {
 1456|  79.3k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1457|  79.3k|                        std::string_view{function_call_expression->FunctionName()}));
 1458|       |        // TODO: Give proper error
 1459|  79.3k|        return {};
 1460|  79.3k|    }
 1461|       |
 1462|       |    // Return result
 1463|  57.6k|    return function_call_expression;
 1464|   137k|}
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1467|   137k|{
 1468|   137k|    std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1469|       |
 1470|   204k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1470:12): [True: 203k, False: 962]
  |  Branch (1470:12): [True: 154k, False: 50.2k]
  |  Branch (1470:31): [True: 154k, False: 49.2k]
  ------------------
 1471|   154k|    {
 1472|       |        // Parse the expression
 1473|   154k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1474|   154k|        if (!expression)
  ------------------
  |  Branch (1474:13): [True: 86.7k, False: 67.8k]
  ------------------
 1475|  86.7k|        {
 1476|  86.7k|            arguments.clear();
 1477|  86.7k|            return arguments;
 1478|  86.7k|        }
 1479|       |
 1480|       |        // Add argument to parameters
 1481|  67.8k|        arguments.emplace_back(expression.release_not_null());
 1482|       |
 1483|       |        // Next Token MUST be a comma followed by another expression or RParen
 1484|  67.8k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1484:13): [True: 67.1k, False: 680]
  |  Branch (1484:13): [True: 401, False: 67.4k]
  |  Branch (1484:32): [True: 401, False: 66.7k]
  ------------------
 1485|    401|        {
 1486|    401|            ConsumeCurrent();
 1487|    401|        }
 1488|  67.8k|    }
 1489|       |
 1490|  50.2k|    return arguments;
 1491|   137k|}
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1494|   102k|{
 1495|   102k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1495:9): [True: 0, False: 102k]
  ------------------
 1496|      0|    {
 1497|       |        // TODO: Proper error
 1498|      0|        return {};
 1499|      0|    }
 1500|       |
 1501|   102k|    const Token& token = CurrentToken();
 1502|   102k|    if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1502:9): [True: 0, False: 102k]
  ------------------
 1503|      0|    {
 1504|       |        // TODO error
 1505|      0|        return {};
 1506|      0|    }
 1507|       |
 1508|   102k|    auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1509|   102k|    variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1510|       |
 1511|   102k|    ConsumeCurrent();
 1512|       |
 1513|   102k|    return phi::move(variable_expression);
 1514|   102k|}
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1520|   769k|{
 1521|   769k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1521:9): [True: 0, False: 769k]
  ------------------
 1522|      0|    {
 1523|      0|        return {};
 1524|      0|    }
 1525|       |
 1526|   769k|    if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1526:9): [True: 0, False: 769k]
  ------------------
 1527|      0|    {
 1528|      0|        return {};
 1529|      0|    }
 1530|       |
 1531|   769k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1532|   769k|    if (!expression)
  ------------------
  |  Branch (1532:9): [True: 636k, False: 132k]
  ------------------
 1533|   636k|    {
 1534|   636k|        return {};
 1535|   636k|    }
 1536|       |
 1537|   132k|    if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1537:9): [True: 29.0k, False: 103k]
  ------------------
 1538|  29.0k|    {
 1539|  29.0k|        return {};
 1540|  29.0k|    }
 1541|       |
 1542|   103k|    return phi::make_scope<ASTArraySubscriptExpression>(phi::move(expression.release_not_null()));
 1543|   132k|}
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1548|   108k|{
 1549|       |    // NOTE: Me MUST have consumed the LParen before this
 1550|       |
 1551|   108k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1552|   108k|    if (!expression)
  ------------------
  |  Branch (1552:9): [True: 78.4k, False: 29.7k]
  ------------------
 1553|  78.4k|    {
 1554|       |        // TODO: Proper error
 1555|  78.4k|        return {};
 1556|  78.4k|    }
 1557|       |
 1558|  29.7k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1558:9): [True: 18.8k, False: 10.8k]
  ------------------
 1559|  18.8k|    {
 1560|       |        // TODO: Proper error expected closing paren
 1561|  18.8k|        return {};
 1562|  18.8k|    }
 1563|       |
 1564|  10.8k|    return phi::move(expression);
 1565|  29.7k|}
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1568|    812|{
 1569|    812|    if (!HasMoreTokens())
  ------------------
  |  Branch (1569:9): [True: 0, False: 812]
  ------------------
 1570|      0|    {
 1571|      0|        return {};
 1572|      0|    }
 1573|       |
 1574|    812|    if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1574:9): [True: 0, False: 812]
  ------------------
 1575|      0|    {
 1576|      0|        return {};
 1577|      0|    }
 1578|       |
 1579|       |    // Parse optional expression
 1580|    812|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1581|       |
 1582|    812|    return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1583|    812|}
_ZN10OpenAutoIt6Parser20ParseUnaryExpressionENS_9TokenKindE:
 1586|   310k|{
 1587|   310k|    PHI_ASSERT(IsUnaryOperator(operator_kind));
 1588|       |
 1589|   310k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1589:9): [True: 225, False: 309k]
  ------------------
 1590|    225|    {
 1591|    225|        return {};
 1592|    225|    }
 1593|       |
 1594|       |    // Parse expression
 1595|   309k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1596|   309k|    if (!expression)
  ------------------
  |  Branch (1596:9): [True: 57.0k, False: 252k]
  ------------------
 1597|  57.0k|    {
 1598|       |        // TODO: Proper error
 1599|  57.0k|        return {};
 1600|  57.0k|    }
 1601|       |
 1602|   252k|    return phi::make_scope<ASTUnaryExpression>(operator_kind,
 1603|   252k|                                               phi::move(expression.release_not_null()));
 1604|   309k|}
_ZN10OpenAutoIt6Parser24ParseTernaryIfExpressionEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
 1608|  26.4k|{
 1609|  26.4k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1609:9): [True: 11, False: 26.4k]
  ------------------
 1610|     11|    {
 1611|     11|        return {};
 1612|     11|    }
 1613|       |
 1614|  26.4k|    phi::scope_ptr<ASTExpression> true_expression = ParseExpression();
 1615|  26.4k|    if (!true_expression)
  ------------------
  |  Branch (1615:9): [True: 3.79k, False: 22.6k]
  ------------------
 1616|  3.79k|    {
 1617|  3.79k|        return {};
 1618|  3.79k|    }
 1619|       |
 1620|       |    // Must parse the else part ":"
 1621|  22.6k|    if (!MustParse(TokenKind::OP_TernaryElse))
  ------------------
  |  Branch (1621:9): [True: 7.66k, False: 14.9k]
  ------------------
 1622|  7.66k|    {
 1623|  7.66k|        err("Missing ':' for ternary if\n");
 1624|  7.66k|        return {};
 1625|  7.66k|    }
 1626|       |
 1627|  14.9k|    phi::scope_ptr<ASTExpression> false_expression = ParseExpression();
 1628|  14.9k|    if (!false_expression)
  ------------------
  |  Branch (1628:9): [True: 241, False: 14.7k]
  ------------------
 1629|    241|    {
 1630|    241|        return {};
 1631|    241|    }
 1632|       |
 1633|  14.7k|    return phi::make_scope<ASTTernaryIfExpression>(phi::move(condition),
 1634|  14.7k|                                                   phi::move(true_expression.release_not_null()),
 1635|  14.7k|                                                   phi::move(false_expression.release_not_null()));
 1636|  14.9k|}
_ZN10OpenAutoIt6Parser20ParseMacroExpressionENS_9TokenKindE:
 1639|  10.9k|{
 1640|  10.9k|    const auto macro = static_cast<phi::size_t>(macro_kind);
 1641|  10.9k|    PHI_ASSERT(macro >= MacroFirst && macro <= MacroLast);
 1642|       |
 1643|  10.9k|    return phi::make_scope<ASTMacroExpression>(macro_kind);
 1644|  10.9k|}
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1647|  17.4k|{
 1648|  17.4k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1648:9): [True: 0, False: 17.4k]
  ------------------
 1649|      0|    {
 1650|       |        // TODO: Proper error
 1651|      0|        return {};
 1652|      0|    }
 1653|       |
 1654|       |    // BooleanLiteral is either KW_True or KW_False
 1655|  17.4k|    const Token& token = CurrentToken();
 1656|  17.4k|    if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1656:9): [True: 17.2k, False: 201]
  ------------------
 1657|  17.2k|    {
 1658|  17.2k|        ConsumeCurrent();
 1659|  17.2k|        return phi::make_scope<ASTBooleanLiteral>(true);
 1660|  17.2k|    }
 1661|       |
 1662|    201|    if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1662:9): [True: 201, False: 0]
  ------------------
 1663|    201|    {
 1664|    201|        ConsumeCurrent();
 1665|    201|        return phi::make_scope<ASTBooleanLiteral>(false);
 1666|    201|    }
 1667|       |
 1668|       |    // TODO: Proper error
 1669|      0|    return {};
 1670|    201|}
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1673|    546|{
 1674|    546|    if (!HasMoreTokens())
  ------------------
  |  Branch (1674:9): [True: 0, False: 546]
  ------------------
 1675|      0|    {
 1676|       |        // TODO: Proper error
 1677|      0|        return {};
 1678|      0|    }
 1679|       |
 1680|    546|    const Token& token = CurrentToken();
 1681|    546|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1681:9): [True: 546, False: 0]
  ------------------
 1682|    546|    {
 1683|    546|        ConsumeCurrent();
 1684|    546|        return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1685|    546|    }
 1686|       |
 1687|       |    // TODO: Proper error
 1688|      0|    return {};
 1689|    546|}
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1692|  2.74k|{
 1693|  2.74k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1693:9): [True: 0, False: 2.74k]
  ------------------
 1694|      0|    {
 1695|       |        // TODO: Proper error
 1696|      0|        return {};
 1697|      0|    }
 1698|       |
 1699|  2.74k|    const Token& token = CurrentToken();
 1700|  2.74k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1700:9): [True: 2.74k, False: 0]
  ------------------
 1701|  2.74k|    {
 1702|  2.74k|        ConsumeCurrent();
 1703|       |
 1704|  2.74k|        char*    ptr   = nullptr;
 1705|  2.74k|        phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1706|       |
 1707|  2.74k|        return phi::make_scope<ASTFloatLiteral>(value);
 1708|  2.74k|    }
 1709|       |
 1710|       |    // TODO: Proper error
 1711|      0|    return {};
 1712|  2.74k|}
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   72|   948k|    {
   73|   948k|        int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   74|       |        //PHI_ASSERT(precedence != 0);
   75|       |
   76|   948k|        return precedence;
   77|   948k|    }

_ZN10OpenAutoIt10SourceFileC2ENS0_4TypeENSt3__14__fs10filesystem4pathEN3phi17basic_string_viewIcNS2_11char_traitsIcEEEE:
   12|  28.2k|{}

_ZN10OpenAutoIt13SourceManager18SetLocalSearchPathERKNSt3__14__fs10filesystem4pathE:
   14|  28.2k|{}
_ZN10OpenAutoIt18EmptySourceManager8LoadFileEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_11IncludeTypeE:
  156|    194|{
  157|    194|    return {};
  158|    194|}

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  14.1k|{
   31|       |#if defined(PHI_DEBUG)
   32|       |    PHI_ASSERT(!m_Finalized);
   33|       |#endif
   34|       |
   35|  14.1k|    m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |    m_Finalized = true;
   38|       |#endif
   39|  14.1k|}
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   68|  28.7M|{
   69|       |#if defined(PHI_DEBUG)
   70|       |    PHI_ASSERT(m_Finalized);
   71|       |#endif
   72|       |
   73|  28.7M|    return m_Index < m_Tokens.size();
   74|  28.7M|}
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   77|  19.0M|{
   78|       |#if defined(PHI_DEBUG)
   79|       |    PHI_ASSERT(m_Finalized);
   80|       |#endif
   81|       |
   82|  19.0M|    return m_Index >= m_Tokens.size();
   83|  19.0M|}
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   86|  13.8M|{
   87|  13.8M|    PHI_ASSERT(!reached_end());
   88|       |#if defined(PHI_DEBUG)
   89|       |    PHI_ASSERT(m_Finalized);
   90|       |#endif
   91|       |
   92|  13.8M|    return m_Tokens[m_Index.unsafe()];
   93|  13.8M|}
_ZNK10OpenAutoIt11TokenStream11look_behindEv:
   96|   104k|{
   97|   104k|    PHI_ASSERT(!m_Tokens.empty());
   98|       |#if defined(PHI_DEBUG)
   99|       |    PHI_ASSERT(m_Finalized);
  100|       |#endif
  101|       |
  102|   104k|    if (m_Index == 0u)
  ------------------
  |  Branch (102:9): [True: 0, False: 104k]
  ------------------
  103|      0|    {
  104|      0|        return m_Tokens[0u];
  105|      0|    }
  106|       |
  107|   104k|    return m_Tokens[m_Index.unsafe() - 1u];
  108|   104k|}
_ZN10OpenAutoIt11TokenStream7consumeEv:
  111|  5.21M|{
  112|  5.21M|    PHI_ASSERT(!reached_end());
  113|       |#if defined(PHI_DEBUG)
  114|       |    PHI_ASSERT(m_Finalized);
  115|       |#endif
  116|       |
  117|  5.21M|    m_Index += 1u;
  118|  5.21M|}

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  3.63M|{
  100|  3.63M|    if (output_enabled)
  ------------------
  |  Branch (100:9): [True: 0, False: 3.63M]
  ------------------
  101|      0|    {
  102|      0|        std::cerr << data;
  103|      0|    }
  104|  3.63M|}
_ZN10OpenAutoIt14disable_outputEv:
  107|  14.1k|{
  108|  14.1k|    output_enabled = false;
  109|  14.1k|}

