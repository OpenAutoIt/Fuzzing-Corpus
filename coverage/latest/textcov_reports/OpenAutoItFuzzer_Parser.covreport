_ZN3fmt3v106detail11to_unsignedIiEENSt3__113make_unsignedIT_E4typeES5_:
  374|  3.78M|    typename std::make_unsigned<Int>::type {
  375|  3.78M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  333|  7.56M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (333:35): [Folded - Ignored]
  |  |  |  Branch (333:35): [True: 3.78M, False: 0]
  |  |  ------------------
  ------------------
  376|  3.78M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  377|  3.78M|}
_ZN3fmt3v106detail13ignore_unusedIJbA15_cEEEvDpRKT_:
  301|  30.8M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v1017basic_string_viewIcE4sizeEv:
  442|  20.8M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail13ignore_unusedIJbA1_cEEEvDpRKT_:
  301|  3.78M|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE4sizeEv:
  834|  4.21M|  constexpr auto size() const noexcept -> size_t { return size_; }
_ZN3fmt3v106detail6bufferIcEC2EPcmm:
  806|  4.21M|      : ptr_(p), size_(sz), capacity_(cap) {}
_ZN3fmt3v106detail6bufferIcE3setEPcm:
  812|  4.21M|  FMT_CONSTEXPR void set(T* buf_data, size_t buf_capacity) noexcept {
  813|  4.21M|    ptr_ = buf_data;
  814|  4.21M|    capacity_ = buf_capacity;
  815|  4.21M|  }
_ZN3fmt3v106detail13ignore_unusedIJbEEEvDpRKT_:
  301|    203|template <typename... T> FMT_CONSTEXPR void ignore_unused(const T&...) {}
_ZNK3fmt3v106detail6bufferIcE8capacityEv:
  837|    335|  constexpr auto capacity() const noexcept -> size_t { return capacity_; }
_ZN3fmt3v106detail6bufferIcE4dataEv:
  840|  4.21M|  FMT_CONSTEXPR auto data() noexcept -> T* { return ptr_; }
_ZNK3fmt3v1017basic_string_viewIcE5beginEv:
  444|  8.00M|  constexpr auto begin() const noexcept -> iterator { return data_; }
_ZNK3fmt3v1017basic_string_viewIcE3endEv:
  445|  8.00M|  constexpr auto end() const noexcept -> iterator { return data_ + size_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKc:
  425|  3.87M|                  : std::char_traits<Char>::length(s)) {}
_ZN3fmt3v106detail10locale_refC2Ev:
 1533|  7.39M|  constexpr FMT_INLINE locale_ref() : locale_(nullptr) {}
_ZNK3fmt3v1019basic_format_stringIcJEEcvNS0_17basic_string_viewIcEEEv:
 2725|   435k|  FMT_INLINE operator basic_string_view<Char>() const { return str_; }
_ZN3fmt3v1016make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJEEENS0_16format_arg_storeIT_JDpNSt3__19remove_cvINS7_16remove_referenceIT0_E4typeEE4typeEEEEDpRSA_:
 1814|   435k|    -> format_arg_store<Context, remove_cvref_t<T>...> {
 1815|   435k|  return {args...};
 1816|   435k|}
_ZN3fmt3v1016format_arg_storeINS0_20basic_format_contextINS0_8appenderEcEEJEEC2IJEEEDpRT_:
 1797|   435k|        data_{detail::make_arg<is_packed, Context>(args)...} {
 1798|   435k|    if (detail::const_check(num_named_args != 0))
  ------------------
  |  Branch (1798:9): [Folded - Ignored]
  ------------------
 1799|      0|      detail::init_named_args(data_.named_args(), 0, 0, args...);
 1800|   435k|  }
_ZN3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EEC2IJEEEDpRKT_:
 1166|   435k|  FMT_CONSTEXPR FMT_INLINE arg_data(const U&... init) : args_{init...} {}
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1259|  4.21M|  constexpr FMT_INLINE value() : no_value() {}
_ZN3fmt3v109monostateC2Ev:
  276|  4.21M|  constexpr monostate() {}
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2IJEEERKNS0_16format_arg_storeIS4_JDpT_EEE:
 1898|   435k|                          store.data_.args()) {}
_ZNK3fmt3v106detail8arg_dataINS1_5valueINS0_20basic_format_contextINS0_8appenderEcEEEEcLm0ELm0EE4argsEv:
 1167|   435k|  FMT_CONSTEXPR FMT_INLINE auto args() const -> const T* { return args_; }
_ZN3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEC2EyPKNS0_6detail5valueIS4_EE:
 1882|  4.21M|      : desc_(desc), values_(values) {}
_ZNK3fmt3v1017basic_string_viewIcE4dataEv:
  439|  8.61M|  constexpr auto data() const noexcept -> const Char* { return data_; }
_ZN3fmt3v1017basic_string_viewIcEC2EPKcm:
  410|  8.61M|      : data_(s), size_(count) {}
_ZN3fmt3v106detail11to_unsignedIlEENSt3__113make_unsignedIT_E4typeES5_:
  374|  27.0M|    typename std::make_unsigned<Int>::type {
  375|  27.0M|  FMT_ASSERT(std::is_unsigned<Int>::value || value >= 0, "negative value");
  ------------------
  |  |  333|  54.0M|      fmt::detail::ignore_unused((condition), (message))
  |  |  ------------------
  |  |  |  Branch (333:35): [Folded - Ignored]
  |  |  |  Branch (333:35): [True: 27.0M, False: 0]
  |  |  ------------------
  ------------------
  376|  27.0M|  return static_cast<typename std::make_unsigned<Int>::type>(value);
  377|  27.0M|}
_ZN3fmt3v106detail6bufferIcE11try_reserveEm:
  859|  11.5M|  FMT_CONSTEXPR20 void try_reserve(size_t new_capacity) {
  860|  11.5M|    if (new_capacity > capacity_) grow(new_capacity);
  ------------------
  |  Branch (860:9): [True: 203, False: 11.5M]
  ------------------
  861|  11.5M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE3getEi:
 1920|  3.78M|  FMT_CONSTEXPR auto get(int id) const -> format_arg {
 1921|  3.78M|    format_arg arg;
 1922|  3.78M|    if (!is_packed()) {
  ------------------
  |  Branch (1922:9): [True: 0, False: 3.78M]
  ------------------
 1923|      0|      if (id < max_size()) arg = args_[id];
  ------------------
  |  Branch (1923:11): [True: 0, False: 0]
  ------------------
 1924|      0|      return arg;
 1925|      0|    }
 1926|  3.78M|    if (id >= detail::max_packed_args) return arg;
  ------------------
  |  Branch (1926:9): [True: 0, False: 3.78M]
  ------------------
 1927|  3.78M|    arg.type_ = type(id);
 1928|  3.78M|    if (arg.type_ == detail::type::none_type) return arg;
  ------------------
  |  Branch (1928:9): [True: 0, False: 3.78M]
  ------------------
 1929|  3.78M|    arg.value_ = values_[id];
 1930|  3.78M|    return arg;
 1931|  3.78M|  }
_ZN3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEC2Ev:
 1631|  3.78M|  constexpr basic_format_arg() : type_(detail::type::none_type) {}
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE9is_packedEv:
 1867|  3.78M|  constexpr auto is_packed() const -> bool {
 1868|  3.78M|    return (desc_ & detail::is_unpacked_bit) == 0;
 1869|  3.78M|  }
_ZNK3fmt3v1017basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEE4typeEi:
 1874|  3.78M|  FMT_CONSTEXPR auto type(int index) const -> detail::type {
 1875|  3.78M|    int shift = index * detail::packed_arg_bits;
 1876|  3.78M|    unsigned int mask = (1 << detail::packed_arg_bits) - 1;
 1877|  3.78M|    return static_cast<detail::type>((desc_ >> shift) & mask);
 1878|  3.78M|  }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEEcvbEv:
 1633|  3.78M|  constexpr explicit operator bool() const noexcept {
 1634|  3.78M|    return type_ != detail::type::none_type;
 1635|  3.78M|  }
_ZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EE:
  762|  11.7M|    -> Container& {
  763|  11.7M|  using base = std::back_insert_iterator<Container>;
  764|  11.7M|  struct accessor : base {
  765|  11.7M|    accessor(base b) : base(b) {}
  766|  11.7M|    using base::container;
  767|  11.7M|  };
  768|  11.7M|  return *accessor(it).container;
  769|  11.7M|}
_ZZN3fmt3v106detail13get_containerINS1_6bufferIcEEEERT_NSt3__120back_insert_iteratorIS5_EEEN8accessorC2ENS8_IS4_EE:
  765|  11.7M|    accessor(base b) : base(b) {}
_ZNK3fmt3v106detail6fill_tIcE4sizeEv:
 1998|  3.78M|  constexpr auto size() const -> size_t { return size_; }
_ZN3fmt3v106detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_:
 1487|  11.7M|auto copy_str(InputIt begin, InputIt end, appender out) -> appender {
 1488|  11.7M|  get_container(out).append(begin, end);
 1489|  11.7M|  return out;
 1490|  11.7M|}
_ZN3fmt3v1012format_specsIcEC2Ev:
 2048|  3.78M|        localized(false) {}
_ZN3fmt3v1026basic_format_parse_contextIcEC2ENS0_17basic_string_viewIcEEi:
  665|  4.21M|      : format_str_(format_str), next_arg_id_(next_arg_id) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcEC2ES2_NS0_17basic_format_argsIS3_EENS0_6detail10locale_refE:
 1720|  4.21M|      : out_(out), args_(ctx_args), loc_(loc) {}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE3outEv:
 1735|  11.7M|  FMT_CONSTEXPR auto out() -> iterator { return out_; }
_ZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_:
 2468|  4.21M|    basic_string_view<Char> format_str, Handler&& handler) {
 2469|  4.21M|  auto begin = format_str.data();
 2470|  4.21M|  auto end = begin + format_str.size();
 2471|  4.21M|  if (end - begin < 32) {
  ------------------
  |  Branch (2471:7): [True: 2.34M, False: 1.87M]
  ------------------
 2472|       |    // Use a simple loop instead of memchr for small strings.
 2473|  2.34M|    const Char* p = begin;
 2474|  58.9M|    while (p != end) {
  ------------------
  |  Branch (2474:12): [True: 56.5M, False: 2.34M]
  ------------------
 2475|  56.5M|      auto c = *p++;
 2476|  56.5M|      if (c == '{') {
  ------------------
  |  Branch (2476:11): [True: 1.90M, False: 54.6M]
  ------------------
 2477|  1.90M|        handler.on_text(begin, p - 1);
 2478|  1.90M|        begin = p = parse_replacement_field(p - 1, end, handler);
 2479|  54.6M|      } else if (c == '}') {
  ------------------
  |  Branch (2479:18): [True: 0, False: 54.6M]
  ------------------
 2480|      0|        if (p == end || *p != '}')
  ------------------
  |  Branch (2480:13): [True: 0, False: 0]
  |  Branch (2480:25): [True: 0, False: 0]
  ------------------
 2481|      0|          return handler.on_error("unmatched '}' in format string");
 2482|      0|        handler.on_text(begin, p);
 2483|      0|        begin = ++p;
 2484|      0|      }
 2485|  56.5M|    }
 2486|  2.34M|    handler.on_text(begin, end);
 2487|  2.34M|    return;
 2488|  2.34M|  }
 2489|  1.87M|  struct writer {
 2490|  1.87M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2491|  1.87M|      if (from == to) return;
 2492|  1.87M|      for (;;) {
 2493|  1.87M|        const Char* p = nullptr;
 2494|  1.87M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
 2495|  1.87M|          return handler_.on_text(from, to);
 2496|  1.87M|        ++p;
 2497|  1.87M|        if (p == to || *p != '}')
 2498|  1.87M|          return handler_.on_error("unmatched '}' in format string");
 2499|  1.87M|        handler_.on_text(from, p);
 2500|  1.87M|        from = p + 1;
 2501|  1.87M|      }
 2502|  1.87M|    }
 2503|  1.87M|    Handler& handler_;
 2504|  1.87M|  } write = {handler};
 2505|  3.75M|  while (begin != end) {
  ------------------
  |  Branch (2505:10): [True: 3.75M, False: 9]
  ------------------
 2506|       |    // Doing two passes with memchr (one for '{' and another for '}') is up to
 2507|       |    // 2.5x faster than the naive one-pass implementation on big format strings.
 2508|  3.75M|    const Char* p = begin;
 2509|  3.75M|    if (*begin != '{' && !find<IS_CONSTEXPR>(begin + 1, end, Char('{'), p))
  ------------------
  |  Branch (2509:9): [True: 3.75M, False: 0]
  |  Branch (2509:26): [True: 1.87M, False: 1.87M]
  ------------------
 2510|  1.87M|      return write(begin, end);
 2511|  1.87M|    write(begin, p);
 2512|  1.87M|    begin = parse_replacement_field(p, end, handler);
 2513|  1.87M|  }
 2514|  1.87M|}
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE10advance_toES2_:
 1738|  11.7M|  void advance_to(iterator it) {
 1739|  11.7M|    if (!detail::is_back_insert_iterator<iterator>()) out_ = it;
  ------------------
  |  Branch (1739:9): [Folded - Ignored]
  ------------------
 1740|  11.7M|  }
_ZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_:
 2431|  3.78M|                                           Handler&& handler) -> const Char* {
 2432|  3.78M|  struct id_adapter {
 2433|  3.78M|    Handler& handler;
 2434|  3.78M|    int arg_id;
 2435|       |
 2436|  3.78M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
 2437|  3.78M|    FMT_CONSTEXPR void on_index(int id) { arg_id = handler.on_arg_id(id); }
 2438|  3.78M|    FMT_CONSTEXPR void on_name(basic_string_view<Char> id) {
 2439|  3.78M|      arg_id = handler.on_arg_id(id);
 2440|  3.78M|    }
 2441|  3.78M|  };
 2442|       |
 2443|  3.78M|  ++begin;
 2444|  3.78M|  if (begin == end) return handler.on_error("invalid format string"), end;
  ------------------
  |  Branch (2444:7): [True: 0, False: 3.78M]
  ------------------
 2445|  3.78M|  if (*begin == '}') {
  ------------------
  |  Branch (2445:7): [True: 0, False: 3.78M]
  ------------------
 2446|      0|    handler.on_replacement_field(handler.on_arg_id(), begin);
 2447|  3.78M|  } else if (*begin == '{') {
  ------------------
  |  Branch (2447:14): [True: 0, False: 3.78M]
  ------------------
 2448|      0|    handler.on_text(begin, begin + 1);
 2449|  3.78M|  } else {
 2450|  3.78M|    auto adapter = id_adapter{handler, 0};
 2451|  3.78M|    begin = parse_arg_id(begin, end, adapter);
 2452|  3.78M|    Char c = begin != end ? *begin : Char();
  ------------------
  |  Branch (2452:14): [True: 3.78M, False: 0]
  ------------------
 2453|  3.78M|    if (c == '}') {
  ------------------
  |  Branch (2453:9): [True: 0, False: 3.78M]
  ------------------
 2454|      0|      handler.on_replacement_field(adapter.arg_id, begin);
 2455|  3.78M|    } else if (c == ':') {
  ------------------
  |  Branch (2455:16): [True: 3.78M, False: 0]
  ------------------
 2456|  3.78M|      begin = handler.on_format_specs(adapter.arg_id, begin + 1, end);
 2457|  3.78M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (2457:11): [True: 0, False: 3.78M]
  |  Branch (2457:27): [True: 0, False: 3.78M]
  ------------------
 2458|      0|        return handler.on_error("unknown format specifier"), end;
 2459|  3.78M|    } else {
 2460|      0|      return handler.on_error("missing '}' in format string"), end;
 2461|      0|    }
 2462|  3.78M|  }
 2463|  3.78M|  return begin + 1;
 2464|  3.78M|}
_ZNK3fmt3v1020basic_format_contextINS0_8appenderEcE3argEi:
 1722|  3.78M|  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }
_ZN3fmt3v1020basic_format_contextINS0_8appenderEcE6localeEv:
 1742|  3.78M|  FMT_CONSTEXPR auto locale() -> detail::locale_ref { return loc_; }
_ZN3fmt3v1026basic_format_parse_contextIcE11next_arg_idEv:
  689|  3.78M|  FMT_CONSTEXPR auto next_arg_id() -> int {
  690|  3.78M|    if (next_arg_id_ < 0) {
  ------------------
  |  Branch (690:9): [True: 0, False: 3.78M]
  ------------------
  691|      0|      detail::throw_format_error(
  692|      0|          "cannot switch from manual to automatic argument indexing");
  693|      0|      return 0;
  694|      0|    }
  695|  3.78M|    int id = next_arg_id_++;
  696|  3.78M|    do_check_arg_id(id);
  697|  3.78M|    return id;
  698|  3.78M|  }
_ZN3fmt3v1026basic_format_parse_contextIcE15do_check_arg_idEi:
 1038|  3.78M|FMT_CONSTEXPR void basic_format_parse_context<Char>::do_check_arg_id(int id) {
 1039|       |  // Argument id is only checked at compile-time during parsing because
 1040|       |  // formatting has its own validation.
 1041|  3.78M|  if (detail::is_constant_evaluated() &&
  ------------------
  |  Branch (1041:7): [Folded - Ignored]
  ------------------
 1042|  3.78M|      (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
                    (!FMT_GCC_VERSION || FMT_GCC_VERSION >= 1200)) {
  ------------------
  |  |   32|      0|#  define FMT_GCC_VERSION 0
  ------------------
  |  Branch (1042:8): [Folded - Ignored]
  |  Branch (1042:28): [Folded - Ignored]
  ------------------
 1043|      0|    using context = detail::compile_parse_context<Char>;
 1044|      0|    if (id >= static_cast<context*>(this)->num_args())
  ------------------
  |  Branch (1044:9): [True: 0, False: 0]
  ------------------
 1045|      0|      detail::throw_format_error("argument not found");
 1046|      0|  }
 1047|  3.78M|}
_ZN3fmt3v106detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS6_EENS1_12vformat_argsIS6_E4typeENS1_10locale_refEE14format_handlerEEPKS6_SI_SI_OT0_E10id_adapterEESI_SI_SI_SK_:
 2196|  3.78M|                                           Handler&& handler) -> const Char* {
 2197|  3.78M|  FMT_ASSERT(begin != end, "");
  ------------------
  |  |  333|  3.78M|      fmt::detail::ignore_unused((condition), (message))
  ------------------
 2198|  3.78M|  Char c = *begin;
 2199|  3.78M|  if (c != '}' && c != ':') return do_parse_arg_id(begin, end, handler);
  ------------------
  |  Branch (2199:7): [True: 3.78M, False: 0]
  |  Branch (2199:19): [True: 0, False: 3.78M]
  ------------------
 2200|  3.78M|  handler.on_auto();
 2201|  3.78M|  return begin;
 2202|  3.78M|}
_ZZN3fmt3v106detail23parse_replacement_fieldIcRZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEPKS5_SH_SH_OT0_EN10id_adapter7on_autoEv:
 2436|  3.78M|    FMT_CONSTEXPR void on_auto() { arg_id = handler.on_arg_id(); }
_ZNK3fmt3v1016basic_format_argINS0_20basic_format_contextINS0_8appenderEcEEE4typeEv:
 1637|  7.56M|  auto type() const -> detail::type { return type_; }
_ZN3fmt3v106detail7arg_refIcEC2Ev:
 2057|  7.56M|  FMT_CONSTEXPR arg_ref() : kind(arg_id_kind::none), val() {}
_ZN3fmt3v106detail7arg_refIcE5valueC2Ei:
 2072|  7.56M|    FMT_CONSTEXPR value(int idx = 0) : index(idx) {}
_ZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeE:
 2266|  3.78M|    basic_format_parse_context<Char>& ctx, type arg_type) -> const Char* {
 2267|  3.78M|  auto c = '\0';
 2268|  3.78M|  if (end - begin > 1) {
  ------------------
  |  Branch (2268:7): [True: 3.78M, False: 0]
  ------------------
 2269|  3.78M|    auto next = to_ascii(begin[1]);
 2270|  3.78M|    c = parse_align(next) == align::none ? to_ascii(*begin) : '\0';
  ------------------
  |  Branch (2270:9): [True: 3.78M, False: 0]
  ------------------
 2271|  3.78M|  } else {
 2272|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2272:9): [True: 0, False: 0]
  ------------------
 2273|      0|    c = to_ascii(*begin);
 2274|      0|  }
 2275|       |
 2276|  3.78M|  struct {
 2277|  3.78M|    state current_state = state::start;
 2278|  3.78M|    FMT_CONSTEXPR void operator()(state s, bool valid = true) {
 2279|  3.78M|      if (current_state >= s || !valid)
 2280|  3.78M|        throw_format_error("invalid format specifier");
 2281|  3.78M|      current_state = s;
 2282|  3.78M|    }
 2283|  3.78M|  } enter_state;
 2284|       |
 2285|  3.78M|  using pres = presentation_type;
 2286|  3.78M|  constexpr auto integral_set = sint_set | uint_set | bool_set | char_set;
 2287|  3.78M|  struct {
 2288|  3.78M|    const Char*& begin;
 2289|  3.78M|    dynamic_format_specs<Char>& specs;
 2290|  3.78M|    type arg_type;
 2291|       |
 2292|  3.78M|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2293|  3.78M|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
 2294|  3.78M|      specs.type = type;
 2295|  3.78M|      return begin + 1;
 2296|  3.78M|    }
 2297|  3.78M|  } parse_presentation_type{begin, specs, arg_type};
 2298|       |
 2299|  3.78M|  for (;;) {
 2300|  3.78M|    switch (c) {
 2301|      0|    case '<':
  ------------------
  |  Branch (2301:5): [True: 0, False: 3.78M]
  ------------------
 2302|      0|    case '>':
  ------------------
  |  Branch (2302:5): [True: 0, False: 3.78M]
  ------------------
 2303|      0|    case '^':
  ------------------
  |  Branch (2303:5): [True: 0, False: 3.78M]
  ------------------
 2304|      0|      enter_state(state::align);
 2305|      0|      specs.align = parse_align(c);
 2306|      0|      ++begin;
 2307|      0|      break;
 2308|      0|    case '+':
  ------------------
  |  Branch (2308:5): [True: 0, False: 3.78M]
  ------------------
 2309|      0|    case '-':
  ------------------
  |  Branch (2309:5): [True: 0, False: 3.78M]
  ------------------
 2310|      0|    case ' ':
  ------------------
  |  Branch (2310:5): [True: 0, False: 3.78M]
  ------------------
 2311|      0|      enter_state(state::sign, in(arg_type, sint_set | float_set));
 2312|      0|      switch (c) {
  ------------------
  |  Branch (2312:15): [True: 0, False: 0]
  ------------------
 2313|      0|      case '+':
  ------------------
  |  Branch (2313:7): [True: 0, False: 0]
  ------------------
 2314|      0|        specs.sign = sign::plus;
 2315|      0|        break;
 2316|      0|      case '-':
  ------------------
  |  Branch (2316:7): [True: 0, False: 0]
  ------------------
 2317|      0|        specs.sign = sign::minus;
 2318|      0|        break;
 2319|      0|      case ' ':
  ------------------
  |  Branch (2319:7): [True: 0, False: 0]
  ------------------
 2320|      0|        specs.sign = sign::space;
 2321|      0|        break;
 2322|      0|      }
 2323|      0|      ++begin;
 2324|      0|      break;
 2325|      0|    case '#':
  ------------------
  |  Branch (2325:5): [True: 0, False: 3.78M]
  ------------------
 2326|      0|      enter_state(state::hash, is_arithmetic_type(arg_type));
 2327|      0|      specs.alt = true;
 2328|      0|      ++begin;
 2329|      0|      break;
 2330|      0|    case '0':
  ------------------
  |  Branch (2330:5): [True: 0, False: 3.78M]
  ------------------
 2331|      0|      enter_state(state::zero);
 2332|      0|      if (!is_arithmetic_type(arg_type))
  ------------------
  |  Branch (2332:11): [True: 0, False: 0]
  ------------------
 2333|      0|        throw_format_error("format specifier requires numeric argument");
 2334|      0|      if (specs.align == align::none) {
  ------------------
  |  Branch (2334:11): [True: 0, False: 0]
  ------------------
 2335|       |        // Ignore 0 if align is specified for compatibility with std::format.
 2336|      0|        specs.align = align::numeric;
 2337|      0|        specs.fill[0] = Char('0');
 2338|      0|      }
 2339|      0|      ++begin;
 2340|      0|      break;
 2341|      0|    case '1':
  ------------------
  |  Branch (2341:5): [True: 0, False: 3.78M]
  ------------------
 2342|      0|    case '2':
  ------------------
  |  Branch (2342:5): [True: 0, False: 3.78M]
  ------------------
 2343|      0|    case '3':
  ------------------
  |  Branch (2343:5): [True: 0, False: 3.78M]
  ------------------
 2344|      0|    case '4':
  ------------------
  |  Branch (2344:5): [True: 0, False: 3.78M]
  ------------------
 2345|      0|    case '5':
  ------------------
  |  Branch (2345:5): [True: 0, False: 3.78M]
  ------------------
 2346|      0|    case '6':
  ------------------
  |  Branch (2346:5): [True: 0, False: 3.78M]
  ------------------
 2347|      0|    case '7':
  ------------------
  |  Branch (2347:5): [True: 0, False: 3.78M]
  ------------------
 2348|      0|    case '8':
  ------------------
  |  Branch (2348:5): [True: 0, False: 3.78M]
  ------------------
 2349|      0|    case '9':
  ------------------
  |  Branch (2349:5): [True: 0, False: 3.78M]
  ------------------
 2350|      0|    case '{':
  ------------------
  |  Branch (2350:5): [True: 0, False: 3.78M]
  ------------------
 2351|      0|      enter_state(state::width);
 2352|      0|      begin = parse_dynamic_spec(begin, end, specs.width, specs.width_ref, ctx);
 2353|      0|      break;
 2354|      0|    case '.':
  ------------------
  |  Branch (2354:5): [True: 0, False: 3.78M]
  ------------------
 2355|      0|      enter_state(state::precision,
 2356|      0|                  in(arg_type, float_set | string_set | cstring_set));
 2357|      0|      begin = parse_precision(begin, end, specs.precision, specs.precision_ref,
 2358|      0|                              ctx);
 2359|      0|      break;
 2360|      0|    case 'L':
  ------------------
  |  Branch (2360:5): [True: 0, False: 3.78M]
  ------------------
 2361|      0|      enter_state(state::locale, is_arithmetic_type(arg_type));
 2362|      0|      specs.localized = true;
 2363|      0|      ++begin;
 2364|      0|      break;
 2365|      0|    case 'd':
  ------------------
  |  Branch (2365:5): [True: 0, False: 3.78M]
  ------------------
 2366|      0|      return parse_presentation_type(pres::dec, integral_set);
 2367|      0|    case 'o':
  ------------------
  |  Branch (2367:5): [True: 0, False: 3.78M]
  ------------------
 2368|      0|      return parse_presentation_type(pres::oct, integral_set);
 2369|      0|    case 'x':
  ------------------
  |  Branch (2369:5): [True: 0, False: 3.78M]
  ------------------
 2370|      0|      return parse_presentation_type(pres::hex_lower, integral_set);
 2371|      0|    case 'X':
  ------------------
  |  Branch (2371:5): [True: 0, False: 3.78M]
  ------------------
 2372|      0|      return parse_presentation_type(pres::hex_upper, integral_set);
 2373|      0|    case 'b':
  ------------------
  |  Branch (2373:5): [True: 0, False: 3.78M]
  ------------------
 2374|      0|      return parse_presentation_type(pres::bin_lower, integral_set);
 2375|      0|    case 'B':
  ------------------
  |  Branch (2375:5): [True: 0, False: 3.78M]
  ------------------
 2376|      0|      return parse_presentation_type(pres::bin_upper, integral_set);
 2377|      0|    case 'a':
  ------------------
  |  Branch (2377:5): [True: 0, False: 3.78M]
  ------------------
 2378|      0|      return parse_presentation_type(pres::hexfloat_lower, float_set);
 2379|      0|    case 'A':
  ------------------
  |  Branch (2379:5): [True: 0, False: 3.78M]
  ------------------
 2380|      0|      return parse_presentation_type(pres::hexfloat_upper, float_set);
 2381|      0|    case 'e':
  ------------------
  |  Branch (2381:5): [True: 0, False: 3.78M]
  ------------------
 2382|      0|      return parse_presentation_type(pres::exp_lower, float_set);
 2383|      0|    case 'E':
  ------------------
  |  Branch (2383:5): [True: 0, False: 3.78M]
  ------------------
 2384|      0|      return parse_presentation_type(pres::exp_upper, float_set);
 2385|      0|    case 'f':
  ------------------
  |  Branch (2385:5): [True: 0, False: 3.78M]
  ------------------
 2386|      0|      return parse_presentation_type(pres::fixed_lower, float_set);
 2387|      0|    case 'F':
  ------------------
  |  Branch (2387:5): [True: 0, False: 3.78M]
  ------------------
 2388|      0|      return parse_presentation_type(pres::fixed_upper, float_set);
 2389|      0|    case 'g':
  ------------------
  |  Branch (2389:5): [True: 0, False: 3.78M]
  ------------------
 2390|      0|      return parse_presentation_type(pres::general_lower, float_set);
 2391|      0|    case 'G':
  ------------------
  |  Branch (2391:5): [True: 0, False: 3.78M]
  ------------------
 2392|      0|      return parse_presentation_type(pres::general_upper, float_set);
 2393|      0|    case 'c':
  ------------------
  |  Branch (2393:5): [True: 0, False: 3.78M]
  ------------------
 2394|      0|      return parse_presentation_type(pres::chr, integral_set);
 2395|  3.78M|    case 's':
  ------------------
  |  Branch (2395:5): [True: 3.78M, False: 0]
  ------------------
 2396|  3.78M|      return parse_presentation_type(pres::string,
 2397|  3.78M|                                     bool_set | string_set | cstring_set);
 2398|      0|    case 'p':
  ------------------
  |  Branch (2398:5): [True: 0, False: 3.78M]
  ------------------
 2399|      0|      return parse_presentation_type(pres::pointer, pointer_set | cstring_set);
 2400|      0|    case '?':
  ------------------
  |  Branch (2400:5): [True: 0, False: 3.78M]
  ------------------
 2401|      0|      return parse_presentation_type(pres::debug,
 2402|      0|                                     char_set | string_set | cstring_set);
 2403|      0|    case '}':
  ------------------
  |  Branch (2403:5): [True: 0, False: 3.78M]
  ------------------
 2404|      0|      return begin;
 2405|      0|    default: {
  ------------------
  |  Branch (2405:5): [True: 0, False: 3.78M]
  ------------------
 2406|      0|      if (*begin == '}') return begin;
  ------------------
  |  Branch (2406:11): [True: 0, False: 0]
  ------------------
 2407|       |      // Parse fill and alignment.
 2408|      0|      auto fill_end = begin + code_point_length(begin);
 2409|      0|      if (end - fill_end <= 0) {
  ------------------
  |  Branch (2409:11): [True: 0, False: 0]
  ------------------
 2410|      0|        throw_format_error("invalid format specifier");
 2411|      0|        return begin;
 2412|      0|      }
 2413|      0|      if (*begin == '{') {
  ------------------
  |  Branch (2413:11): [True: 0, False: 0]
  ------------------
 2414|      0|        throw_format_error("invalid fill character '{'");
 2415|      0|        return begin;
 2416|      0|      }
 2417|      0|      auto align = parse_align(to_ascii(*fill_end));
 2418|      0|      enter_state(state::align, align != align::none);
 2419|      0|      specs.fill = {begin, to_unsigned(fill_end - begin)};
 2420|      0|      specs.align = align;
 2421|      0|      begin = fill_end + 1;
 2422|      0|    }
 2423|  3.78M|    }
 2424|      0|    if (begin == end) return begin;
  ------------------
  |  Branch (2424:9): [True: 0, False: 0]
  ------------------
 2425|      0|    c = to_ascii(*begin);
 2426|      0|  }
 2427|  3.78M|}
_ZN3fmt3v106detail8to_asciiIcLi0EEEcT_:
 2091|  7.56M|constexpr auto to_ascii(Char c) -> char {
 2092|  7.56M|  return c <= 0xff ? static_cast<char>(c) : '\0';
  ------------------
  |  Branch (2092:10): [True: 7.56M, False: 0]
  ------------------
 2093|  7.56M|}
_ZN3fmt3v106detail11parse_alignEc:
 2149|  3.78M|FMT_CONSTEXPR inline auto parse_align(char c) -> align_t {
 2150|  3.78M|  switch (c) {
  ------------------
  |  Branch (2150:11): [True: 3.78M, False: 0]
  ------------------
 2151|      0|  case '<':
  ------------------
  |  Branch (2151:3): [True: 0, False: 3.78M]
  ------------------
 2152|      0|    return align::left;
 2153|      0|  case '>':
  ------------------
  |  Branch (2153:3): [True: 0, False: 3.78M]
  ------------------
 2154|      0|    return align::right;
 2155|      0|  case '^':
  ------------------
  |  Branch (2155:3): [True: 0, False: 3.78M]
  ------------------
 2156|      0|    return align::center;
 2157|  3.78M|  }
 2158|  3.78M|  return align::none;
 2159|  3.78M|}
_ZN3fmt3v106detail2inENS1_4typeEi:
  610|  3.78M|constexpr auto in(type t, int set) -> bool {
  611|  3.78M|  return ((set >> static_cast<int>(t)) & 1) != 0;
  612|  3.78M|}
_ZZN3fmt3v106detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_26basic_format_parse_contextIS3_EENS1_4typeEENUt0_clENS0_17presentation_typeEi:
 2292|  3.78M|    FMT_CONSTEXPR auto operator()(pres type, int set) -> const Char* {
 2293|  3.78M|      if (!in(arg_type, set)) throw_format_error("invalid format specifier");
  ------------------
  |  Branch (2293:11): [True: 0, False: 3.78M]
  ------------------
 2294|  3.78M|      specs.type = type;
 2295|  3.78M|      return begin + 1;
 2296|  3.78M|    }
_ZN3fmt3v1016visit_format_argIRNS0_6detail13arg_formatterIcEENS0_20basic_format_contextINS0_8appenderEcEEEEDTclfp_Li0EEEOT_RKNS0_16basic_format_argIT0_EE:
 1655|  3.78M|    Visitor&& vis, const basic_format_arg<Context>& arg) -> decltype(vis(0)) {
 1656|  3.78M|  switch (arg.type_) {
  ------------------
  |  Branch (1656:11): [True: 0, False: 3.78M]
  ------------------
 1657|      0|  case detail::type::none_type:
  ------------------
  |  Branch (1657:3): [True: 0, False: 3.78M]
  ------------------
 1658|      0|    break;
 1659|      0|  case detail::type::int_type:
  ------------------
  |  Branch (1659:3): [True: 0, False: 3.78M]
  ------------------
 1660|      0|    return vis(arg.value_.int_value);
 1661|      0|  case detail::type::uint_type:
  ------------------
  |  Branch (1661:3): [True: 0, False: 3.78M]
  ------------------
 1662|      0|    return vis(arg.value_.uint_value);
 1663|      0|  case detail::type::long_long_type:
  ------------------
  |  Branch (1663:3): [True: 0, False: 3.78M]
  ------------------
 1664|      0|    return vis(arg.value_.long_long_value);
 1665|      0|  case detail::type::ulong_long_type:
  ------------------
  |  Branch (1665:3): [True: 0, False: 3.78M]
  ------------------
 1666|      0|    return vis(arg.value_.ulong_long_value);
 1667|      0|  case detail::type::int128_type:
  ------------------
  |  Branch (1667:3): [True: 0, False: 3.78M]
  ------------------
 1668|      0|    return vis(detail::convert_for_visit(arg.value_.int128_value));
 1669|      0|  case detail::type::uint128_type:
  ------------------
  |  Branch (1669:3): [True: 0, False: 3.78M]
  ------------------
 1670|      0|    return vis(detail::convert_for_visit(arg.value_.uint128_value));
 1671|      0|  case detail::type::bool_type:
  ------------------
  |  Branch (1671:3): [True: 0, False: 3.78M]
  ------------------
 1672|      0|    return vis(arg.value_.bool_value);
 1673|      0|  case detail::type::char_type:
  ------------------
  |  Branch (1673:3): [True: 0, False: 3.78M]
  ------------------
 1674|      0|    return vis(arg.value_.char_value);
 1675|      0|  case detail::type::float_type:
  ------------------
  |  Branch (1675:3): [True: 0, False: 3.78M]
  ------------------
 1676|      0|    return vis(arg.value_.float_value);
 1677|      0|  case detail::type::double_type:
  ------------------
  |  Branch (1677:3): [True: 0, False: 3.78M]
  ------------------
 1678|      0|    return vis(arg.value_.double_value);
 1679|      0|  case detail::type::long_double_type:
  ------------------
  |  Branch (1679:3): [True: 0, False: 3.78M]
  ------------------
 1680|      0|    return vis(arg.value_.long_double_value);
 1681|  3.17M|  case detail::type::cstring_type:
  ------------------
  |  Branch (1681:3): [True: 3.17M, False: 610k]
  ------------------
 1682|  3.17M|    return vis(arg.value_.string.data);
 1683|   610k|  case detail::type::string_type:
  ------------------
  |  Branch (1683:3): [True: 610k, False: 3.17M]
  ------------------
 1684|   610k|    using sv = basic_string_view<typename Context::char_type>;
 1685|   610k|    return vis(sv(arg.value_.string.data, arg.value_.string.size));
 1686|      0|  case detail::type::pointer_type:
  ------------------
  |  Branch (1686:3): [True: 0, False: 3.78M]
  ------------------
 1687|      0|    return vis(arg.value_.pointer);
 1688|      0|  case detail::type::custom_type:
  ------------------
  |  Branch (1688:3): [True: 0, False: 3.78M]
  ------------------
 1689|      0|    return vis(typename basic_format_arg<Context>::handle(arg.value_.custom));
 1690|  3.78M|  }
 1691|      0|  return vis(monostate());
 1692|  3.78M|}
_ZN3fmt3v106detail4findILb0EcPKcEEbT1_S5_T0_RS5_:
 2118|  7.50M|                              const char*& out) -> bool {
 2119|  7.50M|  out = static_cast<const char*>(
 2120|  7.50M|      std::memchr(first, value, to_unsigned(last - first)));
 2121|  7.50M|  return out != nullptr;
 2122|  7.50M|}
_ZZN3fmt3v106detail19parse_format_stringILb0EcZNS1_10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS5_EENS1_12vformat_argsIS5_E4typeENS1_10locale_refEE14format_handlerEEvNS8_IT0_EEOT1_EN6writerclEPKcSL_:
 2490|  3.75M|    FMT_CONSTEXPR void operator()(const Char* from, const Char* to) {
 2491|  3.75M|      if (from == to) return;
  ------------------
  |  Branch (2491:11): [True: 0, False: 3.75M]
  ------------------
 2492|  3.75M|      for (;;) {
 2493|  3.75M|        const Char* p = nullptr;
 2494|  3.75M|        if (!find<IS_CONSTEXPR>(from, to, Char('}'), p))
  ------------------
  |  Branch (2494:13): [True: 3.75M, False: 0]
  ------------------
 2495|  3.75M|          return handler_.on_text(from, to);
 2496|      0|        ++p;
 2497|      0|        if (p == to || *p != '}')
  ------------------
  |  Branch (2497:13): [True: 0, False: 0]
  |  Branch (2497:24): [True: 0, False: 0]
  ------------------
 2498|      0|          return handler_.on_error("unmatched '}' in format string");
 2499|      0|        handler_.on_text(from, p);
 2500|      0|        from = p + 1;
 2501|      0|      }
 2502|  3.75M|    }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2ENS0_17basic_string_viewIcEE:
 1275|   610k|  FMT_CONSTEXPR FMT_INLINE value(basic_string_view<char_type> val) {
 1276|   610k|    string.data = val.data();
 1277|   610k|    string.size = val.size();
 1278|   610k|  }
_ZN3fmt3v106detail10arg_mapperINS0_20basic_format_contextINS0_8appenderEcEEE3mapEPKc:
 1389|  3.17M|  FMT_CONSTEXPR FMT_INLINE auto map(const char_type* val) -> const char_type* {
 1390|  3.17M|    return val;
 1391|  3.17M|  }
_ZN3fmt3v106detail5valueINS0_20basic_format_contextINS0_8appenderEcEEEC2EPKc:
 1271|  3.17M|  FMT_CONSTEXPR FMT_INLINE value(const char_type* val) {
 1272|  3.17M|    string.data = val;
 1273|  3.17M|    if (is_constant_evaluated()) string.size = {};
  ------------------
  |  Branch (1273:9): [Folded - Ignored]
  ------------------
 1274|  3.17M|  }
_ZNK3fmt3v106detail6bufferIcE4dataEv:
  843|  4.21M|  FMT_CONSTEXPR auto data() const noexcept -> const T* { return ptr_; }

_ZN3fmt3v107vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE:
 1420|  4.21M|FMT_FUNC std::string vformat(string_view fmt, format_args args) {
 1421|       |  // Don't optimize the "{}" case to keep the binary size small and because it
 1422|       |  // can be better optimized in fmt::format anyway.
 1423|  4.21M|  auto buffer = memory_buffer();
 1424|  4.21M|  detail::vformat_to(buffer, fmt, args);
 1425|  4.21M|  return to_string(buffer);
 1426|  4.21M|}

_ZN3fmt3v106detail6bufferIcE6appendIcEEvPKT_S7_:
  884|  11.7M|void buffer<T>::append(const U* begin, const U* end) {
  885|  23.3M|  while (begin != end) {
  ------------------
  |  Branch (885:10): [True: 11.5M, False: 11.7M]
  ------------------
  886|  11.5M|    auto count = to_unsigned(end - begin);
  887|  11.5M|    try_reserve(size_ + count);
  888|  11.5M|    auto free_cap = capacity_ - size_;
  889|  11.5M|    if (free_cap < count) count = free_cap;
  ------------------
  |  Branch (889:9): [True: 0, False: 11.5M]
  ------------------
  890|  11.5M|    std::uninitialized_copy_n(begin, count, make_checked(ptr_ + size_, count));
  891|  11.5M|    size_ += count;
  892|  11.5M|    begin += count;
  893|  11.5M|  }
  894|  11.7M|}
_ZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refE:
 4281|  4.21M|                typename vformat_args<Char>::type args, locale_ref loc) {
 4282|  4.21M|  auto out = buffer_appender<Char>(buf);
 4283|  4.21M|  if (fmt.size() == 2 && equal2(fmt.data(), "{}")) {
  ------------------
  |  Branch (4283:7): [True: 0, False: 4.21M]
  |  Branch (4283:26): [True: 0, False: 0]
  ------------------
 4284|      0|    auto arg = args.get(0);
 4285|      0|    if (!arg) error_handler().on_error("argument not found");
  ------------------
  |  Branch (4285:9): [True: 0, False: 0]
  ------------------
 4286|      0|    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);
 4287|      0|    return;
 4288|      0|  }
 4289|       |
 4290|  4.21M|  struct format_handler : error_handler {
 4291|  4.21M|    basic_format_parse_context<Char> parse_context;
 4292|  4.21M|    buffer_context<Char> context;
 4293|       |
 4294|  4.21M|    format_handler(buffer_appender<Char> p_out, basic_string_view<Char> str,
 4295|  4.21M|                   basic_format_args<buffer_context<Char>> p_args,
 4296|  4.21M|                   locale_ref p_loc)
 4297|  4.21M|        : parse_context(str), context(p_out, p_args, p_loc) {}
 4298|       |
 4299|  4.21M|    void on_text(const Char* begin, const Char* end) {
 4300|  4.21M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4301|  4.21M|      context.advance_to(write<Char>(context.out(), text));
 4302|  4.21M|    }
 4303|       |
 4304|  4.21M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4305|  4.21M|      return parse_context.next_arg_id();
 4306|  4.21M|    }
 4307|  4.21M|    FMT_CONSTEXPR auto on_arg_id(int id) -> int {
 4308|  4.21M|      return parse_context.check_arg_id(id), id;
 4309|  4.21M|    }
 4310|  4.21M|    FMT_CONSTEXPR auto on_arg_id(basic_string_view<Char> id) -> int {
 4311|  4.21M|      int arg_id = context.arg_id(id);
 4312|  4.21M|      if (arg_id < 0) on_error("argument not found");
 4313|  4.21M|      return arg_id;
 4314|  4.21M|    }
 4315|       |
 4316|  4.21M|    FMT_INLINE void on_replacement_field(int id, const Char*) {
 4317|  4.21M|      auto arg = get_arg(context, id);
 4318|  4.21M|      context.advance_to(visit_format_arg(
 4319|  4.21M|          default_arg_formatter<Char>{context.out(), context.args(),
 4320|  4.21M|                                      context.locale()},
 4321|  4.21M|          arg));
 4322|  4.21M|    }
 4323|       |
 4324|  4.21M|    auto on_format_specs(int id, const Char* begin, const Char* end)
 4325|  4.21M|        -> const Char* {
 4326|  4.21M|      auto arg = get_arg(context, id);
 4327|  4.21M|      if (arg.type() == type::custom_type) {
 4328|  4.21M|        parse_context.advance_to(begin);
 4329|  4.21M|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4330|  4.21M|        return parse_context.begin();
 4331|  4.21M|      }
 4332|  4.21M|      auto specs = detail::dynamic_format_specs<Char>();
 4333|  4.21M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4334|  4.21M|      detail::handle_dynamic_spec<detail::width_checker>(
 4335|  4.21M|          specs.width, specs.width_ref, context);
 4336|  4.21M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4337|  4.21M|          specs.precision, specs.precision_ref, context);
 4338|  4.21M|      if (begin == end || *begin != '}')
 4339|  4.21M|        on_error("missing '}' in format string");
 4340|  4.21M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4341|  4.21M|      context.advance_to(visit_format_arg(f, arg));
 4342|  4.21M|      return begin;
 4343|  4.21M|    }
 4344|  4.21M|  };
 4345|  4.21M|  detail::parse_format_string<false>(fmt, format_handler(out, fmt, args, loc));
 4346|  4.21M|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEEC2ERKS4_:
  975|  4.21M|      : alloc_(alloc) {
  976|  4.21M|    this->set(store_, SIZE);
  977|  4.21M|    if (detail::is_constant_evaluated()) detail::fill_n(store_, SIZE, T());
  ------------------
  |  Branch (977:9): [Folded - Ignored]
  ------------------
  978|  4.21M|  }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE4growEm:
  945|    203|  FMT_CONSTEXPR20 void grow(size_t size) override {
  946|    203|    detail::abort_fuzzing_if(size > 5000);
  947|    203|    const size_t max_size = std::allocator_traits<Allocator>::max_size(alloc_);
  948|    203|    size_t old_capacity = this->capacity();
  949|    203|    size_t new_capacity = old_capacity + old_capacity / 2;
  950|    203|    if (size > new_capacity)
  ------------------
  |  Branch (950:9): [True: 63, False: 140]
  ------------------
  951|     63|      new_capacity = size;
  952|    140|    else if (new_capacity > max_size)
  ------------------
  |  Branch (952:14): [True: 0, False: 140]
  ------------------
  953|      0|      new_capacity = size > max_size ? size : max_size;
  ------------------
  |  Branch (953:22): [True: 0, False: 0]
  ------------------
  954|    203|    T* old_data = this->data();
  955|    203|    T* new_data =
  956|    203|        std::allocator_traits<Allocator>::allocate(alloc_, new_capacity);
  957|       |    // Suppress a bogus -Wstringop-overflow in gcc 13.1 (#3481).
  958|    203|    FMT_ASSERT(this->size() <= new_capacity, "");
  ------------------
  |  |  333|    203|      fmt::detail::ignore_unused((condition), (message))
  ------------------
  959|       |    // The following code doesn't throw, so the raw pointer above doesn't leak.
  960|    203|    std::uninitialized_copy(old_data, old_data + this->size(),
  961|    203|                            detail::make_checked(new_data, new_capacity));
  962|    203|    this->set(new_data, new_capacity);
  963|       |    // deallocate must not throw according to the standard, but even if it does,
  964|       |    // the buffer already uses the new storage and will deallocate it in
  965|       |    // destructor.
  966|    203|    if (old_data != store_) alloc_.deallocate(old_data, old_capacity);
  ------------------
  |  Branch (966:9): [True: 71, False: 132]
  ------------------
  967|    203|  }
_ZN3fmt3v106detail16abort_fuzzing_ifEb:
  290|    203|FMT_CONSTEXPR inline void abort_fuzzing_if(bool condition) {
  291|    203|  ignore_unused(condition);
  292|       |#ifdef FMT_FUZZ
  293|       |  if (condition) throw std::runtime_error("fuzzing limit reached");
  294|       |#endif
  295|    203|}
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEED2Ev:
  979|  4.21M|  FMT_CONSTEXPR20 ~basic_memory_buffer() { deallocate(); }
_ZN3fmt3v1019basic_memory_bufferIcLm500ENSt3__19allocatorIcEEE10deallocateEv:
  939|  4.21M|  FMT_CONSTEXPR20 void deallocate() {
  940|  4.21M|    T* data = this->data();
  941|  4.21M|    if (data != store_) alloc_.deallocate(data, this->capacity());
  ------------------
  |  Branch (941:9): [True: 132, False: 4.21M]
  ------------------
  942|  4.21M|  }
_ZN3fmt3v106detail12make_checkedIcEEPT_S4_m:
  572|  11.5M|template <typename T> constexpr auto make_checked(T* p, size_t) -> T* {
  573|  11.5M|  return p;
  574|  11.5M|}
_ZN3fmt3v106detail7reserveINS0_8appenderEEERT_S5_m:
  600|  11.7M|constexpr auto reserve(Iterator& it, size_t) -> Iterator& {
  601|  11.7M|  return it;
  602|  11.7M|}
_ZN3fmt3v106detail13base_iteratorINS0_8appenderEEET_S4_S4_:
  628|  11.7M|constexpr auto base_iterator(Iterator, Iterator it) -> Iterator {
  629|  11.7M|  return it;
  630|  11.7M|}
_ZN3fmt3v106detail17copy_str_noinlineIcPKcNS0_8appenderEEET1_T0_S7_S6_:
  657|  8.00M|                                                  OutputIt out) -> OutputIt {
  658|  8.00M|  return copy_str<OutChar>(begin, end, out);
  659|  8.00M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EE:
 3650|  8.00M|    -> OutputIt {
 3651|  8.00M|  auto it = reserve(out, value.size());
 3652|  8.00M|  it = copy_str_noinline<Char>(value.begin(), value.end(), it);
 3653|  8.00M|  return base_iterator(out, it);
 3654|  8.00M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler7on_textEPKcSF_:
 4299|  8.00M|    void on_text(const Char* begin, const Char* end) {
 4300|  8.00M|      auto text = basic_string_view<Char>(begin, to_unsigned(end - begin));
 4301|  8.00M|      context.advance_to(write<Char>(context.out(), text));
 4302|  8.00M|    }
_ZN3fmt3v106detail7get_argINS0_20basic_format_contextINS0_8appenderEcEEiEEDTcldtfp_3argfp0_EERT_T0_:
 3828|  3.78M|FMT_CONSTEXPR auto get_arg(Context& ctx, ID id) -> decltype(ctx.arg(id)) {
 3829|  3.78M|  auto arg = ctx.arg(id);
 3830|  3.78M|  if (!arg) ctx.on_error("argument not found");
  ------------------
  |  Branch (3830:7): [True: 0, False: 3.78M]
  ------------------
 3831|  3.78M|  return arg;
 3832|  3.78M|}
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler9on_arg_idEv:
 4304|  3.78M|    FMT_CONSTEXPR auto on_arg_id() -> int {
 4305|  3.78M|      return parse_context.next_arg_id();
 4306|  3.78M|    }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handler15on_format_specsEiPKcSF_:
 4325|  3.78M|        -> const Char* {
 4326|  3.78M|      auto arg = get_arg(context, id);
 4327|  3.78M|      if (arg.type() == type::custom_type) {
  ------------------
  |  Branch (4327:11): [True: 0, False: 3.78M]
  ------------------
 4328|      0|        parse_context.advance_to(begin);
 4329|      0|        visit_format_arg(custom_formatter<Char>{parse_context, context}, arg);
 4330|      0|        return parse_context.begin();
 4331|      0|      }
 4332|  3.78M|      auto specs = detail::dynamic_format_specs<Char>();
 4333|  3.78M|      begin = parse_format_specs(begin, end, specs, parse_context, arg.type());
 4334|  3.78M|      detail::handle_dynamic_spec<detail::width_checker>(
 4335|  3.78M|          specs.width, specs.width_ref, context);
 4336|  3.78M|      detail::handle_dynamic_spec<detail::precision_checker>(
 4337|  3.78M|          specs.precision, specs.precision_ref, context);
 4338|  3.78M|      if (begin == end || *begin != '}')
  ------------------
  |  Branch (4338:11): [True: 0, False: 3.78M]
  |  Branch (4338:27): [True: 0, False: 3.78M]
  ------------------
 4339|      0|        on_error("missing '}' in format string");
 4340|  3.78M|      auto f = arg_formatter<Char>{context.out(), specs, context.locale()};
 4341|  3.78M|      context.advance_to(visit_format_arg(f, arg));
 4342|  3.78M|      return begin;
 4343|  3.78M|    }
_ZN3fmt3v106detail19handle_dynamic_specINS1_13width_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3837|  3.78M|                                       Context& ctx) {
 3838|  3.78M|  switch (ref.kind) {
  ------------------
  |  Branch (3838:11): [True: 0, False: 3.78M]
  ------------------
 3839|  3.78M|  case arg_id_kind::none:
  ------------------
  |  Branch (3839:3): [True: 3.78M, False: 0]
  ------------------
 3840|  3.78M|    break;
 3841|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3841:3): [True: 0, False: 3.78M]
  ------------------
 3842|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3843|      0|                                              ctx.error_handler());
 3844|      0|    break;
 3845|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3845:3): [True: 0, False: 3.78M]
  ------------------
 3846|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3847|      0|                                              ctx.error_handler());
 3848|      0|    break;
 3849|  3.78M|  }
 3850|  3.78M|}
_ZN3fmt3v106detail19handle_dynamic_specINS1_17precision_checkerENS0_20basic_format_contextINS0_8appenderEcEEEEvRiNS1_7arg_refINT0_9char_typeEEERS9_:
 3837|  3.78M|                                       Context& ctx) {
 3838|  3.78M|  switch (ref.kind) {
  ------------------
  |  Branch (3838:11): [True: 0, False: 3.78M]
  ------------------
 3839|  3.78M|  case arg_id_kind::none:
  ------------------
  |  Branch (3839:3): [True: 3.78M, False: 0]
  ------------------
 3840|  3.78M|    break;
 3841|      0|  case arg_id_kind::index:
  ------------------
  |  Branch (3841:3): [True: 0, False: 3.78M]
  ------------------
 3842|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.index),
 3843|      0|                                              ctx.error_handler());
 3844|      0|    break;
 3845|      0|  case arg_id_kind::name:
  ------------------
  |  Branch (3845:3): [True: 0, False: 3.78M]
  ------------------
 3846|      0|    value = detail::get_dynamic_spec<Handler>(get_arg(ctx, ref.val.name),
 3847|      0|                                              ctx.error_handler());
 3848|      0|    break;
 3849|  3.78M|  }
 3850|  3.78M|}
_ZN3fmt3v106detail13arg_formatterIcEclIPKcEENS0_8appenderET_:
 3758|  3.17M|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3759|  3.17M|    return detail::write(out, value, specs, locale);
 3760|  3.17M|  }
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_PKT_RKNS0_12format_specsIS5_EENS1_10locale_refE:
 2369|  3.17M|    -> OutputIt {
 2370|  3.17M|  return specs.type != presentation_type::pointer
  ------------------
  |  Branch (2370:10): [True: 3.17M, False: 0]
  ------------------
 2371|  3.17M|             ? write(out, basic_string_view<Char>(s), specs, {})
 2372|  3.17M|             : write_ptr<Char>(out, bit_cast<uintptr_t>(s), &specs);
 2373|  3.17M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewINS0_13type_identityIT_E4typeEEERKNS0_12format_specsIS7_EENS1_10locale_refE:
 2363|  3.78M|    -> OutputIt {
 2364|  3.78M|  return write(out, s, specs);
 2365|  3.78M|}
_ZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EE:
 2340|  3.78M|                         const format_specs<Char>& specs) -> OutputIt {
 2341|  3.78M|  auto data = s.data();
 2342|  3.78M|  auto size = s.size();
 2343|  3.78M|  if (specs.precision >= 0 && to_unsigned(specs.precision) < size)
  ------------------
  |  Branch (2343:7): [True: 0, False: 3.78M]
  |  Branch (2343:31): [True: 0, False: 0]
  ------------------
 2344|      0|    size = code_point_index(s, to_unsigned(specs.precision));
 2345|  3.78M|  bool is_debug = specs.type == presentation_type::debug;
 2346|  3.78M|  size_t width = 0;
 2347|  3.78M|  if (specs.width != 0) {
  ------------------
  |  Branch (2347:7): [True: 0, False: 3.78M]
  ------------------
 2348|      0|    if (is_debug)
  ------------------
  |  Branch (2348:9): [True: 0, False: 0]
  ------------------
 2349|      0|      width = write_escaped_string(counting_iterator{}, s).count();
 2350|      0|    else
 2351|      0|      width = compute_width(basic_string_view<Char>(data, size));
 2352|      0|  }
 2353|  3.78M|  return write_padded(out, specs, size, width,
 2354|  3.78M|                      [=](reserve_iterator<OutputIt> it) {
 2355|  3.78M|                        if (is_debug) return write_escaped_string(it, s);
 2356|  3.78M|                        return copy_str<Char>(data, data + size, it);
 2357|  3.78M|                      });
 2358|  3.78M|}
_ZN3fmt3v106detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS9_EEEUlS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_:
 1795|  3.78M|                                size_t size, size_t width, F&& f) -> OutputIt {
 1796|  3.78M|  static_assert(align == align::left || align == align::right, "");
 1797|  3.78M|  unsigned spec_width = to_unsigned(specs.width);
 1798|  3.78M|  size_t padding = spec_width > width ? spec_width - width : 0;
  ------------------
  |  Branch (1798:20): [True: 0, False: 3.78M]
  ------------------
 1799|       |  // Shifts are encoded as string literals because static constexpr is not
 1800|       |  // supported in constexpr functions.
 1801|  3.78M|  auto* shifts = align == align::left ? "\x1f\x1f\x00\x01" : "\x00\x1f\x00\x01";
  ------------------
  |  Branch (1801:18): [Folded - Ignored]
  ------------------
 1802|  3.78M|  size_t left_padding = padding >> shifts[specs.align];
 1803|  3.78M|  size_t right_padding = padding - left_padding;
 1804|  3.78M|  auto it = reserve(out, size + padding * specs.fill.size());
 1805|  3.78M|  if (left_padding != 0) it = fill(it, left_padding, specs.fill);
  ------------------
  |  Branch (1805:7): [True: 0, False: 3.78M]
  ------------------
 1806|  3.78M|  it = f(it);
 1807|  3.78M|  if (right_padding != 0) it = fill(it, right_padding, specs.fill);
  ------------------
  |  Branch (1807:7): [True: 0, False: 3.78M]
  ------------------
 1808|  3.78M|  return base_iterator(out, it);
 1809|  3.78M|}
_ZZN3fmt3v106detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_12format_specsIS6_EEENKUlS3_E_clES3_:
 2354|  3.78M|                      [=](reserve_iterator<OutputIt> it) {
 2355|  3.78M|                        if (is_debug) return write_escaped_string(it, s);
  ------------------
  |  Branch (2355:29): [True: 0, False: 3.78M]
  ------------------
 2356|  3.78M|                        return copy_str<Char>(data, data + size, it);
 2357|  3.78M|                      });
_ZN3fmt3v106detail13arg_formatterIcEclINS0_17basic_string_viewIcEEEENS0_8appenderET_:
 3758|   610k|  FMT_CONSTEXPR FMT_INLINE auto operator()(T value) -> iterator {
 3759|   610k|    return detail::write(out, value, specs, locale);
 3760|   610k|  }
_ZZN3fmt3v106detail10vformat_toIcEEvRNS1_6bufferIT_EENS0_17basic_string_viewIS4_EENS1_12vformat_argsIS4_E4typeENS1_10locale_refEEN14format_handlerC2ENS0_8appenderENS7_IcEENS0_17basic_format_argsINS0_20basic_format_contextISE_cEEEESC_:
 4297|  4.21M|        : parse_context(str), context(p_out, p_args, p_loc) {}
_ZN3fmt3v109to_stringIcLm500EEENSt3__112basic_stringIT_NS2_11char_traitsIS4_EENS2_9allocatorIS4_EEEERKNS0_19basic_memory_bufferIS4_XT0_ES8_EE:
 4271|  4.21M|    -> std::basic_string<Char> {
 4272|  4.21M|  auto size = buf.size();
 4273|  4.21M|  detail::assume(size < std::basic_string<Char>().max_size());
 4274|  4.21M|  return std::basic_string<Char>(buf.data(), size);
 4275|  4.21M|}
_ZN3fmt3v106detail6assumeEb:
  541|  4.21M|FMT_INLINE void assume(bool condition) {
  542|  4.21M|  (void)condition;
  543|  4.21M|#if FMT_HAS_BUILTIN(__builtin_assume) && !FMT_ICC_VERSION
  544|  4.21M|  __builtin_assume(condition);
  545|  4.21M|#endif
  546|  4.21M|}

LLVMFuzzerTestOneInput:
   14|  33.9k|{
   15|  33.9k|    disable_output();
   16|       |
   17|  33.9k|    const phi::string_view source = phi::string_view(reinterpret_cast<const char*>(data), size);
   18|       |
   19|  33.9k|    EmptySourceManager source_manager;
   20|  33.9k|    DiagnosticEngine   diagnostic_engine;
   21|  33.9k|    Lexer              lexer{&diagnostic_engine};
   22|  33.9k|    auto               document = phi::make_not_null_scope<ASTDocument>();
   23|       |
   24|  33.9k|    Parser parser{&source_manager, &diagnostic_engine, &lexer};
   25|  33.9k|    parser.ParseString(document, "Fuzz.au3", source);
   26|       |
   27|  33.9k|    return 0;
   28|  33.9k|}

_ZN10OpenAutoIt27ASTArraySubscriptExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  45.5k|    {
   18|  45.5k|        m_NodeType = ASTNodeType::ArraySubscriptExpression;
   19|  45.5k|    }

_ZN10OpenAutoIt19ASTBinaryExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEENS_9TokenKindES5_:
   19|   239k|    {
   20|   239k|        m_NodeType = ASTNodeType::BinaryExpression;
   21|   239k|    }

_ZN10OpenAutoIt17ASTBooleanLiteralC2EN3phi7booleanE:
   17|  43.8k|    {
   18|  43.8k|        m_NodeType = ASTNodeType::BooleanLiteral;
   19|  43.8k|    }

_ZN10OpenAutoIt11ASTDocument15AppendStatementEN3phi18not_null_scope_ptrINS_12ASTStatementEEE:
   19|   384k|    {
   20|   384k|        m_Statements.emplace_back(phi::move(child));
   21|   384k|    }
_ZN10OpenAutoIt11ASTDocument14AppendFunctionEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
   24|  1.28k|    {
   25|  1.28k|        m_Functions.emplace_back(phi::move(child));
   26|  1.28k|    }

_ZN10OpenAutoIt16ASTExitStatementC2EON3phi9scope_ptrINS_13ASTExpressionEEE:
   17|   165k|    {
   18|   165k|        m_NodeType = ASTNodeType::ExitStatement;
   19|   165k|    }

_ZN10OpenAutoIt13ASTExpression18IsValidAsStatementEv:
   12|   605k|    {
   13|   605k|        switch (m_NodeType)
   14|   605k|        {
   15|  43.9k|            case ASTNodeType::FunctionCallExpression:
  ------------------
  |  Branch (15:13): [True: 43.9k, False: 561k]
  ------------------
   16|  76.6k|            case ASTNodeType::UnaryExpression:
  ------------------
  |  Branch (16:13): [True: 32.6k, False: 572k]
  ------------------
   17|   132k|            case ASTNodeType::VariableExpression:
  ------------------
  |  Branch (17:13): [True: 55.5k, False: 550k]
  ------------------
   18|   132k|                return true;
   19|       |
   20|   473k|            default:
  ------------------
  |  Branch (20:13): [True: 473k, False: 132k]
  ------------------
   21|   473k|                return false;
   22|   605k|        }
   23|   605k|    }

_ZN10OpenAutoIt22ASTExpressionStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   16|   605k|    {
   17|   605k|        m_NodeType = ASTNodeType::ExpressionStatement;
   18|   605k|    }

_ZN10OpenAutoIt15ASTFloatLiteralC2EN3phi14floating_pointIdEE:
   16|   373k|    {
   17|   373k|        m_NodeType = ASTNodeType::FloatLiteral;
   18|   373k|    }

_ZNK10OpenAutoIt25ASTFunctionCallExpression12FunctionNameEv:
   25|   508k|    {
   26|   508k|        if (m_IsBuiltIn)
  ------------------
  |  Branch (26:13): [True: 8.50k, False: 500k]
  ------------------
   27|  8.50k|        {
   28|  8.50k|            return enum_name(m_BuiltInFunction);
   29|  8.50k|        }
   30|       |
   31|   500k|        return m_FunctionName;
   32|   508k|    }
_ZN10OpenAutoIt25ASTFunctionCallExpressionC2Ev:
   20|   581k|    {
   21|   581k|        m_NodeType = ASTNodeType::FunctionCallExpression;
   22|   581k|    }

_ZN10OpenAutoIt14ASTIfStatementC2EONS_6IfCaseE:
   24|   106k|    {
   25|   106k|        m_NodeType = ASTNodeType::IfStatement;
   26|   106k|    }

_ZN10OpenAutoIt17ASTIntegerLiteralC2EN3phi7integerIlEE:
   16|   981k|    {
   17|   981k|        m_NodeType = ASTNodeType::IntegerLiteral;
   18|   981k|    }

_ZN10OpenAutoIt17ASTKeywordLiteralC2ENS_9TokenKindE:
   18|   144k|    {
   19|   144k|        m_NodeType = ASTNodeType::KeywordLiteral;
   20|   144k|        PHI_ASSERT(keyword == TokenKind::KW_Default || keyword == TokenKind::KW_Null);
   21|   144k|    }

_ZN10OpenAutoIt18ASTMacroExpressionC2ENS_9TokenKindE:
   18|  5.70k|    {
   19|  5.70k|        m_NodeType = ASTNodeType::MacroExpression;
   20|  5.70k|        PHI_ASSERT(static_cast<phi::size_t>(m_Macro) >= MacroFirst &&
   21|  5.70k|                   static_cast<phi::size_t>(m_Macro) <= MacroLast);
   22|  5.70k|    }

_ZN10OpenAutoIt7ASTNodeD2Ev:
   73|  4.09M|    virtual ~ASTNode() = default;
_ZN10OpenAutoIt7ASTNodeC2Ev:
   71|  4.09M|    ASTNode() = default;
_ZNK10OpenAutoIt7ASTNode4NameEv:
   76|   473k|    {
   77|   473k|        PHI_ASSERT(m_NodeType != ASTNodeType::NONE);
   78|   473k|        PHI_ASSERT(m_NodeType != ASTNodeType::COUNT);
   79|       |
   80|   473k|        return enum_name(m_NodeType);
   81|   473k|    }
_ZN10OpenAutoIt9enum_nameENS_11ASTNodeTypeE:
   49|   473k|{
   50|   473k|    switch (node_type)
   51|   473k|    {
   52|      0|#define OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(name)                                                   \
   53|      0|    case ASTNodeType::name:                                                                        \
   54|      0|        return "AST" #name;
   55|       |
   56|      0|        OPENAUTOIT_ENUM_AST_NODE_TYPE()
  ------------------
  |  |   14|  16.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ArraySubscriptExpression)                                   \
  |  |  ------------------
  |  |  |  |   53|  16.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 16.1k, False: 457k]
  |  |  |  |  ------------------
  |  |  |  |   54|  16.1k|        return "AST" #name;
  |  |  ------------------
  |  |   15|  70.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BinaryExpression)                                           \
  |  |  ------------------
  |  |  |  |   53|  70.0k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 70.0k, False: 403k]
  |  |  |  |  ------------------
  |  |  |  |   54|  70.0k|        return "AST" #name;
  |  |  ------------------
  |  |   16|  70.0k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(BooleanLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|  20.7k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 20.7k, False: 452k]
  |  |  |  |  ------------------
  |  |  |  |   54|  20.7k|        return "AST" #name;
  |  |  ------------------
  |  |   17|  20.7k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExitStatement)                                              \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 473k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   18|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(ExpressionStatement)                                        \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 473k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   19|   105k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FloatLiteral)                                               \
  |  |  ------------------
  |  |  |  |   53|   105k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 105k, False: 367k]
  |  |  |  |  ------------------
  |  |  |  |   54|   105k|        return "AST" #name;
  |  |  ------------------
  |  |   20|   105k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(FunctionCallExpression)                                     \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 473k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   21|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IfStatement)                                                \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 473k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   22|   149k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(IntegerLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|   149k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 149k, False: 324k]
  |  |  |  |  ------------------
  |  |  |  |   54|   149k|        return "AST" #name;
  |  |  ------------------
  |  |   23|   149k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(KeywordLiteral)                                             \
  |  |  ------------------
  |  |  |  |   53|  37.7k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 37.7k, False: 435k]
  |  |  |  |  ------------------
  |  |  |  |   54|  37.7k|        return "AST" #name;
  |  |  ------------------
  |  |   24|  37.7k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(MacroExpression)                                            \
  |  |  ------------------
  |  |  |  |   53|  3.92k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 3.92k, False: 469k]
  |  |  |  |  ------------------
  |  |  |  |   54|  3.92k|        return "AST" #name;
  |  |  ------------------
  |  |   25|  18.1k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(StringLiteral)                                              \
  |  |  ------------------
  |  |  |  |   53|  18.1k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 18.1k, False: 455k]
  |  |  |  |  ------------------
  |  |  |  |   54|  18.1k|        return "AST" #name;
  |  |  ------------------
  |  |   26|  51.5k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(TernaryIfExpression)                                        \
  |  |  ------------------
  |  |  |  |   53|  51.5k|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 51.5k, False: 421k]
  |  |  |  |  ------------------
  |  |  |  |   54|  51.5k|        return "AST" #name;
  |  |  ------------------
  |  |   27|  51.5k|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(UnaryExpression)                                            \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 473k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   28|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableAssignment)                                         \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 473k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   29|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(VariableExpression)                                         \
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 473k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  |  |   30|      0|    OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL(WhileStatement)
  |  |  ------------------
  |  |  |  |   53|      0|    case ASTNodeType::name:                                                                        \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (53:5): [True: 0, False: 473k]
  |  |  |  |  ------------------
  |  |  |  |   54|      0|        return "AST" #name;
  |  |  ------------------
  ------------------
   57|       |
   58|      0|#undef OPENAUTOIT_ENUM_AST_NODE_TYPE_IMPL
   59|       |
   60|      0|        default:
  ------------------
  |  Branch (60:9): [True: 0, False: 473k]
  ------------------
   61|      0|            PHI_ASSERT_NOT_REACHED();
   62|      0|            return "";
   63|   473k|    }
   64|   473k|}

_ZN10OpenAutoIt16ASTStringLiteralC2Ev:
   14|  52.9k|    {
   15|  52.9k|        m_NodeType = ASTNodeType::StringLiteral;
   16|  52.9k|    }

_ZN10OpenAutoIt22ASTTernaryIfExpressionC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEES5_S5_:
   19|  59.7k|    {
   20|  59.7k|        m_NodeType = ASTNodeType::TernaryIfExpression;
   21|  59.7k|    }

_ZN10OpenAutoIt18ASTUnaryExpressionC2ENS_9TokenKindEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   15|   120k|    {
   16|   120k|        m_NodeType = ASTNodeType::UnaryExpression;
   17|   120k|    }

_ZN10OpenAutoIt21ASTVariableAssignmentC2Ev:
   19|   249k|    {
   20|   249k|        m_NodeType = ASTNodeType::VariableAssignment;
   21|   249k|    }

_ZN10OpenAutoIt21ASTVariableExpressionC2Ev:
   14|   164k|    {
   15|   164k|        m_NodeType = ASTNodeType::VariableExpression;
   16|   164k|    }

_ZN10OpenAutoIt17ASTWhileStatementC2EON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
   17|  43.1k|    {
   18|  43.1k|        m_NodeType = ASTNodeType::WhileStatement;
   19|  43.1k|    }

_ZN10OpenAutoIt17DiagnosticBuilder7WarningIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   55|   434k|    {
   56|   434k|        m_Diagnostics.emplace_back(Diagnostic{
   57|   434k|                id, DiagnosticLevel::Warning, location,
   58|   434k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   59|       |
   60|   434k|        return *this;
   61|   434k|    }
_ZN10OpenAutoIt17DiagnosticBuilder10FatalErrorIJNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEEEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   75|     22|    {
   76|     22|        m_Diagnostics.emplace_back(Diagnostic{
   77|     22|                id, DiagnosticLevel::FatalError, location,
   78|     22|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   79|       |
   80|     22|        return *this;
   81|     22|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA9_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|   262k|    {
   66|   262k|        m_Diagnostics.emplace_back(Diagnostic{
   67|   262k|                id, DiagnosticLevel::Error, location,
   68|   262k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|   262k|        return *this;
   71|   262k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA18_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|      9|    {
   66|      9|        m_Diagnostics.emplace_back(Diagnostic{
   67|      9|                id, DiagnosticLevel::Error, location,
   68|      9|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|      9|        return *this;
   71|      9|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA4_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  1.10k|    {
   66|  1.10k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  1.10k|                id, DiagnosticLevel::Error, location,
   68|  1.10k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  1.10k|        return *this;
   71|  1.10k|    }
_ZN10OpenAutoIt17DiagnosticBuilder4NoteIJEEERS0_NS_14SourceLocationENSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEDpOT_:
   31|  1.10k|    {
   32|  1.10k|        PHI_ASSERT(!m_Diagnostics.empty());
   33|       |
   34|  1.10k|        m_Diagnostics.back().AddNote(
   35|  1.10k|                Diagnostic{DiagnosticId::None, DiagnosticLevel::Note, location,
   36|  1.10k|                           std::string{fmt::format(fmt::runtime(format_string),
   37|  1.10k|                                                   phi::forward<ArgsT>(args)...)}});
   38|       |
   39|  1.10k|        return *this;
   40|  1.10k|    }
_ZN10OpenAutoIt17DiagnosticBuilder5ErrorIJRA25_KcEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   65|  1.48k|    {
   66|  1.48k|        m_Diagnostics.emplace_back(Diagnostic{
   67|  1.48k|                id, DiagnosticLevel::Error, location,
   68|  1.48k|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   69|       |
   70|  1.48k|        return *this;
   71|  1.48k|    }
_ZN10OpenAutoIt17DiagnosticBuilder10FatalErrorIJEEERS0_NS_12DiagnosticIdENS_14SourceLocationEDpOT_:
   75|      4|    {
   76|      4|        m_Diagnostics.emplace_back(Diagnostic{
   77|      4|                id, DiagnosticLevel::FatalError, location,
   78|      4|                fmt::format(fmt::runtime(DiagnosticIdMessage(id)), phi::forward<ArgsT>(args)...)});
   79|       |
   80|      4|        return *this;
   81|      4|    }

_ZN10OpenAutoIt19DiagnosticIdMessageENS_12DiagnosticIdE:
   80|   699k|{
   81|   699k|    PHI_ASSERT(id != DiagnosticId::None);
   82|       |
   83|   699k|    switch (id)
   84|   699k|    {
   85|      0|#define OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EnumName, FlagName, DiagnosticMessage)                 \
   86|      0|    case DiagnosticId::EnumName: {                                                                 \
   87|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
   88|      0|        return DiagnosticMessage;                                                                  \
   89|      0|    }
   90|       |
   91|      0|        OPENAUTOIT_ENUM_DIAGNOSTIC_IDS()
  ------------------
  |  |   12|      0|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(None, "", "")                                              \
  |  |  ------------------
  |  |  |  |   86|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (86:5): [True: 0, False: 699k]
  |  |  |  |  ------------------
  |  |  |  |   87|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   88|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   89|      0|    }
  |  |  ------------------
  |  |   13|      0|    /* Lexer warnings */                                                                           \
  |  |   14|   434k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(NullCharacter, "-Wnull-character",                         \
  |  |  ------------------
  |  |  |  |   86|   434k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (86:5): [True: 434k, False: 265k]
  |  |  |  |  ------------------
  |  |  |  |   87|   434k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   88|   434k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   89|   434k|    }
  |  |  ------------------
  |  |   15|   434k|                                        "null character ignored")                                  \
  |  |   16|   434k|    /* Parser error */                                                                             \
  |  |   17|   434k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(UnexpectedEndOfFile, "",                                   \
  |  |  ------------------
  |  |  |  |   86|      9|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (86:5): [True: 9, False: 699k]
  |  |  |  |  ------------------
  |  |  |  |   87|      9|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   88|      9|        return DiagnosticMessage;                                                                  \
  |  |  |  |   89|      9|    }
  |  |  ------------------
  |  |   18|      9|                                        "unexpected end of file while parsing {:s}")               \
  |  |   19|   265k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(Expected, "", "expected {:s}")                             \
  |  |  ------------------
  |  |  |  |   86|   265k|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (86:5): [True: 265k, False: 434k]
  |  |  |  |  ------------------
  |  |  |  |   87|   265k|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   88|   265k|        return DiagnosticMessage;                                                                  \
  |  |  |  |   89|   265k|    }
  |  |  ------------------
  |  |   20|   265k|    /* Parser fatal error */                                                                       \
  |  |   21|   265k|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNotFound, "", "'{:s}' file not found")                 \
  |  |  ------------------
  |  |  |  |   86|     15|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (86:5): [True: 15, False: 699k]
  |  |  |  |  ------------------
  |  |  |  |   87|     15|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   88|     15|        return DiagnosticMessage;                                                                  \
  |  |  |  |   89|     15|    }
  |  |  ------------------
  |  |   22|     15|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(EmptyFilename, "", "empty filename")                       \
  |  |  ------------------
  |  |  |  |   86|      4|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (86:5): [True: 4, False: 699k]
  |  |  |  |  ------------------
  |  |  |  |   87|      4|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   88|      4|        return DiagnosticMessage;                                                                  \
  |  |  |  |   89|      4|    }
  |  |  ------------------
  |  |   23|      4|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(IncludeNestingTooDeeply, "", "#include nested too deeply") \
  |  |  ------------------
  |  |  |  |   86|      0|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (86:5): [True: 0, False: 699k]
  |  |  |  |  ------------------
  |  |  |  |   87|      0|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   88|      0|        return DiagnosticMessage;                                                                  \
  |  |  |  |   89|      0|    }
  |  |  ------------------
  |  |   24|      7|    OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL(FileNameTooLong, "",                                       \
  |  |  ------------------
  |  |  |  |   86|      7|    case DiagnosticId::EnumName: {                                                                 \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (86:5): [True: 7, False: 699k]
  |  |  |  |  ------------------
  |  |  |  |   87|      7|        PHI_ASSERT(phi::string_length(DiagnosticMessage) != 0u);                                   \
  |  |  |  |   88|      7|        return DiagnosticMessage;                                                                  \
  |  |  |  |   89|      7|    }
  |  |  ------------------
  |  |   25|      7|                                        "cannot open file '{:s}': File name too long")
  ------------------
   92|       |
   93|      0|#undef OPENAUTOIT_ENUM_DIAGNOSTIC_IDS_IMPL
   94|       |
   95|      0|        default:
  ------------------
  |  Branch (95:9): [True: 0, False: 699k]
  ------------------
   96|      0|            PHI_ASSERT_NOT_REACHED();
   97|   699k|    }
   98|   699k|}

_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindE:
   45|  4.26M|    {
   46|  4.26M|        Token token{kind,
   47|  4.26M|                    m_Source.substring_view(
   48|  4.26M|                            static_cast<typename phi::string_view::size_type::value_type>(
   49|  4.26M|                                    m_Iterator - m_Source.cbegin()),
   50|  4.26M|                            1u),
   51|  4.26M|                    CurrentSourceLocation()};
   52|       |
   53|       |        // 1 character sized token
   54|  4.26M|        ++m_Column;
   55|       |
   56|  4.26M|        return token;
   57|  4.26M|    }
_ZN10OpenAutoIt5Lexer14ConstructTokenENS_9TokenKindEPKc:
   60|  5.82M|    {
   61|  5.82M|        Token token{kind, TokenText(token_begin), CurrentSourceLocation()};
   62|       |
   63|       |        // Consume the amount of characters that make up our new token
   64|  5.82M|        m_Column += static_cast<typename phi::usize::value_type>(m_Iterator - token_begin);
   65|       |
   66|  5.82M|        return token;
   67|  5.82M|    }
_ZN10OpenAutoIt5Lexer9TokenTextEPKc:
   70|  9.28M|    {
   71|  9.28M|        return m_Source.substring_view(token_begin, m_Iterator);
   72|  9.28M|    }
_ZNK10OpenAutoIt5Lexer21CurrentSourceLocationEv:
   75|  10.5M|    {
   76|  10.5M|        return BuildSourceLocation(m_LineNumber, m_Column);
   77|  10.5M|    }
_ZNK10OpenAutoIt5Lexer19BuildSourceLocationEN3phi7integerImEES3_:
   81|  10.5M|    {
   82|  10.5M|        return {m_SourceFile, line_number, column};
   83|  10.5M|    }

_ZN10OpenAutoIt6Parser15IsUnaryOperatorENS_9TokenKindE:
   70|  5.83M|    {
   71|  5.83M|        switch (token_kind)
   72|  5.83M|        {
   73|   198k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (73:13): [True: 198k, False: 5.63M]
  ------------------
   74|   396k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (74:13): [True: 198k, False: 5.63M]
  ------------------
   75|   399k|            case TokenKind::KW_Not:
  ------------------
  |  Branch (75:13): [True: 2.23k, False: 5.83M]
  ------------------
   76|   399k|                return true;
   77|       |
   78|  5.43M|            default:
  ------------------
  |  Branch (78:13): [True: 5.43M, False: 399k]
  ------------------
   79|  5.43M|                return false;
   80|  5.83M|        }
   81|  5.83M|    }
_ZN10OpenAutoIt6Parser16IsBinaryOperatorENS_9TokenKindE:
   85|  2.05M|    {
   86|  2.05M|        switch (token_kind)
   87|  2.05M|        {
   88|    194|            case TokenKind::KW_And:
  ------------------
  |  Branch (88:13): [True: 194, False: 2.05M]
  ------------------
   89|    439|            case TokenKind::KW_Or:
  ------------------
  |  Branch (89:13): [True: 245, False: 2.05M]
  ------------------
   90|   160k|            case TokenKind::OP_Equals:
  ------------------
  |  Branch (90:13): [True: 160k, False: 1.89M]
  ------------------
   91|   162k|            case TokenKind::OP_PlusEquals:
  ------------------
  |  Branch (91:13): [True: 2.15k, False: 2.05M]
  ------------------
   92|   163k|            case TokenKind::OP_MinusEquals:
  ------------------
  |  Branch (92:13): [True: 491, False: 2.05M]
  ------------------
   93|   163k|            case TokenKind::OP_MultiplyEquals:
  ------------------
  |  Branch (93:13): [True: 718, False: 2.05M]
  ------------------
   94|   164k|            case TokenKind::OP_DivideEquals:
  ------------------
  |  Branch (94:13): [True: 363, False: 2.05M]
  ------------------
   95|   178k|            case TokenKind::OP_Plus:
  ------------------
  |  Branch (95:13): [True: 14.2k, False: 2.03M]
  ------------------
   96|   234k|            case TokenKind::OP_Minus:
  ------------------
  |  Branch (96:13): [True: 55.8k, False: 1.99M]
  ------------------
   97|   237k|            case TokenKind::OP_Multiply:
  ------------------
  |  Branch (97:13): [True: 3.65k, False: 2.04M]
  ------------------
   98|   258k|            case TokenKind::OP_Divide:
  ------------------
  |  Branch (98:13): [True: 20.2k, False: 2.03M]
  ------------------
   99|   286k|            case TokenKind::OP_Raise:
  ------------------
  |  Branch (99:13): [True: 28.1k, False: 2.02M]
  ------------------
  100|   287k|            case TokenKind::OP_EqualsEquals:
  ------------------
  |  Branch (100:13): [True: 1.53k, False: 2.05M]
  ------------------
  101|   292k|            case TokenKind::OP_NotEqual:
  ------------------
  |  Branch (101:13): [True: 4.44k, False: 2.04M]
  ------------------
  102|   299k|            case TokenKind::OP_GreaterThan:
  ------------------
  |  Branch (102:13): [True: 6.80k, False: 2.04M]
  ------------------
  103|   299k|            case TokenKind::OP_GreaterThanEqual:
  ------------------
  |  Branch (103:13): [True: 412, False: 2.05M]
  ------------------
  104|   309k|            case TokenKind::OP_LessThan:
  ------------------
  |  Branch (104:13): [True: 10.0k, False: 2.04M]
  ------------------
  105|   309k|            case TokenKind::OP_LessThanEqual:
  ------------------
  |  Branch (105:13): [True: 402, False: 2.05M]
  ------------------
  106|   344k|            case TokenKind::OP_Concatenate:
  ------------------
  |  Branch (106:13): [True: 35.0k, False: 2.01M]
  ------------------
  107|   365k|            case TokenKind::OP_ConcatenateEquals:
  ------------------
  |  Branch (107:13): [True: 20.1k, False: 2.03M]
  ------------------
  108|   365k|                return true;
  109|       |
  110|  1.68M|            default:
  ------------------
  |  Branch (110:13): [True: 1.68M, False: 365k]
  ------------------
  111|  1.68M|                return false;
  112|  2.05M|        }
  113|  2.05M|    }
_ZN10OpenAutoIt6Parser24AppendFunctionToDocumentEN3phi18not_null_scope_ptrINS_21ASTFunctionDefinitionEEE:
  154|  1.28k|    {
  155|  1.28k|        m_Document->AppendFunction(phi::move(function));
  156|  1.28k|    }
_ZN10OpenAutoIt6Parser25AppendStatementToDocumentINS_12ASTStatementEEEvN3phi18not_null_scope_ptrIT_EE:
  148|   384k|    {
  149|   384k|        m_Document->AppendStatement(phi::move(statement));
  150|   384k|    }

_ZN10OpenAutoIt14SourceLocation7InvalidEv:
   23|  33.9k|    {
   24|  33.9k|        return {nullptr, 1u, 1u};
   25|  33.9k|    }

_ZN10OpenAutoIt13SourceManagerC2Ev:
   21|  33.9k|    SourceManager()          = default;

_ZN10OpenAutoIt5TokenC2ENS_9TokenKindEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_14SourceLocationE:
   27|  10.0M|    {}
_ZNK10OpenAutoIt5Token12GetTokenKindEv:
   39|  59.9M|    {
   40|  59.9M|        return m_Kind;
   41|  59.9M|    }
_ZNK10OpenAutoIt5Token7GetTextEv:
   44|  6.20M|    {
   45|  6.20M|        return m_Text;
   46|  6.20M|    }
_ZNK10OpenAutoIt5Token16GetBeginLocationEv:
   64|   263k|    {
   65|   263k|        return m_SourceLocation;
   66|   263k|    }
_ZNK10OpenAutoIt5Token14GetEndLocationEv:
   69|  2.59k|    {
   70|  2.59k|        return {.source_file = m_SourceLocation.source_file,
   71|  2.59k|                .line_number = m_SourceLocation.line_number,
   72|  2.59k|                .column      = m_SourceLocation.column + m_Text.length()};
   73|  2.59k|    }
_ZNK10OpenAutoIt5Token17IsBuiltInFunctionEv:
   88|  3.25M|    {
   89|  3.25M|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
   90|       |
   91|  3.25M|        if (underlying_value >= OpenAutoIt::BuiltInFirst &&
  ------------------
  |  Branch (91:13): [True: 25.7k, False: 3.22M]
  ------------------
   92|  3.25M|            underlying_value <= OpenAutoIt::BuiltInLast)
  ------------------
  |  Branch (92:13): [True: 25.7k, False: 0]
  ------------------
   93|  25.7k|        {
   94|  25.7k|            return true;
   95|  25.7k|        }
   96|       |
   97|  3.22M|        return false;
   98|  3.25M|    }
_ZNK10OpenAutoIt5Token16IsKeywordLiteralEv:
  101|  2.63M|    {
  102|  2.63M|        switch (m_Kind)
  103|  2.63M|        {
  104|   117k|            case TokenKind::KW_Default:
  ------------------
  |  Branch (104:13): [True: 117k, False: 2.51M]
  ------------------
  105|   288k|            case TokenKind::KW_Null:
  ------------------
  |  Branch (105:13): [True: 170k, False: 2.46M]
  ------------------
  106|   288k|                return true;
  107|       |
  108|  2.34M|            default:
  ------------------
  |  Branch (108:13): [True: 2.34M, False: 288k]
  ------------------
  109|  2.34M|                return false;
  110|  2.63M|        }
  111|  2.63M|    }
_ZNK10OpenAutoIt5Token7IsMacroEv:
  158|   797k|    {
  159|   797k|        const phi::size_t underlying_value = static_cast<phi::size_t>(m_Kind);
  160|       |
  161|   797k|        if (underlying_value >= MacroFirst && underlying_value <= MacroLast)
  ------------------
  |  Branch (161:13): [True: 387k, False: 409k]
  |  Branch (161:47): [True: 5.70k, False: 382k]
  ------------------
  162|  5.70k|        {
  163|  5.70k|            return true;
  164|  5.70k|        }
  165|       |
  166|   791k|        return false;
  167|   797k|    }

_ZN10OpenAutoIt9enum_nameENS_9TokenKindE:
  682|  2.44M|{
  683|  2.44M|    switch (token_kind)
  684|  2.44M|    {
  685|      0|#define OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(name)                                                      \
  686|      0|    case TokenKind::name:                                                                          \
  687|      0|        return #name;
  688|       |
  689|      0|        OPENAUTOIT_ENUM_TOKEN_KIND()
  ------------------
  |  |   12|  11.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NotAToken)                                                     \
  |  |  ------------------
  |  |  |  |  686|  11.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11.5k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  11.5k|        return #name;
  |  |  ------------------
  |  |   13|   230k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Garbage)                                                       \
  |  |  ------------------
  |  |  |  |  686|   230k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 230k, False: 2.21M]
  |  |  |  |  ------------------
  |  |  |  |  687|   230k|        return #name;
  |  |  ------------------
  |  |   14|   230k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(EndOfFile)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   15|  70.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(NewLine)                                                       \
  |  |  ------------------
  |  |  |  |  686|  70.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 70.3k, False: 2.37M]
  |  |  |  |  ------------------
  |  |  |  |  687|  70.3k|        return #name;
  |  |  ------------------
  |  |   16|  70.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comment)                                                       \
  |  |  ------------------
  |  |  |  |  686|    776|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 776, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    776|        return #name;
  |  |  ------------------
  |  |   17|    776|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(VariableIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   18|   364k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FunctionIdentifier)                                            \
  |  |  ------------------
  |  |  |  |  686|   364k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 364k, False: 2.07M]
  |  |  |  |  ------------------
  |  |  |  |  687|   364k|        return #name;
  |  |  ------------------
  |  |   19|   364k|    /* Literals */                                                                                 \
  |  |   20|   364k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(IntegerLiteral)                                                \
  |  |  ------------------
  |  |  |  |  686|   262k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 262k, False: 2.18M]
  |  |  |  |  ------------------
  |  |  |  |  687|   262k|        return #name;
  |  |  ------------------
  |  |   21|   262k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(FloatLiteral)                                                  \
  |  |  ------------------
  |  |  |  |  686|   198k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 198k, False: 2.24M]
  |  |  |  |  ------------------
  |  |  |  |  687|   198k|        return #name;
  |  |  ------------------
  |  |   22|   198k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(StringLiteral)                                                 \
  |  |  ------------------
  |  |  |  |  686|  18.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18.7k, False: 2.42M]
  |  |  |  |  ------------------
  |  |  |  |  687|  18.7k|        return #name;
  |  |  ------------------
  |  |   23|  18.7k|    /* Punctuation */                                                                              \
  |  |   24|  54.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Comma)                                                         \
  |  |  ------------------
  |  |  |  |  686|  54.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 54.7k, False: 2.38M]
  |  |  |  |  ------------------
  |  |  |  |  687|  54.7k|        return #name;
  |  |  ------------------
  |  |   25|  72.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|  72.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 72.5k, False: 2.37M]
  |  |  |  |  ------------------
  |  |  |  |  687|  72.5k|        return #name;
  |  |  ------------------
  |  |   26|   233k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RParen)                                                        \
  |  |  ------------------
  |  |  |  |  686|   233k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 233k, False: 2.20M]
  |  |  |  |  ------------------
  |  |  |  |  687|   233k|        return #name;
  |  |  ------------------
  |  |   27|   233k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(Dot)                                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   28|  73.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(LSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  73.8k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 73.8k, False: 2.36M]
  |  |  |  |  ------------------
  |  |  |  |  687|  73.8k|        return #name;
  |  |  ------------------
  |  |   29|  73.8k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(RSquare)                                                       \
  |  |  ------------------
  |  |  |  |  686|  35.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 35.0k, False: 2.40M]
  |  |  |  |  ------------------
  |  |  |  |  687|  35.0k|        return #name;
  |  |  ------------------
  |  |   30|  35.0k|    /* Macros */                                                                                   \
  |  |   31|  35.0k|    /* https://www.autoitscript.com/autoit3/docs/macros.htm */                                     \
  |  |   32|  35.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   33|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AppDataDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   34|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItExe)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   35|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItPID)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   36|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItVersion)                                              \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   37|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_AutoItX64)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   38|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_COM_EventObj)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   39|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CommonFilesDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |   40|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_Compiled)                                                   \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   41|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComputerName)                                               \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   42|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ComSpec)                                                    \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |   43|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CPUArch)                                                    \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   44|  3.47k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CR)                                                         \
  |  |  ------------------
  |  |  |  |  686|  3.47k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3.47k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  3.47k|        return #name;
  |  |  ------------------
  |  |   45|  3.47k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_CRLF)                                                       \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   46|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   47|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDepth)                                               \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |   48|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |   49|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopHeight)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   50|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopRefresh)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   51|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DesktopWidth)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   52|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_DocumentsCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   53|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_error)                                                      \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |   54|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitCode)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   55|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_exitMethod)                                                 \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   56|    134|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_extended)                                                   \
  |  |  ------------------
  |  |  |  |  686|    134|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 134, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    134|        return #name;
  |  |  ------------------
  |  |   57|    134|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   58|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_FavoritesDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   59|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlHandle)                                             \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   60|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_CtrlId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   61|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragFile)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   62|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DragId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |   63|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_DropId)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   64|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_GUI_WinHandle)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   65|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeDrive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |   66|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomePath)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   67|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HomeShare)                                                  \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |   68|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HotKeyPressed)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   69|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_HOUR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   70|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress1)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   71|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress2)                                                 \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |   72|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress3)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   73|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_IPAddress4)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   74|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_KBLayout)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   75|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LF)                                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   76|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LocalAppDataDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   77|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDNSDomain)                                             \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |   78|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonDomain)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   79|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_LogonServer)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   80|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 27, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     27|        return #name;
  |  |  ------------------
  |  |   81|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MIN)                                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   82|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MON)                                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   83|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MSEC)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   84|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MUILang)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   85|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_MyDocumentsDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   86|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_NumParams)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   87|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSArch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   88|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSBuild)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   89|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSLang)                                                     \
  |  |  ------------------
  |  |  |  |  686|     39|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 39, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     39|        return #name;
  |  |  ------------------
  |  |   90|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSServicePack)                                              \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |   91|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSType)                                                     \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |   92|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_OSVersion)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   93|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramFilesDir)                                            \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |   94|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsCommonDir)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   95|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ProgramsDir)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |   96|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |   97|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptFullPath)                                             \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |   98|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptLineNumber)                                           \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |   99|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_ScriptName)                                                 \
  |  |  ------------------
  |  |  |  |  686|     50|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 50, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     50|        return #name;
  |  |  ------------------
  |  |  100|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SEC)                                                        \
  |  |  ------------------
  |  |  |  |  686|     68|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 68, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     68|        return #name;
  |  |  ------------------
  |  |  101|     68|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuCommonDir)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  102|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartMenuDir)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  103|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupCommonDir)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  104|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_StartupDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     19|        return #name;
  |  |  ------------------
  |  |  105|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_DISABLE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  106|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_ENABLE)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  107|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_HIDE)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  108|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_LOCK)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  109|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MAXIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  110|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_MINIMIZE)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  111|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_RESTORE)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  112|    600|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOW)                                                    \
  |  |  ------------------
  |  |  |  |  686|    600|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 600, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    600|        return #name;
  |  |  ------------------
  |  |  113|    600|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWDEFAULT)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  114|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMAXIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  115|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINIMIZED)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  116|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWMINNOACTIVE)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  117|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNA)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  118|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNOACTIVATE)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  119|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_SHOWNORMAL)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  120|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SW_UNLOCK)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  121|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_SystemDir)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  122|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TAB)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  123|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TempDir)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  124|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TRAY_ID)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  125|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconFlashing)                                           \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  126|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_TrayIconVisible)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  127|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserName)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  128|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_UserProfileDir)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  129|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  130|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WindowsDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  131|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_WorkingDir)                                                 \
  |  |  ------------------
  |  |  |  |  686|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 31, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     31|        return #name;
  |  |  ------------------
  |  |  132|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YDAY)                                                       \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  133|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(MK_YEAR)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  134|      0|    /* Preprocessor identifiers */                                                                 \
  |  |  135|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm */                      \
  |  |  136|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/comments-start.htm */                    \
  |  |  137|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsStart)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  138|     74|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_CommentsEnd)                                                \
  |  |  ------------------
  |  |  |  |  686|     74|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 74, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     74|        return #name;
  |  |  ------------------
  |  |  139|     74|    /* https://www.autoitscript.com/autoit3/docs/keywords/include.htm */                           \
  |  |  140|     74|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Include)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  141|      1|    /* https://www.autoitscript.com/autoit3/docs/keywords/include-once.htm */                      \
  |  |  142|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_IncludeOnce)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  143|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/NoTrayIcon.htm */                        \
  |  |  144|  1.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_NoTrayIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|  1.69k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.69k, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.69k|        return #name;
  |  |  ------------------
  |  |  145|  1.69k|    /* https://www.autoitscript.com/autoit3/docs/keywords/OnAutoItStartRegister.htm */             \
  |  |  146|  1.69k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_OnAutoItStartRegister)                                      \
  |  |  ------------------
  |  |  |  |  686|    832|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 832, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    832|        return #name;
  |  |  ------------------
  |  |  147|    832|    /* https://www.autoitscript.com/autoit3/docs/keywords/pragma.htm */                            \
  |  |  148|    844|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_Pragma)                                                     \
  |  |  ------------------
  |  |  |  |  686|    844|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 844, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    844|        return #name;
  |  |  ------------------
  |  |  149|    844|    /* https://www.autoitscript.com/autoit3/docs/keywords/RequireAdmin.htm */                      \
  |  |  150|    844|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(PP_RequireAdmin)                                               \
  |  |  ------------------
  |  |  |  |  686|    810|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 810, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    810|        return #name;
  |  |  ------------------
  |  |  151|    810|    /* Keywords */                                                                                 \
  |  |  152|    810|    /* https://www.autoitscript.com/autoit3/docs/keywords.htm */                                   \
  |  |  153|    810|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  154|    810|    /* https://www.autoitscript.com/autoit3/docs/keywords/Booleans.htm */                          \
  |  |  155|  10.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_False)                                                      \
  |  |  ------------------
  |  |  |  |  686|  10.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10.0k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  10.0k|        return #name;
  |  |  ------------------
  |  |  156|  22.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_True)                                                       \
  |  |  ------------------
  |  |  |  |  686|  22.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22.4k, False: 2.42M]
  |  |  |  |  ------------------
  |  |  |  |  687|  22.4k|        return #name;
  |  |  ------------------
  |  |  157|  22.4k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueCase.htm */                      \
  |  |  158|  22.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueCase)                                               \
  |  |  ------------------
  |  |  |  |  686|     29|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     29|        return #name;
  |  |  ------------------
  |  |  159|     29|    /* https://www.autoitscript.com/autoit3/docs/keywords/ContinueLoop.htm */                      \
  |  |  160|     29|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ContinueLoop)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  161|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Default.htm */                           \
  |  |  162|  33.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Default)                                                    \
  |  |  ------------------
  |  |  |  |  686|  33.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 33.3k, False: 2.40M]
  |  |  |  |  ------------------
  |  |  |  |  687|  33.3k|        return #name;
  |  |  ------------------
  |  |  163|  33.3k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Dim.htm */                               \
  |  |  164|  33.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Dim)                                                        \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  165|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Local)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  166|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Global)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  167|     91|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Const)                                                      \
  |  |  ------------------
  |  |  |  |  686|     91|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 91, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     91|        return #name;
  |  |  ------------------
  |  |  168|     91|    /* https://www.autoitscript.com/autoit3/docs/keywords/Do.htm */                                \
  |  |  169|     91|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Do)                                                         \
  |  |  ------------------
  |  |  |  |  686|     50|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 50, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     50|        return #name;
  |  |  ------------------
  |  |  170|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Until)                                                      \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  171|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/Enum.htm */                              \
  |  |  172|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Enum)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  173|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/Exit.htm */                              \
  |  |  174|  9.05k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Exit)                                                       \
  |  |  ------------------
  |  |  |  |  686|  9.05k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9.05k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  9.05k|        return #name;
  |  |  ------------------
  |  |  175|  9.05k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ExitLoop.htm */                          \
  |  |  176|  9.05k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ExitLoop)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  177|      0|    /* https://www.autoitscript.com/autoit3/docs/keywords/For.htm */                               \
  |  |  178|     91|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_For)                                                        \
  |  |  ------------------
  |  |  |  |  686|     91|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 91, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     91|        return #name;
  |  |  ------------------
  |  |  179|  2.48k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_To)                                                         \
  |  |  ------------------
  |  |  |  |  686|  2.48k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.48k, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.48k|        return #name;
  |  |  ------------------
  |  |  180|  2.48k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Step)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  181|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Next)                                                       \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  182|      6|    /* https://www.autoitscript.com/autoit3/docs/keywords/ForInNext.htm */                         \
  |  |  183|  7.62k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_In)                                                         \
  |  |  ------------------
  |  |  |  |  686|  7.62k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.62k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.62k|        return #name;
  |  |  ------------------
  |  |  184|  7.62k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Func.htm */                              \
  |  |  185|  21.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Func)                                                       \
  |  |  ------------------
  |  |  |  |  686|  21.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 21.3k, False: 2.42M]
  |  |  |  |  ------------------
  |  |  |  |  687|  21.3k|        return #name;
  |  |  ------------------
  |  |  186|  21.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ByRef)                                                      \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  187|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Return)                                                     \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  188|    130|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndFunc)                                                    \
  |  |  ------------------
  |  |  |  |  686|    130|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 130, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    130|        return #name;
  |  |  ------------------
  |  |  189|    130|    /* https://www.autoitscript.com/autoit3/docs/keywords/If.htm */                                \
  |  |  190|  13.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_If)                                                         \
  |  |  ------------------
  |  |  |  |  686|  13.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13.5k, False: 2.42M]
  |  |  |  |  ------------------
  |  |  |  |  687|  13.5k|        return #name;
  |  |  ------------------
  |  |  191|  29.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Then)                                                       \
  |  |  ------------------
  |  |  |  |  686|  29.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 29.9k, False: 2.41M]
  |  |  |  |  ------------------
  |  |  |  |  687|  29.9k|        return #name;
  |  |  ------------------
  |  |  192|  29.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndIf)                                                      \
  |  |  ------------------
  |  |  |  |  686|  7.63k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.63k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.63k|        return #name;
  |  |  ------------------
  |  |  193|  7.63k|    /* https://www.autoitscript.com/autoit3/docs/keywords/IfElseEndIf.htm */                       \
  |  |  194|  36.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ElseIf)                                                     \
  |  |  ------------------
  |  |  |  |  686|  36.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 36.9k, False: 2.40M]
  |  |  |  |  ------------------
  |  |  |  |  687|  36.9k|        return #name;
  |  |  ------------------
  |  |  195|  81.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Else)                                                       \
  |  |  ------------------
  |  |  |  |  686|  81.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 81.9k, False: 2.36M]
  |  |  |  |  ------------------
  |  |  |  |  687|  81.9k|        return #name;
  |  |  ------------------
  |  |  196|  81.9k|    /* https://www.autoitscript.com/autoit3/docs/keywords/Null.htm */                              \
  |  |  197|  81.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Null)                                                       \
  |  |  ------------------
  |  |  |  |  686|  53.5k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 53.5k, False: 2.38M]
  |  |  |  |  ------------------
  |  |  |  |  687|  53.5k|        return #name;
  |  |  ------------------
  |  |  198|  53.5k|    /* https://www.autoitscript.com/autoit3/docs/keywords/ReDim.htm */                             \
  |  |  199|  53.5k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_ReDim)                                                      \
  |  |  ------------------
  |  |  |  |  686|     38|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 38, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     38|        return #name;
  |  |  ------------------
  |  |  200|     38|    /* https://www.autoitscript.com/autoit3/docs/keywords/Select.htm */                            \
  |  |  201|    152|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Select)                                                     \
  |  |  ------------------
  |  |  |  |  686|    152|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 152, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    152|        return #name;
  |  |  ------------------
  |  |  202|    152|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Case)                                                       \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  203|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSelect)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  204|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/Static.htm */                            \
  |  |  205|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Static)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  206|      2|    /* https://www.autoitscript.com/autoit3/docs/keywords/Switch.htm */                            \
  |  |  207|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Switch)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  208|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndSwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  209|      8|    /* https://www.autoitscript.com/autoit3/docs/keywords/Volatile.htm */                          \
  |  |  210|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Volatile)                                                   \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  211|     18|    /* https://www.autoitscript.com/autoit3/docs/keywords/While.htm */                             \
  |  |  212|    152|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_While)                                                      \
  |  |  ------------------
  |  |  |  |  686|    152|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 152, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    152|        return #name;
  |  |  ------------------
  |  |  213|  18.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_WEnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|  18.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18.1k, False: 2.42M]
  |  |  |  |  ------------------
  |  |  |  |  687|  18.1k|        return #name;
  |  |  ------------------
  |  |  214|  18.1k|    /* https://www.autoitscript.com/autoit3/docs/keywords/With.htm */                              \
  |  |  215|  18.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_With)                                                       \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  216|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_EndWith)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  217|      0|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  218|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_And)                                                        \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  219|    243|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Or)                                                         \
  |  |  ------------------
  |  |  |  |  686|    243|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 243, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    243|        return #name;
  |  |  ------------------
  |  |  220|    243|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(KW_Not)                                                        \
  |  |  ------------------
  |  |  |  |  686|    203|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 203, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    203|        return #name;
  |  |  ------------------
  |  |  221|    203|    /* Operator */                                                                                 \
  |  |  222|    203|    /* https://www.autoitscript.com/autoit3/docs/intro/lang_operators.htm */                       \
  |  |  223|  85.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Equals)            /* = */                                  \
  |  |  ------------------
  |  |  |  |  686|  85.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 85.3k, False: 2.35M]
  |  |  |  |  ------------------
  |  |  |  |  687|  85.3k|        return #name;
  |  |  ------------------
  |  |  224|  85.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_PlusEquals)        /* += */                                 \
  |  |  ------------------
  |  |  |  |  686|  1.05k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.05k, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.05k|        return #name;
  |  |  ------------------
  |  |  225|  1.05k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MinusEquals)       /* -= */                                 \
  |  |  ------------------
  |  |  |  |  686|    329|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 329, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    329|        return #name;
  |  |  ------------------
  |  |  226|    329|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_MultiplyEquals)    /* *= */                                 \
  |  |  ------------------
  |  |  |  |  686|    210|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 210, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    210|        return #name;
  |  |  ------------------
  |  |  227|    210|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_DivideEquals)      /* /= */                                 \
  |  |  ------------------
  |  |  |  |  686|    124|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 124, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    124|        return #name;
  |  |  ------------------
  |  |  228|  12.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Concatenate)       /* & */                                  \
  |  |  ------------------
  |  |  |  |  686|  12.1k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12.1k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  12.1k|        return #name;
  |  |  ------------------
  |  |  229|  12.1k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_ConcatenateEquals) /* &= */                                 \
  |  |  ------------------
  |  |  |  |  686|    585|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 585, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    585|        return #name;
  |  |  ------------------
  |  |  230|  7.45k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Plus)              /* + */                                  \
  |  |  ------------------
  |  |  |  |  686|  7.45k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7.45k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  7.45k|        return #name;
  |  |  ------------------
  |  |  231|  7.45k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Minus)             /* - */                                  \
  |  |  ------------------
  |  |  |  |  686|  5.56k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.56k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.56k|        return #name;
  |  |  ------------------
  |  |  232|  24.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Multiply)          /* * */                                  \
  |  |  ------------------
  |  |  |  |  686|  24.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24.9k, False: 2.41M]
  |  |  |  |  ------------------
  |  |  |  |  687|  24.9k|        return #name;
  |  |  ------------------
  |  |  233|  33.7k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Divide)            /* / */                                  \
  |  |  ------------------
  |  |  |  |  686|  33.7k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 33.7k, False: 2.40M]
  |  |  |  |  ------------------
  |  |  |  |  687|  33.7k|        return #name;
  |  |  ------------------
  |  |  234|  60.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_Raise)             /* ^ */                                  \
  |  |  ------------------
  |  |  |  |  686|  60.0k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 60.0k, False: 2.38M]
  |  |  |  |  ------------------
  |  |  |  |  687|  60.0k|        return #name;
  |  |  ------------------
  |  |  235|  60.0k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_EqualsEquals)      /* == */                                 \
  |  |  ------------------
  |  |  |  |  686|  4.08k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4.08k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  4.08k|        return #name;
  |  |  ------------------
  |  |  236|  4.08k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_NotEqual)          /* <> */                                 \
  |  |  ------------------
  |  |  |  |  686|  2.04k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.04k, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.04k|        return #name;
  |  |  ------------------
  |  |  237|  6.75k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThan)       /* > */                                  \
  |  |  ------------------
  |  |  |  |  686|  6.75k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6.75k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  6.75k|        return #name;
  |  |  ------------------
  |  |  238|  6.75k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_GreaterThanEqual)  /* >= */                                 \
  |  |  ------------------
  |  |  |  |  686|    202|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 202, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    202|        return #name;
  |  |  ------------------
  |  |  239|  55.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThan)          /* < */                                  \
  |  |  ------------------
  |  |  |  |  686|  55.4k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 55.4k, False: 2.38M]
  |  |  |  |  ------------------
  |  |  |  |  687|  55.4k|        return #name;
  |  |  ------------------
  |  |  240|  55.4k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_LessThanEqual)     /* <= */                                 \
  |  |  ------------------
  |  |  |  |  686|  1.67k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.67k, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.67k|        return #name;
  |  |  ------------------
  |  |  241|  75.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryIf)         /* ? */                                  \
  |  |  ------------------
  |  |  |  |  686|  75.3k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 75.3k, False: 2.36M]
  |  |  |  |  ------------------
  |  |  |  |  687|  75.3k|        return #name;
  |  |  ------------------
  |  |  242|  75.3k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(OP_TernaryElse)       /* : */                                  \
  |  |  ------------------
  |  |  |  |  686|  64.9k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 64.9k, False: 2.37M]
  |  |  |  |  ------------------
  |  |  |  |  687|  64.9k|        return #name;
  |  |  ------------------
  |  |  243|  64.9k|    /* Built-in Functions */                                                                       \
  |  |  244|  64.9k|    /* https://www.autoitscript.com/autoit3/docs/functions.htm */                                  \
  |  |  245|  64.9k|    /* https://www.autoitscript.com/autoit3/docs/function_notes.htm */                             \
  |  |  246|  64.9k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Abs)                                                        \
  |  |  ------------------
  |  |  |  |  686|    712|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 712, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    712|        return #name;
  |  |  ------------------
  |  |  247|    712|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ACos)                                                       \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  248|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibRegister)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  249|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AdlibUnRegister)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  250|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Asc)                                                        \
  |  |  ------------------
  |  |  |  |  686|     40|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 40, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     40|        return #name;
  |  |  ------------------
  |  |  251|     40|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AscW)                                                       \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  252|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ASin)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  253|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Assign)                                                     \
  |  |  ------------------
  |  |  |  |  686|     42|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 42, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     42|        return #name;
  |  |  ------------------
  |  |  254|     42|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ATan)                                                       \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  255|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItSetOption)                                            \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  256|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinGetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  257|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_AutoItWinSetTitle)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  258|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Beep)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  259|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Binary)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  260|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  261|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  262|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BinaryToString)                                             \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  263|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitAND)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  264|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitNOT)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  265|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitOR)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  266|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitRotate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  267|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitShift)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  268|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BitXOR)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  269|    469|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_BlockInput)                                                 \
  |  |  ------------------
  |  |  |  |  686|    469|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 469, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    469|        return #name;
  |  |  ------------------
  |  |  270|    469|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Break)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  271|     27|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Call)                                                       \
  |  |  ------------------
  |  |  |  |  686|     27|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 27, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     27|        return #name;
  |  |  ------------------
  |  |  272|    604|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_CDTray)                                                     \
  |  |  ------------------
  |  |  |  |  686|    604|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 604, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    604|        return #name;
  |  |  ------------------
  |  |  273|    604|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ceiling)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  274|     96|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Chr)                                                        \
  |  |  ------------------
  |  |  |  |  686|     96|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 96, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     96|        return #name;
  |  |  ------------------
  |  |  275|     96|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ChrW)                                                       \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  276|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  277|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ClipPut)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  278|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  279|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWrite)                                               \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  280|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteError)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  281|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  282|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlCommand)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  283|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlDisable)                                             \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  284|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlEnable)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  285|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlFocus)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  286|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetFocus)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  287|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  288|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  289|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlGetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  290|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlHide)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  291|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlListView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  292|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlMove)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  293|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSend)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  294|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlSetText)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  295|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlShow)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  296|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ControlTreeView)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  297|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Cos)                                                        \
  |  |  ------------------
  |  |  |  |  686|     21|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 21, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     21|        return #name;
  |  |  ------------------
  |  |  298|     21|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Dec)                                                        \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  299|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCopy)                                                    \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  300|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  301|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirGetSize)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  302|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  303|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DirRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  304|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCall)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  305|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallAddress)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  306|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackFree)                                            \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  307|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackGetPtr)                                          \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  308|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllCallbackRegister)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  309|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  310|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  311|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructCreate)                                            \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  312|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetData)                                           \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  313|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetPtr)                                            \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  314|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructGetSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  315|     63|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DllStructSetData)                                           \
  |  |  ------------------
  |  |  |  |  686|     63|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 63, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     63|        return #name;
  |  |  ------------------
  |  |  316|     63|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetDrive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  317|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetFileSystem)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  318|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  319|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetSerial)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  320|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveGetType)                                               \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  321|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapAdd)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  322|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapDel)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  323|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveMapGet)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  324|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSetLabel)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  325|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceFree)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  326|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveSpaceTotal)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  327|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_DriveStatus)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  328|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  329|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvSet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  330|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_EnvUpdate)                                                  \
  |  |  ------------------
  |  |  |  |  686|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     22|        return #name;
  |  |  ------------------
  |  |  331|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Eval)                                                       \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  332|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Execute)                                                    \
  |  |  ------------------
  |  |  |  |  686|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 32, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     32|        return #name;
  |  |  ------------------
  |  |  333|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Exp)                                                        \
  |  |  ------------------
  |  |  |  |  686|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 46, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     46|        return #name;
  |  |  ------------------
  |  |  334|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileChangeDir)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  335|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|     54|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 54, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     54|        return #name;
  |  |  ------------------
  |  |  336|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCopy)                                                   \
  |  |  ------------------
  |  |  |  |  686|     31|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 31, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     31|        return #name;
  |  |  ------------------
  |  |  337|     31|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateNTFSLink)                                         \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  338|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileCreateShortcut)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  339|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileDelete)                                                 \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  340|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileExists)                                                 \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  341|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindFirstFile)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  342|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFindNextFile)                                           \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  343|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileFlush)                                                  \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  344|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  345|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetEncoding)                                            \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  346|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetLongName)                                            \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  347|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  348|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortcut)                                            \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  349|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetShortName)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  350|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  351|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  352|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileGetVersion)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  353|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileInstall)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  354|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileMove)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  355|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpen)                                                   \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  356|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileOpenDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  357|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  358|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadLine)                                               \
  |  |  ------------------
  |  |  |  |  686|     37|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 37, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     37|        return #name;
  |  |  ------------------
  |  |  359|     37|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileReadToArray)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  360|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  361|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileRecycleEmpty)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  362|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSaveDialog)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  363|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSelectFolder)                                           \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  364|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetAttrib)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  365|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetEnd)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  366|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetPos)                                                 \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  367|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileSetTime)                                                \
  |  |  ------------------
  |  |  |  |  686|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 46, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     46|        return #name;
  |  |  ------------------
  |  |  368|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWrite)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  369|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FileWriteLine)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  370|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Floor)                                                      \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  371|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FtpSetProxy)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  372|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_FuncName)                                                   \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  373|     20|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  374|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateAvi)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  375|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateButton)                                        \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  376|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCheckbox)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  377|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateCombo)                                         \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  378|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateContextMenu)                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  379|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDate)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  380|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  381|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateEdit)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  382|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGraphic)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  383|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateGroup)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  384|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateIcon)                                          \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  385|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateInput)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  386|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateLabel)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  387|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateList)                                          \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  388|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  389|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateListViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  390|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenu)                                          \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  391|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMenuItem)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  392|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateMonthCal)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  393|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateObj)                                           \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  394|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreatePic)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  395|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateProgress)                                      \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  396|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateRadio)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  397|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateSlider)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  398|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTab)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  399|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTabItem)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  400|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeView)                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  401|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateTreeViewItem)                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  402|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlCreateUpdown)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  403|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlDelete)                                              \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  404|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetHandle)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  405|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlGetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  406|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRead)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  407|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRecvMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  408|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlRegisterListViewSort)                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  409|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  410|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSendToDummy)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  411|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetBkColor)                                          \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  412|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetColor)                                            \
  |  |  ------------------
  |  |  |  |  686|     24|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 24, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     24|        return #name;
  |  |  ------------------
  |  |  413|     24|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetCursor)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  414|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetData)                                             \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  415|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefBkColor)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  416|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetDefColor)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  417|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetFont)                                             \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  418|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetGraphic)                                          \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  419|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetImage)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  420|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetLimit)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  421|     67|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetOnEvent)                                          \
  |  |  ------------------
  |  |  |  |  686|     67|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 67, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     67|        return #name;
  |  |  ------------------
  |  |  422|     67|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetPos)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  423|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetResizing)                                         \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  424|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetState)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  425|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetStyle)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  426|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUICtrlSetTip)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  427|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|     46|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 46, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     46|        return #name;
  |  |  ------------------
  |  |  428|     46|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetCursorInfo)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  429|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetMsg)                                                  \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  430|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIGetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  431|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIRegisterMsg)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  432|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetAccelerators)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  433|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetBkColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  434|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCoord)                                                \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  435|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetCursor)                                               \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  436|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetFont)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  437|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetHelp)                                                 \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  438|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetIcon)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  439|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetOnEvent)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  440|     62|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetState)                                                \
  |  |  ------------------
  |  |  |  |  686|     62|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 62, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     62|        return #name;
  |  |  ------------------
  |  |  441|     62|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISetStyle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  442|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUIStartGroup)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  443|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_GUISwitch)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  444|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Hex)                                                        \
  |  |  ------------------
  |  |  |  |  686|     26|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 26, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     26|        return #name;
  |  |  ------------------
  |  |  445|     26|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HotKeySet)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  446|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetProxy)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  447|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HttpSetUserAgent)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  448|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_HWnd)                                                       \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  449|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetClose)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  450|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGet)                                                    \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  451|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetInfo)                                                \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  452|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetGetSize)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  453|    292|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InetRead)                                                   \
  |  |  ------------------
  |  |  |  |  686|    292|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 292, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    292|        return #name;
  |  |  ------------------
  |  |  454|    292|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|     54|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 54, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     54|        return #name;
  |  |  ------------------
  |  |  455|     54|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  456|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSection)                                             \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  457|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniReadSectionNames)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  458|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniRenameSection)                                           \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  459|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  460|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IniWriteSection)                                            \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  461|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_InputBox)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  462|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Int)                                                        \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  463|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsAdmin)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  464|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsArray)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  465|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBinary)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  466|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsBool)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  467|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDeclared)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  468|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsDllStruct)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  469|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFloat)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  470|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsFunc)                                                     \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  471|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsHWnd)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  472|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsInt)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  473|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsKeyword)                                                  \
  |  |  ------------------
  |  |  |  |  686|     11|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 11, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     11|        return #name;
  |  |  ------------------
  |  |  474|     11|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsMap)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  475|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsNumber)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  476|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsObj)                                                      \
  |  |  ------------------
  |  |  |  |  686|     39|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 39, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     39|        return #name;
  |  |  ------------------
  |  |  477|     39|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsPtr)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  478|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_IsString)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  479|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Log)                                                        \
  |  |  ------------------
  |  |  |  |  686|     35|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 35, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     35|        return #name;
  |  |  ------------------
  |  |  480|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapAppend)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  481|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  482|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapKeys)                                                    \
  |  |  ------------------
  |  |  |  |  686|     94|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 94, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     94|        return #name;
  |  |  ------------------
  |  |  483|     94|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MapRemove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  484|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MemGetStats)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  485|     62|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Mod)                                                        \
  |  |  ------------------
  |  |  |  |  686|     62|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 62, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     62|        return #name;
  |  |  ------------------
  |  |  486|     62|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClick)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  487|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseClickDrag)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  488|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseDown)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  489|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetCursor)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  490|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseGetPos)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  491|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseMove)                                                  \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  492|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseUp)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  493|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MouseWheel)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  494|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_MsgBox)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  495|  1.34k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Number)                                                     \
  |  |  ------------------
  |  |  |  |  686|  1.34k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1.34k, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|  1.34k|        return #name;
  |  |  ------------------
  |  |  496|  1.34k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreate)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  497|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjCreateInterface)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  498|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjEvent)                                                   \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  499|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjGet)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  500|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ObjName)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  501|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitRegister)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  502|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_OnAutoItExitUnRegister)                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  503|    137|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ping)                                                       \
  |  |  ------------------
  |  |  |  |  686|    137|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 137, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    137|        return #name;
  |  |  ------------------
  |  |  504|    137|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelChecksum)                                              \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  505|      5|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelGetColor)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  506|     45|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_PixelSearch)                                                \
  |  |  ------------------
  |  |  |  |  686|     45|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 45, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     45|        return #name;
  |  |  ------------------
  |  |  507|     45|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  508|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessExists)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  509|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessGetStats)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  510|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessList)                                                \
  |  |  ------------------
  |  |  |  |  686|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     28|        return #name;
  |  |  ------------------
  |  |  511|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessSetPriority)                                         \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  512|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWait)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  513|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProcessWaitClose)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  514|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOff)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  515|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressOn)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  516|     10|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ProgressSet)                                                \
  |  |  ------------------
  |  |  |  |  686|     10|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 10, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     10|        return #name;
  |  |  ------------------
  |  |  517|  2.19k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Ptr)                                                        \
  |  |  ------------------
  |  |  |  |  686|  2.19k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2.19k, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|  2.19k|        return #name;
  |  |  ------------------
  |  |  518|  2.19k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Random)                                                     \
  |  |  ------------------
  |  |  |  |  686|     20|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 20, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     20|        return #name;
  |  |  ------------------
  |  |  519|    202|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegDelete)                                                  \
  |  |  ------------------
  |  |  |  |  686|    202|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 202, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    202|        return #name;
  |  |  ------------------
  |  |  520|    202|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumKey)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  521|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegEnumVal)                                                 \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  522|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegRead)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  523|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RegWrite)                                                   \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  524|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Round)                                                      \
  |  |  ------------------
  |  |  |  |  686|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     28|        return #name;
  |  |  ------------------
  |  |  525|  5.86k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Run)                                                        \
  |  |  ------------------
  |  |  |  |  686|  5.86k|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5.86k, False: 2.43M]
  |  |  |  |  ------------------
  |  |  |  |  687|  5.86k|        return #name;
  |  |  ------------------
  |  |  526|  5.86k|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAs)                                                      \
  |  |  ------------------
  |  |  |  |  686|     84|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 84, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     84|        return #name;
  |  |  ------------------
  |  |  527|     84|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunAsWait)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  528|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_RunWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  529|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Send)                                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  530|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SendKeepActive)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  531|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetError)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  532|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SetExtended)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  533|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecute)                                               \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  534|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ShellExecuteWait)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  535|     28|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Shutdown)                                                   \
  |  |  ------------------
  |  |  |  |  686|     28|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 28, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     28|        return #name;
  |  |  ------------------
  |  |  536|     78|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sin)                                                        \
  |  |  ------------------
  |  |  |  |  686|     78|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 78, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     78|        return #name;
  |  |  ------------------
  |  |  537|     78|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sleep)                                                      \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  538|    153|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundPlay)                                                  \
  |  |  ------------------
  |  |  |  |  686|    153|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 153, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    153|        return #name;
  |  |  ------------------
  |  |  539|    153|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SoundSetWaveVolume)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  540|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashImageOn)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  541|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashOff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  542|      8|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SplashTextOn)                                               \
  |  |  ------------------
  |  |  |  |  686|      8|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 8, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      8|        return #name;
  |  |  ------------------
  |  |  543|    157|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Sqrt)                                                       \
  |  |  ------------------
  |  |  |  |  686|    157|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 157, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    157|        return #name;
  |  |  ------------------
  |  |  544|    157|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_SRandom)                                                    \
  |  |  ------------------
  |  |  |  |  686|     30|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 30, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     30|        return #name;
  |  |  ------------------
  |  |  545|     30|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StatusbarGetText)                                           \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  546|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StderrRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|     18|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 18, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     18|        return #name;
  |  |  ------------------
  |  |  547|     18|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdinWrite)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  548|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdioClose)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  549|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StdoutRead)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  550|     96|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_String)                                                     \
  |  |  ------------------
  |  |  |  |  686|     96|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 96, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     96|        return #name;
  |  |  ------------------
  |  |  551|     96|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringAddCR)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  552|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringCompare)                                              \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  553|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFormat)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  554|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringFromASCIIArray)                                       \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  555|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringInStr)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  556|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlNum)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  557|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsAlpha)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  558|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsASCII)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  559|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsDigit)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  560|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsFloat)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  561|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsInt)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  562|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsLower)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  563|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsSpace)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  564|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsUpper)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  565|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringIsXDigit)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  566|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLeft)                                                 \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  567|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLen)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  568|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringLower)                                                \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  569|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringMid)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  570|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExp)                                               \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  571|     12|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRegExpReplace)                                        \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  572|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReplace)                                              \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  573|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringReverse)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  574|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringRight)                                                \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  575|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringSplit)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  576|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripCR)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  577|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringStripWS)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  578|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToASCIIArray)                                         \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  579|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringToBinary)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  580|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimLeft)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  581|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringTrimRight)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  582|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_StringUpper)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  583|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_Tan)                                                        \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  584|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPAccept)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  585|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  586|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPConnect)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  587|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPListen)                                                  \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  588|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPNameToIP)                                                \
  |  |  ------------------
  |  |  |  |  686|      5|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 5, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      5|        return #name;
  |  |  ------------------
  |  |  589|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|     13|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 13, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     13|        return #name;
  |  |  ------------------
  |  |  590|     13|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  591|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  592|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TCPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  593|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerDiff)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  594|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TimerInit)                                                  \
  |  |  ------------------
  |  |  |  |  686|      3|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 3, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      3|        return #name;
  |  |  ------------------
  |  |  595|      3|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ToolTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  596|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateItem)                                             \
  |  |  ------------------
  |  |  |  |  686|     35|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 35, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     35|        return #name;
  |  |  ------------------
  |  |  597|     35|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayCreateMenu)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  598|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayGetMsg)                                                 \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  599|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemDelete)                                             \
  |  |  ------------------
  |  |  |  |  686|     17|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 17, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     17|        return #name;
  |  |  ------------------
  |  |  600|     17|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetHandle)                                          \
  |  |  ------------------
  |  |  |  |  686|     16|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 16, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     16|        return #name;
  |  |  ------------------
  |  |  601|     16|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  602|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemGetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  603|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetOnEvent)                                         \
  |  |  ------------------
  |  |  |  |  686|      4|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 4, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      4|        return #name;
  |  |  ------------------
  |  |  604|      4|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetState)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  605|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayItemSetText)                                            \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  606|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetClick)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  607|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetIcon)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  608|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetOnEvent)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  609|    235|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetPauseIcon)                                           \
  |  |  ------------------
  |  |  |  |  686|    235|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 235, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    235|        return #name;
  |  |  ------------------
  |  |  610|    235|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetState)                                               \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  611|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TraySetToolTip)                                             \
  |  |  ------------------
  |  |  |  |  686|     32|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 32, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     32|        return #name;
  |  |  ------------------
  |  |  612|     32|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_TrayTip)                                                    \
  |  |  ------------------
  |  |  |  |  686|     15|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 15, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     15|        return #name;
  |  |  ------------------
  |  |  613|     15|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UBound)                                                     \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  614|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPBind)                                                    \
  |  |  ------------------
  |  |  |  |  686|     23|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 23, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     23|        return #name;
  |  |  ------------------
  |  |  615|     23|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPCloseSocket)                                             \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  616|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPOpen)                                                    \
  |  |  ------------------
  |  |  |  |  686|     50|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 50, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     50|        return #name;
  |  |  ------------------
  |  |  617|     50|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPRecv)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  618|      7|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPSend)                                                    \
  |  |  ------------------
  |  |  |  |  686|      7|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 7, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      7|        return #name;
  |  |  ------------------
  |  |  619|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPShutdown)                                                \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  620|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_UDPStartup)                                                 \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  621|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_VarGetType)                                                 \
  |  |  ------------------
  |  |  |  |  686|      6|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 6, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      6|        return #name;
  |  |  ------------------
  |  |  622|      6|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActivate)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  623|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinActive)                                                  \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  624|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinClose)                                                   \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  625|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinExists)                                                  \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  626|     55|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinFlash)                                                   \
  |  |  ------------------
  |  |  |  |  686|     55|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 55, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     55|        return #name;
  |  |  ------------------
  |  |  627|     55|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetCaretPos)                                             \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  628|    112|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClassList)                                            \
  |  |  ------------------
  |  |  |  |  686|    112|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 112, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|    112|        return #name;
  |  |  ------------------
  |  |  629|    112|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetClientSize)                                           \
  |  |  ------------------
  |  |  |  |  686|      9|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 9, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      9|        return #name;
  |  |  ------------------
  |  |  630|      9|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetHandle)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  631|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetPos)                                                  \
  |  |  ------------------
  |  |  |  |  686|     19|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 19, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     19|        return #name;
  |  |  ------------------
  |  |  632|     19|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetProcess)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  633|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  634|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetText)                                                 \
  |  |  ------------------
  |  |  |  |  686|     14|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 14, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     14|        return #name;
  |  |  ------------------
  |  |  635|     14|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinGetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  636|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinKill)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  637|      2|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinList)                                                    \
  |  |  ------------------
  |  |  |  |  686|      2|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 2, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      2|        return #name;
  |  |  ------------------
  |  |  638|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMenuSelectItem)                                          \
  |  |  ------------------
  |  |  |  |  686|     22|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 22, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     22|        return #name;
  |  |  ------------------
  |  |  639|     22|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAll)                                             \
  |  |  ------------------
  |  |  |  |  686|     12|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 12, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     12|        return #name;
  |  |  ------------------
  |  |  640|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMinimizeAllUndo)                                         \
  |  |  ------------------
  |  |  |  |  686|     72|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 72, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|     72|        return #name;
  |  |  ------------------
  |  |  641|     72|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinMove)                                                    \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  642|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetOnTop)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  643|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetState)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  644|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTitle)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  645|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinSetTrans)                                                \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  646|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWait)                                                    \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  647|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitActive)                                              \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  648|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitClose)                                               \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  649|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_WinWaitNotActive)                                           \
  |  |  ------------------
  |  |  |  |  686|      1|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 1, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      1|        return #name;
  |  |  ------------------
  |  |  650|      1|    /* OpenAutoIt built-in Function language extensions */                                         \
  |  |  651|      1|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteLine)                                           \
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  |  |  652|      0|    OPENAUTOIT_ENUM_TOKEN_KIND_IMPL(BI_ConsoleWriteErrorLine)
  |  |  ------------------
  |  |  |  |  686|      0|    case TokenKind::name:                                                                          \
  |  |  |  |  ------------------
  |  |  |  |  |  Branch (686:5): [True: 0, False: 2.44M]
  |  |  |  |  ------------------
  |  |  |  |  687|      0|        return #name;
  |  |  ------------------
  ------------------
  690|       |
  691|      0|#undef OPENAUTOIT_ENUM_TOKEN_KIND_IMPL
  692|       |
  693|      0|        default:
  ------------------
  |  Branch (693:9): [True: 0, False: 2.44M]
  ------------------
  694|      0|            PHI_ASSERT_NOT_REACHED();
  695|  2.44M|    }
  696|  2.44M|}

_ZN10OpenAutoIt11TokenStream12emplace_backIJRNS_5TokenEEEEvDpOT_:
   20|  10.0M|    {
   21|       |#if defined(PHI_DEBUG)
   22|       |        PHI_ASSERT(!m_Finalized);
   23|       |#endif
   24|       |
   25|  10.0M|        m_Tokens.emplace_back(std::forward<ArgsT>(args)...);
   26|  10.0M|    }

_ZN10OpenAutoIt10DiagnosticC2ENS_12DiagnosticIdENS_15DiagnosticLevelENS_14SourceLocationEONSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE:
   14|   700k|{}
_ZNK10OpenAutoIt10Diagnostic6IsNoteEv:
   42|   700k|{
   43|   700k|    return m_Level == DiagnosticLevel::Note;
   44|   700k|}
_ZNK10OpenAutoIt10Diagnostic9IsWarningEv:
   47|   699k|{
   48|   699k|    return m_Level == DiagnosticLevel::Warning;
   49|   699k|}
_ZNK10OpenAutoIt10Diagnostic7IsErrorEv:
   52|   699k|{
   53|   699k|    return m_Level == DiagnosticLevel::Error;
   54|   699k|}
_ZNK10OpenAutoIt10Diagnostic12IsFatalErrorEv:
   57|  1.13M|{
   58|  1.13M|    return m_Level == DiagnosticLevel::FatalError;
   59|  1.13M|}
_ZNK10OpenAutoIt10Diagnostic14IsErrorOrFatalEv:
   62|   699k|{
   63|   699k|    return IsError() || IsFatalError();
  ------------------
  |  Branch (63:12): [True: 265k, False: 434k]
  |  Branch (63:25): [True: 26, False: 434k]
  ------------------
   64|   699k|}
_ZN10OpenAutoIt10Diagnostic7AddNoteEOS0_:
   93|  1.10k|{
   94|  1.10k|    PHI_ASSERT(note.IsNote());
   95|       |
   96|  1.10k|    m_Notes.emplace_back(note);
   97|  1.10k|}

_ZN10OpenAutoIt17DiagnosticBuilderC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
   11|   699k|{}
_ZN10OpenAutoIt17DiagnosticBuilderD2Ev:
   14|   699k|{
   15|   699k|    for (auto& diagnostic : m_Diagnostics)
  ------------------
  |  Branch (15:27): [True: 699k, False: 699k]
  ------------------
   16|   699k|    {
   17|   699k|        m_DiagnosticEngine->Report(diagnostic);
   18|   699k|    }
   19|   699k|}

_ZN10OpenAutoIt16DiagnosticEngineC2Ev:
   12|  33.9k|{}
_ZNK10OpenAutoIt16DiagnosticEngine13GetErrorLimitEv:
   29|  2.40M|{
   30|  2.40M|    return m_ErrorLimit;
   31|  2.40M|}
_ZNK10OpenAutoIt16DiagnosticEngine21HasFatalErrorOccurredEv:
   44|  2.40M|{
   45|  2.40M|    return m_FatalErrorOccurred;
   46|  2.40M|}
_ZN10OpenAutoIt16DiagnosticEngine6ReportENS_10DiagnosticE:
   69|   699k|{
   70|   699k|    PHI_ASSERT(!diagnostic.IsNote());
   71|       |
   72|   699k|    if (m_IgnoreAllWarnings)
  ------------------
  |  Branch (72:9): [True: 0, False: 699k]
  ------------------
   73|      0|    {
   74|      0|        diagnostic.IgnoreWarning();
   75|      0|    }
   76|       |
   77|   699k|    if (m_WarningsAsError)
  ------------------
  |  Branch (77:9): [True: 0, False: 699k]
  ------------------
   78|      0|    {
   79|      0|        diagnostic.UpgradeWarningToError();
   80|      0|    }
   81|       |
   82|   699k|    if (diagnostic.IsErrorOrFatal())
  ------------------
  |  Branch (82:9): [True: 265k, False: 434k]
  ------------------
   83|   265k|    {
   84|   265k|        m_ErrorOccurred = true;
   85|   265k|        ++m_NumberOfErrors;
   86|   265k|    }
   87|       |
   88|   699k|    if (diagnostic.IsFatalError())
  ------------------
  |  Branch (88:9): [True: 26, False: 699k]
  ------------------
   89|     26|    {
   90|     26|        m_FatalErrorOccurred = true;
   91|     26|    }
   92|       |
   93|   699k|    if (diagnostic.IsWarning())
  ------------------
  |  Branch (93:9): [True: 434k, False: 265k]
  ------------------
   94|   434k|    {
   95|   434k|        ++m_NumberOfWarnings;
   96|   434k|    }
   97|       |
   98|   699k|    if (m_Consumer)
  ------------------
  |  Branch (98:9): [True: 0, False: 699k]
  ------------------
   99|      0|    {
  100|      0|        m_Consumer->Report(diagnostic);
  101|      0|    }
  102|   699k|}

_Z12lookup_macroN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  160|  72.8k|{
  161|  72.8k|    static constexpr auto map =
  162|  72.8k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, MacroValues.size()>(
  163|  72.8k|                    MacroValues, OpenAutoIt::TokenKind::NotAToken);
  164|       |
  165|  72.8k|    std::string str{token.begin(), token.end()};
  166|  72.8k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  167|       |
  168|  72.8k|    return map.at(phi::string_view(str.c_str(), str.size()));
  169|  72.8k|}
_Z20lookup_pre_processorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  186|  95.2k|{
  187|  95.2k|    static constexpr auto map =
  188|  95.2k|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, PreProcessorValues.size()>(
  189|  95.2k|                    PreProcessorValues, OpenAutoIt::TokenKind::NotAToken);
  190|       |
  191|  95.2k|    std::string str{token.begin(), token.end()};
  192|  95.2k|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  193|       |
  194|  95.2k|    return map.at(phi::string_view(str.c_str(), str.size()));
  195|  95.2k|}
_Z17lookup_identifierN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  662|  2.45M|{
  663|  2.45M|    static constexpr auto keyword_map =
  664|  2.45M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, KeyWordsValues.size()>(
  665|  2.45M|                    KeyWordsValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  666|  2.45M|    static constexpr auto builtin_map =
  667|  2.45M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, BuiltInValues.size()>(
  668|  2.45M|                    BuiltInValues, OpenAutoIt::TokenKind::FunctionIdentifier);
  669|       |
  670|  2.45M|    std::string str{token.begin(), token.end()};
  671|  2.45M|    std::transform(str.begin(), str.end(), str.begin(), phi::to_lower_case);
  672|       |
  673|  2.45M|    phi::string_view string = phi::string_view(str.c_str(), str.size());
  674|       |
  675|  2.45M|    const OpenAutoIt::TokenKind keyword = keyword_map.at(string);
  676|  2.45M|    if (keyword == OpenAutoIt::TokenKind::FunctionIdentifier)
  ------------------
  |  Branch (676:9): [True: 1.11M, False: 1.33M]
  ------------------
  677|  1.11M|    {
  678|  1.11M|        return builtin_map.at(string);
  679|  1.11M|    }
  680|       |
  681|  1.33M|    return keyword;
  682|  2.45M|}
_Z15lookup_operatorN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEE:
  707|  1.27M|{
  708|  1.27M|    static constexpr auto map =
  709|  1.27M|            LookUpMap<phi::string_view, OpenAutoIt::TokenKind, OperatorValues.size()>(
  710|  1.27M|                    OperatorValues, OpenAutoIt::TokenKind::NotAToken);
  711|       |
  712|  1.27M|    return map.at(token);
  713|  1.27M|}
_ZN10OpenAutoIt5LexerC2EN3phi21not_null_observer_ptrINS_16DiagnosticEngineEEE:
  778|  33.9k|{}
_ZN10OpenAutoIt5Lexer5ResetEv:
  781|  33.9k|{
  782|  33.9k|    m_Iterator = m_Source.begin();
  783|       |
  784|  33.9k|    m_InsideMultiLineComment = false;
  785|       |
  786|  33.9k|    m_LineNumber = 1u;
  787|  33.9k|    m_Column     = 1u;
  788|  33.9k|}
_ZNK10OpenAutoIt5Lexer10IsFinishedEv:
  791|  37.2M|{
  792|  37.2M|    return m_Iterator == m_Source.end();
  793|  37.2M|}
_ZN10OpenAutoIt5Lexer12GetNextTokenEv:
  796|  10.0M|{
  797|  12.9M|    while (!IsFinished())
  ------------------
  |  Branch (797:12): [True: 12.9M, False: 4.28k]
  ------------------
  798|  12.9M|    {
  799|  12.9M|        char current_character = *m_Iterator;
  800|       |
  801|       |        /* null character */
  802|       |
  803|  12.9M|        if (current_character == '\0')
  ------------------
  |  Branch (803:13): [True: 434k, False: 12.4M]
  ------------------
  804|   434k|        {
  805|   434k|            Diag().Warning(DiagnosticId::NullCharacter, CurrentSourceLocation());
  806|       |
  807|   434k|            SkipCurrentCharacter();
  808|   434k|        }
  809|       |
  810|       |        /* Multiline comments */
  811|       |
  812|  12.4M|        else if (m_InsideMultiLineComment)
  ------------------
  |  Branch (812:18): [True: 5.14k, False: 12.4M]
  ------------------
  813|  5.14k|        {
  814|  5.14k|            iterator       begin_of_multiline_comment            = m_Iterator;
  815|  5.14k|            const phi::u64 beginning_line_of_multiline_comment   = m_LineNumber;
  816|  5.14k|            const phi::u64 beginning_column_of_multiline_comment = m_Column;
  817|       |
  818|  22.1k|            while (!IsFinished())
  ------------------
  |  Branch (818:20): [True: 22.0k, False: 101]
  ------------------
  819|  22.0k|            {
  820|  22.0k|                current_character = *m_Iterator;
  821|       |
  822|       |                // Check for end comment multiline
  823|  22.0k|                if (current_character == '#')
  ------------------
  |  Branch (823:21): [True: 6.62k, False: 15.4k]
  ------------------
  824|  6.62k|                {
  825|  6.62k|                    iterator begin_of_token = m_Iterator;
  826|  6.62k|                    ConsumeCurrentCharacter();
  827|       |
  828|  28.5k|                    while (!IsFinished())
  ------------------
  |  Branch (828:28): [True: 28.3k, False: 129]
  ------------------
  829|  28.3k|                    {
  830|  28.3k|                        current_character = *m_Iterator;
  831|       |
  832|  28.3k|                        if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (832:29): [True: 21.8k, False: 6.49k]
  ------------------
  833|  21.8k|                        {
  834|  21.8k|                            ConsumeCurrentCharacter();
  835|  21.8k|                            continue;
  836|  21.8k|                        }
  837|       |
  838|  6.49k|                        break;
  839|  28.3k|                    }
  840|       |
  841|  6.62k|                    const TokenKind pre_processor_token_kind =
  842|  6.62k|                            lookup_pre_processor(TokenText(begin_of_token));
  843|       |
  844|  6.62k|                    if (pre_processor_token_kind == TokenKind::PP_CommentsEnd)
  ------------------
  |  Branch (844:25): [True: 5.04k, False: 1.58k]
  ------------------
  845|  5.04k|                    {
  846|  5.04k|                        m_InsideMultiLineComment = false;
  847|       |
  848|       |                        // Go back the size of the parsed end token so we can reparse it in the normal pre processor parser
  849|  5.04k|                        m_Iterator -= TokenText(begin_of_token).length().unsafe();
  850|       |
  851|  5.04k|                        Token token{TokenKind::Comment, TokenText(begin_of_multiline_comment),
  852|  5.04k|                                    BuildSourceLocation(beginning_line_of_multiline_comment,
  853|  5.04k|                                                        beginning_column_of_multiline_comment)};
  854|       |
  855|  5.04k|                        return token;
  856|  5.04k|                    }
  857|  6.62k|                }
  858|  15.4k|                else if (current_character == '\n')
  ------------------
  |  Branch (858:26): [True: 1.15k, False: 14.3k]
  ------------------
  859|  1.15k|                {
  860|  1.15k|                    ConsumeCurrentCharacter();
  861|  1.15k|                    AdvanceToNextLine();
  862|  1.15k|                }
  863|  14.3k|                else
  864|  14.3k|                {
  865|       |                    // Otherwise simply consume the character
  866|  14.3k|                    ConsumeCurrentCharacter();
  867|  14.3k|                    m_Column += 1u;
  868|  14.3k|                }
  869|  22.0k|            }
  870|  5.14k|        }
  871|       |
  872|       |        /* Skip characters */
  873|       |
  874|  12.4M|        else if (is_skip_character(current_character))
  ------------------
  |  Branch (874:18): [True: 574k, False: 11.8M]
  ------------------
  875|   574k|        {
  876|   574k|            SkipCurrentCharacter();
  877|   574k|        }
  878|       |
  879|       |        /* New Lines */
  880|       |
  881|  11.8M|        else if (current_character == '\n')
  ------------------
  |  Branch (881:18): [True: 619k, False: 11.2M]
  ------------------
  882|   619k|        {
  883|   619k|            Token new_line_token = ConstructToken(TokenKind::NewLine);
  884|       |
  885|   619k|            ConsumeCurrentCharacter();
  886|   619k|            AdvanceToNextLine();
  887|       |
  888|   619k|            return new_line_token;
  889|   619k|        }
  890|       |
  891|       |        /* Comment */
  892|       |
  893|  11.2M|        else if (current_character == ';')
  ------------------
  |  Branch (893:18): [True: 8.16k, False: 11.2M]
  ------------------
  894|  8.16k|        {
  895|  8.16k|            iterator begin_of_token = m_Iterator;
  896|  8.16k|            ConsumeCurrentCharacter();
  897|       |
  898|  28.3k|            while (!IsFinished())
  ------------------
  |  Branch (898:20): [True: 28.0k, False: 219]
  ------------------
  899|  28.0k|            {
  900|  28.0k|                current_character = *m_Iterator;
  901|       |
  902|  28.0k|                if (current_character != '\n')
  ------------------
  |  Branch (902:21): [True: 20.1k, False: 7.94k]
  ------------------
  903|  20.1k|                {
  904|  20.1k|                    ConsumeCurrentCharacter();
  905|  20.1k|                    continue;
  906|  20.1k|                }
  907|       |
  908|  7.94k|                break;
  909|  28.0k|            }
  910|       |
  911|  8.16k|            return ConstructToken(TokenKind::Comment, begin_of_token);
  912|  8.16k|        }
  913|       |
  914|       |        /* Macros */
  915|       |
  916|  11.2M|        else if (current_character == '@')
  ------------------
  |  Branch (916:18): [True: 72.8k, False: 11.1M]
  ------------------
  917|  72.8k|        {
  918|  72.8k|            iterator begin_of_token = m_Iterator;
  919|  72.8k|            ConsumeCurrentCharacter();
  920|       |
  921|   346k|            while (!IsFinished())
  ------------------
  |  Branch (921:20): [True: 346k, False: 393]
  ------------------
  922|   346k|            {
  923|   346k|                current_character = *m_Iterator;
  924|       |
  925|   346k|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (925:21): [True: 274k, False: 72.4k]
  ------------------
  926|   274k|                {
  927|   274k|                    ConsumeCurrentCharacter();
  928|   274k|                    continue;
  929|   274k|                }
  930|       |
  931|  72.4k|                break;
  932|   346k|            }
  933|       |
  934|       |            // Emit token
  935|  72.8k|            return ConstructToken(lookup_macro(TokenText(begin_of_token)), begin_of_token);
  936|  72.8k|        }
  937|       |
  938|       |        /* Variable identifier */
  939|       |
  940|  11.1M|        else if (current_character == '$')
  ------------------
  |  Branch (940:18): [True: 662k, False: 10.5M]
  ------------------
  941|   662k|        {
  942|   662k|            iterator     begin_of_token = m_Iterator;
  943|   662k|            phi::boolean parsed_something{false};
  944|   662k|            ConsumeCurrentCharacter();
  945|       |
  946|  1.38M|            while (!IsFinished())
  ------------------
  |  Branch (946:20): [True: 1.37M, False: 2.77k]
  ------------------
  947|  1.37M|            {
  948|  1.37M|                current_character = *m_Iterator;
  949|       |
  950|  1.37M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (950:21): [True: 719k, False: 659k]
  ------------------
  951|   719k|                {
  952|   719k|                    ConsumeCurrentCharacter();
  953|   719k|                    parsed_something = true;
  954|   719k|                    continue;
  955|   719k|                }
  956|       |
  957|   659k|                break;
  958|  1.37M|            }
  959|       |
  960|       |            // Ensure that '$' is not a valid variable identifier
  961|   662k|            if (!parsed_something)
  ------------------
  |  Branch (961:17): [True: 157k, False: 504k]
  ------------------
  962|   157k|            {
  963|   157k|                return ConstructToken(TokenKind::Garbage, begin_of_token);
  964|   157k|            }
  965|       |
  966|       |            // Emit Token
  967|   504k|            return ConstructToken(TokenKind::VariableIdentifier, begin_of_token);
  968|   662k|        }
  969|       |
  970|       |        /* PreProcessor directive */
  971|       |
  972|  10.5M|        else if (current_character == '#')
  ------------------
  |  Branch (972:18): [True: 88.6k, False: 10.4M]
  ------------------
  973|  88.6k|        {
  974|  88.6k|            iterator begin_of_token = m_Iterator;
  975|  88.6k|            ConsumeCurrentCharacter();
  976|       |
  977|   483k|            while (!IsFinished())
  ------------------
  |  Branch (977:20): [True: 482k, False: 739]
  ------------------
  978|   482k|            {
  979|   482k|                current_character = *m_Iterator;
  980|       |
  981|   482k|                if (is_valid_pp_char(current_character))
  ------------------
  |  Branch (981:21): [True: 394k, False: 87.8k]
  ------------------
  982|   394k|                {
  983|   394k|                    ConsumeCurrentCharacter();
  984|   394k|                    continue;
  985|   394k|                }
  986|       |
  987|  87.8k|                break;
  988|   482k|            }
  989|       |
  990|       |            // Check for start of multiline comment
  991|  88.6k|            const TokenKind pre_processor_token_kind =
  992|  88.6k|                    lookup_pre_processor(TokenText(begin_of_token));
  993|       |
  994|  88.6k|            if (pre_processor_token_kind == TokenKind::PP_CommentsStart)
  ------------------
  |  Branch (994:17): [True: 5.16k, False: 83.4k]
  ------------------
  995|  5.16k|            {
  996|  5.16k|                m_InsideMultiLineComment = true;
  997|  5.16k|            }
  998|       |
  999|  88.6k|            return ConstructToken(pre_processor_token_kind, begin_of_token);
 1000|  88.6k|        }
 1001|       |
 1002|       |        /* SingleQuoteStringLiteral */
 1003|       |
 1004|  10.4M|        else if (current_character == '\'')
  ------------------
  |  Branch (1004:18): [True: 23.4k, False: 10.4M]
  ------------------
 1005|  23.4k|        {
 1006|  23.4k|            iterator     begin_of_token = m_Iterator;
 1007|  23.4k|            phi::boolean did_terminate  = false;
 1008|  23.4k|            ConsumeCurrentCharacter();
 1009|       |
 1010|  34.5k|            while (!IsFinished())
  ------------------
  |  Branch (1010:20): [True: 34.4k, False: 98]
  ------------------
 1011|  34.4k|            {
 1012|  34.4k|                current_character = *m_Iterator;
 1013|  34.4k|                ConsumeCurrentCharacter();
 1014|       |
 1015|  34.4k|                if (current_character == '\'')
  ------------------
  |  Branch (1015:21): [True: 23.3k, False: 11.0k]
  ------------------
 1016|  23.3k|                {
 1017|  23.3k|                    did_terminate = true;
 1018|  23.3k|                    break;
 1019|  23.3k|                }
 1020|  34.4k|            }
 1021|       |
 1022|  23.4k|            if (did_terminate)
  ------------------
  |  Branch (1022:17): [True: 23.3k, False: 98]
  ------------------
 1023|  23.3k|            {
 1024|  23.3k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1025|  23.3k|            }
 1026|       |
 1027|       |            // TODO: Warn unterminated string literal
 1028|  23.4k|        }
 1029|       |
 1030|       |        /* DoubleQuoteStringLiteral */
 1031|       |
 1032|  10.4M|        else if (current_character == '\"')
  ------------------
  |  Branch (1032:18): [True: 49.4k, False: 10.3M]
  ------------------
 1033|  49.4k|        {
 1034|  49.4k|            iterator     begin_of_token = m_Iterator;
 1035|  49.4k|            phi::boolean did_terminate  = false;
 1036|  49.4k|            ConsumeCurrentCharacter();
 1037|       |
 1038|   101k|            while (!IsFinished())
  ------------------
  |  Branch (1038:20): [True: 101k, False: 319]
  ------------------
 1039|   101k|            {
 1040|   101k|                current_character = *m_Iterator;
 1041|   101k|                ConsumeCurrentCharacter();
 1042|       |
 1043|   101k|                if (current_character == '\"')
  ------------------
  |  Branch (1043:21): [True: 49.1k, False: 52.1k]
  ------------------
 1044|  49.1k|                {
 1045|  49.1k|                    did_terminate = true;
 1046|  49.1k|                    break;
 1047|  49.1k|                }
 1048|   101k|            }
 1049|       |
 1050|  49.4k|            if (did_terminate)
  ------------------
  |  Branch (1050:17): [True: 49.1k, False: 319]
  ------------------
 1051|  49.1k|            {
 1052|  49.1k|                return ConstructToken(TokenKind::StringLiteral, begin_of_token);
 1053|  49.1k|            }
 1054|  49.4k|        }
 1055|       |
 1056|       |        /* Number Literals - IntegerLiteral/FloatLiteral */
 1057|       |
 1058|  10.3M|        else if (phi::is_digit(current_character) || current_character == '.')
  ------------------
  |  Branch (1058:18): [True: 1.14M, False: 9.21M]
  |  Branch (1058:18): [True: 1.62M, False: 8.73M]
  |  Branch (1058:54): [True: 479k, False: 8.73M]
  ------------------
 1059|  1.62M|        {
 1060|  1.62M|            const phi::boolean start_with_zero{current_character == '0'};
 1061|  1.62M|            phi::boolean       parsing_hex{false};
 1062|  1.62M|            phi::boolean       parsing_float{current_character == '.'};
 1063|       |
 1064|  1.62M|            iterator begin_of_token = m_Iterator;
 1065|  1.62M|            ConsumeCurrentCharacter();
 1066|       |
 1067|  2.38M|            while (!IsFinished())
  ------------------
  |  Branch (1067:20): [True: 2.38M, False: 5.02k]
  ------------------
 1068|  2.38M|            {
 1069|  2.38M|                current_character = *m_Iterator;
 1070|       |
 1071|       |                // Is the second character
 1072|  2.38M|                if (m_Iterator - begin_of_token == 1u && start_with_zero)
  ------------------
  |  Branch (1072:21): [True: 1.62M, False: 754k]
  |  Branch (1072:58): [True: 346k, False: 1.28M]
  ------------------
 1073|   346k|                {
 1074|       |                    // Hex character
 1075|   346k|                    if (current_character == 'x' || current_character == 'X')
  ------------------
  |  Branch (1075:25): [True: 16.7k, False: 329k]
  |  Branch (1075:53): [True: 3.67k, False: 325k]
  ------------------
 1076|  20.4k|                    {
 1077|  20.4k|                        parsing_hex = true;
 1078|  20.4k|                        ConsumeCurrentCharacter();
 1079|  20.4k|                        continue;
 1080|  20.4k|                    }
 1081|   346k|                }
 1082|       |
 1083|       |                // Actually parsing
 1084|  2.36M|                if (parsing_hex)
  ------------------
  |  Branch (1084:21): [True: 26.8k, False: 2.33M]
  ------------------
 1085|  26.8k|                {
 1086|  26.8k|                    if (parsing_float)
  ------------------
  |  Branch (1086:25): [True: 0, False: 26.8k]
  ------------------
 1087|      0|                    {
 1088|       |                        // TODO: Error hexliteral not allowed for floats
 1089|      0|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1090|      0|                    }
 1091|       |
 1092|  26.8k|                    if (phi::is_hex_digit(current_character))
  ------------------
  |  Branch (1092:25): [True: 6.47k, False: 20.4k]
  ------------------
 1093|  6.47k|                    {
 1094|  6.47k|                        ConsumeCurrentCharacter();
 1095|  6.47k|                        continue;
 1096|  6.47k|                    }
 1097|  26.8k|                }
 1098|  2.33M|                else if (phi::is_digit(current_character))
  ------------------
  |  Branch (1098:26): [True: 707k, False: 1.62M]
  ------------------
 1099|   707k|                {
 1100|   707k|                    ConsumeCurrentCharacter();
 1101|   707k|                    continue;
 1102|   707k|                }
 1103|       |                // Literal dot
 1104|  1.62M|                else if (current_character == '.')
  ------------------
  |  Branch (1104:26): [True: 53.0k, False: 1.57M]
  ------------------
 1105|  53.0k|                {
 1106|  53.0k|                    if (parsing_float)
  ------------------
  |  Branch (1106:25): [True: 30.0k, False: 23.0k]
  ------------------
 1107|  30.0k|                    {
 1108|       |                        // TODO: Error more than one dot in float literal
 1109|  30.0k|                        return ConstructToken(TokenKind::Garbage, begin_of_token);
 1110|  30.0k|                    }
 1111|       |
 1112|  23.0k|                    parsing_float = true;
 1113|  23.0k|                    ConsumeCurrentCharacter();
 1114|  23.0k|                    continue;
 1115|  53.0k|                }
 1116|       |
 1117|  1.59M|                break;
 1118|  2.36M|            }
 1119|       |
 1120|  1.59M|            if (parsing_float)
  ------------------
  |  Branch (1120:17): [True: 472k, False: 1.12M]
  ------------------
 1121|   472k|            {
 1122|       |                // Were not allowed to end with a dot
 1123|       |                // TODO: This is very hacky and looks nasty
 1124|   472k|                if (*(m_Iterator - 1) == '.')
  ------------------
  |  Branch (1124:21): [True: 68.6k, False: 404k]
  ------------------
 1125|  68.6k|                {
 1126|       |                    // TODO: Prober error
 1127|  68.6k|                    return ConstructToken(TokenKind::Garbage, begin_of_token);
 1128|  68.6k|                }
 1129|       |
 1130|   404k|                return ConstructToken(TokenKind::FloatLiteral, begin_of_token);
 1131|   472k|            }
 1132|       |
 1133|  1.12M|            return ConstructToken(TokenKind::IntegerLiteral, begin_of_token);
 1134|  1.59M|        }
 1135|       |
 1136|       |        /* Operators */
 1137|       |
 1138|  8.73M|        else if (is_two_part_operator(current_character))
  ------------------
  |  Branch (1138:18): [True: 834k, False: 7.90M]
  ------------------
 1139|   834k|        {
 1140|   834k|            iterator begin_of_token = m_Iterator;
 1141|   834k|            ConsumeCurrentCharacter();
 1142|       |
 1143|   834k|            if (!IsFinished())
  ------------------
  |  Branch (1143:17): [True: 831k, False: 2.55k]
  ------------------
 1144|   831k|            {
 1145|   831k|                if (*m_Iterator == '=' || (*begin_of_token == '<' && *m_Iterator == '>'))
  ------------------
  |  Branch (1145:21): [True: 33.3k, False: 798k]
  |  Branch (1145:44): [True: 59.5k, False: 738k]
  |  Branch (1145:70): [True: 5.76k, False: 53.7k]
  ------------------
 1146|  39.0k|                {
 1147|       |                    // We have an actual two part operator
 1148|  39.0k|                    ConsumeCurrentCharacter();
 1149|  39.0k|                }
 1150|   831k|            }
 1151|       |
 1152|   834k|            return ConstructToken(lookup_operator(TokenText(begin_of_token)), begin_of_token);
 1153|   834k|        }
 1154|       |
 1155|  7.90M|        else if (is_single_operator(current_character))
  ------------------
  |  Branch (1155:18): [True: 444k, False: 7.45M]
  ------------------
 1156|   444k|        {
 1157|   444k|            Token token = ConstructToken(lookup_operator({m_Iterator, 1u}));
 1158|       |
 1159|   444k|            ConsumeCurrentCharacter();
 1160|       |
 1161|   444k|            return token;
 1162|   444k|        }
 1163|       |
 1164|       |        /* Punctioation */
 1165|       |
 1166|  7.45M|        else if (current_character == ',')
  ------------------
  |  Branch (1166:18): [True: 74.0k, False: 7.38M]
  ------------------
 1167|  74.0k|        {
 1168|  74.0k|            Token token = ConstructToken(TokenKind::Comma);
 1169|       |
 1170|  74.0k|            ConsumeCurrentCharacter();
 1171|       |
 1172|  74.0k|            return token;
 1173|  74.0k|        }
 1174|       |
 1175|  7.38M|        else if (current_character == '(')
  ------------------
  |  Branch (1175:18): [True: 1.40M, False: 5.97M]
  ------------------
 1176|  1.40M|        {
 1177|  1.40M|            Token token = ConstructToken(TokenKind::LParen);
 1178|       |
 1179|  1.40M|            ConsumeCurrentCharacter();
 1180|       |
 1181|  1.40M|            return token;
 1182|  1.40M|        }
 1183|       |
 1184|  5.97M|        else if (current_character == ')')
  ------------------
  |  Branch (1184:18): [True: 406k, False: 5.57M]
  ------------------
 1185|   406k|        {
 1186|   406k|            Token token = ConstructToken(TokenKind::RParen);
 1187|       |
 1188|   406k|            ConsumeCurrentCharacter();
 1189|       |
 1190|   406k|            return token;
 1191|   406k|        }
 1192|       |
 1193|  5.57M|        else if (current_character == '.')
  ------------------
  |  Branch (1193:18): [True: 0, False: 5.57M]
  ------------------
 1194|      0|        {
 1195|      0|            Token token = ConstructToken(TokenKind::Dot);
 1196|       |
 1197|      0|            ConsumeCurrentCharacter();
 1198|       |
 1199|      0|            return token;
 1200|      0|        }
 1201|       |
 1202|  5.57M|        else if (current_character == '[')
  ------------------
  |  Branch (1202:18): [True: 1.22M, False: 4.34M]
  ------------------
 1203|  1.22M|        {
 1204|  1.22M|            Token token = ConstructToken(TokenKind::LSquare);
 1205|       |
 1206|  1.22M|            ConsumeCurrentCharacter();
 1207|       |
 1208|  1.22M|            return token;
 1209|  1.22M|        }
 1210|       |
 1211|  4.34M|        else if (current_character == ']')
  ------------------
  |  Branch (1211:18): [True: 90.9k, False: 4.25M]
  ------------------
 1212|  90.9k|        {
 1213|  90.9k|            Token token = ConstructToken(TokenKind::RSquare);
 1214|       |
 1215|  90.9k|            ConsumeCurrentCharacter();
 1216|       |
 1217|  90.9k|            return token;
 1218|  90.9k|        }
 1219|       |
 1220|       |        /* Identifier */
 1221|       |
 1222|  4.25M|        else if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1222:18): [True: 2.45M, False: 1.80M]
  ------------------
 1223|  2.45M|        {
 1224|  2.45M|            iterator begin_of_token = m_Iterator;
 1225|  2.45M|            ConsumeCurrentCharacter();
 1226|       |
 1227|  8.60M|            while (!IsFinished())
  ------------------
  |  Branch (1227:20): [True: 8.58M, False: 11.6k]
  ------------------
 1228|  8.58M|            {
 1229|  8.58M|                current_character = *m_Iterator;
 1230|       |
 1231|  8.58M|                if (is_valid_identifier_char(current_character))
  ------------------
  |  Branch (1231:21): [True: 6.14M, False: 2.44M]
  ------------------
 1232|  6.14M|                {
 1233|  6.14M|                    ConsumeCurrentCharacter();
 1234|  6.14M|                    continue;
 1235|  6.14M|                }
 1236|       |
 1237|  2.44M|                break;
 1238|  8.58M|            }
 1239|       |
 1240|  2.45M|            return ConstructToken(lookup_identifier(TokenText(begin_of_token)), begin_of_token);
 1241|  2.45M|        }
 1242|       |
 1243|       |        /* Unknown/Unexpected character */
 1244|       |
 1245|  1.80M|        else
 1246|  1.80M|        {
 1247|       |            // TODO: Warn unexpected character encountered
 1248|  1.80M|            SkipCurrentCharacter();
 1249|  1.80M|        }
 1250|  12.9M|    }
 1251|       |
 1252|  4.28k|    return {};
 1253|  10.0M|}
_ZN10OpenAutoIt5Lexer13ProcessStringEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEES6_:
 1256|  33.9k|{
 1257|  33.9k|    SourceFile fake_source{SourceFile::Type::Basic, file_name.data(), source};
 1258|       |
 1259|  33.9k|    return ProcessFile(&fake_source);
 1260|  33.9k|}
_ZN10OpenAutoIt5Lexer11ProcessFileEN3phi21not_null_observer_ptrIKNS_10SourceFileEEE:
 1263|  33.9k|{
 1264|  33.9k|    TokenStream stream;
 1265|       |
 1266|  33.9k|    m_SourceFile = source_file;
 1267|  33.9k|    m_Source     = m_SourceFile->m_Content;
 1268|  33.9k|    Reset();
 1269|       |
 1270|  10.1M|    while (!IsFinished())
  ------------------
  |  Branch (1270:12): [True: 10.0M, False: 33.9k]
  ------------------
 1271|  10.0M|    {
 1272|  10.0M|        phi::optional<Token> maybe_token = GetNextToken();
 1273|       |
 1274|  10.0M|        if (maybe_token.has_value())
  ------------------
  |  Branch (1274:13): [True: 10.0M, False: 4.28k]
  ------------------
 1275|  10.0M|        {
 1276|  10.0M|            stream.emplace_back(maybe_token.value());
 1277|  10.0M|        }
 1278|  10.0M|    }
 1279|       |
 1280|  33.9k|    stream.finalize();
 1281|  33.9k|    return stream;
 1282|  33.9k|}
_ZN10OpenAutoIt5Lexer23ConsumeCurrentCharacterEv:
 1285|  21.4M|{
 1286|  21.4M|    ++m_Iterator;
 1287|  21.4M|}
_ZN10OpenAutoIt5Lexer17AdvanceToNextLineEv:
 1290|   620k|{
 1291|   620k|    ++m_LineNumber;
 1292|   620k|    m_Column = 1u;
 1293|   620k|}
_ZN10OpenAutoIt5Lexer20SkipCurrentCharacterEv:
 1296|  2.81M|{
 1297|  2.81M|    ConsumeCurrentCharacter();
 1298|  2.81M|    ++m_Column;
 1299|  2.81M|}
_ZN10OpenAutoIt5Lexer4DiagEv:
 1302|   434k|{
 1303|   434k|    return DiagnosticBuilder{m_DiagnosticEngine};
 1304|   434k|}
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_:
   37|  72.8k|    {
   38|  72.8k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  72.8k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  72.8k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 10.2k, False: 62.6k]
  ------------------
   42|  10.2k|        {
   43|  10.2k|            return itr->second;
   44|  10.2k|        }
   45|       |
   46|  62.6k|        return m_Default;
   47|  72.8k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm102EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  6.71M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_:
   37|  95.2k|    {
   38|  95.2k|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  95.2k|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  95.2k|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 24.2k, False: 71.0k]
  ------------------
   42|  24.2k|        {
   43|  24.2k|            return itr->second;
   44|  24.2k|        }
   45|       |
   46|  71.0k|        return m_Default;
   47|  95.2k|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm10EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   816k|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_:
   37|  1.11M|    {
   38|  1.11M|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  1.11M|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  1.11M|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 11.0k, False: 1.10M]
  ------------------
   42|  11.0k|        {
   43|  11.0k|            return itr->second;
   44|  11.0k|        }
   45|       |
   46|  1.10M|        return m_Default;
   47|  1.11M|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm404EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|   448M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_:
   37|  2.45M|    {
   38|  2.45M|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  2.45M|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  2.45M|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 1.33M, False: 1.11M]
  ------------------
   42|  1.33M|        {
   43|  1.33M|            return itr->second;
   44|  1.33M|        }
   45|       |
   46|  1.11M|        return m_Default;
   47|  2.45M|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm44EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  78.9M|                                      [&key](const auto& v) { return v.first == key; });
_ZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_:
   37|  1.27M|    {
   38|  1.27M|        const auto itr = std::find_if(begin(m_Data), end(m_Data),
   39|  1.27M|                                      [&key](const auto& v) { return v.first == key; });
   40|       |
   41|  1.27M|        if (itr != end(m_Data))
  ------------------
  |  Branch (41:13): [True: 1.27M, False: 0]
  ------------------
   42|  1.27M|        {
   43|  1.27M|            return itr->second;
   44|  1.27M|        }
   45|       |
   46|      0|        return m_Default;
   47|  1.27M|    }
_ZZNK9LookUpMapIN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEEN10OpenAutoIt9TokenKindELm20EE2atERKS5_ENKUlRKT_E_clINS2_4pairIS5_S7_EEEEDaSD_:
   39|  13.3M|                                      [&key](const auto& v) { return v.first == key; });
_Z16is_valid_pp_charc:
  736|   511k|{
  737|   511k|    return phi::is_alpha_numeric(c) || c == '-';
  ------------------
  |  Branch (737:12): [True: 412k, False: 98.8k]
  |  Branch (737:40): [True: 4.46k, False: 94.3k]
  ------------------
  738|   511k|}
_Z17is_skip_characterc:
  716|  12.4M|{
  717|  12.4M|    switch (c)
  718|  12.4M|    {
  719|   491k|        case ' ':
  ------------------
  |  Branch (719:9): [True: 491k, False: 11.9M]
  ------------------
  720|   532k|        case '\v':
  ------------------
  |  Branch (720:9): [True: 40.6k, False: 12.4M]
  ------------------
  721|   538k|        case '\t':
  ------------------
  |  Branch (721:9): [True: 6.07k, False: 12.4M]
  ------------------
  722|   542k|        case '\b':
  ------------------
  |  Branch (722:9): [True: 4.71k, False: 12.4M]
  ------------------
  723|   574k|        case '\f':
  ------------------
  |  Branch (723:9): [True: 31.8k, False: 12.4M]
  ------------------
  724|   574k|            return true;
  725|  11.8M|        default:
  ------------------
  |  Branch (725:9): [True: 11.8M, False: 574k]
  ------------------
  726|  11.8M|            return false;
  727|  12.4M|    }
  728|  12.4M|}
_Z24is_valid_identifier_charc:
  731|  14.5M|{
  732|  14.5M|    return phi::is_alpha_numeric(c) || c == '_';
  ------------------
  |  Branch (732:12): [True: 9.57M, False: 4.99M]
  |  Branch (732:40): [True: 15.9k, False: 4.97M]
  ------------------
  733|  14.5M|}
_Z20is_two_part_operatorc:
  741|  8.73M|{
  742|  8.73M|    switch (c)
  743|  8.73M|    {
  744|   331k|        case '=':
  ------------------
  |  Branch (744:9): [True: 331k, False: 8.40M]
  ------------------
  745|   453k|        case '+':
  ------------------
  |  Branch (745:9): [True: 121k, False: 8.61M]
  ------------------
  746|   620k|        case '-':
  ------------------
  |  Branch (746:9): [True: 167k, False: 8.56M]
  ------------------
  747|   648k|        case '*':
  ------------------
  |  Branch (747:9): [True: 28.0k, False: 8.70M]
  ------------------
  748|   694k|        case '/':
  ------------------
  |  Branch (748:9): [True: 45.9k, False: 8.68M]
  ------------------
  749|   760k|        case '&':
  ------------------
  |  Branch (749:9): [True: 66.0k, False: 8.66M]
  ------------------
  750|   821k|        case '<':
  ------------------
  |  Branch (750:9): [True: 61.7k, False: 8.67M]
  ------------------
  751|   834k|        case '>':
  ------------------
  |  Branch (751:9): [True: 12.2k, False: 8.72M]
  ------------------
  752|   834k|            return true;
  753|       |
  754|  7.90M|        default:
  ------------------
  |  Branch (754:9): [True: 7.90M, False: 834k]
  ------------------
  755|  7.90M|            return false;
  756|  8.73M|    }
  757|  8.73M|}
_Z18is_single_operatorc:
  760|  7.90M|{
  761|  7.90M|    switch (c)
  762|  7.90M|    {
  763|  71.4k|        case '^':
  ------------------
  |  Branch (763:9): [True: 71.4k, False: 7.82M]
  ------------------
  764|   286k|        case '?':
  ------------------
  |  Branch (764:9): [True: 214k, False: 7.68M]
  ------------------
  765|   444k|        case ':':
  ------------------
  |  Branch (765:9): [True: 158k, False: 7.74M]
  ------------------
  766|   444k|            return true;
  767|       |
  768|  7.45M|        default:
  ------------------
  |  Branch (768:9): [True: 7.45M, False: 444k]
  ------------------
  769|  7.45M|            return false;
  770|  7.90M|    }
  771|  7.90M|}

_ZN10OpenAutoIt6ParserC2EN3phi21not_null_observer_ptrINS_13SourceManagerEEENS2_INS_16DiagnosticEngineEEENS2_INS_5LexerEEE:
  131|  33.9k|{}
_ZN10OpenAutoIt6Parser16ParseTokenStreamEN3phi21not_null_observer_ptrINS_11ASTDocumentEEEONS_11TokenStreamENS2_IKNS_10SourceFileEEE:
  136|  33.9k|{
  137|  33.9k|    PushParsingContext(phi::move(source_file), phi::move(stream));
  138|       |
  139|  33.9k|    ParseDocument(phi::move(document));
  140|  33.9k|}
_ZN10OpenAutoIt6Parser11ParseStringEN3phi21not_null_observer_ptrINS_11ASTDocumentEEENS1_17basic_string_viewIcNSt3__111char_traitsIcEEEES9_:
  144|  33.9k|{
  145|  33.9k|    TokenStream stream = m_Lexer->ProcessString(file_name, source);
  146|       |
  147|  33.9k|    SourceFile fake_source_file{SourceFile::Type::Basic, std::string_view(file_name),
  148|  33.9k|                                phi::move(source)};
  149|  33.9k|    ParseTokenStream(phi::move(document), phi::move(stream), &fake_source_file);
  150|  33.9k|}
_ZN10OpenAutoIt6Parser13ParseDocumentEN3phi21not_null_observer_ptrINS_11ASTDocumentEEE:
  170|  33.9k|{
  171|  33.9k|    m_Document = phi::move(document);
  172|       |
  173|  33.9k|    m_IncludeOnceFiles.clear();
  174|       |
  175|  2.40M|    while (ShouldContinueParsing())
  ------------------
  |  Branch (175:12): [True: 2.37M, False: 33.9k]
  ------------------
  176|  2.37M|    {
  177|  2.37M|        if (!CurrentTokenStream().has_more())
  ------------------
  |  Branch (177:13): [True: 33.9k, False: 2.34M]
  ------------------
  178|  33.9k|        {
  179|  33.9k|            PopParsingContext();
  180|  33.9k|            continue;
  181|  33.9k|        }
  182|       |
  183|  2.34M|        const Token& token = CurrentToken();
  184|       |
  185|       |        // Parse global function definition
  186|  2.34M|        switch (token.GetTokenKind())
  187|  2.34M|        {
  188|  78.6k|            case TokenKind::KW_Func: {
  ------------------
  |  Branch (188:13): [True: 78.6k, False: 2.26M]
  ------------------
  189|  78.6k|                ConsumeCurrent();
  190|       |
  191|  78.6k|                auto function_definition = ParseFunctionDefinition();
  192|  78.6k|                if (!function_definition)
  ------------------
  |  Branch (192:21): [True: 77.3k, False: 1.28k]
  ------------------
  193|  77.3k|                {
  194|  77.3k|                    err("ERR: Failed to parse function definition!\n");
  195|  77.3k|                    continue;
  196|  77.3k|                }
  197|       |
  198|  1.28k|                AppendFunctionToDocument(function_definition.release_not_null());
  199|  1.28k|                break;
  200|  78.6k|            }
  201|       |
  202|  3.61k|            case TokenKind::Comment:
  ------------------
  |  Branch (202:13): [True: 3.61k, False: 2.33M]
  ------------------
  203|  4.98k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (203:13): [True: 1.36k, False: 2.34M]
  ------------------
  204|  6.82k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (204:13): [True: 1.84k, False: 2.33M]
  ------------------
  205|   138k|            case TokenKind::NewLine: {
  ------------------
  |  Branch (205:13): [True: 131k, False: 2.20M]
  ------------------
  206|       |                // Simply ignore and consume newlines and comments
  207|   138k|                ConsumeCurrent();
  208|   138k|                break;
  209|  6.82k|            }
  210|  57.0k|            case TokenKind::NotAToken: {
  ------------------
  |  Branch (210:13): [True: 57.0k, False: 2.28M]
  ------------------
  211|  57.0k|                err(fmt::format("ERR: Unexpected NotAToken with text '{:s}'!\n",
  212|  57.0k|                                std::string_view(token.GetText())));
  213|  57.0k|                ConsumeCurrent();
  214|  57.0k|                break;
  215|  6.82k|            }
  216|       |
  217|  2.62k|            case TokenKind::PP_Include: {
  ------------------
  |  Branch (217:13): [True: 2.62k, False: 2.33M]
  ------------------
  218|  2.62k|                ConsumeCurrent();
  219|       |
  220|  2.62k|                ParseIncludeDirective();
  221|       |
  222|  2.62k|                break;
  223|  6.82k|            }
  224|       |
  225|  1.13k|            case TokenKind::PP_IncludeOnce: {
  ------------------
  |  Branch (225:13): [True: 1.13k, False: 2.34M]
  ------------------
  226|  1.13k|                ConsumeCurrent();
  227|       |
  228|  1.13k|                m_IncludeOnceFiles.emplace(CurrentSourceFile().get());
  229|       |
  230|  1.13k|                RequireNewLine();
  231|       |
  232|  1.13k|                break;
  233|  6.82k|            }
  234|       |
  235|  2.06M|            default: {
  ------------------
  |  Branch (235:13): [True: 2.06M, False: 278k]
  ------------------
  236|  2.06M|                auto statement = ParseStatement();
  237|  2.06M|                if (!statement)
  ------------------
  |  Branch (237:21): [True: 1.67M, False: 384k]
  ------------------
  238|  1.67M|                {
  239|       |                    // TODO: Proper error reporting
  240|  1.67M|                    err("ERR: Failed to parse statement!\n");
  241|       |
  242|  1.67M|                    if (HasMoreTokens())
  ------------------
  |  Branch (242:25): [True: 1.65M, False: 19.9k]
  ------------------
  243|  1.65M|                    {
  244|       |                        // Swallow the bad token
  245|  1.65M|                        ConsumeCurrent();
  246|  1.65M|                    }
  247|  1.67M|                    continue;
  248|  1.67M|                }
  249|       |
  250|   384k|                AppendStatementToDocument(statement.release_not_null());
  251|       |
  252|   384k|                RequireNewLine();
  253|   384k|                break;
  254|  2.06M|            }
  255|  2.34M|        }
  256|  2.34M|    }
  257|  33.9k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamE:
  261|  33.9k|{
  262|  33.9k|    PushParsingContext(phi::move(source_file), phi::move(token_stream), SourceLocation::Invalid());
  263|  33.9k|}
_ZN10OpenAutoIt6Parser18PushParsingContextEN3phi21not_null_observer_ptrIKNS_10SourceFileEEEONS_11TokenStreamENS_14SourceLocationE:
  267|  33.9k|{
  268|  33.9k|    ParsingContext context{.source_file   = phi::move(source_file),
  269|  33.9k|                           .token_stream  = phi::move(token_stream),
  270|  33.9k|                           .included_from = phi::move(included_from)};
  271|       |
  272|  33.9k|    m_ParsingContextStack.emplace(phi::move(context));
  273|  33.9k|    m_SourceManager->SetLocalSearchPath(source_file->m_FilePath.parent_path());
  274|  33.9k|}
_ZN10OpenAutoIt6Parser17PopParsingContextEv:
  277|  33.9k|{
  278|  33.9k|    m_ParsingContextStack.pop();
  279|  33.9k|    if (!m_ParsingContextStack.empty())
  ------------------
  |  Branch (279:9): [True: 0, False: 33.9k]
  ------------------
  280|      0|    {
  281|      0|        m_SourceManager->SetLocalSearchPath(
  282|      0|                m_ParsingContextStack.top().source_file->m_FilePath.parent_path());
  283|      0|    }
  284|  33.9k|    else
  285|  33.9k|    {
  286|  33.9k|        m_SourceManager->SetLocalSearchPath("");
  287|  33.9k|    }
  288|  33.9k|}
_ZN10OpenAutoIt6Parser21CurrentParsingContextEv:
  291|  1.13k|{
  292|  1.13k|    PHI_ASSERT(!m_ParsingContextStack.empty());
  293|       |
  294|  1.13k|    return m_ParsingContextStack.top();
  295|  1.13k|}
_ZN10OpenAutoIt6Parser17CurrentSourceFileEv:
  298|  1.13k|{
  299|  1.13k|    return CurrentParsingContext().source_file.not_null();
  300|  1.13k|}
_ZN10OpenAutoIt6Parser18CurrentTokenStreamEv:
  303|  12.4M|{
  304|  12.4M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  305|       |
  306|  12.4M|    return m_ParsingContextStack.top().token_stream;
  307|  12.4M|}
_ZNK10OpenAutoIt6Parser18CurrentTokenStreamEv:
  310|  72.0M|{
  311|  72.0M|    PHI_ASSERT(!m_ParsingContextStack.empty());
  312|       |
  313|  72.0M|    return m_ParsingContextStack.top().token_stream;
  314|  72.0M|}
_ZNK10OpenAutoIt6Parser13HasMoreTokensEv:
  317|  23.3M|{
  318|  23.3M|    return CurrentTokenStream().has_more();
  319|  23.3M|}
_ZNK10OpenAutoIt6Parser12CurrentTokenEv:
  322|  24.2M|{
  323|  24.2M|    PHI_ASSERT(CurrentTokenStream().has_more());
  324|       |
  325|  24.2M|    return CurrentTokenStream().look_ahead();
  326|  24.2M|}
_ZNK10OpenAutoIt6Parser13PreviousTokenEv:
  329|   263k|{
  330|   263k|    return CurrentTokenStream().look_behind();
  331|   263k|}
_ZNK10OpenAutoIt6Parser21ShouldContinueParsingEv:
  334|  2.40M|{
  335|  2.40M|    const phi::boolean stack_empty          = m_ParsingContextStack.empty();
  336|  2.40M|    const phi::boolean fatal_error_occurred = m_DiagnosticEngine->HasFatalErrorOccurred();
  337|  2.40M|    const phi::boolean error_limit_reached =
  338|  2.40M|            (m_DiagnosticEngine->GetErrorLimit() == 0u ?
  ------------------
  |  Branch (338:14): [True: 2.40M, False: 0]
  ------------------
  339|  2.40M|                     false :
  340|  2.40M|                     m_DiagnosticEngine->GetNumberOfError() >= m_DiagnosticEngine->GetErrorLimit());
  341|       |
  342|  2.40M|    return !stack_empty && !fatal_error_occurred && !error_limit_reached;
  ------------------
  |  Branch (342:12): [True: 2.37M, False: 33.9k]
  |  Branch (342:28): [True: 2.37M, False: 26]
  |  Branch (342:53): [True: 2.37M, False: 0]
  ------------------
  343|  2.40M|}
_ZN10OpenAutoIt6Parser14ConsumeCurrentEv:
  346|  10.0M|{
  347|  10.0M|    CurrentTokenStream().consume();
  348|  10.0M|}
_ZN10OpenAutoIt6Parser15ConsumeCommentsEv:
  351|   385k|{
  352|   389k|    while (HasMoreTokens())
  ------------------
  |  Branch (352:12): [True: 387k, False: 2.25k]
  ------------------
  353|   387k|    {
  354|   387k|        switch (CurrentToken().GetTokenKind())
  355|   387k|        {
  356|  1.86k|            case TokenKind::Comment:
  ------------------
  |  Branch (356:13): [True: 1.86k, False: 385k]
  ------------------
  357|  2.69k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (357:13): [True: 830, False: 386k]
  ------------------
  358|  3.70k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (358:13): [True: 1.00k, False: 386k]
  ------------------
  359|  3.70k|                ConsumeCurrent();
  360|  3.70k|                break;
  361|       |
  362|   383k|            default:
  ------------------
  |  Branch (362:13): [True: 383k, False: 3.70k]
  ------------------
  363|   383k|                return;
  364|   387k|        }
  365|   387k|    }
  366|   385k|}
_ZN10OpenAutoIt6Parser25ConsumeNewLineAndCommentsEv:
  369|  2.81M|{
  370|  2.94M|    while (HasMoreTokens())
  ------------------
  |  Branch (370:12): [True: 2.94M, False: 1.93k]
  ------------------
  371|  2.94M|    {
  372|  2.94M|        switch (CurrentToken().GetTokenKind())
  373|  2.94M|        {
  374|  6.40k|            case TokenKind::Comment:
  ------------------
  |  Branch (374:13): [True: 6.40k, False: 2.93M]
  ------------------
  375|  9.34k|            case TokenKind::PP_CommentsStart:
  ------------------
  |  Branch (375:13): [True: 2.94k, False: 2.93M]
  ------------------
  376|  12.5k|            case TokenKind::PP_CommentsEnd:
  ------------------
  |  Branch (376:13): [True: 3.16k, False: 2.93M]
  ------------------
  377|   133k|            case TokenKind::NewLine:
  ------------------
  |  Branch (377:13): [True: 121k, False: 2.82M]
  ------------------
  378|   133k|                ConsumeCurrent();
  379|   133k|                break;
  380|       |
  381|  2.80M|            default:
  ------------------
  |  Branch (381:13): [True: 2.80M, False: 133k]
  ------------------
  382|  2.80M|                return;
  383|  2.94M|        }
  384|  2.94M|    }
  385|  2.81M|}
_ZN10OpenAutoIt6Parser14RequireNewLineEv:
  388|   385k|{
  389|   385k|    ConsumeComments();
  390|       |
  391|   385k|    if (!HasMoreTokens())
  ------------------
  |  Branch (391:9): [True: 2.25k, False: 383k]
  ------------------
  392|  2.25k|    {
  393|  2.25k|        return;
  394|  2.25k|    }
  395|       |
  396|   383k|    const Token& token = CurrentToken();
  397|       |
  398|   383k|    if (token.GetTokenKind() != TokenKind::NewLine)
  ------------------
  |  Branch (398:9): [True: 262k, False: 120k]
  ------------------
  399|   262k|    {
  400|   262k|        Diag().Error(DiagnosticId::Expected, PreviousToken().GetBeginLocation(), "new line");
  401|   262k|    }
  402|       |
  403|   383k|    ConsumeCurrent();
  404|   383k|}
_ZN10OpenAutoIt6Parser9MustParseENS_9TokenKindE:
  407|  2.44M|{
  408|       |    // Do we even have more tokens?
  409|  2.44M|    if (!HasMoreTokens())
  ------------------
  |  Branch (409:9): [True: 7.19k, False: 2.43M]
  ------------------
  410|  7.19k|    {
  411|  7.19k|        return {};
  412|  7.19k|    }
  413|       |
  414|  2.43M|    const Token& token = CurrentToken();
  415|       |
  416|       |    // Is this the correct token kind
  417|  2.43M|    if (token.GetTokenKind() != kind)
  ------------------
  |  Branch (417:9): [True: 269k, False: 2.16M]
  ------------------
  418|   269k|    {
  419|   269k|        return {};
  420|   269k|    }
  421|       |
  422|  2.16M|    ConsumeCurrent();
  423|  2.16M|    return token;
  424|  2.43M|}
_ZN10OpenAutoIt6Parser4DiagEv:
  440|   265k|{
  441|   265k|    return {m_DiagnosticEngine};
  442|   265k|}
_ZN10OpenAutoIt6Parser23ParseFunctionDefinitionEv:
  445|  78.6k|{
  446|       |    // Next we MUST parse the function name
  447|  78.6k|    auto function_name_token = MustParse(TokenKind::FunctionIdentifier);
  448|  78.6k|    if (!function_name_token)
  ------------------
  |  Branch (448:9): [True: 5.07k, False: 73.5k]
  ------------------
  449|  5.07k|    {
  450|  5.07k|        err("Expected identifier for function name");
  451|  5.07k|        return {};
  452|  5.07k|    }
  453|       |
  454|  73.5k|    auto function_definition            = phi::make_scope<ASTFunctionDefinition>();
  455|  73.5k|    function_definition->m_FunctionName = function_name_token->GetText();
  456|       |
  457|       |    // Next we MUST parse an opening parenthesis (LParen)
  458|  73.5k|    if (!MustParse(TokenKind::LParen))
  ------------------
  |  Branch (458:9): [True: 3.11k, False: 70.4k]
  ------------------
  459|  3.11k|    {
  460|  3.11k|        err("Expected opening parenthesis");
  461|  3.11k|        return {};
  462|  3.11k|    }
  463|       |
  464|       |    // Next we parse the function parameter declarations until right parenthesis (RParen)
  465|  92.7k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (465:12): [True: 92.5k, False: 140]
  |  Branch (465:12): [True: 42.6k, False: 50.0k]
  |  Branch (465:31): [True: 42.6k, False: 49.9k]
  ------------------
  466|  42.6k|    {
  467|  42.6k|        phi::optional<FunctionParameter> function_parameter_optional =
  468|  42.6k|                ParseFunctionParameterDefinition();
  469|  42.6k|        if (!function_parameter_optional)
  ------------------
  |  Branch (469:13): [True: 20.3k, False: 22.2k]
  ------------------
  470|  20.3k|        {
  471|       |            // TODO: Proper error reporting
  472|  20.3k|            return {};
  473|  20.3k|        }
  474|  22.2k|        FunctionParameter& function_parameter = function_parameter_optional.value();
  475|       |
  476|  22.2k|        function_definition->m_Parameters.emplace_back(phi::move(function_parameter));
  477|       |
  478|       |        // Parse comma
  479|  22.2k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (479:13): [True: 22.2k, False: 0]
  |  Branch (479:13): [True: 19.4k, False: 2.77k]
  |  Branch (479:32): [True: 19.4k, False: 2.77k]
  ------------------
  480|  19.4k|        {
  481|  19.4k|            ConsumeCurrent();
  482|  19.4k|        }
  483|  22.2k|    }
  484|       |
  485|       |    // Next we MUST parse a right parenthesis (RParen)
  486|  50.0k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (486:9): [True: 140, False: 49.9k]
  ------------------
  487|    140|    {
  488|    140|        err("ERR: Expected ')'");
  489|    140|        return {};
  490|    140|    }
  491|       |
  492|       |    // Next we MUST parse a new line
  493|  49.9k|    if (!MustParse(TokenKind::NewLine))
  ------------------
  |  Branch (493:9): [True: 4.05k, False: 45.8k]
  ------------------
  494|  4.05k|    {
  495|  4.05k|        err("ERR: Missing newline!");
  496|  4.05k|        return {};
  497|  4.05k|    }
  498|       |
  499|       |    // Next parse Statements until EndFunc
  500|  88.7k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndFunc)
  ------------------
  |  Branch (500:12): [True: 88.5k, False: 173]
  |  Branch (500:12): [True: 87.2k, False: 1.45k]
  |  Branch (500:31): [True: 87.2k, False: 1.28k]
  ------------------
  501|  87.2k|    {
  502|  87.2k|        auto statement = ParseStatement();
  503|  87.2k|        if (!statement)
  ------------------
  |  Branch (503:13): [True: 44.4k, False: 42.8k]
  ------------------
  504|  44.4k|        {
  505|  44.4k|            err(fmt::format("ERR: Failed while parsing statement for function \"{:s}\"\n",
  506|  44.4k|                            std::string_view(function_definition->m_FunctionName)));
  507|       |            // TODO: Report proper error
  508|  44.4k|            return {};
  509|  44.4k|        }
  510|       |
  511|  42.8k|        function_definition->m_FunctionBody.emplace_back(phi::move(statement.release_not_null()));
  512|       |
  513|  42.8k|        ConsumeNewLineAndComments();
  514|  42.8k|    }
  515|       |
  516|       |    // Next we MUST parse EndFunc
  517|  1.45k|    if (!MustParse(TokenKind::KW_EndFunc))
  ------------------
  |  Branch (517:9): [True: 173, False: 1.28k]
  ------------------
  518|    173|    {
  519|       |        // TODO: Proper error
  520|    173|        return {};
  521|    173|    }
  522|       |
  523|  1.28k|    return phi::move(function_definition);
  524|  1.45k|}
_ZN10OpenAutoIt6Parser32ParseFunctionParameterDefinitionEv:
  527|  42.6k|{
  528|       |    // TODO: This entire function requires more error checks
  529|  42.6k|    FunctionParameter parameter;
  530|       |
  531|   165k|    while (HasMoreTokens())
  ------------------
  |  Branch (531:12): [True: 164k, False: 288]
  ------------------
  532|   164k|    {
  533|   164k|        const Token& token = CurrentToken();
  534|       |
  535|   164k|        switch (token.GetTokenKind())
  536|   164k|        {
  537|  66.9k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (537:13): [True: 66.9k, False: 97.8k]
  ------------------
  538|  66.9k|                parameter.name = token.GetText().substring_view(1u);
  539|  66.9k|                ConsumeCurrent();
  540|  66.9k|                break;
  541|      0|            }
  542|    324|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (542:13): [True: 324, False: 164k]
  ------------------
  543|    324|                parameter.as_const = true;
  544|    324|                ConsumeCurrent();
  545|    324|                break;
  546|      0|            }
  547|     66|            case TokenKind::KW_ByRef: {
  ------------------
  |  Branch (547:13): [True: 66, False: 164k]
  ------------------
  548|     66|                parameter.by_ref = true;
  549|     66|                ConsumeCurrent();
  550|     66|                break;
  551|      0|            }
  552|  57.6k|            case TokenKind::OP_Equals: {
  ------------------
  |  Branch (552:13): [True: 57.6k, False: 107k]
  ------------------
  553|  57.6k|                if (parameter.name.is_empty())
  ------------------
  |  Branch (553:21): [True: 202, False: 57.4k]
  ------------------
  554|    202|                {
  555|       |                    // TODO: PROPER ERROR
  556|    202|                    return {};
  557|    202|                }
  558|       |
  559|       |                // Consume the '='
  560|  57.4k|                ConsumeCurrent();
  561|       |
  562|       |                // Default value is an expression
  563|  57.4k|                auto default_expression = ParseExpression();
  564|  57.4k|                if (!default_expression)
  ------------------
  |  Branch (564:21): [True: 2.40k, False: 55.0k]
  ------------------
  565|  2.40k|                {
  566|       |                    // TODO: Report error
  567|  2.40k|                    return {};
  568|  2.40k|                }
  569|       |
  570|       |                // For default values we artificially create a variable assignment
  571|  55.0k|                auto default_var_assignment = phi::make_not_null_scope<ASTVariableAssignment>();
  572|       |
  573|  55.0k|                default_var_assignment->m_Scope                  = VariableScope::Auto;
  574|  55.0k|                default_var_assignment->m_VariableName           = parameter.name;
  575|  55.0k|                default_var_assignment->m_InitialValueExpression = phi::move(default_expression);
  576|       |
  577|  55.0k|                parameter.default_value_init.emplace_back(phi::move(default_var_assignment));
  578|  55.0k|                break;
  579|  57.4k|            }
  580|  19.4k|            case TokenKind::Comma:
  ------------------
  |  Branch (580:13): [True: 19.4k, False: 145k]
  ------------------
  581|  22.2k|            case TokenKind::RParen: {
  ------------------
  |  Branch (581:13): [True: 2.77k, False: 162k]
  ------------------
  582|  22.2k|                return phi::move(parameter);
  583|  19.4k|            }
  584|  17.4k|            default: {
  ------------------
  |  Branch (584:13): [True: 17.4k, False: 147k]
  ------------------
  585|       |                // TODO: Report error
  586|  17.4k|                return {};
  587|  19.4k|            }
  588|   164k|        }
  589|   164k|    }
  590|       |
  591|       |    // TODO: Report error unexpected EOF
  592|    288|    return {};
  593|  42.6k|}
_ZN10OpenAutoIt6Parser21ParseIncludeDirectiveEv:
  596|  2.62k|{
  597|  2.62k|    if (!HasMoreTokens())
  ------------------
  |  Branch (597:9): [True: 9, False: 2.62k]
  ------------------
  598|      9|    {
  599|      9|        Diag().Error(DiagnosticId::UnexpectedEndOfFile, PreviousToken().GetBeginLocation(),
  600|      9|                     "include directive");
  601|      9|        return;
  602|      9|    }
  603|       |
  604|  2.62k|    const Token&     token = CurrentToken();
  605|  2.62k|    phi::string_view file_name;
  606|  2.62k|    IncludeType      include_type = IncludeType::Local;
  607|       |
  608|       |    // Local include like this '#include "foo.au3"'
  609|  2.62k|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (609:9): [True: 17, False: 2.60k]
  ------------------
  610|     17|    {
  611|     17|        ConsumeCurrent();
  612|       |
  613|       |        // Get the file name
  614|     17|        file_name = token.GetText().substring_view(1u, token.GetText().length() - 2u);
  615|     17|    }
  616|       |    // Global include like this '#include <foo.au3>'
  617|  2.60k|    else if (token.GetTokenKind() == TokenKind::OP_LessThan)
  ------------------
  |  Branch (617:14): [True: 1.11k, False: 1.48k]
  ------------------
  618|  1.11k|    {
  619|       |        // FIXME: This is not really a nice way, but we essentially start from after the opening '<' and include everything upto the closing '>'
  620|  1.11k|        ConsumeCurrent();
  621|       |
  622|  1.11k|        include_type = IncludeType::Global;
  623|  1.11k|        file_name    = token.GetText().remove_prefix(1u);
  624|       |
  625|  1.11k|        phi::boolean found_end{false};
  626|  1.11k|        phi::boolean continue_parsing{true};
  627|  9.96k|        while (HasMoreTokens() && continue_parsing)
  ------------------
  |  Branch (627:16): [True: 9.89k, False: 67]
  |  Branch (627:16): [True: 8.84k, False: 1.11k]
  |  Branch (627:35): [True: 8.84k, False: 1.05k]
  ------------------
  628|  8.84k|        {
  629|  8.84k|            const Token& end_token = CurrentToken();
  630|       |
  631|  8.84k|            if (end_token.GetTokenKind() == TokenKind::OP_GreaterThan)
  ------------------
  |  Branch (631:17): [True: 9, False: 8.83k]
  ------------------
  632|      9|            {
  633|      9|                found_end        = true;
  634|      9|                continue_parsing = false;
  635|      9|                const phi::usize difference =
  636|      9|                        phi::narrow_cast<phi::usize>(end_token.GetText().data() - file_name.data());
  637|      9|                file_name.add_postfix(difference);
  638|      9|            }
  639|  8.83k|            else if (end_token.GetTokenKind() == TokenKind::NewLine)
  ------------------
  |  Branch (639:22): [True: 1.04k, False: 7.79k]
  ------------------
  640|  1.04k|            {
  641|       |                // Stop once we hit a newline
  642|  1.04k|                continue_parsing = false;
  643|  1.04k|            }
  644|       |
  645|  8.84k|            ConsumeCurrent();
  646|  8.84k|        }
  647|       |
  648|  1.11k|        if (!found_end)
  ------------------
  |  Branch (648:13): [True: 1.10k, False: 9]
  ------------------
  649|  1.10k|        {
  650|  1.10k|            Diag().Error(DiagnosticId::Expected, PreviousToken().GetEndLocation(), "'>'")
  651|  1.10k|                    .Note(token.GetBeginLocation(), "to match this '<'");
  652|  1.10k|            return;
  653|  1.10k|        }
  654|  1.11k|    }
  655|  1.48k|    else
  656|  1.48k|    {
  657|  1.48k|        Diag().Error(DiagnosticId::Expected, token.GetEndLocation(), "\"Filename\" or <Filename>");
  658|  1.48k|        return;
  659|  1.48k|    }
  660|       |
  661|       |    // Limit include nesting
  662|     26|    if (m_ParsingContextStack.size() >= MaxNumberOfIncludeNesting)
  ------------------
  |  Branch (662:9): [True: 0, False: 26]
  ------------------
  663|      0|    {
  664|      0|        Diag().FatalError(DiagnosticId::IncludeNestingTooDeeply, token.GetBeginLocation());
  665|      0|        return;
  666|      0|    }
  667|       |
  668|       |    // Emit error for empty file names
  669|     26|    if (file_name.is_empty())
  ------------------
  |  Branch (669:9): [True: 4, False: 22]
  ------------------
  670|      4|    {
  671|      4|        Diag().FatalError(DiagnosticId::EmptyFilename, token.GetBeginLocation());
  672|      4|        return;
  673|      4|    }
  674|       |
  675|       |    // Emit error if the file name is too long
  676|     22|    if (file_name.length() > 255u)
  ------------------
  |  Branch (676:9): [True: 7, False: 15]
  ------------------
  677|      7|    {
  678|      7|        Diag().FatalError(DiagnosticId::FileNameTooLong, token.GetBeginLocation(),
  679|      7|                          std::string_view(file_name));
  680|      7|        return;
  681|      7|    }
  682|       |
  683|       |    // Load the file from the SourceManager
  684|     15|    phi::observer_ptr<const SourceFile> include_file =
  685|     15|            m_SourceManager->LoadFile(std::string_view(file_name), include_type);
  686|     15|    if (!include_file)
  ------------------
  |  Branch (686:9): [True: 15, False: 0]
  ------------------
  687|     15|    {
  688|     15|        Diag().FatalError(DiagnosticId::FileNotFound, token.GetBeginLocation(),
  689|     15|                          std::string_view(file_name));
  690|     15|        return;
  691|     15|    }
  692|       |
  693|      0|    RequireNewLine();
  694|       |
  695|       |    // Append the file
  696|      0|    AppendSourceFileToDocument(include_file.not_null(), token.GetBeginLocation());
  697|      0|}
_ZN10OpenAutoIt6Parser14ParseStatementEv:
  700|  2.36M|{
  701|  2.36M|    ConsumeNewLineAndComments();
  702|       |
  703|  2.36M|    if (!HasMoreTokens())
  ------------------
  |  Branch (703:9): [True: 168, False: 2.36M]
  ------------------
  704|    168|    {
  705|       |        // TODO: Report proper error
  706|    168|        return {};
  707|    168|    }
  708|       |
  709|  2.36M|    phi::scope_ptr<ASTStatement> ret_statement;
  710|       |
  711|       |    // Loop until we parse something or there is nothing left to parse
  712|  2.36M|    const Token& token = CurrentToken();
  713|  2.36M|    switch (token.GetTokenKind())
  714|  2.36M|    {
  715|       |        // Variable assignment
  716|  1.34k|        case TokenKind::KW_Const:
  ------------------
  |  Branch (716:9): [True: 1.34k, False: 2.36M]
  ------------------
  717|  2.88k|        case TokenKind::KW_Local:
  ------------------
  |  Branch (717:9): [True: 1.53k, False: 2.36M]
  ------------------
  718|  4.29k|        case TokenKind::KW_Global:
  ------------------
  |  Branch (718:9): [True: 1.41k, False: 2.36M]
  ------------------
  719|  5.33k|        case TokenKind::KW_Static:
  ------------------
  |  Branch (719:9): [True: 1.03k, False: 2.36M]
  ------------------
  720|   194k|        case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (720:9): [True: 189k, False: 2.17M]
  ------------------
  721|   194k|            ret_statement = ParseVariableAssignment();
  722|   194k|            if (!ret_statement)
  ------------------
  |  Branch (722:17): [True: 6.95k, False: 187k]
  ------------------
  723|  6.95k|            {
  724|  6.95k|                err("ERR: Failed to parse variable assignment!\n");
  725|  6.95k|                return {};
  726|  6.95k|            }
  727|   187k|            break;
  728|   194k|        }
  729|       |
  730|       |        // If Statement
  731|   187k|        case TokenKind::KW_If: {
  ------------------
  |  Branch (731:9): [True: 185k, False: 2.18M]
  ------------------
  732|   185k|            ret_statement = ParseIfStatement();
  733|   185k|            if (!ret_statement)
  ------------------
  |  Branch (733:17): [True: 164k, False: 21.2k]
  ------------------
  734|   164k|            {
  735|   164k|                err("ERR: Failed to parse if statement!\n");
  736|   164k|                return {};
  737|   164k|            }
  738|  21.2k|            break;
  739|   185k|        }
  740|       |
  741|       |        // While statement
  742|  45.5k|        case TokenKind::KW_While: {
  ------------------
  |  Branch (742:9): [True: 45.5k, False: 2.32M]
  ------------------
  743|  45.5k|            ret_statement = ParseWhileStatement();
  744|  45.5k|            if (!ret_statement)
  ------------------
  |  Branch (744:17): [True: 33.2k, False: 12.3k]
  ------------------
  745|  33.2k|            {
  746|  33.2k|                err("ERR: Failed to parse while statement!\n");
  747|  33.2k|                return {};
  748|  33.2k|            }
  749|  12.3k|            break;
  750|  45.5k|        }
  751|       |
  752|       |        // Exit statement
  753|   165k|        case TokenKind::KW_Exit: {
  ------------------
  |  Branch (753:9): [True: 165k, False: 2.20M]
  ------------------
  754|   165k|            ret_statement = ParseExitStatement();
  755|   165k|            if (!ret_statement)
  ------------------
  |  Branch (755:17): [True: 0, False: 165k]
  ------------------
  756|      0|            {
  757|      0|                err("ERR: Failed to parse exit statement!\n");
  758|      0|                return {};
  759|      0|            }
  760|   165k|            break;
  761|   165k|        }
  762|       |
  763|  1.77M|        default: {
  ------------------
  |  Branch (763:9): [True: 1.77M, False: 592k]
  ------------------
  764|       |            // Try to parse ExpressionStatement
  765|  1.77M|            ret_statement = ParseExpressionStatement();
  766|  1.77M|            if (!ret_statement)
  ------------------
  |  Branch (766:17): [True: 1.64M, False: 132k]
  ------------------
  767|  1.64M|            {
  768|  1.64M|                err(fmt::format("ERR: Unexpected token: '{:s}'\n",
  769|  1.64M|                                enum_name(token.GetTokenKind())));
  770|  1.64M|                return {};
  771|  1.64M|            }
  772|   132k|            break;
  773|  1.77M|        }
  774|  2.36M|    }
  775|       |
  776|   519k|    return phi::move(ret_statement);
  777|  2.36M|}
_ZN10OpenAutoIt6Parser19ParseWhileStatementEv:
  780|  45.5k|{
  781|  45.5k|    const Token& token = CurrentToken();
  782|  45.5k|    if (token.GetTokenKind() != TokenKind::KW_While)
  ------------------
  |  Branch (782:9): [True: 0, False: 45.5k]
  ------------------
  783|      0|    {
  784|       |        // TODO: Proper error
  785|      0|        return {};
  786|      0|    }
  787|  45.5k|    ConsumeCurrent();
  788|       |
  789|       |    // Next we MUST parse an Expression
  790|  45.5k|    auto while_condition_expression = ParseExpression();
  791|  45.5k|    if (!while_condition_expression)
  ------------------
  |  Branch (791:9): [True: 2.37k, False: 43.1k]
  ------------------
  792|  2.37k|    {
  793|       |        // TODO: Proper error
  794|  2.37k|        return {};
  795|  2.37k|    }
  796|       |
  797|  43.1k|    auto while_statement =
  798|  43.1k|            phi::make_scope<ASTWhileStatement>(while_condition_expression.release_not_null());
  799|       |
  800|       |    // Parse statements until KW_WEnd
  801|  66.0k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (801:12): [True: 65.6k, False: 384]
  |  Branch (801:12): [True: 53.3k, False: 12.7k]
  |  Branch (801:31): [True: 53.3k, False: 12.3k]
  ------------------
  802|  53.3k|    {
  803|  53.3k|        ConsumeNewLineAndComments();
  804|       |
  805|       |        // Parse statements
  806|  53.3k|        auto statement = ParseStatement();
  807|  53.3k|        if (!statement)
  ------------------
  |  Branch (807:13): [True: 30.4k, False: 22.8k]
  ------------------
  808|  30.4k|        {
  809|       |            // TODO: Propeer error
  810|  30.4k|            return {};
  811|  30.4k|        }
  812|       |
  813|  22.8k|        while_statement->m_Statements.emplace_back(statement.release_not_null());
  814|  22.8k|    }
  815|       |
  816|  12.7k|    if (!HasMoreTokens())
  ------------------
  |  Branch (816:9): [True: 384, False: 12.3k]
  ------------------
  817|    384|    {
  818|       |        // TODO: Proper error
  819|    384|        return {};
  820|    384|    }
  821|       |
  822|       |    // Next token MUST be KW_Wend
  823|  12.3k|    const Token& wend_token = CurrentToken();
  824|  12.3k|    if (wend_token.GetTokenKind() != TokenKind::KW_WEnd)
  ------------------
  |  Branch (824:9): [True: 0, False: 12.3k]
  ------------------
  825|      0|    {
  826|       |        // TODO: Proper error
  827|      0|        return {};
  828|      0|    }
  829|  12.3k|    ConsumeCurrent();
  830|       |
  831|  12.3k|    return phi::move(while_statement);
  832|  12.3k|}
_ZN10OpenAutoIt6Parser23ParseVariableAssignmentEv:
  835|   194k|{
  836|   194k|    auto variable_declaration = phi::make_scope<ASTVariableAssignment>();
  837|       |
  838|   194k|    phi::boolean parsed_identifier = false;
  839|       |    // Parse all specifiers until we hit a VariableIdentifier
  840|   389k|    while (HasMoreTokens() && !parsed_identifier)
  ------------------
  |  Branch (840:12): [True: 388k, False: 1.30k]
  |  Branch (840:12): [True: 200k, False: 189k]
  |  Branch (840:31): [True: 200k, False: 188k]
  ------------------
  841|   200k|    {
  842|   200k|        const Token& current_token = CurrentToken();
  843|   200k|        ConsumeCurrent();
  844|       |
  845|   200k|        switch (current_token.GetTokenKind())
  846|   200k|        {
  847|  2.04k|            case TokenKind::KW_Const: {
  ------------------
  |  Branch (847:13): [True: 2.04k, False: 198k]
  ------------------
  848|  2.04k|                if (variable_declaration->m_IsConst)
  ------------------
  |  Branch (848:21): [True: 697, False: 1.34k]
  ------------------
  849|    697|                {
  850|       |                    // TODO: Error more than one const specifier
  851|    697|                    err("ERR: More than one const specifier given\n");
  852|    697|                    return {};
  853|    697|                }
  854|  1.34k|                variable_declaration->m_IsConst = true;
  855|  1.34k|                break;
  856|  2.04k|            }
  857|       |
  858|  1.87k|            case TokenKind::KW_Static: {
  ------------------
  |  Branch (858:13): [True: 1.87k, False: 198k]
  ------------------
  859|  1.87k|                if (variable_declaration->m_IsStatic)
  ------------------
  |  Branch (859:21): [True: 837, False: 1.03k]
  ------------------
  860|    837|                {
  861|       |                    // TODO: Error more than one static specifier
  862|    837|                    err("ERR: More than one static specifier given\n");
  863|    837|                    return {};
  864|    837|                }
  865|  1.03k|                variable_declaration->m_IsStatic = true;
  866|  1.03k|                break;
  867|  1.87k|            }
  868|       |
  869|  1.75k|            case TokenKind::KW_Global: {
  ------------------
  |  Branch (869:13): [True: 1.75k, False: 198k]
  ------------------
  870|  1.75k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (870:21): [True: 338, False: 1.41k]
  ------------------
  871|    338|                {
  872|       |                    // TODO: Error more than one scope specifier
  873|    338|                    err("ERR: More than one scope specifier given\n");
  874|    338|                    return {};
  875|    338|                }
  876|  1.41k|                variable_declaration->m_Scope = VariableScope::Global;
  877|  1.41k|                break;
  878|  1.75k|            }
  879|       |
  880|  2.95k|            case TokenKind::KW_Local: {
  ------------------
  |  Branch (880:13): [True: 2.95k, False: 197k]
  ------------------
  881|  2.95k|                if (variable_declaration->m_Scope != VariableScope::Auto)
  ------------------
  |  Branch (881:21): [True: 1.42k, False: 1.53k]
  ------------------
  882|  1.42k|                {
  883|       |                    // TODO: Error more than one scope specifier
  884|  1.42k|                    err("ERR: More than one scope specifier given\n");
  885|  1.42k|                    return {};
  886|  1.42k|                }
  887|  1.53k|                variable_declaration->m_Scope = VariableScope::Local;
  888|  1.53k|                break;
  889|  2.95k|            }
  890|       |
  891|   189k|            case TokenKind::VariableIdentifier: {
  ------------------
  |  Branch (891:13): [True: 189k, False: 10.6k]
  ------------------
  892|       |                // VariableIdentifiers begin with a '$'
  893|       |                // Like: $MyVariable
  894|       |                // So for the name we ignore the very first character
  895|   189k|                PHI_ASSERT(current_token.GetText().length() > 1u);
  896|   189k|                variable_declaration->m_VariableName = current_token.GetText().substring_view(1u);
  897|       |
  898|   189k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_empty());
  899|   189k|                PHI_ASSERT(!variable_declaration->m_VariableName.is_null());
  900|       |
  901|   189k|                parsed_identifier = true;
  902|   189k|                break;
  903|  2.95k|            }
  904|       |
  905|  1.99k|            default: {
  ------------------
  |  Branch (905:13): [True: 1.99k, False: 198k]
  ------------------
  906|       |                // TODO: Error unexpected token
  907|  1.99k|                return {};
  908|  2.95k|            }
  909|   200k|        }
  910|   200k|    }
  911|       |
  912|   189k|    if (!parsed_identifier)
  ------------------
  |  Branch (912:9): [True: 34, False: 189k]
  ------------------
  913|     34|    {
  914|       |        // TODO: Error variable declaration ends before the VariableIdentifier
  915|     34|        err("ERR: Missing variable identifier!\n");
  916|     34|        return {};
  917|     34|    }
  918|       |
  919|       |    // Next me must parse a OP_Equals/'=', a new line, comment or finish parsing
  920|   189k|    if (!HasMoreTokens())
  ------------------
  |  Branch (920:9): [True: 1.27k, False: 188k]
  ------------------
  921|  1.27k|    {
  922|  1.27k|        return variable_declaration;
  923|  1.27k|    }
  924|       |
  925|       |    // Check for equals
  926|   188k|    const Token& next_token = CurrentToken();
  927|       |
  928|   188k|    if (next_token.GetTokenKind() == TokenKind::OP_Equals)
  ------------------
  |  Branch (928:9): [True: 21.8k, False: 166k]
  ------------------
  929|  21.8k|    {
  930|  21.8k|        ConsumeCurrent();
  931|       |
  932|       |        // Now me MUST parse an expression
  933|  21.8k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
  934|  21.8k|        if (!expression)
  ------------------
  |  Branch (934:13): [True: 1.63k, False: 20.1k]
  ------------------
  935|  1.63k|        {
  936|       |            // TODO: Error failed to parse a valid expression
  937|  1.63k|            err("ERR: Failed to parse a valid expression inside variable assignment!\n");
  938|  1.63k|            return {};
  939|  1.63k|        }
  940|       |
  941|  20.1k|        variable_declaration->m_InitialValueExpression = phi::move(expression);
  942|  20.1k|    }
  943|       |
  944|   186k|    return variable_declaration;
  945|   188k|}
_ZN10OpenAutoIt6Parser24ParseExpressionStatementEv:
  948|  1.77M|{
  949|  1.77M|    auto expression = ParseExpression();
  950|  1.77M|    if (!expression)
  ------------------
  |  Branch (950:9): [True: 1.16M, False: 605k]
  ------------------
  951|  1.16M|    {
  952|  1.16M|        return {};
  953|  1.16M|    }
  954|       |
  955|   605k|    auto expression_statement =
  956|   605k|            phi::make_not_null_scope<ASTExpressionStatement>(expression.release_not_null());
  957|       |
  958|   605k|    if (!expression_statement->m_Expression->IsValidAsStatement())
  ------------------
  |  Branch (958:9): [True: 473k, False: 132k]
  ------------------
  959|   473k|    {
  960|   473k|        err(fmt::format("Expression {:s} is not valid as an statement\n",
  961|   473k|                        expression_statement->m_Expression->Name()));
  962|   473k|        return {};
  963|   473k|    }
  964|       |
  965|   132k|    return phi::move(expression_statement);
  966|   605k|}
_ZN10OpenAutoIt6Parser16ParseIfStatementEv:
  969|   185k|{
  970|   185k|    if (!MustParse(TokenKind::KW_If))
  ------------------
  |  Branch (970:9): [True: 0, False: 185k]
  ------------------
  971|      0|    {
  972|      0|        return {};
  973|      0|    }
  974|       |
  975|       |    // Next me MUST parse an expression
  976|   185k|    auto if_condition = ParseExpression();
  977|   185k|    if (!if_condition)
  ------------------
  |  Branch (977:9): [True: 18.0k, False: 167k]
  ------------------
  978|  18.0k|    {
  979|  18.0k|        err("ERR: failed to parse expression!\n");
  980|       |
  981|  18.0k|        return {};
  982|  18.0k|    }
  983|       |
  984|       |    // Next we MUST parse Then
  985|   167k|    if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (985:9): [True: 33.8k, False: 133k]
  ------------------
  986|  33.8k|    {
  987|  33.8k|        err("ERR: Missing then!\n");
  988|       |
  989|  33.8k|        return {};
  990|  33.8k|    }
  991|       |
  992|   133k|    ConsumeNewLineAndComments();
  993|       |
  994|   133k|    IfCase if_case{.condition{if_condition.release_not_null()}, .body{}};
  995|       |
  996|       |    // Next parse statements until we hit and EndIf, ElseIf or Else
  997|   159k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (997:12): [True: 159k, False: 627]
  |  Branch (997:12): [True: 52.8k, False: 106k]
  |  Branch (997:31): [True: 145k, False: 13.5k]
  ------------------
  998|   159k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (998:12): [True: 99.1k, False: 46.3k]
  ------------------
  999|   159k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (999:12): [True: 52.8k, False: 46.3k]
  ------------------
 1000|  52.8k|    {
 1001|  52.8k|        auto statement = ParseStatement();
 1002|  52.8k|        if (!statement)
  ------------------
  |  Branch (1002:13): [True: 27.0k, False: 25.7k]
  ------------------
 1003|  27.0k|        {
 1004|  27.0k|            err("ERR: Failed to parse statement inside of IF\n");
 1005|  27.0k|            return {};
 1006|  27.0k|        }
 1007|       |
 1008|  25.7k|        if_case.body.emplace_back(statement.release_not_null());
 1009|       |
 1010|  25.7k|        ConsumeNewLineAndComments();
 1011|  25.7k|    }
 1012|       |
 1013|   106k|    auto if_statement = phi::make_not_null_scope<ASTIfStatement>(phi::move(if_case));
 1014|       |
 1015|       |    // Handle all ElseIf cases which are optional
 1016|   201k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1016:12): [True: 197k, False: 4.20k]
  |  Branch (1016:12): [True: 110k, False: 90.9k]
  |  Branch (1016:31): [True: 110k, False: 86.7k]
  ------------------
 1017|   110k|    {
 1018|       |        // Consume KW_ElseIf token
 1019|   110k|        ConsumeCurrent();
 1020|       |
 1021|       |        // Parse the condition
 1022|   110k|        auto else_if_condition = ParseExpression();
 1023|   110k|        if (!else_if_condition)
  ------------------
  |  Branch (1023:13): [True: 15.8k, False: 94.6k]
  ------------------
 1024|  15.8k|        {
 1025|  15.8k|            return {};
 1026|  15.8k|        }
 1027|       |
 1028|       |        // Parse KW_Then
 1029|  94.6k|        if (!MustParse(TokenKind::KW_Then))
  ------------------
  |  Branch (1029:13): [True: 43.9k, False: 50.7k]
  ------------------
 1030|  43.9k|        {
 1031|       |            // TODO: Better error message and this error should be recoverable
 1032|  43.9k|            err("ERR: Missing then!\n");
 1033|  43.9k|        }
 1034|       |
 1035|  94.6k|        ConsumeNewLineAndComments();
 1036|       |
 1037|  94.6k|        IfCase else_if_case{.condition{else_if_condition.release_not_null()},
 1038|  94.6k|                            .body{ParseIfCaseStatements()}};
 1039|       |
 1040|       |        // Append our case to the if statement
 1041|  94.6k|        if_statement->m_ElseIfCases.emplace_back(phi::move(else_if_case));
 1042|  94.6k|    }
 1043|       |
 1044|       |    // Handle optional else case
 1045|  90.9k|    if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::KW_Else)
  ------------------
  |  Branch (1045:9): [True: 86.7k, False: 4.20k]
  |  Branch (1045:9): [True: 49.2k, False: 41.7k]
  |  Branch (1045:28): [True: 49.2k, False: 37.5k]
  ------------------
 1046|  49.2k|    {
 1047|       |        // Consume KW_Else token
 1048|  49.2k|        ConsumeCurrent();
 1049|       |
 1050|  49.2k|        ConsumeNewLineAndComments();
 1051|       |
 1052|  49.2k|        if_statement->m_ElseCase = ParseIfCaseStatements();
 1053|  49.2k|    }
 1054|       |
 1055|  90.9k|    if (!MustParse(TokenKind::KW_EndIf))
  ------------------
  |  Branch (1055:9): [True: 69.7k, False: 21.2k]
  ------------------
 1056|  69.7k|    {
 1057|  69.7k|        err("ERR: Missing EndIf!\n");
 1058|       |        // TODO: Proper Error
 1059|  69.7k|        return {};
 1060|  69.7k|    }
 1061|       |
 1062|  21.2k|    return phi::move(if_statement);
 1063|  90.9k|}
_ZN10OpenAutoIt6Parser21ParseIfCaseStatementsEv:
 1066|   143k|{
 1067|   143k|    std::vector<phi::not_null_scope_ptr<ASTStatement>> statements;
 1068|       |
 1069|       |    // Parse statements until KW_EndIf, KW_Else, KW_ElseIf
 1070|   187k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::KW_EndIf &&
  ------------------
  |  Branch (1070:12): [True: 186k, False: 810]
  |  Branch (1070:12): [True: 110k, False: 76.8k]
  |  Branch (1070:31): [True: 178k, False: 7.65k]
  ------------------
 1071|   187k|           CurrentToken().GetTokenKind() != TokenKind::KW_Else &&
  ------------------
  |  Branch (1071:12): [True: 166k, False: 12.3k]
  ------------------
 1072|   187k|           CurrentToken().GetTokenKind() != TokenKind::KW_ElseIf)
  ------------------
  |  Branch (1072:12): [True: 110k, False: 56.0k]
  ------------------
 1073|   110k|    {
 1074|   110k|        auto statement = ParseStatement();
 1075|   110k|        if (!statement)
  ------------------
  |  Branch (1075:13): [True: 67.0k, False: 43.4k]
  ------------------
 1076|  67.0k|        {
 1077|  67.0k|            err("ERR: Failed to parse statement inside of IF\n");
 1078|  67.0k|            return {};
 1079|  67.0k|        }
 1080|       |
 1081|  43.4k|        statements.emplace_back(statement.release_not_null());
 1082|       |
 1083|  43.4k|        ConsumeNewLineAndComments();
 1084|  43.4k|    }
 1085|       |
 1086|  76.8k|    return statements;
 1087|   143k|}
_ZN10OpenAutoIt6Parser19ParseIntegerLiteralEv:
 1090|   981k|{
 1091|   981k|    const Token& token = CurrentToken();
 1092|   981k|    if (token.GetTokenKind() != TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1092:9): [True: 0, False: 981k]
  ------------------
 1093|      0|    {
 1094|      0|        return {};
 1095|      0|    }
 1096|       |
 1097|   981k|    if (token.GetText().length() > 18u)
  ------------------
  |  Branch (1097:9): [True: 439, False: 981k]
  ------------------
 1098|    439|    {
 1099|       |        // TODO: Better check and proper error
 1100|    439|        return {};
 1101|    439|    }
 1102|       |
 1103|   981k|    phi::int64_t value{0};
 1104|   981k|    phi::boolean parsing_hex{false};
 1105|  2.20M|    for (phi::usize index{0u}; index < token.GetText().length(); ++index)
  ------------------
  |  Branch (1105:32): [True: 1.22M, False: 981k]
  ------------------
 1106|  1.22M|    {
 1107|  1.22M|        char character = token.GetText().at(index);
 1108|       |
 1109|       |        // Checking the second character
 1110|  1.22M|        if (index == 1u)
  ------------------
  |  Branch (1110:13): [True: 197k, False: 1.02M]
  ------------------
 1111|   197k|        {
 1112|   197k|            if (character == 'x' || character == 'X')
  ------------------
  |  Branch (1112:17): [True: 9.56k, False: 187k]
  |  Branch (1112:37): [True: 3.03k, False: 184k]
  ------------------
 1113|  12.5k|            {
 1114|  12.5k|                parsing_hex = true;
 1115|  12.5k|                continue;
 1116|  12.5k|            }
 1117|   197k|        }
 1118|       |
 1119|  1.21M|        if (parsing_hex)
  ------------------
  |  Branch (1119:13): [True: 1.75k, False: 1.21M]
  ------------------
 1120|  1.75k|        {
 1121|  1.75k|            PHI_ASSERT(phi::is_hex_digit(character));
 1122|       |
 1123|  1.75k|            value <<= 4;
 1124|  1.75k|            value |= phi::hex_digit_value(character).unsafe();
 1125|  1.75k|        }
 1126|  1.21M|        else
 1127|  1.21M|        {
 1128|  1.21M|            PHI_ASSERT(character >= '0' && character <= '9');
 1129|       |
 1130|  1.21M|            value *= 10;
 1131|  1.21M|            value += (character - '0');
 1132|  1.21M|        }
 1133|  1.21M|    }
 1134|       |
 1135|   981k|    ConsumeCurrent();
 1136|   981k|    return phi::make_scope<ASTIntegerLiteral>(value);
 1137|   981k|}
_ZN10OpenAutoIt6Parser18ParseStringLiteralEv:
 1140|  52.9k|{
 1141|  52.9k|    const Token& token = CurrentToken();
 1142|  52.9k|    if (token.GetTokenKind() != TokenKind::StringLiteral)
  ------------------
  |  Branch (1142:9): [True: 0, False: 52.9k]
  ------------------
 1143|      0|    {
 1144|      0|        return {};
 1145|      0|    }
 1146|  52.9k|    ConsumeCurrent();
 1147|       |
 1148|  52.9k|    auto string_literal = phi::make_scope<ASTStringLiteral>();
 1149|       |
 1150|  52.9k|    const phi::usize length = token.GetText().length();
 1151|       |    // Trim the trailing and leading "
 1152|  52.9k|    string_literal->m_Value = token.GetText().substring_view(1u, length - 2u);
 1153|       |
 1154|  52.9k|    return phi::move(string_literal);
 1155|  52.9k|}
_ZN10OpenAutoIt6Parser15ParseExpressionEv:
 1158|  5.27M|{
 1159|  5.27M|    phi::scope_ptr<ASTExpression> lhs_expression = ParseExpressionLhs();
 1160|  5.27M|    if (!lhs_expression)
  ------------------
  |  Branch (1160:9): [True: 3.46M, False: 1.81M]
  ------------------
 1161|  3.46M|    {
 1162|  3.46M|        return {};
 1163|  3.46M|    }
 1164|       |
 1165|  1.81M|    return ParseExpressionRhs(lhs_expression.release_not_null(), 0);
 1166|  5.27M|}
_ZN10OpenAutoIt6Parser18ParseExpressionLhsEv:
 1169|  5.63M|{
 1170|  5.63M|    if (!HasMoreTokens())
  ------------------
  |  Branch (1170:9): [True: 3.35k, False: 5.63M]
  ------------------
 1171|  3.35k|    {
 1172|       |        // TODO: Proper error
 1173|  3.35k|        return {};
 1174|  3.35k|    }
 1175|       |
 1176|  5.63M|    const Token& token = CurrentToken();
 1177|  5.63M|    if (IsUnaryOperator(token.GetTokenKind()))
  ------------------
  |  Branch (1177:9): [True: 199k, False: 5.43M]
  ------------------
 1178|   199k|    {
 1179|   199k|        const int op_precedence = OperatorPrecedence.lookup(token.GetTokenKind());
 1180|   199k|        PHI_UNUSED_VARIABLE(op_precedence);
 1181|   199k|        ConsumeCurrent();
 1182|       |
 1183|   199k|        phi::scope_ptr<ASTExpression> unary_expression = ParseUnaryExpression(token.GetTokenKind());
 1184|   199k|        if (!unary_expression)
  ------------------
  |  Branch (1184:13): [True: 79.2k, False: 120k]
  ------------------
 1185|  79.2k|        {
 1186|       |            // TODO: Proper error
 1187|  79.2k|            return {};
 1188|  79.2k|        }
 1189|       |
 1190|   120k|        return phi::move(unary_expression);
 1191|   199k|    }
 1192|  5.43M|    if (token.GetTokenKind() == TokenKind::LParen)
  ------------------
  |  Branch (1192:9): [True: 1.11M, False: 4.31M]
  ------------------
 1193|  1.11M|    {
 1194|       |        // Consume the LParen
 1195|  1.11M|        ConsumeCurrent();
 1196|       |
 1197|  1.11M|        phi::scope_ptr<ASTExpression> paren_expression = ParseParenExpression();
 1198|  1.11M|        if (!paren_expression)
  ------------------
  |  Branch (1198:13): [True: 1.05M, False: 61.3k]
  ------------------
 1199|  1.05M|        {
 1200|       |            // TODO: Proper error
 1201|  1.05M|            return {};
 1202|  1.05M|        }
 1203|       |
 1204|  61.3k|        return phi::move(paren_expression);
 1205|  1.11M|    }
 1206|  4.31M|    if (token.GetTokenKind() == TokenKind::IntegerLiteral)
  ------------------
  |  Branch (1206:9): [True: 981k, False: 3.33M]
  ------------------
 1207|   981k|    {
 1208|   981k|        phi::scope_ptr<ASTExpression> int_literal = ParseIntegerLiteral();
 1209|   981k|        if (!int_literal)
  ------------------
  |  Branch (1209:13): [True: 439, False: 981k]
  ------------------
 1210|    439|        {
 1211|       |            // TODO: Error failed to parse integer literal
 1212|    439|            return {};
 1213|    439|        }
 1214|       |
 1215|   981k|        return phi::move(int_literal);
 1216|   981k|    }
 1217|  3.33M|    if (token.GetTokenKind() == TokenKind::StringLiteral)
  ------------------
  |  Branch (1217:9): [True: 52.9k, False: 3.28M]
  ------------------
 1218|  52.9k|    {
 1219|  52.9k|        auto string_literal_expression = ParseStringLiteral();
 1220|  52.9k|        if (!string_literal_expression)
  ------------------
  |  Branch (1220:13): [True: 0, False: 52.9k]
  ------------------
 1221|      0|        {
 1222|       |            // TODO: Proper error
 1223|      0|            return {};
 1224|      0|        }
 1225|       |
 1226|  52.9k|        return phi::move(string_literal_expression);
 1227|  52.9k|    }
 1228|       |
 1229|       |    // Boolean literal
 1230|  3.28M|    if (token.GetTokenKind() == TokenKind::KW_True || token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1230:9): [True: 33.4k, False: 3.24M]
  |  Branch (1230:55): [True: 10.3k, False: 3.23M]
  ------------------
 1231|  43.8k|    {
 1232|  43.8k|        auto boolean_literal = ParseBooleanLiteral();
 1233|  43.8k|        if (!boolean_literal)
  ------------------
  |  Branch (1233:13): [True: 0, False: 43.8k]
  ------------------
 1234|      0|        {
 1235|       |            // TODO: Proper error
 1236|      0|            return {};
 1237|      0|        }
 1238|       |
 1239|  43.8k|        return phi::move(boolean_literal);
 1240|  43.8k|    }
 1241|       |
 1242|       |    // Function call expression
 1243|  3.23M|    if (token.GetTokenKind() == TokenKind::FunctionIdentifier || token.IsBuiltInFunction())
  ------------------
  |  Branch (1243:9): [True: 573k, False: 2.66M]
  |  Branch (1243:9): [True: 581k, False: 2.65M]
  |  Branch (1243:66): [True: 8.57k, False: 2.65M]
  ------------------
 1244|   581k|    {
 1245|   581k|        auto function_call_expression = ParseFunctionCallExpression();
 1246|   581k|        if (!function_call_expression)
  ------------------
  |  Branch (1246:13): [True: 508k, False: 72.7k]
  ------------------
 1247|   508k|        {
 1248|       |            // TODO: Proper error
 1249|   508k|            err("ERR: Failed to parse function call expression!\n");
 1250|   508k|            return {};
 1251|   508k|        }
 1252|       |
 1253|  72.7k|        return phi::move(function_call_expression);
 1254|   581k|    }
 1255|       |    // Variable expression
 1256|  2.65M|    if (token.GetTokenKind() == TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1256:9): [True: 164k, False: 2.49M]
  ------------------
 1257|   164k|    {
 1258|   164k|        auto variable_expression = ParseVariableExpression();
 1259|   164k|        if (!variable_expression)
  ------------------
  |  Branch (1259:13): [True: 0, False: 164k]
  ------------------
 1260|      0|        {
 1261|       |            // TODO: Proper error
 1262|      0|            err("ERR: Failed to parse Variable expression\n");
 1263|      0|            return {};
 1264|      0|        }
 1265|       |
 1266|   164k|        return phi::move(variable_expression);
 1267|   164k|    }
 1268|       |    // Keyword literal
 1269|  2.49M|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1269:9): [True: 144k, False: 2.34M]
  ------------------
 1270|   144k|    {
 1271|   144k|        auto keyword_literal = ParseKeywordLiteral();
 1272|   144k|        if (!keyword_literal)
  ------------------
  |  Branch (1272:13): [True: 0, False: 144k]
  ------------------
 1273|      0|        {
 1274|       |            // TODO: Proper error
 1275|      0|            err("ERR: Failed to parse keyword literal expression!\n");
 1276|      0|            return {};
 1277|      0|        }
 1278|       |
 1279|   144k|        return phi::move(keyword_literal);
 1280|   144k|    }
 1281|       |    // Float literal
 1282|  2.34M|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1282:9): [True: 373k, False: 1.97M]
  ------------------
 1283|   373k|    {
 1284|   373k|        auto float_literal = ParseFloatLiteral();
 1285|   373k|        if (!float_literal)
  ------------------
  |  Branch (1285:13): [True: 0, False: 373k]
  ------------------
 1286|      0|        {
 1287|       |            // TODO: Proper error
 1288|      0|            err("ERR: Failed to parse float literal expression!\n");
 1289|      0|            return {};
 1290|      0|        }
 1291|       |
 1292|   373k|        return phi::move(float_literal);
 1293|   373k|    }
 1294|       |    // ArraySubscript expression
 1295|  1.97M|    if (token.GetTokenKind() == TokenKind::LSquare)
  ------------------
  |  Branch (1295:9): [True: 1.17M, False: 797k]
  ------------------
 1296|  1.17M|    {
 1297|  1.17M|        auto subscript_expression = ParseArraySubscriptExpression();
 1298|  1.17M|        if (!subscript_expression)
  ------------------
  |  Branch (1298:13): [True: 1.13M, False: 45.5k]
  ------------------
 1299|  1.13M|        {
 1300|  1.13M|            err("ERR: Failed to parse array subscript expression\n");
 1301|  1.13M|            return {};
 1302|  1.13M|        }
 1303|       |
 1304|  45.5k|        return phi::move(subscript_expression);
 1305|  1.17M|    }
 1306|   797k|    if (token.IsMacro())
  ------------------
  |  Branch (1306:9): [True: 5.70k, False: 791k]
  ------------------
 1307|  5.70k|    {
 1308|  5.70k|        ConsumeCurrent();
 1309|       |
 1310|  5.70k|        phi::scope_ptr<ASTExpression> macro_expression = ParseMacroExpression(token.GetTokenKind());
 1311|  5.70k|        if (!macro_expression)
  ------------------
  |  Branch (1311:13): [True: 0, False: 5.70k]
  ------------------
 1312|      0|        {
 1313|       |            // TODO: Proper error
 1314|      0|            return {};
 1315|      0|        }
 1316|       |
 1317|  5.70k|        return macro_expression;
 1318|  5.70k|    }
 1319|       |
 1320|       |    // TODO: Error Unexpected token
 1321|   791k|    err(fmt::format("Unexpected token '{:s}' while parsing expression\n",
 1322|   791k|                    enum_name(token.GetTokenKind())));
 1323|   791k|    return {};
 1324|   797k|}
_ZN10OpenAutoIt6Parser18ParseExpressionRhsEN3phi18not_null_scope_ptrINS_13ASTExpressionEEEi:
 1328|  1.83M|{
 1329|  2.06M|    while (true)
  ------------------
  |  Branch (1329:12): [Folded - Ignored]
  ------------------
 1330|  2.06M|    {
 1331|  2.06M|        if (!HasMoreTokens())
  ------------------
  |  Branch (1331:13): [True: 8.65k, False: 2.05M]
  ------------------
 1332|  8.65k|        {
 1333|  8.65k|            return phi::move(lhs);
 1334|  8.65k|        }
 1335|       |
 1336|  2.05M|        const Token& operator_token = CurrentToken();
 1337|  2.05M|        if (!IsBinaryOperator(operator_token.GetTokenKind()) &&
  ------------------
  |  Branch (1337:13): [True: 1.68M, False: 365k]
  |  Branch (1337:13): [True: 1.52M, False: 524k]
  ------------------
 1338|  2.05M|            operator_token.GetTokenKind() != TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1338:13): [True: 1.52M, False: 159k]
  ------------------
 1339|  1.52M|        {
 1340|       |            // If its not a binary operator and not a ternary just return the lhs expression
 1341|  1.52M|            return phi::move(lhs);
 1342|  1.52M|        }
 1343|   524k|        int token_precedence = OperatorPrecedence.lookup(operator_token.GetTokenKind());
 1344|   524k|        ConsumeCurrent();
 1345|       |
 1346|   524k|        if (token_precedence < precedence)
  ------------------
  |  Branch (1346:13): [True: 927, False: 523k]
  ------------------
 1347|    927|        {
 1348|    927|            return phi::move(lhs);
 1349|    927|        }
 1350|       |
 1351|   523k|        if (operator_token.GetTokenKind() == TokenKind::OP_TernaryIf)
  ------------------
  |  Branch (1351:13): [True: 159k, False: 364k]
  ------------------
 1352|   159k|        {
 1353|   159k|            phi::scope_ptr<ASTTernaryIfExpression> ternary_if_expression =
 1354|   159k|                    ParseTernaryIfExpression(phi::move(lhs));
 1355|   159k|            if (!ternary_if_expression)
  ------------------
  |  Branch (1355:17): [True: 99.2k, False: 59.7k]
  ------------------
 1356|  99.2k|            {
 1357|       |                // TODO: Proper error
 1358|  99.2k|                return {};
 1359|  99.2k|            }
 1360|       |
 1361|  59.7k|            return phi::move(ternary_if_expression);
 1362|   159k|        }
 1363|       |
 1364|       |        // This must be an binary expression
 1365|   364k|        phi::scope_ptr<ASTExpression> rhs_expression = ParseExpressionLhs();
 1366|   364k|        if (!rhs_expression)
  ------------------
  |  Branch (1366:13): [True: 109k, False: 254k]
  ------------------
 1367|   109k|        {
 1368|       |            // TODO: Proper error
 1369|   109k|            return {};
 1370|   109k|        }
 1371|       |
 1372|       |        // Nothing left to parse so directly return from here
 1373|   254k|        if (!HasMoreTokens())
  ------------------
  |  Branch (1373:13): [True: 7.38k, False: 246k]
  ------------------
 1374|  7.38k|        {
 1375|  7.38k|            return phi::make_not_null_scope<ASTBinaryExpression>(phi::move(lhs),
 1376|  7.38k|                                                                 operator_token.GetTokenKind(),
 1377|  7.38k|                                                                 rhs_expression.release_not_null());
 1378|  7.38k|        }
 1379|       |
 1380|       |        // If BinOp binds less tightly with RHS than the operator after RHS, let
 1381|       |        // the pending operator take RHS as its LHS.
 1382|   246k|        const Token& next_token      = CurrentToken();
 1383|   246k|        int          next_precedence = OperatorPrecedence.lookup(next_token.GetTokenKind());
 1384|       |
 1385|   246k|        if (token_precedence < next_precedence)
  ------------------
  |  Branch (1385:13): [True: 18.5k, False: 228k]
  ------------------
 1386|  18.5k|        {
 1387|  18.5k|            rhs_expression =
 1388|  18.5k|                    ParseExpressionRhs(rhs_expression.release_not_null(), token_precedence + 1);
 1389|  18.5k|            if (!rhs_expression)
  ------------------
  |  Branch (1389:17): [True: 14.9k, False: 3.60k]
  ------------------
 1390|  14.9k|            {
 1391|       |                // TODO: Proper error
 1392|  14.9k|                return {};
 1393|  14.9k|            }
 1394|  18.5k|        }
 1395|       |
 1396|       |        // Merge LHS/RHS.
 1397|   231k|        lhs = phi::make_not_null_scope<ASTBinaryExpression>(
 1398|   231k|                phi::move(lhs), operator_token.GetTokenKind(), rhs_expression.release_not_null());
 1399|   231k|    }
 1400|  1.83M|}
_ZN10OpenAutoIt6Parser27ParseFunctionCallExpressionEv:
 1403|   581k|{
 1404|       |    // Parse the function name
 1405|   581k|    const Token& function_identifier_token = CurrentToken();
 1406|   581k|    if (function_identifier_token.GetTokenKind() != TokenKind::FunctionIdentifier &&
  ------------------
  |  Branch (1406:9): [True: 8.57k, False: 573k]
  |  Branch (1406:9): [True: 0, False: 581k]
  ------------------
 1407|   581k|        !function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1407:9): [True: 0, False: 8.57k]
  ------------------
 1408|      0|    {
 1409|      0|        return {};
 1410|      0|    }
 1411|   581k|    ConsumeCurrent();
 1412|       |
 1413|   581k|    phi::scope_ptr<ASTFunctionCallExpression> function_call_expression =
 1414|   581k|            phi::make_scope<ASTFunctionCallExpression>();
 1415|   581k|    if (!function_call_expression)
  ------------------
  |  Branch (1415:9): [True: 0, False: 581k]
  ------------------
 1416|      0|    {
 1417|       |        // TODO: Proper error
 1418|      0|        return {};
 1419|      0|    }
 1420|       |
 1421|   581k|    if (function_identifier_token.IsBuiltInFunction())
  ------------------
  |  Branch (1421:9): [True: 8.57k, False: 573k]
  ------------------
 1422|  8.57k|    {
 1423|  8.57k|        function_call_expression->m_IsBuiltIn       = true;
 1424|  8.57k|        function_call_expression->m_BuiltInFunction = function_identifier_token.GetTokenKind();
 1425|  8.57k|    }
 1426|   573k|    else
 1427|   573k|    {
 1428|   573k|        const phi::string_view function_name = function_identifier_token.GetText();
 1429|       |
 1430|   573k|        function_call_expression->m_IsBuiltIn    = false;
 1431|   573k|        function_call_expression->m_FunctionName = function_name;
 1432|   573k|    }
 1433|       |
 1434|       |    // TODO: These 2 checks should be combined
 1435|       |    // Now me MUST parse an LParen
 1436|   581k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1436:9): [True: 7.17k, False: 574k]
  ------------------
 1437|  7.17k|    {
 1438|       |        // TODO: Give proper error
 1439|  7.17k|        err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1440|  7.17k|                        std::string_view{function_call_expression->FunctionName()}));
 1441|  7.17k|        return {};
 1442|  7.17k|    }
 1443|       |
 1444|   574k|    const Token& left_paren_token = CurrentToken();
 1445|   574k|    ConsumeCurrent();
 1446|   574k|    if (left_paren_token.GetTokenKind() != TokenKind::LParen)
  ------------------
  |  Branch (1446:9): [True: 410k, False: 163k]
  ------------------
 1447|   410k|    {
 1448|       |        // TODO: Give error
 1449|   410k|        err(fmt::format("ERR: Expected opening parenthesis for function call '{:s}'\n",
 1450|   410k|                        std::string_view{function_call_expression->FunctionName()}));
 1451|   410k|        return {};
 1452|   410k|    }
 1453|       |
 1454|       |    // Now parse all the arguments (which are expressions) separated by commas or nothing
 1455|   163k|    function_call_expression->m_Arguments = ParseFunctionCallArguments();
 1456|       |
 1457|       |    // Finally we MUST parse an RParen
 1458|   163k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1458:9): [True: 59.1k, False: 104k]
  ------------------
 1459|  59.1k|    {
 1460|  59.1k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1461|  59.1k|                        std::string_view{function_call_expression->FunctionName()}));
 1462|       |        // TODO: Give proper error
 1463|  59.1k|        return {};
 1464|  59.1k|    }
 1465|       |
 1466|   104k|    const Token& right_paren_token = CurrentToken();
 1467|   104k|    ConsumeCurrent();
 1468|   104k|    if (right_paren_token.GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1468:9): [True: 31.9k, False: 72.7k]
  ------------------
 1469|  31.9k|    {
 1470|  31.9k|        err(fmt::format("ERR: Expected closing parenthesis for function call '{:s}'\n",
 1471|  31.9k|                        std::string_view{function_call_expression->FunctionName()}));
 1472|       |        // TODO: Give Error
 1473|  31.9k|        return {};
 1474|  31.9k|    }
 1475|       |
 1476|       |    // Return result
 1477|  72.7k|    return function_call_expression;
 1478|   104k|}
_ZN10OpenAutoIt6Parser26ParseFunctionCallArgumentsEv:
 1481|   163k|{
 1482|   163k|    std::vector<phi::not_null_scope_ptr<ASTExpression>> arguments;
 1483|       |
 1484|   239k|    while (HasMoreTokens() && CurrentToken().GetTokenKind() != TokenKind::RParen)
  ------------------
  |  Branch (1484:12): [True: 238k, False: 548]
  |  Branch (1484:12): [True: 172k, False: 66.8k]
  |  Branch (1484:31): [True: 172k, False: 66.2k]
  ------------------
 1485|   172k|    {
 1486|       |        // Parse the expression
 1487|   172k|        phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1488|   172k|        if (!expression)
  ------------------
  |  Branch (1488:13): [True: 97.0k, False: 75.4k]
  ------------------
 1489|  97.0k|        {
 1490|  97.0k|            err("ERR: While parsing expression for function call arguments\n");
 1491|       |            // TODO: Give Prober error
 1492|  97.0k|            arguments.clear();
 1493|  97.0k|            return arguments;
 1494|  97.0k|        }
 1495|       |
 1496|       |        // Add argument to parameters
 1497|  75.4k|        arguments.emplace_back(expression.release_not_null());
 1498|       |
 1499|       |        // Next Token MUST be a comma followed by another expression or RParen
 1500|  75.4k|        if (HasMoreTokens() && CurrentToken().GetTokenKind() == TokenKind::Comma)
  ------------------
  |  Branch (1500:13): [True: 75.0k, False: 401]
  |  Branch (1500:13): [True: 477, False: 75.0k]
  |  Branch (1500:32): [True: 477, False: 74.6k]
  ------------------
 1501|    477|        {
 1502|    477|            ConsumeCurrent();
 1503|    477|        }
 1504|  75.4k|    }
 1505|       |
 1506|  66.8k|    return arguments;
 1507|   163k|}
_ZN10OpenAutoIt6Parser23ParseVariableExpressionEv:
 1510|   164k|{
 1511|   164k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1511:9): [True: 0, False: 164k]
  ------------------
 1512|      0|    {
 1513|       |        // TODO: Proper error
 1514|      0|        return {};
 1515|      0|    }
 1516|       |
 1517|   164k|    const Token& token = CurrentToken();
 1518|   164k|    if (token.GetTokenKind() != TokenKind::VariableIdentifier)
  ------------------
  |  Branch (1518:9): [True: 0, False: 164k]
  ------------------
 1519|      0|    {
 1520|       |        // TODO error
 1521|      0|        return {};
 1522|      0|    }
 1523|       |
 1524|   164k|    auto variable_expression            = phi::make_scope<ASTVariableExpression>();
 1525|   164k|    variable_expression->m_VariableName = token.GetText().substring_view(1u);
 1526|       |
 1527|   164k|    ConsumeCurrent();
 1528|       |
 1529|   164k|    return phi::move(variable_expression);
 1530|   164k|}
_ZN10OpenAutoIt6Parser29ParseArraySubscriptExpressionEv:
 1536|  1.17M|{
 1537|  1.17M|    if (!HasMoreTokens())
  ------------------
  |  Branch (1537:9): [True: 0, False: 1.17M]
  ------------------
 1538|      0|    {
 1539|      0|        return {};
 1540|      0|    }
 1541|       |
 1542|  1.17M|    if (!MustParse(TokenKind::LSquare))
  ------------------
  |  Branch (1542:9): [True: 0, False: 1.17M]
  ------------------
 1543|      0|    {
 1544|      0|        return {};
 1545|      0|    }
 1546|       |
 1547|  1.17M|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1548|  1.17M|    if (!expression)
  ------------------
  |  Branch (1548:9): [True: 1.07M, False: 98.5k]
  ------------------
 1549|  1.07M|    {
 1550|  1.07M|        return {};
 1551|  1.07M|    }
 1552|       |
 1553|  98.5k|    if (!MustParse(TokenKind::RSquare))
  ------------------
  |  Branch (1553:9): [True: 52.9k, False: 45.5k]
  ------------------
 1554|  52.9k|    {
 1555|  52.9k|        return {};
 1556|  52.9k|    }
 1557|       |
 1558|  45.5k|    return phi::make_scope<ASTArraySubscriptExpression>(phi::move(expression.release_not_null()));
 1559|  98.5k|}
_ZN10OpenAutoIt6Parser20ParseParenExpressionEv:
 1564|  1.11M|{
 1565|       |    // NOTE: Me MUST have consumed the LParen before this
 1566|       |
 1567|  1.11M|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1568|  1.11M|    if (!expression)
  ------------------
  |  Branch (1568:9): [True: 1.02M, False: 92.4k]
  ------------------
 1569|  1.02M|    {
 1570|       |        // TODO: Proper error
 1571|  1.02M|        return {};
 1572|  1.02M|    }
 1573|       |
 1574|  92.4k|    if (!MustParse(TokenKind::RParen))
  ------------------
  |  Branch (1574:9): [True: 31.0k, False: 61.3k]
  ------------------
 1575|  31.0k|    {
 1576|       |        // TODO: Proper error expected closing paren
 1577|  31.0k|        return {};
 1578|  31.0k|    }
 1579|       |
 1580|  61.3k|    return phi::move(expression);
 1581|  92.4k|}
_ZN10OpenAutoIt6Parser18ParseExitStatementEv:
 1584|   165k|{
 1585|   165k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1585:9): [True: 0, False: 165k]
  ------------------
 1586|      0|    {
 1587|      0|        return {};
 1588|      0|    }
 1589|       |
 1590|   165k|    if (!MustParse(TokenKind::KW_Exit))
  ------------------
  |  Branch (1590:9): [True: 0, False: 165k]
  ------------------
 1591|      0|    {
 1592|      0|        return {};
 1593|      0|    }
 1594|       |
 1595|       |    // Parse optional expression
 1596|   165k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1597|       |
 1598|   165k|    return phi::make_scope<ASTExitStatement>(phi::move(expression));
 1599|   165k|}
_ZN10OpenAutoIt6Parser20ParseUnaryExpressionENS_9TokenKindE:
 1602|   199k|{
 1603|   199k|    PHI_ASSERT(IsUnaryOperator(operator_kind));
 1604|       |
 1605|   199k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1605:9): [True: 491, False: 199k]
  ------------------
 1606|    491|    {
 1607|    491|        return {};
 1608|    491|    }
 1609|       |
 1610|       |    // Parse expression
 1611|   199k|    phi::scope_ptr<ASTExpression> expression = ParseExpression();
 1612|   199k|    if (!expression)
  ------------------
  |  Branch (1612:9): [True: 78.7k, False: 120k]
  ------------------
 1613|  78.7k|    {
 1614|       |        // TODO: Proper error
 1615|  78.7k|        return {};
 1616|  78.7k|    }
 1617|       |
 1618|   120k|    return phi::make_scope<ASTUnaryExpression>(operator_kind,
 1619|   120k|                                               phi::move(expression.release_not_null()));
 1620|   199k|}
_ZN10OpenAutoIt6Parser24ParseTernaryIfExpressionEON3phi18not_null_scope_ptrINS_13ASTExpressionEEE:
 1624|   159k|{
 1625|   159k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1625:9): [True: 127, False: 158k]
  ------------------
 1626|    127|    {
 1627|    127|        return {};
 1628|    127|    }
 1629|       |
 1630|   158k|    phi::scope_ptr<ASTExpression> true_expression = ParseExpression();
 1631|   158k|    if (!true_expression)
  ------------------
  |  Branch (1631:9): [True: 40.5k, False: 118k]
  ------------------
 1632|  40.5k|    {
 1633|  40.5k|        return {};
 1634|  40.5k|    }
 1635|       |
 1636|       |    // Must parse the else part ":"
 1637|   118k|    if (!MustParse(TokenKind::OP_TernaryElse))
  ------------------
  |  Branch (1637:9): [True: 32.9k, False: 85.4k]
  ------------------
 1638|  32.9k|    {
 1639|  32.9k|        err("Missing ':' for ternary if\n");
 1640|  32.9k|        return {};
 1641|  32.9k|    }
 1642|       |
 1643|  85.4k|    phi::scope_ptr<ASTExpression> false_expression = ParseExpression();
 1644|  85.4k|    if (!false_expression)
  ------------------
  |  Branch (1644:9): [True: 25.6k, False: 59.7k]
  ------------------
 1645|  25.6k|    {
 1646|  25.6k|        return {};
 1647|  25.6k|    }
 1648|       |
 1649|  59.7k|    return phi::make_scope<ASTTernaryIfExpression>(phi::move(condition),
 1650|  59.7k|                                                   phi::move(true_expression.release_not_null()),
 1651|  59.7k|                                                   phi::move(false_expression.release_not_null()));
 1652|  85.4k|}
_ZN10OpenAutoIt6Parser20ParseMacroExpressionENS_9TokenKindE:
 1655|  5.70k|{
 1656|  5.70k|    const auto macro = static_cast<phi::size_t>(macro_kind);
 1657|  5.70k|    PHI_ASSERT(macro >= MacroFirst && macro <= MacroLast);
 1658|       |
 1659|  5.70k|    return phi::make_scope<ASTMacroExpression>(macro_kind);
 1660|  5.70k|}
_ZN10OpenAutoIt6Parser19ParseBooleanLiteralEv:
 1663|  43.8k|{
 1664|  43.8k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1664:9): [True: 0, False: 43.8k]
  ------------------
 1665|      0|    {
 1666|       |        // TODO: Proper error
 1667|      0|        return {};
 1668|      0|    }
 1669|       |
 1670|       |    // BooleanLiteral is either KW_True or KW_False
 1671|  43.8k|    const Token& token = CurrentToken();
 1672|  43.8k|    if (token.GetTokenKind() == TokenKind::KW_True)
  ------------------
  |  Branch (1672:9): [True: 33.4k, False: 10.3k]
  ------------------
 1673|  33.4k|    {
 1674|  33.4k|        ConsumeCurrent();
 1675|  33.4k|        return phi::make_scope<ASTBooleanLiteral>(true);
 1676|  33.4k|    }
 1677|       |
 1678|  10.3k|    if (token.GetTokenKind() == TokenKind::KW_False)
  ------------------
  |  Branch (1678:9): [True: 10.3k, False: 0]
  ------------------
 1679|  10.3k|    {
 1680|  10.3k|        ConsumeCurrent();
 1681|  10.3k|        return phi::make_scope<ASTBooleanLiteral>(false);
 1682|  10.3k|    }
 1683|       |
 1684|       |    // TODO: Proper error
 1685|      0|    return {};
 1686|  10.3k|}
_ZN10OpenAutoIt6Parser19ParseKeywordLiteralEv:
 1689|   144k|{
 1690|   144k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1690:9): [True: 0, False: 144k]
  ------------------
 1691|      0|    {
 1692|       |        // TODO: Proper error
 1693|      0|        return {};
 1694|      0|    }
 1695|       |
 1696|   144k|    const Token& token = CurrentToken();
 1697|   144k|    if (token.IsKeywordLiteral())
  ------------------
  |  Branch (1697:9): [True: 144k, False: 0]
  ------------------
 1698|   144k|    {
 1699|   144k|        ConsumeCurrent();
 1700|   144k|        return phi::make_scope<ASTKeywordLiteral>(token.GetTokenKind());
 1701|   144k|    }
 1702|       |
 1703|       |    // TODO: Proper error
 1704|      0|    return {};
 1705|   144k|}
_ZN10OpenAutoIt6Parser17ParseFloatLiteralEv:
 1708|   373k|{
 1709|   373k|    if (!HasMoreTokens())
  ------------------
  |  Branch (1709:9): [True: 0, False: 373k]
  ------------------
 1710|      0|    {
 1711|       |        // TODO: Proper error
 1712|      0|        return {};
 1713|      0|    }
 1714|       |
 1715|   373k|    const Token& token = CurrentToken();
 1716|   373k|    if (token.GetTokenKind() == TokenKind::FloatLiteral)
  ------------------
  |  Branch (1716:9): [True: 373k, False: 0]
  ------------------
 1717|   373k|    {
 1718|   373k|        ConsumeCurrent();
 1719|       |
 1720|   373k|        char*    ptr   = nullptr;
 1721|   373k|        phi::f64 value = std::strtod(token.GetText().begin(), &ptr);
 1722|       |
 1723|   373k|        return phi::make_scope<ASTFloatLiteral>(value);
 1724|   373k|    }
 1725|       |
 1726|       |    // TODO: Proper error
 1727|      0|    return {};
 1728|   373k|}
_ZNK10OpenAutoIt23OperatorPrecedenceTable6lookupENS_9TokenKindE:
   68|   970k|    {
   69|   970k|        int precedence = m_TokenPrecedence[static_cast<size_t>(token)];
   70|       |        //PHI_ASSERT(precedence != 0);
   71|       |
   72|   970k|        return precedence;
   73|   970k|    }

_ZN10OpenAutoIt10SourceFileC2ENS0_4TypeENSt3__14__fs10filesystem4pathEN3phi17basic_string_viewIcNS2_11char_traitsIcEEEE:
   12|  67.9k|{}

_ZN10OpenAutoIt13SourceManager18SetLocalSearchPathERKNSt3__14__fs10filesystem4pathE:
   14|  67.9k|{}
_ZN10OpenAutoIt18EmptySourceManager8LoadFileEN3phi17basic_string_viewIcNSt3__111char_traitsIcEEEENS_11IncludeTypeE:
  156|     15|{
  157|     15|    return {};
  158|     15|}

_ZN10OpenAutoIt11TokenStream8finalizeEv:
   30|  33.9k|{
   31|       |#if defined(PHI_DEBUG)
   32|       |    PHI_ASSERT(!m_Finalized);
   33|       |#endif
   34|       |
   35|  33.9k|    m_Index = 0u;
   36|       |#if defined(PHI_DEBUG)
   37|       |    m_Finalized = true;
   38|       |#endif
   39|  33.9k|}
_ZNK10OpenAutoIt11TokenStream8has_moreEv:
   68|  49.9M|{
   69|       |#if defined(PHI_DEBUG)
   70|       |    PHI_ASSERT(m_Finalized);
   71|       |#endif
   72|       |
   73|  49.9M|    return m_Index < m_Tokens.size();
   74|  49.9M|}
_ZNK10OpenAutoIt11TokenStream11reached_endEv:
   77|  34.3M|{
   78|       |#if defined(PHI_DEBUG)
   79|       |    PHI_ASSERT(m_Finalized);
   80|       |#endif
   81|       |
   82|  34.3M|    return m_Index >= m_Tokens.size();
   83|  34.3M|}
_ZNK10OpenAutoIt11TokenStream10look_aheadEv:
   86|  24.2M|{
   87|  24.2M|    PHI_ASSERT(!reached_end());
   88|       |#if defined(PHI_DEBUG)
   89|       |    PHI_ASSERT(m_Finalized);
   90|       |#endif
   91|       |
   92|  24.2M|    return m_Tokens[m_Index.unsafe()];
   93|  24.2M|}
_ZNK10OpenAutoIt11TokenStream11look_behindEv:
   96|   263k|{
   97|   263k|    PHI_ASSERT(!m_Tokens.empty());
   98|       |#if defined(PHI_DEBUG)
   99|       |    PHI_ASSERT(m_Finalized);
  100|       |#endif
  101|       |
  102|   263k|    if (m_Index == 0u)
  ------------------
  |  Branch (102:9): [True: 0, False: 263k]
  ------------------
  103|      0|    {
  104|      0|        return m_Tokens[0u];
  105|      0|    }
  106|       |
  107|   263k|    return m_Tokens[m_Index.unsafe() - 1u];
  108|   263k|}
_ZN10OpenAutoIt11TokenStream7consumeEv:
  111|  10.0M|{
  112|  10.0M|    PHI_ASSERT(!reached_end());
  113|       |#if defined(PHI_DEBUG)
  114|       |    PHI_ASSERT(m_Finalized);
  115|       |#endif
  116|       |
  117|  10.0M|    m_Index += 1u;
  118|  10.0M|}

_ZN10OpenAutoIt3errENSt3__117basic_string_viewIcNS0_11char_traitsIcEEEE:
   99|  7.52M|{
  100|  7.52M|    if (output_enabled)
  ------------------
  |  Branch (100:9): [True: 0, False: 7.52M]
  ------------------
  101|      0|    {
  102|      0|        std::cerr << data;
  103|      0|    }
  104|  7.52M|}
_ZN10OpenAutoIt14disable_outputEv:
  107|  33.9k|{
  108|  33.9k|    output_enabled = false;
  109|  33.9k|}

