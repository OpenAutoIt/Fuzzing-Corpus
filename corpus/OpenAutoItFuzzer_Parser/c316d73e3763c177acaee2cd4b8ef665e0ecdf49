$var = Abs(3-3Abs$vár = Ab1s(3-3Abs(0-Šdrv$WiteConsoleWr3-ŠdWrite$vConsoleFunc defaul = False
ConsoleWrite(VarGeFileWriteoolean)) ; expGct-stdout: "Boolean"

Local $iInt = 1
ConsoleWrite(VarGe•«yexpect-stdout: "Int47"

Local $fFloat = 2.0
Consoledout: "6"
default_plus_expression()
; expect-stdout: GetType($bBoolean)) ; tring()expe"19"
defauct-st<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Defaultstdout: "Boolean"

Local $iInt = 1
ConsoleWrite(VarGe•«ype($iI;nt)) ; expect-stdout: "Int6st<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<ocal $iInt =lt_plus_ul = False
ConsoleWrite(VarGeFileWriteoolean)) ; expGct-stdout: "Boolean"

Local $iInt = 1
ConsoleWrite(VarGe•«ype($iI;nt)) ; expect-stdout: "Int65"

Local $fFloat = 2.0
ConsoleWrite(VarGetType($fFloat)) ; e/xpecpe($iI;nt)) ; expect-stdout: "Int65"

Local $fFloat = 2.0
ConsoleWrite(VarGetTypÿÿÿÿÿÿÿ<t)) ; e/xpect-stdout: "Double"

Local $sText = "Some text"
ConsoleWrite(VarGetType($sText)) ; expect-stdout: "String"

Local $vKeyword = Default
Consrite(VarGe•«ype($iInt)) ; expect-stdout: "Int47"

Local $fFloat = 2.0
Consoledout: "6"
default_plus_expression()
; expect-stdout: GetType($bBoolean)) ; tring()expe"19"
defauct-st<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Defaultstdout: "Boolean"

Local $iInt = 1
ConsoleWrite(VarGe•«ype($iI;nt)) ; expect-stdout: "Int6st<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<ocal $iInt =lt_plus_ul = False
ConsoleWrite(VarGeFileWriteoolean)) ; expGct-stdout: "Boolean"

Local $iInt = 1
ConsoleWrite(VarGe•«ype($iI;nt)) ; expect-stdout: "Int65"

Local $fFloat = 2.0
ConsoleWrite(VarGetType($fFloat)) ; e/xpect-smousegetposble"

Local $sText = "Some text"
ConsoleWrite(VarGetType($sText)) ; expect-stdout: "String"

Local $vKeywor) ; tring()expe"19"
defauct-st<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<ocal $iInt =lt_plus_ul = False
ConsoleWrite(VarGeFileWriteoolean)) ; expGct-stdout: "Boolean"

Local $iInt = 1
ConsoleWrite(VarGe•«ypeWr($iI;nt)) ; expect-stdout: "Int65"

Local $fFloa@SW_SHOWMAXIMIZEDite(VarGetType($fFloat)) ; e/xpect-stdout: "Double"

Local $sText = "Some text"
ConsoleWrite(VarGetType(yword = Default
Consrite(VarGe•«ype($iInt)) t =d = Default
Consrite(VarGe•«ype($iInt)) ; expect-stdout:  0.0
Consoledout: "6"
default_plus"Int63"

Local _ex