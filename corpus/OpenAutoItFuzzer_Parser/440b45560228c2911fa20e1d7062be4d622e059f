Local $bBoolean = False
Cot)) ; expect-stdout: "Int64"

Local $fFloat = 2.0
ConsoleWrite(VarGetType($fFloat)) ; expect-stdout: "Double"

Local $sText = "Some text"
ConsoleWrite(VarGetType($sText)) ; expect-stdout: "String"

Local $vKeyword = Default
Consrite(VarGe•«ype($iInt)) ; expect-stdout: "Int64"

Local $fFloat = 2.0
ConsoleWrite(VarGetTnsoleWrite(VarGeFileWriteoolean)) ; expect-stdout: "Boolean"

Local $iInt = 1
ConsoleWrite(VarGe•«ype($iInt)) ; expect-stdout: "Int64"

Local $fFloat = 2.0
ConsoleWrite(VarGetType($fFloat)) ; expect-stdout: "Double"

Local $sText = "Some text"
ConsoleWrite(VarGetType($sText)) ; expect-stdout: "String"

Local $vKeyword = Default
Consrite(VarGe•«ype($iInt)) ; expect-stdout: "Int64"

Local $fFloat = 2.0
ConsoleWrite(VarGetType($fFloat)) ; expect-stdout: "Double"

Local $sTextUDPBindeWrite(VarGetType($vKeyword)) ; expect-stdout: "Keyword"
