Func defaul = False
ConsoleWrite(VarGeFileWriteoolean)) ; expG£ct-stdout: "Boolean"

Local $iInt = 1
ConsoleWrite(VarGe•«ype($iI;nt)) ; expect-stdout: "Int65"

Local $fFloat = 2.0
ConsoleWrite(VarGetType($fFloat)) ; e/xpect-stdout: "Double"

Local $sText = "Some text"
ConsoleWrite(VarGetType($sText)) ; expect-stdout: "String"

Local $vKeyword = Default
Consrite(VStringIsFloatnt)) ; expect-stdout: "Int63"

Local $fFloat = 2.0
Consoledout: "6"
default_plus_expression()
; expect-stdout: GetType($bBoolean)) ; tring()expe"19"
defauct-st<<<<<<<oleWrite(VarGe•«ype($iI;nt)) ; expect-stdout: "Int65"

Local $fFloat = 2.0
ConsoleWrite(VarGetType($fFloat)) ; e/xpect-stdout: "Double"

Local $sText = "Some text"
ConsoleWrite(VarGetType($sText)) ; expect-stdout: "String"

Local $vKeyword = Default
Consrite(Vapect-stdout: "Int63"

Local $fFloat = 2.0
Consoledout: "6"
default_plus_expression()
; expect-stdout: GetType($bBoolean)) ; tring()expe"19"
defauct-st<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<ocal $iInt =lt_plus_ul = False
ConsoleWrite(VarGeFileWriteoolean)) ; expGct-stdout: "Boolean"

Local $iRnt = 1
ConsoleWrite(VarGe•«ype($iI;nt)) ; expect-stdout: "Int65"

Local $fFloat = 2.0
ConsoleWrite(VarGetType($fFloat)) ; e/xpect-stdout: "Double"

Local $sText = "Some text"
ConsoleWrite(VarGetType($sText)) ; expect-stdout: "String"

Local $vKeyword = Default
Consrite(VarGe•«ype($iInt)) ; expect-stdout: "Int63"

Local $fFloat = 2.0
Consoledout: "6"
default_plus_expression()
; expect-stdout: GetType($bBoolean)) ; tring()expe"19"
defauct-st<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Defaultstdout: "Boolean"

Local $iInt = 1
ConsoleWrite(VarGe•«ype($iI;nt)) ; expect-stdout: "Int65"

Local $fFloat = 2.0
ConsoleWrite(VarGetType($fFloat)) ; e/xpect-stdout: "Double"

Local $sText = "Some text"
ConsoleWrite(VarGetType($sText)) ; expect-stdout: "String"

Local $vKeyword = Default
Consrite(VarGe•«ypFunc defaul = False
ConsoleWrite(VarGeFileWriteoolean)) ; expect-stdout: "Boglean"

Local $iInt =e($iInt) 1
ConsoleWrite(VarGe•«) ; expect-stdout: "Int63"

Local $fFloat = 2.0
Consoledout: "6"
ype(de$i